{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5","program":"/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","which","--edition=2018","/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=e98546cfe9e16800","-C","extra-filename=-e98546cfe9e16800","--out-dir","/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","-L","dependency=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","--extern","either=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libeither-b6ba42e34b60f0ce.rmeta","--extern","libc=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/liblibc-6797570d26064b09.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libwhich-e98546cfe9e16800.rmeta"},"prelude":{"crate_id":{"name":"which","disambiguator":[14446925751920790134,0]},"crate_root":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src","external_crates":[{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/finder.rs","num":20,"id":{"name":"either","disambiguator":[3293860395641130383,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/checker.rs","num":21,"id":{"name":"libc","disambiguator":[14730682284296605087,0]}}],"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":0,"byte_end":12952,"line_start":1,"line_end":430,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":698,"byte_end":699,"line_start":38,"line_end":38,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Result, Error","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":0,"byte_end":12952,"line_start":1,"line_end":430,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":41},{"krate":0,"index":50},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":141},{"krate":0,"index":146},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":147},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":184},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":227}],"decl_id":null,"docs":" which","sig":null,"attributes":[{"value":"/ which","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":0,"byte_end":9,"line_start":1,"line_end":1,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":10,"byte_end":13,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A Rust equivalent of Unix command `which(1)`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":14,"byte_end":63,"line_start":3,"line_end":3,"column_start":1,"column_end":50}},{"value":"/ # Example:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":64,"byte_end":78,"line_start":4,"line_end":4,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":79,"byte_end":82,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ To find which rustc executable binary is using:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":83,"byte_end":134,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":135,"byte_end":138,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":139,"byte_end":152,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"/ use which::which;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":153,"byte_end":174,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":175,"byte_end":202,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":203,"byte_end":206,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ let result = which(\"rustc\").unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":207,"byte_end":248,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(result, PathBuf::from(\"/usr/bin/rustc\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":249,"byte_end":305,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":306,"byte_end":309,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":310,"byte_end":317,"line_start":15,"line_end":15,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":45},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/error.rs","byte_start":14781,"byte_end":14787,"line_start":3,"line_end":3,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":230},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/error.rs","byte_start":14891,"byte_end":14906,"line_start":7,"line_end":7,"column_start":5,"column_end":20},"name":"BadAbsolutePath","qualname":"::error::Error::BadAbsolutePath","value":"Error::BadAbsolutePath","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":232},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/error.rs","byte_start":14912,"byte_end":14927,"line_start":8,"line_end":8,"column_start":5,"column_end":20},"name":"BadRelativePath","qualname":"::error::Error::BadRelativePath","value":"Error::BadRelativePath","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":234},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/error.rs","byte_start":14933,"byte_end":14953,"line_start":9,"line_end":9,"column_start":5,"column_end":25},"name":"CannotFindBinaryPath","qualname":"::error::Error::CannotFindBinaryPath","value":"Error::CannotFindBinaryPath","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":236},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/error.rs","byte_start":14959,"byte_end":14978,"line_start":10,"line_end":10,"column_start":5,"column_end":24},"name":"CannotGetCurrentDir","qualname":"::error::Error::CannotGetCurrentDir","value":"Error::CannotGetCurrentDir","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":238},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/error.rs","byte_start":14984,"byte_end":15002,"line_start":11,"line_end":11,"column_start":5,"column_end":23},"name":"CannotCanonicalize","qualname":"::error::Error::CannotCanonicalize","value":"Error::CannotCanonicalize","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":229},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/error.rs","byte_start":14879,"byte_end":14884,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    BadAbsolutePath,\n    BadRelativePath,\n    CannotFindBinaryPath,\n    CannotGetCurrentDir,\n    CannotCanonicalize,\n}","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":130},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":1358,"byte_end":1363,"line_start":62,"line_end":62,"column_start":8,"column_end":13},"name":"which","qualname":"::which","value":"pub fn which<T: AsRef<OsStr>>(T) -> Result<path::PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Find a exectable binary's path by name.","sig":null,"attributes":[{"value":"/ Find a exectable binary's path by name.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":729,"byte_end":772,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":773,"byte_end":776,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ If given an absolute path, returns it if the file exists and is executable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":777,"byte_end":856,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":857,"byte_end":860,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If given a relative path, returns an absolute path to the file if","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":861,"byte_end":930,"line_start":45,"line_end":45,"column_start":1,"column_end":70}},{"value":"/ it exists and is executable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":931,"byte_end":963,"line_start":46,"line_end":46,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":964,"byte_end":967,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ If given a string without path separators, looks for a file named","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":968,"byte_end":1037,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ `binary_name` at each directory in `$PATH` and if it finds an executable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":1038,"byte_end":1114,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ file there, returns it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":1115,"byte_end":1142,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":1143,"byte_end":1146,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":1147,"byte_end":1160,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":1161,"byte_end":1164,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":1165,"byte_end":1178,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/ use which::which;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":1179,"byte_end":1200,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":1201,"byte_end":1228,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":1229,"byte_end":1232,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let result = which::which(\"rustc\").unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":1233,"byte_end":1281,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(result, PathBuf::from(\"/usr/bin/rustc\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":1282,"byte_end":1338,"line_start":59,"line_end":59,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":1339,"byte_end":1342,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":1343,"byte_end":1350,"line_start":61,"line_end":61,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":133},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":1629,"byte_end":1638,"line_start":67,"line_end":67,"column_start":8,"column_end":17},"name":"which_all","qualname":"::which_all","value":"pub fn which_all<T: AsRef<OsStr>>(T) -> Result</*impl Trait*/>","parent":null,"children":[],"decl_id":null,"docs":" Find all binaries with `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.\n","sig":null,"attributes":[{"value":"/ Find all binaries with `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":1516,"byte_end":1621,"line_start":66,"line_end":66,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":136},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":3056,"byte_end":3064,"line_start":115,"line_end":115,"column_start":8,"column_end":16},"name":"which_in","qualname":"::which_in","value":"pub fn which_in<T, U, V>(T, Option<U>, V) -> Result<path::PathBuf> where\nT: AsRef<OsStr>, U: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Find `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.\n","sig":null,"attributes":[{"value":"/ Find `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":2961,"byte_end":3048,"line_start":114,"line_end":114,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":141},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":4546,"byte_end":4558,"line_start":164,"line_end":164,"column_start":8,"column_end":20},"name":"which_in_all","qualname":"::which_in_all","value":"pub fn which_in_all<T, U, V>(T, Option<U>, V) -> Result</*impl Trait*/> where\nT: AsRef<OsStr>, U: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Find all binaries with `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.\n","sig":null,"attributes":[{"value":"/ Find all binaries with `binary_name` in the path list `paths`, using `cwd` to resolve relative paths.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":4433,"byte_end":4538,"line_start":163,"line_end":163,"column_start":1,"column_end":106}}]},{"kind":"Struct","id":{"krate":0,"index":251},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":5755,"byte_end":5759,"line_start":198,"line_end":198,"column_start":12,"column_end":16},"name":"Path","qualname":"::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":252}],"decl_id":null,"docs":" An owned, immutable wrapper around a `PathBuf` containing the path of an executable.","sig":null,"attributes":[{"value":"/ An owned, immutable wrapper around a `PathBuf` containing the path of an executable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":5087,"byte_end":5175,"line_start":187,"line_end":187,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":5176,"byte_end":5179,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ The constructed `PathBuf` is the output of `which` or `which_in`, but `which::Path` has the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":5180,"byte_end":5275,"line_start":189,"line_end":189,"column_start":1,"column_end":96}},{"value":"/ advantage of being a type distinct from `std::path::Path` and `std::path::PathBuf`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":5276,"byte_end":5363,"line_start":190,"line_end":190,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":5364,"byte_end":5367,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ It can be beneficial to use `which::Path` instead of `std::path::Path` when you want the type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":5368,"byte_end":5465,"line_start":192,"line_end":192,"column_start":1,"column_end":98}},{"value":"/ system to enforce the need for a path that exists and points to a binary that is executable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":5466,"byte_end":5562,"line_start":193,"line_end":193,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":5563,"byte_end":5566,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ Since `which::Path` implements `Deref` for `std::path::Path`, all methods on `&std::path::Path`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":5567,"byte_end":5666,"line_start":195,"line_end":195,"column_start":1,"column_end":100}},{"value":"/ are also available to `&which::Path` values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":5667,"byte_end":5715,"line_start":196,"line_end":196,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":5942,"byte_end":5945,"line_start":206,"line_end":206,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"pub fn new<T: AsRef<OsStr>>(T) -> Result<Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path of an executable binary by name.","sig":null,"attributes":[{"value":"/ Returns the path of an executable binary by name.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":5807,"byte_end":5860,"line_start":203,"line_end":203,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":5865,"byte_end":5868,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This calls `which` and maps the result into a `Path`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":5873,"byte_end":5930,"line_start":205,"line_end":205,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":6208,"byte_end":6211,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"all","qualname":"<Path>::all","value":"pub fn all<T: AsRef<OsStr>>(T) -> Result</*impl Trait*/>","parent":null,"children":[],"decl_id":null,"docs":" Returns the paths of all executable binaries by a name.","sig":null,"attributes":[{"value":"/ Returns the paths of all executable binaries by a name.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":6063,"byte_end":6122,"line_start":210,"line_end":210,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":6127,"byte_end":6130,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ this calls `which_all` and maps the results into `Path`s.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":6135,"byte_end":6196,"line_start":212,"line_end":212,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":6617,"byte_end":6623,"line_start":221,"line_end":221,"column_start":12,"column_end":18},"name":"new_in","qualname":"<Path>::new_in","value":"pub fn new_in<T, U, V>(T, Option<U>, V) -> Result<Path> where T: AsRef<OsStr>,\nU: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path of an executable binary by name in the path list `paths` and using the\n current working directory `cwd` to resolve relative paths.","sig":null,"attributes":[{"value":"/ Returns the path of an executable binary by name in the path list `paths` and using the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":6374,"byte_end":6465,"line_start":217,"line_end":217,"column_start":5,"column_end":96}},{"value":"/ current working directory `cwd` to resolve relative paths.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":6470,"byte_end":6532,"line_start":218,"line_end":218,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":6537,"byte_end":6540,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ This calls `which_in` and maps the result into a `Path`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":6545,"byte_end":6605,"line_start":220,"line_end":220,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":7117,"byte_end":7123,"line_start":234,"line_end":234,"column_start":12,"column_end":18},"name":"all_in","qualname":"<Path>::all_in","value":"pub fn all_in<T, U, V>(T, Option<U>, V) -> Result</*impl Trait*/> where\nT: AsRef<OsStr>, U: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns all paths of an executable binary by name in the path list `paths` and using the\n current working directory `cwd` to resolve relative paths.","sig":null,"attributes":[{"value":"/ Returns all paths of an executable binary by name in the path list `paths` and using the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":6868,"byte_end":6960,"line_start":230,"line_end":230,"column_start":5,"column_end":97}},{"value":"/ current working directory `cwd` to resolve relative paths.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":6965,"byte_end":7027,"line_start":231,"line_end":231,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":7032,"byte_end":7035,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This calls `which_in_all` and maps the results into a `Path`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":7040,"byte_end":7105,"line_start":233,"line_end":233,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":7503,"byte_end":7510,"line_start":248,"line_end":248,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Path>::as_path","value":"pub fn as_path(&Self) -> &path::Path","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a `std::path::Path`.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a `std::path::Path`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":7444,"byte_end":7491,"line_start":247,"line_end":247,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":7664,"byte_end":7677,"line_start":253,"line_end":253,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<Path>::into_path_buf","value":"pub fn into_path_buf(Self) -> path::PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `which::Path`, yielding its underlying `std::path::PathBuf`.\n","sig":null,"attributes":[{"value":"/ Consumes the `which::Path`, yielding its underlying `std::path::PathBuf`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":7575,"byte_end":7652,"line_start":252,"line_end":252,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":259},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":9282,"byte_end":9295,"line_start":312,"line_end":312,"column_start":12,"column_end":25},"name":"CanonicalPath","qualname":"::CanonicalPath","value":"CanonicalPath {  }","parent":null,"children":[{"krate":0,"index":260}],"decl_id":null,"docs":" An owned, immutable wrapper around a `PathBuf` containing the _canonical_ path of an\n executable.","sig":null,"attributes":[{"value":"/ An owned, immutable wrapper around a `PathBuf` containing the _canonical_ path of an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8472,"byte_end":8560,"line_start":298,"line_end":298,"column_start":1,"column_end":89}},{"value":"/ executable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8561,"byte_end":8576,"line_start":299,"line_end":299,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8577,"byte_end":8580,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ The constructed `PathBuf` is the result of `which` or `which_in` followed by","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8581,"byte_end":8661,"line_start":301,"line_end":301,"column_start":1,"column_end":81}},{"value":"/ `Path::canonicalize`, but `CanonicalPath` has the advantage of being a type distinct from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8662,"byte_end":8755,"line_start":302,"line_end":302,"column_start":1,"column_end":94}},{"value":"/ `std::path::Path` and `std::path::PathBuf`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8756,"byte_end":8803,"line_start":303,"line_end":303,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8804,"byte_end":8807,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ It can be beneficial to use `CanonicalPath` instead of `std::path::Path` when you want the type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8808,"byte_end":8907,"line_start":305,"line_end":305,"column_start":1,"column_end":100}},{"value":"/ system to enforce the need for a path that exists, points to a binary that is executable, is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8908,"byte_end":9004,"line_start":306,"line_end":306,"column_start":1,"column_end":97}},{"value":"/ absolute, has all components normalized, and has all symbolic links resolved","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":9005,"byte_end":9085,"line_start":307,"line_end":307,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":9086,"byte_end":9089,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ Since `CanonicalPath` implements `Deref` for `std::path::Path`, all methods on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":9090,"byte_end":9172,"line_start":309,"line_end":309,"column_start":1,"column_end":83}},{"value":"/ `&std::path::Path` are also available to `&CanonicalPath` values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":9173,"byte_end":9242,"line_start":310,"line_end":310,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":9531,"byte_end":9534,"line_start":320,"line_end":320,"column_start":12,"column_end":15},"name":"new","qualname":"<CanonicalPath>::new","value":"pub fn new<T: AsRef<OsStr>>(T) -> Result<CanonicalPath>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical path of an executable binary by name.","sig":null,"attributes":[{"value":"/ Returns the canonical path of an executable binary by name.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":9352,"byte_end":9415,"line_start":317,"line_end":317,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":9420,"byte_end":9423,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This calls `which` and `Path::canonicalize` and maps the result into a `CanonicalPath`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":9428,"byte_end":9519,"line_start":319,"line_end":319,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":9950,"byte_end":9953,"line_start":329,"line_end":329,"column_start":12,"column_end":15},"name":"all","qualname":"<CanonicalPath>::all","value":"pub fn all<T: AsRef<OsStr>>(T) -> Result</*impl Trait*/>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical paths of an executable binary by name.","sig":null,"attributes":[{"value":"/ Returns the canonical paths of an executable binary by name.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":9766,"byte_end":9830,"line_start":326,"line_end":326,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":9835,"byte_end":9838,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This calls `which_all` and `Path::canonicalize` and maps the results into `CanonicalPath`s.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":9843,"byte_end":9938,"line_start":328,"line_end":328,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":10636,"byte_end":10642,"line_start":346,"line_end":346,"column_start":12,"column_end":18},"name":"new_in","qualname":"<CanonicalPath>::new_in","value":"pub fn new_in<T, U, V>(T, Option<U>, V) -> Result<CanonicalPath> where\nT: AsRef<OsStr>, U: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical path of an executable binary by name in the path list `paths` and\n using the current working directory `cwd` to resolve relative paths.","sig":null,"attributes":[{"value":"/ Returns the canonical path of an executable binary by name in the path list `paths` and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":10349,"byte_end":10440,"line_start":342,"line_end":342,"column_start":5,"column_end":96}},{"value":"/ using the current working directory `cwd` to resolve relative paths.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":10445,"byte_end":10517,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":10522,"byte_end":10525,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ This calls `which_in` and `Path::canonicalize` and maps the result into a `CanonicalPath`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":10530,"byte_end":10624,"line_start":345,"line_end":345,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":11300,"byte_end":11306,"line_start":361,"line_end":361,"column_start":12,"column_end":18},"name":"all_in","qualname":"<CanonicalPath>::all_in","value":"pub fn all_in<T, U, V>(T, Option<U>, V) -> Result</*impl Trait*/> where\nT: AsRef<OsStr>, U: AsRef<OsStr>, V: AsRef<path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns all of the canonical paths of an executable binary by name in the path list `paths` and\n using the current working directory `cwd` to resolve relative paths.","sig":null,"attributes":[{"value":"/ Returns all of the canonical paths of an executable binary by name in the path list `paths` and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":11001,"byte_end":11100,"line_start":357,"line_end":357,"column_start":5,"column_end":104}},{"value":"/ using the current working directory `cwd` to resolve relative paths.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":11105,"byte_end":11177,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":11182,"byte_end":11185,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ This calls `which_in_all` and `Path::canonicalize` and maps the result into a `CanonicalPath`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":11190,"byte_end":11288,"line_start":360,"line_end":360,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":11904,"byte_end":11911,"line_start":382,"line_end":382,"column_start":12,"column_end":19},"name":"as_path","qualname":"<CanonicalPath>::as_path","value":"pub fn as_path(&Self) -> &path::Path","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a `std::path::Path`.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a `std::path::Path`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":11845,"byte_end":11892,"line_start":381,"line_end":381,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":12074,"byte_end":12087,"line_start":387,"line_end":387,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<CanonicalPath>::into_path_buf","value":"pub fn into_path_buf(Self) -> path::PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `which::CanonicalPath`, yielding its underlying `std::path::PathBuf`.\n","sig":null,"attributes":[{"value":"/ Consumes the `which::CanonicalPath`, yielding its underlying `std::path::PathBuf`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":11976,"byte_end":12062,"line_start":386,"line_end":386,"column_start":5,"column_end":91}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/checker.rs","byte_start":13136,"byte_end":13153,"line_start":11,"line_end":11,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/checker.rs","byte_start":13248,"byte_end":13265,"line_start":17,"line_end":17,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/checker.rs","byte_start":13615,"byte_end":13629,"line_start":33,"line_end":33,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/checker.rs","byte_start":13718,"byte_end":13732,"line_start":39,"line_end":39,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/checker.rs","byte_start":14322,"byte_end":14338,"line_start":62,"line_end":62,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/checker.rs","byte_start":14616,"byte_end":14632,"line_start":75,"line_end":75,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/error.rs","byte_start":15034,"byte_end":15039,"line_start":14,"line_end":14,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/error.rs","byte_start":15066,"byte_end":15071,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/finder.rs","byte_start":16143,"byte_end":16150,"line_start":29,"line_end":29,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/finder.rs","byte_start":16547,"byte_end":16553,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":5796,"byte_end":5800,"line_start":202,"line_end":202,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":156},{"krate":0,"index":161},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":7751,"byte_end":7755,"line_start":258,"line_end":258,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":7891,"byte_end":7895,"line_start":264,"line_end":264,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8029,"byte_end":8033,"line_start":272,"line_end":272,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8128,"byte_end":8132,"line_start":278,"line_end":278,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8214,"byte_end":8218,"line_start":284,"line_end":284,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8257,"byte_end":8261,"line_start":286,"line_end":286,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8383,"byte_end":8390,"line_start":292,"line_end":292,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":9332,"byte_end":9345,"line_start":316,"line_end":316,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":190},{"krate":0,"index":197},{"krate":0,"index":204},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":12161,"byte_end":12174,"line_start":392,"line_end":392,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":12310,"byte_end":12323,"line_start":398,"line_end":398,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":12457,"byte_end":12470,"line_start":406,"line_end":406,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":12565,"byte_end":12578,"line_start":412,"line_end":412,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":12660,"byte_end":12673,"line_start":418,"line_end":418,"column_start":13,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":12712,"byte_end":12725,"line_start":420,"line_end":420,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":12856,"byte_end":12863,"line_start":426,"line_end":426,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/checker.rs","byte_start":13136,"byte_end":13153,"line_start":11,"line_end":11,"column_start":6,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":19},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/checker.rs","byte_start":13248,"byte_end":13265,"line_start":17,"line_end":17,"column_start":18,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":19},"to":{"krate":0,"index":74}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/checker.rs","byte_start":13615,"byte_end":13629,"line_start":33,"line_end":33,"column_start":6,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":26},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/checker.rs","byte_start":13718,"byte_end":13732,"line_start":39,"line_end":39,"column_start":18,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":26},"to":{"krate":0,"index":74}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/checker.rs","byte_start":14322,"byte_end":14338,"line_start":62,"line_end":62,"column_start":6,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":33},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/checker.rs","byte_start":14616,"byte_end":14632,"line_start":75,"line_end":75,"column_start":18,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":33},"to":{"krate":0,"index":74}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/error.rs","byte_start":15034,"byte_end":15039,"line_start":14,"line_end":14,"column_start":28,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":229},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/error.rs","byte_start":15066,"byte_end":15071,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":229},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/finder.rs","byte_start":16143,"byte_end":16150,"line_start":29,"line_end":29,"column_start":18,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":1,"index":7421},"to":{"krate":0,"index":76}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/finder.rs","byte_start":16547,"byte_end":16553,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":5796,"byte_end":5800,"line_start":202,"line_end":202,"column_start":6,"column_end":10},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":7751,"byte_end":7755,"line_start":258,"line_end":258,"column_start":21,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":251},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":7891,"byte_end":7895,"line_start":264,"line_end":264,"column_start":26,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":251},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8029,"byte_end":8033,"line_start":272,"line_end":272,"column_start":28,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":251},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8128,"byte_end":8132,"line_start":278,"line_end":278,"column_start":23,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":251},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8214,"byte_end":8218,"line_start":284,"line_end":284,"column_start":13,"column_end":17},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":251},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8257,"byte_end":8261,"line_start":286,"line_end":286,"column_start":35,"column_end":39},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":251},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":8383,"byte_end":8390,"line_start":292,"line_end":292,"column_start":32,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":7421},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":9332,"byte_end":9345,"line_start":316,"line_end":316,"column_start":6,"column_end":19},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":12161,"byte_end":12174,"line_start":392,"line_end":392,"column_start":21,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":259},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":12310,"byte_end":12323,"line_start":398,"line_end":398,"column_start":26,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":259},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":12457,"byte_end":12470,"line_start":406,"line_end":406,"column_start":28,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":259},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":12565,"byte_end":12578,"line_start":412,"line_end":412,"column_start":23,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":259},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":12660,"byte_end":12673,"line_start":418,"line_end":418,"column_start":13,"column_end":26},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":259},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":12712,"byte_end":12725,"line_start":420,"line_end":420,"column_start":35,"column_end":48},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":259},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/which-4.2.5/src/lib.rs","byte_start":12856,"byte_end":12863,"line_start":426,"line_end":426,"column_start":41,"column_end":48},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":7421},"to":{"krate":2,"index":2709}}]}