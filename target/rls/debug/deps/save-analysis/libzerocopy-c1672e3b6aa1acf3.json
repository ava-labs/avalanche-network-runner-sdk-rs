{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1","program":"/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","zerocopy","--edition=2018","/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=c1672e3b6aa1acf3","-C","extra-filename=-c1672e3b6aa1acf3","--out-dir","/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","-L","dependency=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","--extern","byteorder=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libbyteorder-8b5af74d81a6b735.rmeta","--extern","zerocopy_derive=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libzerocopy_derive-fcd87497428d3f6b.so","--cap-lints","allow","--error-format=json","--sysroot","/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libzerocopy-c1672e3b6aa1acf3.rmeta"},"prelude":{"crate_id":{"name":"zerocopy","disambiguator":[14347997391514166617,0]},"crate_root":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src","external_crates":[{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":4,"id":{"name":"zerocopy_derive","disambiguator":[13128662033774973744,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":5,"id":{"name":"byteorder","disambiguator":[16653172705223299744,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":6,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":7,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":8,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":9,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":10,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":11,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":13,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":14,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":15,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":16,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":17,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":18,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":19,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":20,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","num":21,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}}],"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":165,"byte_end":106457,"line_start":5,"line_end":2853,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":5,"index":341},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":109110,"byte_end":109119,"line_start":76,"line_end":76,"column_start":21,"column_end":30},"alias_span":null,"name":"BigEndian","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":5,"index":201},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":109121,"byte_end":109130,"line_start":76,"line_end":76,"column_start":32,"column_end":41},"alias_span":null,"name":"ByteOrder","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":5,"index":360},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":109132,"byte_end":109144,"line_start":76,"line_end":76,"column_start":43,"column_end":55},"alias_span":null,"name":"LittleEndian","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":5,"index":278},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":109146,"byte_end":109158,"line_start":76,"line_end":76,"column_start":57,"column_end":69},"alias_span":null,"name":"NativeEndian","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":5,"index":277},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":109160,"byte_end":109173,"line_start":76,"line_end":76,"column_start":71,"column_end":84},"alias_span":null,"name":"NetworkEndian","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":5,"index":273},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":109175,"byte_end":109177,"line_start":76,"line_end":76,"column_start":86,"column_end":88},"alias_span":null,"name":"BE","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":5,"index":276},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":109179,"byte_end":109181,"line_start":76,"line_end":76,"column_start":90,"column_end":92},"alias_span":null,"name":"LE","value":"","parent":{"krate":0,"index":4}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":2149,"byte_end":2150,"line_start":50,"line_end":50,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":2177,"byte_end":2178,"line_start":51,"line_end":51,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"AsBytes, FromBytes, Unaligned","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":1669},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":26983,"byte_end":26992,"line_start":719,"line_end":719,"column_start":20,"column_end":29},"alias_span":null,"name":"__real_transmute","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":165,"byte_end":106457,"line_start":5,"line_end":2853,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":134},{"krate":0,"index":1519},{"krate":0,"index":1521},{"krate":0,"index":1523},{"krate":0,"index":1525},{"krate":0,"index":1527},{"krate":0,"index":1529},{"krate":0,"index":1531},{"krate":0,"index":1533},{"krate":0,"index":1535},{"krate":0,"index":1537},{"krate":0,"index":1539},{"krate":0,"index":1541},{"krate":0,"index":1543},{"krate":0,"index":1545},{"krate":0,"index":1547},{"krate":0,"index":1549},{"krate":0,"index":1551},{"krate":0,"index":1553},{"krate":0,"index":1555},{"krate":0,"index":1557},{"krate":0,"index":1559},{"krate":0,"index":1561},{"krate":0,"index":1563},{"krate":0,"index":1565},{"krate":0,"index":1567},{"krate":0,"index":1569},{"krate":0,"index":1571},{"krate":0,"index":1573},{"krate":0,"index":1575},{"krate":0,"index":1577},{"krate":0,"index":1580},{"krate":0,"index":1583},{"krate":0,"index":1585},{"krate":0,"index":1590},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":144},{"krate":0,"index":1603},{"krate":0,"index":1605},{"krate":0,"index":1607},{"krate":0,"index":1610},{"krate":0,"index":1613},{"krate":0,"index":1615},{"krate":0,"index":1620},{"krate":0,"index":1624},{"krate":0,"index":1631},{"krate":0,"index":1634},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":171},{"krate":0,"index":177},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":196},{"krate":0,"index":202},{"krate":0,"index":208},{"krate":0,"index":214},{"krate":0,"index":222},{"krate":0,"index":228},{"krate":0,"index":234},{"krate":0,"index":239},{"krate":0,"index":244},{"krate":0,"index":249},{"krate":0,"index":254},{"krate":0,"index":259},{"krate":0,"index":264},{"krate":0,"index":269},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":279},{"krate":0,"index":283},{"krate":0,"index":287},{"krate":0,"index":291},{"krate":0,"index":296},{"krate":0,"index":300},{"krate":0,"index":305},{"krate":0,"index":309},{"krate":0,"index":313},{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":335},{"krate":0,"index":339},{"krate":0,"index":343},{"krate":0,"index":347},{"krate":0,"index":351},{"krate":0,"index":355},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":381},{"krate":0,"index":385},{"krate":0,"index":390},{"krate":0,"index":395},{"krate":0,"index":398}],"decl_id":null,"docs":" Utilities for safe zero-copy parsing and serialization.","sig":null,"attributes":[{"value":"/ Utilities for safe zero-copy parsing and serialization.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":165,"byte_end":224,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":225,"byte_end":228,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This crate provides utilities which make it easy to perform zero-copy","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":229,"byte_end":302,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ parsing and serialization by allowing zero-copy conversion to/from byte","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":303,"byte_end":378,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ slices.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":379,"byte_end":390,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":391,"byte_end":394,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is enabled by three core marker traits, each of which can be derived","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":395,"byte_end":472,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ (e.g., `#[derive(FromBytes)]`):","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":473,"byte_end":508,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/ - [`FromBytes`] indicates that a type may safely be converted from an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":509,"byte_end":582,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/   arbitrary byte sequence","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":583,"byte_end":612,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"/ - [`AsBytes`] indicates that a type may safely be converted *to* a byte","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":613,"byte_end":688,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/   sequence","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":689,"byte_end":703,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/ - [`Unaligned`] indicates that a type's alignment requirement is 1","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":704,"byte_end":774,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":775,"byte_end":778,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Types which implement a subset of these traits can then be converted to/from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":779,"byte_end":859,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ byte sequences with little to no runtime overhead.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":860,"byte_end":914,"line_start":20,"line_end":20,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":915,"byte_end":918,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that these traits are ignorant of byte order. For byte order-aware","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":919,"byte_end":994,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ types, see the [`byteorder`] module.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":995,"byte_end":1035,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1036,"byte_end":1039,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1040,"byte_end":1054,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1055,"byte_end":1058,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `alloc`: By default, `zerocopy` is `no_std`. When the `alloc` feature is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1059,"byte_end":1135,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ enabled, the `alloc` crate is added as a dependency, and some","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1136,"byte_end":1201,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ allocation-related functionality is added.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1202,"byte_end":1248,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1249,"byte_end":1252,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ `simd`: When the `simd` feature is enabled, `FromBytes` and `AsBytes` impls","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1253,"byte_end":1332,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ are emitted for all stable SIMD types which exist on the target platform.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1333,"byte_end":1410,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ Note that the layout of SIMD types is not yet stabilized, so these impls may","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1411,"byte_end":1491,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ be removed in the future if layout changes make them invalid. For more","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1492,"byte_end":1566,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ information, see the Unsafe Code Guidelines Reference page on the [Layout of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1567,"byte_end":1647,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ packed SIMD vectors][simd-layout].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1648,"byte_end":1686,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1687,"byte_end":1690,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ `simd-nightly`: Enables the `simd` feature and adds support for SIMD types","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1691,"byte_end":1769,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ which are only available on nightly. Since these types are unstable, support","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1770,"byte_end":1850,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ for any type may be removed at any point in the future.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1851,"byte_end":1910,"line_start":40,"line_end":40,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1911,"byte_end":1914,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [simd-layout]: https://rust-lang.github.io/unsafe-code-guidelines/layout/packed-simd-vectors.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":1915,"byte_end":2016,"line_start":42,"line_end":42,"column_start":1,"column_end":102}},{"value":"deny(missing_docs)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":2018,"byte_end":2040,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":2064,"byte_end":2070,"line_start":45,"line_end":45,"column_start":24,"column_end":30}},{"value":"recursion_limit = \"2048\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":2073,"byte_end":2101,"line_start":46,"line_end":46,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"byteorder","qualname":"::byteorder","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":511},{"krate":0,"index":517},{"krate":0,"index":525},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":550},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":413},{"krate":0,"index":418},{"krate":0,"index":423},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":462},{"krate":0,"index":466},{"krate":0,"index":471},{"krate":0,"index":475},{"krate":0,"index":480},{"krate":0,"index":484},{"krate":0,"index":489},{"krate":0,"index":494},{"krate":0,"index":499},{"krate":0,"index":503},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":508},{"krate":0,"index":658},{"krate":0,"index":664},{"krate":0,"index":672},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":697},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":583},{"krate":0,"index":588},{"krate":0,"index":593},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":618},{"krate":0,"index":622},{"krate":0,"index":627},{"krate":0,"index":631},{"krate":0,"index":636},{"krate":0,"index":641},{"krate":0,"index":646},{"krate":0,"index":650},{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":655},{"krate":0,"index":789},{"krate":0,"index":795},{"krate":0,"index":803},{"krate":0,"index":811},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":828},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":730},{"krate":0,"index":735},{"krate":0,"index":740},{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":758},{"krate":0,"index":762},{"krate":0,"index":767},{"krate":0,"index":772},{"krate":0,"index":777},{"krate":0,"index":781},{"krate":0,"index":834},{"krate":0,"index":837},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":786},{"krate":0,"index":904},{"krate":0,"index":910},{"krate":0,"index":918},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":943},{"krate":0,"index":849},{"krate":0,"index":852},{"krate":0,"index":855},{"krate":0,"index":861},{"krate":0,"index":866},{"krate":0,"index":871},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":887},{"krate":0,"index":892},{"krate":0,"index":896},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":901},{"krate":0,"index":1074},{"krate":0,"index":1080},{"krate":0,"index":1088},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1107},{"krate":0,"index":1109},{"krate":0,"index":1113},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":976},{"krate":0,"index":981},{"krate":0,"index":986},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1025},{"krate":0,"index":1029},{"krate":0,"index":1034},{"krate":0,"index":1038},{"krate":0,"index":1043},{"krate":0,"index":1047},{"krate":0,"index":1052},{"krate":0,"index":1057},{"krate":0,"index":1062},{"krate":0,"index":1066},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1123},{"krate":0,"index":1126},{"krate":0,"index":1129},{"krate":0,"index":1071},{"krate":0,"index":1219},{"krate":0,"index":1225},{"krate":0,"index":1233},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1258},{"krate":0,"index":1132},{"krate":0,"index":1135},{"krate":0,"index":1138},{"krate":0,"index":1144},{"krate":0,"index":1149},{"krate":0,"index":1154},{"krate":0,"index":1159},{"krate":0,"index":1162},{"krate":0,"index":1165},{"krate":0,"index":1168},{"krate":0,"index":1172},{"krate":0,"index":1175},{"krate":0,"index":1179},{"krate":0,"index":1183},{"krate":0,"index":1188},{"krate":0,"index":1192},{"krate":0,"index":1197},{"krate":0,"index":1202},{"krate":0,"index":1207},{"krate":0,"index":1211},{"krate":0,"index":1262},{"krate":0,"index":1265},{"krate":0,"index":1268},{"krate":0,"index":1271},{"krate":0,"index":1274},{"krate":0,"index":1216},{"krate":0,"index":1348},{"krate":0,"index":1354},{"krate":0,"index":1362},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1387},{"krate":0,"index":1277},{"krate":0,"index":1280},{"krate":0,"index":1283},{"krate":0,"index":1289},{"krate":0,"index":1294},{"krate":0,"index":1299},{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1317},{"krate":0,"index":1321},{"krate":0,"index":1326},{"krate":0,"index":1331},{"krate":0,"index":1336},{"krate":0,"index":1340},{"krate":0,"index":1391},{"krate":0,"index":1394},{"krate":0,"index":1397},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1345},{"krate":0,"index":1461},{"krate":0,"index":1467},{"krate":0,"index":1475},{"krate":0,"index":1483},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1494},{"krate":0,"index":1496},{"krate":0,"index":1500},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1418},{"krate":0,"index":1423},{"krate":0,"index":1428},{"krate":0,"index":1433},{"krate":0,"index":1436},{"krate":0,"index":1439},{"krate":0,"index":1444},{"krate":0,"index":1449},{"krate":0,"index":1453},{"krate":0,"index":1504},{"krate":0,"index":1507},{"krate":0,"index":1510},{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1458}],"decl_id":null,"docs":" Byte order-aware numeric primitives.","sig":null,"attributes":[{"value":"/ Byte order-aware numeric primitives.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":106624,"byte_end":106664,"line_start":5,"line_end":5,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":106665,"byte_end":106668,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This module contains equivalents of the native multi-byte integer types with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":106669,"byte_end":106749,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ no alignment requirement and supporting byte order conversions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":106750,"byte_end":106817,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":106818,"byte_end":106821,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ For each native multi-byte integer type - `u16`, `i16`, `u32`, etc - an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":106822,"byte_end":106897,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ equivalent type is defined by this module - [`U16`], [`I16`], [`U32`], etc.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":106898,"byte_end":106977,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ Unlike their native counterparts, these types have alignment 1, and take a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":106978,"byte_end":107056,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ type parameter specifying the byte order in which the bytes are stored in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107057,"byte_end":107134,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ memory. Each type implements the [`FromBytes`], [`AsBytes`], and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107135,"byte_end":107203,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ [`Unaligned`] traits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107204,"byte_end":107229,"line_start":15,"line_end":15,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107230,"byte_end":107233,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ These two properties, taken together, make these types very useful for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107234,"byte_end":107308,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ defining data structures whose memory layout matches a wire format such as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107309,"byte_end":107387,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ that of a network protocol or a file format. Such formats often have","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107388,"byte_end":107460,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ multi-byte values at offsets that do not respect the alignment requirements","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107461,"byte_end":107540,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ of the equivalent native types, and stored in a byte order not necessarily","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107541,"byte_end":107619,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ the same as that of the target platform.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107620,"byte_end":107664,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107665,"byte_end":107668,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107669,"byte_end":107682,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107683,"byte_end":107686,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ One use of these types is for representing network packet formats, such as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107687,"byte_end":107765,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ UDP:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107766,"byte_end":107774,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107775,"byte_end":107778,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107779,"byte_end":107797,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ # use zerocopy::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107798,"byte_end":107820,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/ use ::byteorder::NetworkEndian;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107821,"byte_end":107856,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107857,"byte_end":107860,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ #[derive(FromBytes, AsBytes, Unaligned)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107861,"byte_end":107905,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ #[repr(C)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107906,"byte_end":107920,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/ struct UdpHeader {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107921,"byte_end":107943,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/     src_port: U16<NetworkEndian>,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107944,"byte_end":107981,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/     dst_port: U16<NetworkEndian>,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":107982,"byte_end":108019,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/     length: U16<NetworkEndian>,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108020,"byte_end":108055,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/     checksum: U16<NetworkEndian>,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108056,"byte_end":108093,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108094,"byte_end":108099,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108100,"byte_end":108103,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ struct UdpPacket<B: ByteSlice> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108104,"byte_end":108140,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"/     header: LayoutVerified<B, UdpHeader>,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108141,"byte_end":108186,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/     body: B,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108187,"byte_end":108203,"line_start":44,"line_end":44,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108204,"byte_end":108209,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108210,"byte_end":108213,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ impl<B: ByteSlice> UdpPacket<B> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108214,"byte_end":108251,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/     fn parse(bytes: B) -> Option<UdpPacket<B>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108252,"byte_end":108304,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/         let (header, body) = LayoutVerified::new_from_prefix(bytes)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108305,"byte_end":108378,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/         Some(UdpPacket { header, body })","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108379,"byte_end":108423,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108424,"byte_end":108433,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108434,"byte_end":108437,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     fn src_port(&self) -> u16 {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108438,"byte_end":108473,"line_start":53,"line_end":53,"column_start":1,"column_end":36}},{"value":"/         self.header.src_port.get()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108474,"byte_end":108512,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108513,"byte_end":108522,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108523,"byte_end":108526,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     // more getters...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108527,"byte_end":108553,"line_start":57,"line_end":57,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108554,"byte_end":108559,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":108560,"byte_end":108567,"line_start":59,"line_end":59,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":511},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":117936,"byte_end":117939,"line_start":318,"line_end":318,"column_start":5,"column_end":8},"name":"U16","qualname":"::byteorder::U16","value":"","parent":null,"children":[],"decl_id":null,"docs":"A 16-bit unsigned integer\nstored in `O` byte order.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":112373,"byte_end":112393,"line_start":154,"line_end":154,"column_start":13,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":658},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":118077,"byte_end":118080,"line_start":328,"line_end":328,"column_start":17,"column_end":20},"name":"U32","qualname":"::byteorder::U32","value":"","parent":null,"children":[],"decl_id":null,"docs":"A 32-bit unsigned integer\nstored in `O` byte order.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":112373,"byte_end":112393,"line_start":154,"line_end":154,"column_start":13,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":789},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":118168,"byte_end":118171,"line_start":329,"line_end":329,"column_start":17,"column_end":20},"name":"U64","qualname":"::byteorder::U64","value":"","parent":null,"children":[],"decl_id":null,"docs":"A 64-bit unsigned integer\nstored in `O` byte order.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":112373,"byte_end":112393,"line_start":154,"line_end":154,"column_start":13,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":904},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":118249,"byte_end":118253,"line_start":330,"line_end":330,"column_start":17,"column_end":21},"name":"U128","qualname":"::byteorder::U128","value":"","parent":null,"children":[],"decl_id":null,"docs":"A 128-bit unsigned integer\nstored in `O` byte order.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":112373,"byte_end":112393,"line_start":154,"line_end":154,"column_start":13,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1074},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":118338,"byte_end":118341,"line_start":333,"line_end":333,"column_start":5,"column_end":8},"name":"I16","qualname":"::byteorder::I16","value":"","parent":null,"children":[],"decl_id":null,"docs":"A 16-bit signed integer\nstored in `O` byte order.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":112373,"byte_end":112393,"line_start":154,"line_end":154,"column_start":13,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1219},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":118478,"byte_end":118481,"line_start":343,"line_end":343,"column_start":18,"column_end":21},"name":"I32","qualname":"::byteorder::I32","value":"","parent":null,"children":[],"decl_id":null,"docs":"A 32-bit signed integer\nstored in `O` byte order.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":112373,"byte_end":112393,"line_start":154,"line_end":154,"column_start":13,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1348},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":118568,"byte_end":118571,"line_start":344,"line_end":344,"column_start":18,"column_end":21},"name":"I64","qualname":"::byteorder::I64","value":"","parent":null,"children":[],"decl_id":null,"docs":"A 64-bit signed integer\nstored in `O` byte order.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":112373,"byte_end":112393,"line_start":154,"line_end":154,"column_start":13,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1461},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":118648,"byte_end":118652,"line_start":345,"line_end":345,"column_start":18,"column_end":22},"name":"I128","qualname":"::byteorder::I128","value":"","parent":null,"children":[],"decl_id":null,"docs":"A 128-bit signed integer\nstored in `O` byte order.","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/byteorder.rs","byte_start":112373,"byte_end":112393,"line_start":154,"line_end":154,"column_start":13,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":125},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6862,"byte_end":6871,"line_start":182,"line_end":182,"column_start":18,"column_end":27},"name":"FromBytes","qualname":"::FromBytes","value":"FromBytes","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133}],"decl_id":null,"docs":" Types for which any byte pattern is valid.","sig":null,"attributes":[{"value":"/ Types for which any byte pattern is valid.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":4368,"byte_end":4414,"line_start":127,"line_end":127,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":4415,"byte_end":4418,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ WARNING: Do not implement this trait yourself! Instead, use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":4419,"byte_end":4482,"line_start":129,"line_end":129,"column_start":1,"column_end":64}},{"value":"/ `#[derive(FromBytes)]`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":4483,"byte_end":4510,"line_start":130,"line_end":130,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":4511,"byte_end":4514,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ `FromBytes` types can safely be deserialized from an untrusted sequence of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":4515,"byte_end":4593,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ bytes because any byte sequence corresponds to a valid instance of the type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":4594,"byte_end":4674,"line_start":133,"line_end":133,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":4675,"byte_end":4678,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ `FromBytes` is ignorant of byte order. For byte order-aware types, see the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":4679,"byte_end":4757,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/ [`byteorder`] module.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":4758,"byte_end":4783,"line_start":136,"line_end":136,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":4784,"byte_end":4787,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":4788,"byte_end":4800,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":4801,"byte_end":4804,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ If `T: FromBytes`, then unsafe code may assume that it is sound to treat any","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":4805,"byte_end":4885,"line_start":140,"line_end":140,"column_start":1,"column_end":81}},{"value":"/ initialized sequence of bytes of length `size_of::<T>()` as a `T`. If a type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":4886,"byte_end":4966,"line_start":141,"line_end":141,"column_start":1,"column_end":81}},{"value":"/ is marked as `FromBytes` which violates this contract, it may cause","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":4967,"byte_end":5038,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/ undefined behavior.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5039,"byte_end":5062,"line_start":143,"line_end":143,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5063,"byte_end":5066,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ If a type has the following properties, then it is safe to implement","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5067,"byte_end":5139,"line_start":145,"line_end":145,"column_start":1,"column_end":73}},{"value":"/ `FromBytes` for that type:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5140,"byte_end":5170,"line_start":146,"line_end":146,"column_start":1,"column_end":31}},{"value":"/ - If the type is a struct:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5171,"byte_end":5201,"line_start":147,"line_end":147,"column_start":1,"column_end":31}},{"value":"/   - All of its fields must implement `FromBytes`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5202,"byte_end":5254,"line_start":148,"line_end":148,"column_start":1,"column_end":53}},{"value":"/ - If the type is an enum:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5255,"byte_end":5284,"line_start":149,"line_end":149,"column_start":1,"column_end":30}},{"value":"/   - It must be a C-like enum (meaning that all variants have no fields)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5285,"byte_end":5360,"line_start":150,"line_end":150,"column_start":1,"column_end":76}},{"value":"/   - It must have a defined representation (`repr`s `C`, `u8`, `u16`, `u32`,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5361,"byte_end":5440,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/     `u64`, `usize`, `i8`, `i16`, `i32`, `i64`, or `isize`).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5441,"byte_end":5504,"line_start":152,"line_end":152,"column_start":1,"column_end":64}},{"value":"/   - The maximum number of discriminants must be used (so that every possible","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5505,"byte_end":5585,"line_start":153,"line_end":153,"column_start":1,"column_end":81}},{"value":"/     bit pattern is a valid one). Be very careful when using the `C`,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5586,"byte_end":5658,"line_start":154,"line_end":154,"column_start":1,"column_end":73}},{"value":"/     `usize`, or `isize` representations, as their size is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5659,"byte_end":5720,"line_start":155,"line_end":155,"column_start":1,"column_end":62}},{"value":"/     platform-dependent.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5721,"byte_end":5748,"line_start":156,"line_end":156,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5749,"byte_end":5752,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Rationale","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5753,"byte_end":5768,"line_start":158,"line_end":158,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5769,"byte_end":5772,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ## Why isn't an explicit representation required for structs?","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5773,"byte_end":5838,"line_start":160,"line_end":160,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5839,"byte_end":5842,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Per the [Rust reference](reference),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5843,"byte_end":5883,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"/ > The representation of a type can change the padding between fields, but","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5884,"byte_end":5961,"line_start":163,"line_end":163,"column_start":1,"column_end":78}},{"value":"/ does not change the layout of the fields themselves.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":5962,"byte_end":6018,"line_start":164,"line_end":164,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6019,"byte_end":6022,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ [reference]: https://doc.rust-lang.org/reference/type-layout.html#representations","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6023,"byte_end":6108,"line_start":166,"line_end":166,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6109,"byte_end":6112,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Since the layout of structs only consists of padding bytes and field bytes,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6113,"byte_end":6192,"line_start":168,"line_end":168,"column_start":1,"column_end":80}},{"value":"/ a struct is soundly `FromBytes` if:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6193,"byte_end":6232,"line_start":169,"line_end":169,"column_start":1,"column_end":40}},{"value":"/ 1. its padding is soundly `FromBytes`, and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6233,"byte_end":6279,"line_start":170,"line_end":170,"column_start":1,"column_end":47}},{"value":"/ 2. its fields are soundly `FromBytes`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6280,"byte_end":6322,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6323,"byte_end":6326,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ The answer to the first question is always yes: padding bytes do not have","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6327,"byte_end":6404,"line_start":173,"line_end":173,"column_start":1,"column_end":78}},{"value":"/ any validity constraints. A [discussion] of this question in the Unsafe Code","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6405,"byte_end":6485,"line_start":174,"line_end":174,"column_start":1,"column_end":81}},{"value":"/ Guidelines Working Group concluded that it would be virtually unimaginable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6486,"byte_end":6564,"line_start":175,"line_end":175,"column_start":1,"column_end":79}},{"value":"/ for future versions of rustc to add validity constraints to padding bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6565,"byte_end":6643,"line_start":176,"line_end":176,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6644,"byte_end":6647,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ [discussion]: https://github.com/rust-lang/unsafe-code-guidelines/issues/174","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6648,"byte_end":6728,"line_start":178,"line_end":178,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6729,"byte_end":6732,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ Whether a struct is soundly `FromBytes` therefore solely depends on whether","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6733,"byte_end":6812,"line_start":180,"line_end":180,"column_start":1,"column_end":80}},{"value":"/ its fields are `FromBytes`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6813,"byte_end":6844,"line_start":181,"line_end":181,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":6991,"byte_end":7037,"line_start":186,"line_end":186,"column_start":8,"column_end":54},"name":"only_derive_is_allowed_to_implement_this_trait","qualname":"::FromBytes::only_derive_is_allowed_to_implement_this_trait","value":"pub fn only_derive_is_allowed_to_implement_this_trait() where Self: Sized","parent":{"krate":0,"index":125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":7207,"byte_end":7216,"line_start":193,"line_end":193,"column_start":8,"column_end":17},"name":"read_from","qualname":"::FromBytes::read_from","value":"pub fn read_from<B: ByteSlice>(B) -> Option<Self> where Self: Sized","parent":{"krate":0,"index":125},"children":[],"decl_id":null,"docs":" Reads a copy of `Self` from `bytes`.","sig":null,"attributes":[{"value":"/ Reads a copy of `Self` from `bytes`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":7076,"byte_end":7116,"line_start":190,"line_end":190,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":7121,"byte_end":7124,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ If `bytes.len() != size_of::<Self>()`, `read_from` returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":7129,"byte_end":7199,"line_start":192,"line_end":192,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":7656,"byte_end":7672,"line_start":206,"line_end":206,"column_start":8,"column_end":24},"name":"read_from_prefix","qualname":"::FromBytes::read_from_prefix","value":"pub fn read_from_prefix<B: ByteSlice>(B) -> Option<Self> where Self: Sized","parent":{"krate":0,"index":125},"children":[],"decl_id":null,"docs":" Reads a copy of `Self` from the prefix of `bytes`.","sig":null,"attributes":[{"value":"/ Reads a copy of `Self` from the prefix of `bytes`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":7418,"byte_end":7472,"line_start":201,"line_end":201,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":7477,"byte_end":7480,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ `read_from_prefix` reads a `Self` from the first `size_of::<Self>()`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":7485,"byte_end":7557,"line_start":203,"line_end":203,"column_start":5,"column_end":77}},{"value":"/ bytes of `bytes`. If `bytes.len() < size_of::<Self>()`, it returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":7562,"byte_end":7632,"line_start":204,"line_end":204,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":7637,"byte_end":7648,"line_start":205,"line_end":205,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":8134,"byte_end":8150,"line_start":219,"line_end":219,"column_start":8,"column_end":24},"name":"read_from_suffix","qualname":"::FromBytes::read_from_suffix","value":"pub fn read_from_suffix<B: ByteSlice>(B) -> Option<Self> where Self: Sized","parent":{"krate":0,"index":125},"children":[],"decl_id":null,"docs":" Reads a copy of `Self` from the suffix of `bytes`.","sig":null,"attributes":[{"value":"/ Reads a copy of `Self` from the suffix of `bytes`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":7897,"byte_end":7951,"line_start":214,"line_end":214,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":7956,"byte_end":7959,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ `read_from_suffix` reads a `Self` from the last `size_of::<Self>()`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":7964,"byte_end":8035,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ bytes of `bytes`. If `bytes.len() < size_of::<Self>()`, it returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":8040,"byte_end":8110,"line_start":217,"line_end":217,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":8115,"byte_end":8126,"line_start":218,"line_end":218,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":8435,"byte_end":8445,"line_start":228,"line_end":228,"column_start":8,"column_end":18},"name":"new_zeroed","qualname":"::FromBytes::new_zeroed","value":"pub fn new_zeroed() -> Self where Self: Sized","parent":{"krate":0,"index":125},"children":[],"decl_id":null,"docs":" Creates an instance of `Self` from zeroed bytes.\n","sig":null,"attributes":[{"value":"/ Creates an instance of `Self` from zeroed bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":8375,"byte_end":8427,"line_start":227,"line_end":227,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":134},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14882,"byte_end":14889,"line_start":386,"line_end":386,"column_start":18,"column_end":25},"name":"AsBytes","qualname":"::AsBytes","value":"AsBytes","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142}],"decl_id":null,"docs":" Types which are safe to treat as an immutable byte slice.","sig":null,"attributes":[{"value":"/ Types which are safe to treat as an immutable byte slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":12623,"byte_end":12684,"line_start":333,"line_end":333,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":12685,"byte_end":12688,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ WARNING: Do not implement this trait yourself! Instead, use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":12689,"byte_end":12752,"line_start":335,"line_end":335,"column_start":1,"column_end":64}},{"value":"/ `#[derive(AsBytes)]`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":12753,"byte_end":12778,"line_start":336,"line_end":336,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":12779,"byte_end":12782,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ `AsBytes` types can be safely viewed as a slice of bytes. In particular,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":12783,"byte_end":12859,"line_start":338,"line_end":338,"column_start":1,"column_end":77}},{"value":"/ this means that, in any valid instance of the type, none of the bytes of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":12860,"byte_end":12940,"line_start":339,"line_end":339,"column_start":1,"column_end":81}},{"value":"/ instance are uninitialized. This precludes the following types:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":12941,"byte_end":13008,"line_start":340,"line_end":340,"column_start":1,"column_end":68}},{"value":"/ - Structs with internal padding","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13009,"byte_end":13044,"line_start":341,"line_end":341,"column_start":1,"column_end":36}},{"value":"/ - Unions in which not all variants have the same length","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13045,"byte_end":13104,"line_start":342,"line_end":342,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13105,"byte_end":13108,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ `AsBytes` is ignorant of byte order. For byte order-aware types, see the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13109,"byte_end":13185,"line_start":344,"line_end":344,"column_start":1,"column_end":77}},{"value":"/ [`byteorder`] module.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13186,"byte_end":13211,"line_start":345,"line_end":345,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13212,"byte_end":13215,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ # Custom Derive Errors","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13216,"byte_end":13242,"line_start":347,"line_end":347,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13243,"byte_end":13246,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ Due to the way that the custom derive for `AsBytes` is implemented, you may","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13247,"byte_end":13326,"line_start":349,"line_end":349,"column_start":1,"column_end":80}},{"value":"/ get an error like this:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13327,"byte_end":13354,"line_start":350,"line_end":350,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13355,"byte_end":13358,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13359,"byte_end":13370,"line_start":352,"line_end":352,"column_start":1,"column_end":12}},{"value":"/ error[E0080]: evaluation of constant value failed","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13371,"byte_end":13424,"line_start":353,"line_end":353,"column_start":1,"column_end":54}},{"value":"/   --> lib.rs:1:10","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13425,"byte_end":13446,"line_start":354,"line_end":354,"column_start":1,"column_end":22}},{"value":"/    |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13447,"byte_end":13455,"line_start":355,"line_end":355,"column_start":1,"column_end":9}},{"value":"/  1 | #[derive(AsBytes)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13456,"byte_end":13483,"line_start":356,"line_end":356,"column_start":1,"column_end":28}},{"value":"/    |          ^^^^^^^ attempt to divide by zero","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13484,"byte_end":13535,"line_start":357,"line_end":357,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13536,"byte_end":13543,"line_start":358,"line_end":358,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13544,"byte_end":13547,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ This error means that the type being annotated has padding bytes, which is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13548,"byte_end":13626,"line_start":360,"line_end":360,"column_start":1,"column_end":79}},{"value":"/ illegal for `AsBytes` types. Consider either adding explicit struct fields","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13627,"byte_end":13705,"line_start":361,"line_end":361,"column_start":1,"column_end":79}},{"value":"/ where those padding bytes would be or using `#[repr(packed)]`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13706,"byte_end":13772,"line_start":362,"line_end":362,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13773,"byte_end":13776,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13777,"byte_end":13789,"line_start":364,"line_end":364,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13790,"byte_end":13793,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ If `T: AsBytes`, then unsafe code may assume that it is sound to treat any","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13794,"byte_end":13872,"line_start":366,"line_end":366,"column_start":1,"column_end":79}},{"value":"/ instance of the type as an immutable `[u8]` of length `size_of::<T>()`. If a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13873,"byte_end":13953,"line_start":367,"line_end":367,"column_start":1,"column_end":81}},{"value":"/ type is marked as `AsBytes` which violates this contract, it may cause","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":13954,"byte_end":14028,"line_start":368,"line_end":368,"column_start":1,"column_end":75}},{"value":"/ undefined behavior.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14029,"byte_end":14052,"line_start":369,"line_end":369,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14053,"byte_end":14056,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ If a type has the following properties, then it is safe to implement","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14057,"byte_end":14129,"line_start":371,"line_end":371,"column_start":1,"column_end":73}},{"value":"/ `AsBytes` for that type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14130,"byte_end":14157,"line_start":372,"line_end":372,"column_start":1,"column_end":28}},{"value":"/ - If the type is a struct:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14158,"byte_end":14188,"line_start":373,"line_end":373,"column_start":1,"column_end":31}},{"value":"/   - It must have a defined representation (`repr(C)`, `repr(transparent)`,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14189,"byte_end":14267,"line_start":374,"line_end":374,"column_start":1,"column_end":79}},{"value":"/     or `repr(packed)`).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14268,"byte_end":14295,"line_start":375,"line_end":375,"column_start":1,"column_end":28}},{"value":"/   - All of its fields must be `AsBytes`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14296,"byte_end":14339,"line_start":376,"line_end":376,"column_start":1,"column_end":44}},{"value":"/   - Its layout must have no padding. This is always true for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14340,"byte_end":14404,"line_start":377,"line_end":377,"column_start":1,"column_end":65}},{"value":"/     `repr(transparent)` and `repr(packed)`. For `repr(C)`, see the layout","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14405,"byte_end":14482,"line_start":378,"line_end":378,"column_start":1,"column_end":78}},{"value":"/     algorithm described in the [Rust Reference].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14483,"byte_end":14535,"line_start":379,"line_end":379,"column_start":1,"column_end":53}},{"value":"/ - If the type is an enum:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14536,"byte_end":14565,"line_start":380,"line_end":380,"column_start":1,"column_end":30}},{"value":"/   - It must be a C-like enum (meaning that all variants have no fields)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14566,"byte_end":14641,"line_start":381,"line_end":381,"column_start":1,"column_end":76}},{"value":"/   - It must have a defined representation (`repr`s `C`, `u8`, `u16`, `u32`,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14642,"byte_end":14721,"line_start":382,"line_end":382,"column_start":1,"column_end":80}},{"value":"/     `u64`, `usize`, `i8`, `i16`, `i32`, `i64`, or `isize`).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14722,"byte_end":14785,"line_start":383,"line_end":383,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14786,"byte_end":14789,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ [Rust Reference]: https://doc.rust-lang.org/reference/type-layout.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14790,"byte_end":14864,"line_start":385,"line_end":385,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":14918,"byte_end":14964,"line_start":388,"line_end":388,"column_start":8,"column_end":54},"name":"only_derive_is_allowed_to_implement_this_trait","qualname":"::AsBytes::only_derive_is_allowed_to_implement_this_trait","value":"pub fn only_derive_is_allowed_to_implement_this_trait() where Self: Sized","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":15150,"byte_end":15158,"line_start":396,"line_end":396,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::AsBytes::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Gets the bytes of this value.","sig":null,"attributes":[{"value":"/ Gets the bytes of this value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":15003,"byte_end":15036,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":15041,"byte_end":15044,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ `as_bytes` provides access to the bytes of this value as an immutable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":15049,"byte_end":15122,"line_start":394,"line_end":394,"column_start":5,"column_end":78}},{"value":"/ byte slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":15127,"byte_end":15142,"line_start":395,"line_end":395,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":15617,"byte_end":15629,"line_start":409,"line_end":409,"column_start":8,"column_end":20},"name":"as_bytes_mut","qualname":"::AsBytes::as_bytes_mut","value":"pub fn as_bytes_mut(&mut Self) -> &mut [u8] where Self: FromBytes","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Gets the bytes of this value mutably.","sig":null,"attributes":[{"value":"/ Gets the bytes of this value mutably.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":15461,"byte_end":15502,"line_start":405,"line_end":405,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":15507,"byte_end":15510,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ `as_bytes_mut` provides access to the bytes of this value as a mutable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":15515,"byte_end":15589,"line_start":407,"line_end":407,"column_start":5,"column_end":79}},{"value":"/ byte slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":15594,"byte_end":15609,"line_start":408,"line_end":408,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":16108,"byte_end":16116,"line_start":424,"line_end":424,"column_start":8,"column_end":16},"name":"write_to","qualname":"::AsBytes::write_to","value":"pub fn write_to<B: ByteSliceMut>(&Self, B) -> Option<()>","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Writes a copy of `self` to `bytes`.","sig":null,"attributes":[{"value":"/ Writes a copy of `self` to `bytes`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":15979,"byte_end":16018,"line_start":421,"line_end":421,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":16023,"byte_end":16026,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ If `bytes.len() != size_of_val(self)`, `write_to` returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":16031,"byte_end":16100,"line_start":423,"line_end":423,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":16559,"byte_end":16574,"line_start":437,"line_end":437,"column_start":8,"column_end":23},"name":"write_to_prefix","qualname":"::AsBytes::write_to_prefix","value":"pub fn write_to_prefix<B: ByteSliceMut>(&Self, B) -> Option<()>","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Writes a copy of `self` to the prefix of `bytes`.","sig":null,"attributes":[{"value":"/ Writes a copy of `self` to the prefix of `bytes`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":16334,"byte_end":16387,"line_start":433,"line_end":433,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":16392,"byte_end":16395,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ `write_to_prefix` writes `self` to the first `size_of_val(self)` bytes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":16400,"byte_end":16474,"line_start":435,"line_end":435,"column_start":5,"column_end":79}},{"value":"/ of `bytes`. If `bytes.len() < size_of_val(self)`, it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":16479,"byte_end":16551,"line_start":436,"line_end":436,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":17048,"byte_end":17063,"line_start":451,"line_end":451,"column_start":8,"column_end":23},"name":"write_to_suffix","qualname":"::AsBytes::write_to_suffix","value":"pub fn write_to_suffix<B: ByteSliceMut>(&Self, B) -> Option<()>","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Writes a copy of `self` to the suffix of `bytes`.","sig":null,"attributes":[{"value":"/ Writes a copy of `self` to the suffix of `bytes`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":16824,"byte_end":16877,"line_start":447,"line_end":447,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":16882,"byte_end":16885,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ `write_to_suffix` writes `self` to the last `size_of_val(self)` bytes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":16890,"byte_end":16963,"line_start":449,"line_end":449,"column_start":5,"column_end":78}},{"value":"/ of `bytes`. If `bytes.len() < size_of_val(self)`, it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":16968,"byte_end":17040,"line_start":450,"line_end":450,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":144},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":18003,"byte_end":18012,"line_start":479,"line_end":479,"column_start":18,"column_end":27},"name":"Unaligned","qualname":"::Unaligned","value":"Unaligned","parent":null,"children":[{"krate":0,"index":145}],"decl_id":null,"docs":" Types with no alignment requirement.","sig":null,"attributes":[{"value":"/ Types with no alignment requirement.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":17516,"byte_end":17556,"line_start":466,"line_end":466,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":17557,"byte_end":17560,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ WARNING: Do not implement this trait yourself! Instead, use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":17561,"byte_end":17624,"line_start":468,"line_end":468,"column_start":1,"column_end":64}},{"value":"/ `#[derive(Unaligned)]`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":17625,"byte_end":17652,"line_start":469,"line_end":469,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":17653,"byte_end":17656,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ If `T: Unaligned`, then `align_of::<T>() == 1`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":17657,"byte_end":17708,"line_start":471,"line_end":471,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":17709,"byte_end":17712,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":17713,"byte_end":17725,"line_start":473,"line_end":473,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":17726,"byte_end":17729,"line_start":474,"line_end":474,"column_start":1,"column_end":4}},{"value":"/ If `T: Unaligned`, then unsafe code may assume that it is sound to produce a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":17730,"byte_end":17810,"line_start":475,"line_end":475,"column_start":1,"column_end":81}},{"value":"/ reference to `T` at any memory location regardless of alignment. If a type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":17811,"byte_end":17889,"line_start":476,"line_end":476,"column_start":1,"column_end":79}},{"value":"/ is marked as `Unaligned` which violates this contract, it may cause","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":17890,"byte_end":17961,"line_start":477,"line_end":477,"column_start":1,"column_end":72}},{"value":"/ undefined behavior.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":17962,"byte_end":17985,"line_start":478,"line_end":478,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":18132,"byte_end":18178,"line_start":483,"line_end":483,"column_start":8,"column_end":54},"name":"only_derive_is_allowed_to_implement_this_trait","qualname":"::Unaligned::only_derive_is_allowed_to_implement_this_trait","value":"pub fn only_derive_is_allowed_to_implement_this_trait() where Self: Sized","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1620},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24075,"byte_end":24082,"line_start":636,"line_end":636,"column_start":12,"column_end":19},"name":"Unalign","qualname":"::Unalign","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type with no alignment requirement.","sig":null,"attributes":[{"value":"/ A type with no alignment requirement.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":23318,"byte_end":23359,"line_start":620,"line_end":620,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":23360,"byte_end":23363,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ A `Unalign` wraps a `T`, removing any alignment requirement. `Unalign<T>`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":23364,"byte_end":23441,"line_start":622,"line_end":622,"column_start":1,"column_end":78}},{"value":"/ has the same size and ABI as `T`, but not necessarily the same alignment.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":23442,"byte_end":23519,"line_start":623,"line_end":623,"column_start":1,"column_end":78}},{"value":"/ This is useful if a type with an alignment requirement needs to be read from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":23520,"byte_end":23600,"line_start":624,"line_end":624,"column_start":1,"column_end":81}},{"value":"/ a chunk of memory which provides no alignment guarantees.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":23601,"byte_end":23662,"line_start":625,"line_end":625,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":23663,"byte_end":23666,"line_start":626,"line_end":626,"column_start":1,"column_end":4}},{"value":"/ Since `Unalign` has no alignment requirement, the inner `T` may not be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":23667,"byte_end":23741,"line_start":627,"line_end":627,"column_start":1,"column_end":75}},{"value":"/ properly aligned in memory, and so `Unalign` provides no way of getting a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":23742,"byte_end":23819,"line_start":628,"line_end":628,"column_start":1,"column_end":78}},{"value":"/ reference to the inner `T`. Instead, the `T` may only be obtained by value","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":23820,"byte_end":23898,"line_start":629,"line_end":629,"column_start":1,"column_end":79}},{"value":"/ (see [`get`] and [`into_inner`]).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":23899,"byte_end":23936,"line_start":630,"line_end":630,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":23937,"byte_end":23940,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ [`get`]: Unalign::get","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":23941,"byte_end":23966,"line_start":632,"line_end":632,"column_start":1,"column_end":26}},{"value":"/ [`into_inner`]: Unalign::into_inner","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":23967,"byte_end":24006,"line_start":633,"line_end":633,"column_start":1,"column_end":40}},{"value":"repr(C, packed)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24045,"byte_end":24063,"line_start":635,"line_end":635,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24472,"byte_end":24475,"line_start":649,"line_end":649,"column_start":12,"column_end":15},"name":"new","qualname":"<Unalign<T>>::new","value":"pub fn new(T) -> Unalign<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Unalign`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Unalign`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24429,"byte_end":24460,"line_start":648,"line_end":648,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24589,"byte_end":24599,"line_start":654,"line_end":654,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Unalign<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the inner `T`.\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the inner `T`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24532,"byte_end":24577,"line_start":653,"line_end":653,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":25386,"byte_end":25393,"line_start":673,"line_end":673,"column_start":12,"column_end":19},"name":"get_ptr","qualname":"<Unalign<T>>::get_ptr","value":"pub fn get_ptr(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Gets an unaligned raw pointer to the inner `T`.","sig":null,"attributes":[{"value":"/ Gets an unaligned raw pointer to the inner `T`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24669,"byte_end":24720,"line_start":659,"line_end":659,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24725,"byte_end":24728,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24733,"byte_end":24745,"line_start":661,"line_end":661,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24750,"byte_end":24753,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ The returned raw pointer is not necessarily aligned to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24758,"byte_end":24816,"line_start":663,"line_end":663,"column_start":5,"column_end":63}},{"value":"/ `align_of::<T>()`. Most functions which operate on raw pointers require","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24821,"byte_end":24896,"line_start":664,"line_end":664,"column_start":5,"column_end":80}},{"value":"/ those pointers to be aligned, so calling those functions with the result","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24901,"byte_end":24977,"line_start":665,"line_end":665,"column_start":5,"column_end":81}},{"value":"/ of `get_ptr` will be undefined behavior if alignment is not guaranteed","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24982,"byte_end":25056,"line_start":666,"line_end":666,"column_start":5,"column_end":79}},{"value":"/ using some out-of-band mechanism. In general, the only functions which","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":25061,"byte_end":25135,"line_start":667,"line_end":667,"column_start":5,"column_end":79}},{"value":"/ are safe to call with this pointer are which that are explicitly","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":25140,"byte_end":25208,"line_start":668,"line_end":668,"column_start":5,"column_end":73}},{"value":"/ documented as being sound to use with an unaligned pointer, such as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":25213,"byte_end":25284,"line_start":669,"line_end":669,"column_start":5,"column_end":76}},{"value":"/ [`read_unaligned`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":25289,"byte_end":25312,"line_start":670,"line_end":670,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":25317,"byte_end":25320,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ [`read_unaligned`]: core::ptr::read_unaligned","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":25325,"byte_end":25374,"line_start":672,"line_end":672,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":26182,"byte_end":26193,"line_start":691,"line_end":691,"column_start":12,"column_end":23},"name":"get_mut_ptr","qualname":"<Unalign<T>>::get_mut_ptr","value":"pub fn get_mut_ptr(&mut Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets an unaligned mutable raw pointer to the inner `T`.","sig":null,"attributes":[{"value":"/ Gets an unaligned mutable raw pointer to the inner `T`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":25456,"byte_end":25515,"line_start":677,"line_end":677,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":25520,"byte_end":25523,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":25528,"byte_end":25540,"line_start":679,"line_end":679,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":25545,"byte_end":25548,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ The returned raw pointer is not necessarily aligned to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":25553,"byte_end":25611,"line_start":681,"line_end":681,"column_start":5,"column_end":63}},{"value":"/ `align_of::<T>()`. Most functions which operate on raw pointers require","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":25616,"byte_end":25691,"line_start":682,"line_end":682,"column_start":5,"column_end":80}},{"value":"/ those pointers to be aligned, so calling those functions with the result","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":25696,"byte_end":25772,"line_start":683,"line_end":683,"column_start":5,"column_end":81}},{"value":"/ of `get_ptr` will be undefined behavior if alignment is not guaranteed","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":25777,"byte_end":25851,"line_start":684,"line_end":684,"column_start":5,"column_end":79}},{"value":"/ using some out-of-band mechanism. In general, the only functions which","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":25856,"byte_end":25930,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ are safe to call with this pointer are those which are explicitly","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":25935,"byte_end":26004,"line_start":686,"line_end":686,"column_start":5,"column_end":74}},{"value":"/ documented as being sound to use with an unaligned pointer, such as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":26009,"byte_end":26080,"line_start":687,"line_end":687,"column_start":5,"column_end":76}},{"value":"/ [`read_unaligned`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":26085,"byte_end":26108,"line_start":688,"line_end":688,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":26113,"byte_end":26116,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ [`read_unaligned`]: core::ptr::read_unaligned","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":26121,"byte_end":26170,"line_start":690,"line_end":690,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":26336,"byte_end":26339,"line_start":698,"line_end":698,"column_start":12,"column_end":15},"name":"get","qualname":"<Unalign<T>>::get","value":"pub fn get(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets a copy of the inner `T`.\n","sig":null,"attributes":[{"value":"/ Gets a copy of the inner `T`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":26291,"byte_end":26324,"line_start":697,"line_end":697,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":165},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30912,"byte_end":30926,"line_start":816,"line_end":816,"column_start":12,"column_end":26},"name":"LayoutVerified","qualname":"::LayoutVerified","value":"","parent":null,"children":[],"decl_id":null,"docs":" A length- and alignment-checked reference to a byte slice which can safely\n be reinterpreted as another type.","sig":null,"attributes":[{"value":"/ A length- and alignment-checked reference to a byte slice which can safely","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":29257,"byte_end":29335,"line_start":767,"line_end":767,"column_start":1,"column_end":79}},{"value":"/ be reinterpreted as another type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":29336,"byte_end":29373,"line_start":768,"line_end":768,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":29374,"byte_end":29377,"line_start":769,"line_end":769,"column_start":1,"column_end":4}},{"value":"/ `LayoutVerified` is a byte slice reference (`&[u8]`, `&mut [u8]`,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":29378,"byte_end":29447,"line_start":770,"line_end":770,"column_start":1,"column_end":70}},{"value":"/ `Ref<[u8]>`, `RefMut<[u8]>`, etc) with the invaraint that the slice's length","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":29448,"byte_end":29528,"line_start":771,"line_end":771,"column_start":1,"column_end":81}},{"value":"/ and alignment are each greater than or equal to the length and alignment of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":29529,"byte_end":29608,"line_start":772,"line_end":772,"column_start":1,"column_end":80}},{"value":"/ `T`. Using this invariant, it implements `Deref` for `T` so long as `T:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":29609,"byte_end":29684,"line_start":773,"line_end":773,"column_start":1,"column_end":76}},{"value":"/ FromBytes` and `DerefMut` so long as `T: FromBytes + AsBytes`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":29685,"byte_end":29751,"line_start":774,"line_end":774,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":29752,"byte_end":29755,"line_start":775,"line_end":775,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":29756,"byte_end":29770,"line_start":776,"line_end":776,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":29771,"byte_end":29774,"line_start":777,"line_end":777,"column_start":1,"column_end":4}},{"value":"/ `LayoutVerified` can be used to treat a sequence of bytes as a structured","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":29775,"byte_end":29852,"line_start":778,"line_end":778,"column_start":1,"column_end":78}},{"value":"/ type, and to read and write the fields of that type as if the byte slice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":29853,"byte_end":29929,"line_start":779,"line_end":779,"column_start":1,"column_end":77}},{"value":"/ reference were simply a reference to that type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":29930,"byte_end":29981,"line_start":780,"line_end":780,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":29982,"byte_end":29985,"line_start":781,"line_end":781,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":29986,"byte_end":29997,"line_start":782,"line_end":782,"column_start":1,"column_end":12}},{"value":"/ use zerocopy::{AsBytes, ByteSlice, ByteSliceMut, FromBytes, LayoutVerified, Unaligned};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":29998,"byte_end":30089,"line_start":783,"line_end":783,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30090,"byte_end":30093,"line_start":784,"line_end":784,"column_start":1,"column_end":4}},{"value":"/ #[derive(FromBytes, AsBytes, Unaligned)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30094,"byte_end":30138,"line_start":785,"line_end":785,"column_start":1,"column_end":45}},{"value":"/ #[repr(C)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30139,"byte_end":30153,"line_start":786,"line_end":786,"column_start":1,"column_end":15}},{"value":"/ struct UdpHeader {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30154,"byte_end":30176,"line_start":787,"line_end":787,"column_start":1,"column_end":23}},{"value":"/     src_port: [u8; 2],","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30177,"byte_end":30203,"line_start":788,"line_end":788,"column_start":1,"column_end":27}},{"value":"/     dst_port: [u8; 2],","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30204,"byte_end":30230,"line_start":789,"line_end":789,"column_start":1,"column_end":27}},{"value":"/     length: [u8; 2],","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30231,"byte_end":30255,"line_start":790,"line_end":790,"column_start":1,"column_end":25}},{"value":"/     checksum: [u8; 2],","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30256,"byte_end":30282,"line_start":791,"line_end":791,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30283,"byte_end":30288,"line_start":792,"line_end":792,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30289,"byte_end":30292,"line_start":793,"line_end":793,"column_start":1,"column_end":4}},{"value":"/ struct UdpPacket<B> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30293,"byte_end":30318,"line_start":794,"line_end":794,"column_start":1,"column_end":26}},{"value":"/     header: LayoutVerified<B, UdpHeader>,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30319,"byte_end":30364,"line_start":795,"line_end":795,"column_start":1,"column_end":46}},{"value":"/     body: B,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30365,"byte_end":30381,"line_start":796,"line_end":796,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30382,"byte_end":30387,"line_start":797,"line_end":797,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30388,"byte_end":30391,"line_start":798,"line_end":798,"column_start":1,"column_end":4}},{"value":"/ impl<B: ByteSlice> UdpPacket<B> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30392,"byte_end":30429,"line_start":799,"line_end":799,"column_start":1,"column_end":38}},{"value":"/     pub fn parse(bytes: B) -> Option<UdpPacket<B>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30430,"byte_end":30486,"line_start":800,"line_end":800,"column_start":1,"column_end":57}},{"value":"/         let (header, body) = LayoutVerified::new_unaligned_from_prefix(bytes)?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30487,"byte_end":30570,"line_start":801,"line_end":801,"column_start":1,"column_end":84}},{"value":"/         Some(UdpPacket { header, body })","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30571,"byte_end":30615,"line_start":802,"line_end":802,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30616,"byte_end":30625,"line_start":803,"line_end":803,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30626,"byte_end":30629,"line_start":804,"line_end":804,"column_start":1,"column_end":4}},{"value":"/     pub fn get_src_port(&self) -> [u8; 2] {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30630,"byte_end":30677,"line_start":805,"line_end":805,"column_start":1,"column_end":48}},{"value":"/         self.header.src_port","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30678,"byte_end":30710,"line_start":806,"line_end":806,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30711,"byte_end":30720,"line_start":807,"line_end":807,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30721,"byte_end":30726,"line_start":808,"line_end":808,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30727,"byte_end":30730,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ impl<B: ByteSliceMut> UdpPacket<B> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30731,"byte_end":30771,"line_start":810,"line_end":810,"column_start":1,"column_end":41}},{"value":"/     pub fn set_src_port(&mut self, src_port: [u8; 2]) {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30772,"byte_end":30831,"line_start":811,"line_end":811,"column_start":1,"column_end":60}},{"value":"/         self.header.src_port = src_port;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30832,"byte_end":30876,"line_start":812,"line_end":812,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30877,"byte_end":30886,"line_start":813,"line_end":813,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30887,"byte_end":30892,"line_start":814,"line_end":814,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30893,"byte_end":30900,"line_start":815,"line_end":815,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":31312,"byte_end":31315,"line_start":828,"line_end":828,"column_start":12,"column_end":15},"name":"new","qualname":"<LayoutVerified<B, T>>::new","value":"pub fn new(B) -> Option<LayoutVerified<B, T>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified`.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":31024,"byte_end":31062,"line_start":822,"line_end":822,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":31067,"byte_end":31070,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ `new` verifies that `bytes.len() == size_of::<T>()` and that `bytes` is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":31075,"byte_end":31150,"line_start":824,"line_end":824,"column_start":5,"column_end":80}},{"value":"/ aligned to `align_of::<T>()`, and constructs a new `LayoutVerified`. If","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":31155,"byte_end":31230,"line_start":825,"line_end":825,"column_start":5,"column_end":80}},{"value":"/ either of these checks fail, it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":31235,"byte_end":31286,"line_start":826,"line_end":826,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":31291,"byte_end":31300,"line_start":827,"line_end":827,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":32017,"byte_end":32032,"line_start":843,"line_end":843,"column_start":12,"column_end":27},"name":"new_from_prefix","qualname":"<LayoutVerified<B, T>>::new_from_prefix","value":"pub fn new_from_prefix(B) -> Option<(LayoutVerified<B, T>, B)>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` from the prefix of a byte slice.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` from the prefix of a byte slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":31555,"byte_end":31625,"line_start":835,"line_end":835,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":31630,"byte_end":31633,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ `new_from_prefix` verifies that `bytes.len() >= size_of::<T>()` and that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":31638,"byte_end":31714,"line_start":837,"line_end":837,"column_start":5,"column_end":81}},{"value":"/ `bytes` is aligned to `align_of::<T>()`. It consumes the first","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":31719,"byte_end":31785,"line_start":838,"line_end":838,"column_start":5,"column_end":71}},{"value":"/ `size_of::<T>()` bytes from `bytes` to construct a `LayoutVerified`, and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":31790,"byte_end":31866,"line_start":839,"line_end":839,"column_start":5,"column_end":81}},{"value":"/ returns the remaining bytes to the caller. If either the length or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":31871,"byte_end":31941,"line_start":840,"line_end":840,"column_start":5,"column_end":75}},{"value":"/ alignment checks fail, it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":31946,"byte_end":31991,"line_start":841,"line_end":841,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":31996,"byte_end":32005,"line_start":842,"line_end":842,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":32858,"byte_end":32873,"line_start":860,"line_end":860,"column_start":12,"column_end":27},"name":"new_from_suffix","qualname":"<LayoutVerified<B, T>>::new_from_suffix","value":"pub fn new_from_suffix(B) -> Option<(B, LayoutVerified<B, T>)>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` from the suffix of a byte slice.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` from the suffix of a byte slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":32353,"byte_end":32423,"line_start":851,"line_end":851,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":32428,"byte_end":32431,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ `new_from_suffix` verifies that `bytes.len() >= size_of::<T>()` and that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":32436,"byte_end":32512,"line_start":853,"line_end":853,"column_start":5,"column_end":81}},{"value":"/ the last `size_of::<T>()` bytes of `bytes` are aligned to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":32517,"byte_end":32578,"line_start":854,"line_end":854,"column_start":5,"column_end":66}},{"value":"/ `align_of::<T>()`. It consumes the last `size_of::<T>()` bytes from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":32583,"byte_end":32654,"line_start":855,"line_end":855,"column_start":5,"column_end":76}},{"value":"/ `bytes` to construct a `LayoutVerified`, and returns the preceding bytes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":32659,"byte_end":32735,"line_start":856,"line_end":856,"column_start":5,"column_end":81}},{"value":"/ to the caller. If either the length or alignment checks fail, it returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":32740,"byte_end":32816,"line_start":857,"line_end":857,"column_start":5,"column_end":81}},{"value":"/ `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":32821,"byte_end":32832,"line_start":858,"line_end":858,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":32837,"byte_end":32846,"line_start":859,"line_end":859,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":33771,"byte_end":33780,"line_start":888,"line_end":888,"column_start":12,"column_end":21},"name":"new_slice","qualname":"<LayoutVerified<B, [T]>>::new_slice","value":"pub fn new_slice(B) -> Option<LayoutVerified<B, [T]>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` of a slice type.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` of a slice type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":33348,"byte_end":33402,"line_start":877,"line_end":877,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":33407,"byte_end":33410,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ `new_slice` verifies that `bytes.len()` is a multiple of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":33415,"byte_end":33475,"line_start":879,"line_end":879,"column_start":5,"column_end":65}},{"value":"/ `size_of::<T>()` and that `bytes` is aligned to `align_of::<T>()`, and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":33480,"byte_end":33554,"line_start":880,"line_end":880,"column_start":5,"column_end":79}},{"value":"/ constructs a new `LayoutVerified`. If either of these checks fail, it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":33559,"byte_end":33632,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":33637,"byte_end":33656,"line_start":882,"line_end":882,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":33661,"byte_end":33664,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":33669,"byte_end":33681,"line_start":884,"line_end":884,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":33686,"byte_end":33689,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ `new_slice` panics if `T` is a zero-sized type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":33694,"byte_end":33745,"line_start":886,"line_end":886,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":33750,"byte_end":33759,"line_start":887,"line_end":887,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":34792,"byte_end":34813,"line_start":912,"line_end":912,"column_start":12,"column_end":33},"name":"new_slice_from_prefix","qualname":"<LayoutVerified<B, [T]>>::new_slice_from_prefix","value":"pub fn new_slice_from_prefix(B, usize) -> Option<(LayoutVerified<B, [T]>, B)>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` of a slice type from the prefix of a\n byte slice.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` of a slice type from the prefix of a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":34090,"byte_end":34164,"line_start":898,"line_end":898,"column_start":5,"column_end":79}},{"value":"/ byte slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":34169,"byte_end":34184,"line_start":899,"line_end":899,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":34189,"byte_end":34192,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_prefix` verifies that `bytes.len() >= size_of::<T>() *","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":34197,"byte_end":34271,"line_start":901,"line_end":901,"column_start":5,"column_end":79}},{"value":"/ count` and that `bytes` is aligned to `align_of::<T>()`. It consumes the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":34276,"byte_end":34352,"line_start":902,"line_end":902,"column_start":5,"column_end":81}},{"value":"/ first `size_of::<T>() * count` bytes from `bytes` to construct a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":34357,"byte_end":34425,"line_start":903,"line_end":903,"column_start":5,"column_end":73}},{"value":"/ `LayoutVerified`, and returns the remaining bytes to the caller. It also","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":34430,"byte_end":34506,"line_start":904,"line_end":904,"column_start":5,"column_end":81}},{"value":"/ ensures that `sizeof::<T>() * count` does not overflow a `usize`. If any","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":34511,"byte_end":34587,"line_start":905,"line_end":905,"column_start":5,"column_end":81}},{"value":"/ of the length, alignment, or overflow checks fail, it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":34592,"byte_end":34665,"line_start":906,"line_end":906,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":34670,"byte_end":34673,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":34678,"byte_end":34690,"line_start":908,"line_end":908,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":34695,"byte_end":34698,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_prefix` panics if `T` is a zero-sized type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":34703,"byte_end":34766,"line_start":910,"line_end":910,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":34771,"byte_end":34780,"line_start":911,"line_end":911,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":35931,"byte_end":35952,"line_start":938,"line_end":938,"column_start":12,"column_end":33},"name":"new_slice_from_suffix","qualname":"<LayoutVerified<B, [T]>>::new_slice_from_suffix","value":"pub fn new_slice_from_suffix(B, usize) -> Option<(B, LayoutVerified<B, [T]>)>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` of a slice type from the suffix of a\n byte slice.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` of a slice type from the suffix of a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":35230,"byte_end":35304,"line_start":924,"line_end":924,"column_start":5,"column_end":79}},{"value":"/ byte slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":35309,"byte_end":35324,"line_start":925,"line_end":925,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":35329,"byte_end":35332,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_suffix` verifies that `bytes.len() >= size_of::<T>() *","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":35337,"byte_end":35411,"line_start":927,"line_end":927,"column_start":5,"column_end":79}},{"value":"/ count` and that `bytes` is aligned to `align_of::<T>()`. It consumes the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":35416,"byte_end":35492,"line_start":928,"line_end":928,"column_start":5,"column_end":81}},{"value":"/ last `size_of::<T>() * count` bytes from `bytes` to construct a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":35497,"byte_end":35564,"line_start":929,"line_end":929,"column_start":5,"column_end":72}},{"value":"/ `LayoutVerified`, and returns the preceding bytes to the caller. It also","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":35569,"byte_end":35645,"line_start":930,"line_end":930,"column_start":5,"column_end":81}},{"value":"/ ensures that `sizeof::<T>() * count` does not overflow a `usize`. If any","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":35650,"byte_end":35726,"line_start":931,"line_end":931,"column_start":5,"column_end":81}},{"value":"/ of the length, alignment, or overflow checks fail, it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":35731,"byte_end":35804,"line_start":932,"line_end":932,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":35809,"byte_end":35812,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":35817,"byte_end":35829,"line_start":934,"line_end":934,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":35834,"byte_end":35837,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_suffix` panics if `T` is a zero-sized type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":35842,"byte_end":35905,"line_start":936,"line_end":936,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":35910,"byte_end":35919,"line_start":937,"line_end":937,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":37822,"byte_end":37832,"line_start":999,"line_end":999,"column_start":12,"column_end":22},"name":"new_zeroed","qualname":"<LayoutVerified<B, T>>::new_zeroed","value":"pub fn new_zeroed(B) -> Option<LayoutVerified<B, T>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` after zeroing the bytes.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` after zeroing the bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":37288,"byte_end":37350,"line_start":989,"line_end":989,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":37355,"byte_end":37358,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ `new_zeroed` verifies that `bytes.len() == size_of::<T>()` and that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":37363,"byte_end":37434,"line_start":991,"line_end":991,"column_start":5,"column_end":76}},{"value":"/ `bytes` is aligned to `align_of::<T>()`, and constructs a new","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":37439,"byte_end":37504,"line_start":992,"line_end":992,"column_start":5,"column_end":70}},{"value":"/ `LayoutVerified`. If either of these checks fail, it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":37509,"byte_end":37581,"line_start":993,"line_end":993,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":37586,"byte_end":37589,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ If the checks succeed, then `bytes` will be initialized to zero. This","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":37594,"byte_end":37667,"line_start":995,"line_end":995,"column_start":5,"column_end":78}},{"value":"/ can be useful when re-using buffers to ensure that sensitive data","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":37672,"byte_end":37741,"line_start":996,"line_end":996,"column_start":5,"column_end":74}},{"value":"/ previously stored in the buffer is not leaked.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":37746,"byte_end":37796,"line_start":997,"line_end":997,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":37801,"byte_end":37810,"line_start":998,"line_end":998,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38658,"byte_end":38680,"line_start":1016,"line_end":1016,"column_start":12,"column_end":34},"name":"new_from_prefix_zeroed","qualname":"<LayoutVerified<B, T>>::new_from_prefix_zeroed","value":"pub fn new_from_prefix_zeroed(B) -> Option<(LayoutVerified<B, T>, B)>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` from the prefix of a byte slice,\n zeroing the prefix.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` from the prefix of a byte slice,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":37925,"byte_end":37995,"line_start":1003,"line_end":1003,"column_start":5,"column_end":75}},{"value":"/ zeroing the prefix.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38000,"byte_end":38023,"line_start":1004,"line_end":1004,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38028,"byte_end":38031,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ `new_from_prefix_zeroed` verifies that `bytes.len() >= size_of::<T>()`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38036,"byte_end":38110,"line_start":1006,"line_end":1006,"column_start":5,"column_end":79}},{"value":"/ and that `bytes` is aligned to `align_of::<T>()`. It consumes the first","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38115,"byte_end":38190,"line_start":1007,"line_end":1007,"column_start":5,"column_end":80}},{"value":"/ `size_of::<T>()` bytes from `bytes` to construct a `LayoutVerified`, and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38195,"byte_end":38271,"line_start":1008,"line_end":1008,"column_start":5,"column_end":81}},{"value":"/ returns the remaining bytes to the caller. If either the length or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38276,"byte_end":38346,"line_start":1009,"line_end":1009,"column_start":5,"column_end":75}},{"value":"/ alignment checks fail, it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38351,"byte_end":38396,"line_start":1010,"line_end":1010,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38401,"byte_end":38404,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ If the checks succeed, then the prefix which is consumed will be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38409,"byte_end":38477,"line_start":1012,"line_end":1012,"column_start":5,"column_end":73}},{"value":"/ initialized to zero. This can be useful when re-using buffers to ensure","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38482,"byte_end":38557,"line_start":1013,"line_end":1013,"column_start":5,"column_end":80}},{"value":"/ that sensitive data previously stored in the buffer is not leaked.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38562,"byte_end":38632,"line_start":1014,"line_end":1014,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38637,"byte_end":38646,"line_start":1015,"line_end":1015,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":39579,"byte_end":39601,"line_start":1034,"line_end":1034,"column_start":12,"column_end":34},"name":"new_from_suffix_zeroed","qualname":"<LayoutVerified<B, T>>::new_from_suffix_zeroed","value":"pub fn new_from_suffix_zeroed(B) -> Option<(B, LayoutVerified<B, T>)>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` from the suffix of a byte slice,\n zeroing the suffix.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` from the suffix of a byte slice,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38803,"byte_end":38873,"line_start":1020,"line_end":1020,"column_start":5,"column_end":75}},{"value":"/ zeroing the suffix.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38878,"byte_end":38901,"line_start":1021,"line_end":1021,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38906,"byte_end":38909,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ `new_from_suffix_zeroed` verifies that `bytes.len() >= size_of::<T>()`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38914,"byte_end":38988,"line_start":1023,"line_end":1023,"column_start":5,"column_end":79}},{"value":"/ and that the last `size_of::<T>()` bytes of `bytes` are aligned to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":38993,"byte_end":39063,"line_start":1024,"line_end":1024,"column_start":5,"column_end":75}},{"value":"/ `align_of::<T>()`. It consumes the last `size_of::<T>()` bytes from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":39068,"byte_end":39139,"line_start":1025,"line_end":1025,"column_start":5,"column_end":76}},{"value":"/ `bytes` to construct a `LayoutVerified`, and returns the preceding bytes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":39144,"byte_end":39220,"line_start":1026,"line_end":1026,"column_start":5,"column_end":81}},{"value":"/ to the caller. If either the length or alignment checks fail, it returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":39225,"byte_end":39301,"line_start":1027,"line_end":1027,"column_start":5,"column_end":81}},{"value":"/ `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":39306,"byte_end":39317,"line_start":1028,"line_end":1028,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":39322,"byte_end":39325,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ If the checks succeed, then the suffix which is consumed will be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":39330,"byte_end":39398,"line_start":1030,"line_end":1030,"column_start":5,"column_end":73}},{"value":"/ initialized to zero. This can be useful when re-using buffers to ensure","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":39403,"byte_end":39478,"line_start":1031,"line_end":1031,"column_start":5,"column_end":80}},{"value":"/ that sensitive data previously stored in the buffer is not leaked.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":39483,"byte_end":39553,"line_start":1032,"line_end":1032,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":39558,"byte_end":39567,"line_start":1033,"line_end":1033,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40466,"byte_end":40482,"line_start":1059,"line_end":1059,"column_start":12,"column_end":28},"name":"new_slice_zeroed","qualname":"<LayoutVerified<B, [T]>>::new_slice_zeroed","value":"pub fn new_slice_zeroed(B) -> Option<LayoutVerified<B, [T]>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` of a slice type after zeroing the\n bytes.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` of a slice type after zeroing the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":39789,"byte_end":39860,"line_start":1043,"line_end":1043,"column_start":5,"column_end":76}},{"value":"/ bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":39865,"byte_end":39875,"line_start":1044,"line_end":1044,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":39880,"byte_end":39883,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ `new_slice_zeroed` verifies that `bytes.len()` is a multiple of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":39888,"byte_end":39955,"line_start":1046,"line_end":1046,"column_start":5,"column_end":72}},{"value":"/ `size_of::<T>()` and that `bytes` is aligned to `align_of::<T>()`, and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":39960,"byte_end":40034,"line_start":1047,"line_end":1047,"column_start":5,"column_end":79}},{"value":"/ constructs a new `LayoutVerified`. If either of these checks fail, it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40039,"byte_end":40112,"line_start":1048,"line_end":1048,"column_start":5,"column_end":78}},{"value":"/ returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40117,"byte_end":40136,"line_start":1049,"line_end":1049,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40141,"byte_end":40144,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ If the checks succeed, then `bytes` will be initialized to zero. This","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40149,"byte_end":40222,"line_start":1051,"line_end":1051,"column_start":5,"column_end":78}},{"value":"/ can be useful when re-using buffers to ensure that sensitive data","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40227,"byte_end":40296,"line_start":1052,"line_end":1052,"column_start":5,"column_end":74}},{"value":"/ previously stored in the buffer is not leaked.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40301,"byte_end":40351,"line_start":1053,"line_end":1053,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40356,"byte_end":40359,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40364,"byte_end":40376,"line_start":1055,"line_end":1055,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40381,"byte_end":40384,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ `new_slice` panics if `T` is a zero-sized type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40389,"byte_end":40440,"line_start":1057,"line_end":1057,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40445,"byte_end":40454,"line_start":1058,"line_end":1058,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":41553,"byte_end":41581,"line_start":1081,"line_end":1081,"column_start":12,"column_end":40},"name":"new_slice_from_prefix_zeroed","qualname":"<LayoutVerified<B, [T]>>::new_slice_from_prefix_zeroed","value":"pub fn new_slice_from_prefix_zeroed(B, usize)\n-> Option<(LayoutVerified<B, [T]>, B)>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` of a slice type from the prefix of a\n byte slice, after zeroing the bytes.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` of a slice type from the prefix of a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40583,"byte_end":40657,"line_start":1063,"line_end":1063,"column_start":5,"column_end":79}},{"value":"/ byte slice, after zeroing the bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40662,"byte_end":40702,"line_start":1064,"line_end":1064,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40707,"byte_end":40710,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_prefix` verifies that `bytes.len() >= size_of::<T>() *","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40715,"byte_end":40789,"line_start":1066,"line_end":1066,"column_start":5,"column_end":79}},{"value":"/ count` and that `bytes` is aligned to `align_of::<T>()`. It consumes the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40794,"byte_end":40870,"line_start":1067,"line_end":1067,"column_start":5,"column_end":81}},{"value":"/ first `size_of::<T>() * count` bytes from `bytes` to construct a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40875,"byte_end":40943,"line_start":1068,"line_end":1068,"column_start":5,"column_end":73}},{"value":"/ `LayoutVerified`, and returns the remaining bytes to the caller. It also","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":40948,"byte_end":41024,"line_start":1069,"line_end":1069,"column_start":5,"column_end":81}},{"value":"/ ensures that `sizeof::<T>() * count` does not overflow a `usize`. If any","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":41029,"byte_end":41105,"line_start":1070,"line_end":1070,"column_start":5,"column_end":81}},{"value":"/ of the length, alignment, or overflow checks fail, it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":41110,"byte_end":41183,"line_start":1071,"line_end":1071,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":41188,"byte_end":41191,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ If the checks succeed, then the suffix which is consumed will be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":41196,"byte_end":41264,"line_start":1073,"line_end":1073,"column_start":5,"column_end":73}},{"value":"/ initialized to zero. This can be useful when re-using buffers to ensure","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":41269,"byte_end":41344,"line_start":1074,"line_end":1074,"column_start":5,"column_end":80}},{"value":"/ that sensitive data previously stored in the buffer is not leaked.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":41349,"byte_end":41419,"line_start":1075,"line_end":1075,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":41424,"byte_end":41427,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":41432,"byte_end":41444,"line_start":1077,"line_end":1077,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":41449,"byte_end":41452,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_prefix_zeroed` panics if `T` is a zero-sized type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":41457,"byte_end":41527,"line_start":1079,"line_end":1079,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":41532,"byte_end":41541,"line_start":1080,"line_end":1080,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":42716,"byte_end":42744,"line_start":1106,"line_end":1106,"column_start":12,"column_end":40},"name":"new_slice_from_suffix_zeroed","qualname":"<LayoutVerified<B, [T]>>::new_slice_from_suffix_zeroed","value":"pub fn new_slice_from_suffix_zeroed(B, usize)\n-> Option<(B, LayoutVerified<B, [T]>)>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` of a slice type from the prefix of a\n byte slice, after zeroing the bytes.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` of a slice type from the prefix of a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":41756,"byte_end":41830,"line_start":1088,"line_end":1088,"column_start":5,"column_end":79}},{"value":"/ byte slice, after zeroing the bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":41835,"byte_end":41875,"line_start":1089,"line_end":1089,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":41880,"byte_end":41883,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_suffix` verifies that `bytes.len() >= size_of::<T>() *","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":41888,"byte_end":41962,"line_start":1091,"line_end":1091,"column_start":5,"column_end":79}},{"value":"/ count` and that `bytes` is aligned to `align_of::<T>()`. It consumes the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":41967,"byte_end":42043,"line_start":1092,"line_end":1092,"column_start":5,"column_end":81}},{"value":"/ last `size_of::<T>() * count` bytes from `bytes` to construct a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":42048,"byte_end":42115,"line_start":1093,"line_end":1093,"column_start":5,"column_end":72}},{"value":"/ `LayoutVerified`, and returns the preceding bytes to the caller. It also","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":42120,"byte_end":42196,"line_start":1094,"line_end":1094,"column_start":5,"column_end":81}},{"value":"/ ensures that `sizeof::<T>() * count` does not overflow a `usize`. If any","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":42201,"byte_end":42277,"line_start":1095,"line_end":1095,"column_start":5,"column_end":81}},{"value":"/ of the length, alignment, or overflow checks fail, it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":42282,"byte_end":42355,"line_start":1096,"line_end":1096,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":42360,"byte_end":42363,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ If the checks succeed, then the consumed suffix will be initialized to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":42368,"byte_end":42442,"line_start":1098,"line_end":1098,"column_start":5,"column_end":79}},{"value":"/ zero. This can be useful when re-using buffers to ensure that sensitive","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":42447,"byte_end":42522,"line_start":1099,"line_end":1099,"column_start":5,"column_end":80}},{"value":"/ data previously stored in the buffer is not leaked.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":42527,"byte_end":42582,"line_start":1100,"line_end":1100,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":42587,"byte_end":42590,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":42595,"byte_end":42607,"line_start":1102,"line_end":1102,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":42612,"byte_end":42615,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_suffix_zeroed` panics if `T` is a zero-sized type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":42620,"byte_end":42690,"line_start":1104,"line_end":1104,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":42695,"byte_end":42704,"line_start":1105,"line_end":1105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":43282,"byte_end":43295,"line_start":1126,"line_end":1126,"column_start":12,"column_end":25},"name":"new_unaligned","qualname":"<LayoutVerified<B, T>>::new_unaligned","value":"pub fn new_unaligned(B) -> Option<LayoutVerified<B, T>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` for a type with no alignment\n requirement.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` for a type with no alignment","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":42997,"byte_end":43063,"line_start":1119,"line_end":1119,"column_start":5,"column_end":71}},{"value":"/ requirement.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":43068,"byte_end":43084,"line_start":1120,"line_end":1120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":43089,"byte_end":43092,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ `new_unaligned` verifies that `bytes.len() == size_of::<T>()` and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":43097,"byte_end":43166,"line_start":1122,"line_end":1122,"column_start":5,"column_end":74}},{"value":"/ constructs a new `LayoutVerified`. If the check fails, it returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":43171,"byte_end":43240,"line_start":1123,"line_end":1123,"column_start":5,"column_end":74}},{"value":"/ `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":43245,"byte_end":43256,"line_start":1124,"line_end":1124,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":43261,"byte_end":43270,"line_start":1125,"line_end":1125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":43927,"byte_end":43952,"line_start":1141,"line_end":1141,"column_start":12,"column_end":37},"name":"new_unaligned_from_prefix","qualname":"<LayoutVerified<B, T>>::new_unaligned_from_prefix","value":"pub fn new_unaligned_from_prefix(B) -> Option<(LayoutVerified<B, T>, B)>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` from the prefix of a byte slice for a\n type with no alignment requirement.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` from the prefix of a byte slice for a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":43483,"byte_end":43558,"line_start":1133,"line_end":1133,"column_start":5,"column_end":80}},{"value":"/ type with no alignment requirement.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":43563,"byte_end":43602,"line_start":1134,"line_end":1134,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":43607,"byte_end":43610,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ `new_unaligned_from_prefix` verifies that `bytes.len() >=","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":43615,"byte_end":43676,"line_start":1136,"line_end":1136,"column_start":5,"column_end":66}},{"value":"/ size_of::<T>()`. It consumes the first `size_of::<T>()` bytes from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":43681,"byte_end":43751,"line_start":1137,"line_end":1137,"column_start":5,"column_end":75}},{"value":"/ `bytes` to construct a `LayoutVerified`, and returns the remaining bytes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":43756,"byte_end":43832,"line_start":1138,"line_end":1138,"column_start":5,"column_end":81}},{"value":"/ to the caller. If the length check fails, it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":43837,"byte_end":43901,"line_start":1139,"line_end":1139,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":43906,"byte_end":43915,"line_start":1140,"line_end":1140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":44664,"byte_end":44689,"line_start":1157,"line_end":1157,"column_start":12,"column_end":37},"name":"new_unaligned_from_suffix","qualname":"<LayoutVerified<B, T>>::new_unaligned_from_suffix","value":"pub fn new_unaligned_from_suffix(B) -> Option<(B, LayoutVerified<B, T>)>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` from the suffix of a byte slice for a\n type with no alignment requirement.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` from the suffix of a byte slice for a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":44221,"byte_end":44296,"line_start":1149,"line_end":1149,"column_start":5,"column_end":80}},{"value":"/ type with no alignment requirement.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":44301,"byte_end":44340,"line_start":1150,"line_end":1150,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":44345,"byte_end":44348,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ `new_unaligned_from_suffix` verifies that `bytes.len() >=","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":44353,"byte_end":44414,"line_start":1152,"line_end":1152,"column_start":5,"column_end":66}},{"value":"/ size_of::<T>()`. It consumes the last `size_of::<T>()` bytes from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":44419,"byte_end":44488,"line_start":1153,"line_end":1153,"column_start":5,"column_end":74}},{"value":"/ `bytes` to construct a `LayoutVerified`, and returns the preceding bytes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":44493,"byte_end":44569,"line_start":1154,"line_end":1154,"column_start":5,"column_end":81}},{"value":"/ to the caller. If the length check fails, it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":44574,"byte_end":44638,"line_start":1155,"line_end":1155,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":44643,"byte_end":44652,"line_start":1156,"line_end":1156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45486,"byte_end":45505,"line_start":1183,"line_end":1183,"column_start":12,"column_end":31},"name":"new_slice_unaligned","qualname":"<LayoutVerified<B, [T]>>::new_slice_unaligned","value":"pub fn new_slice_unaligned(B) -> Option<LayoutVerified<B, [T]>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` of a slice type with no alignment\n requirement.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` of a slice type with no alignment","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45085,"byte_end":45156,"line_start":1172,"line_end":1172,"column_start":5,"column_end":76}},{"value":"/ requirement.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45161,"byte_end":45177,"line_start":1173,"line_end":1173,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45182,"byte_end":45185,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ `new_slice_unaligned` verifies that `bytes.len()` is a multiple of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45190,"byte_end":45260,"line_start":1175,"line_end":1175,"column_start":5,"column_end":75}},{"value":"/ `size_of::<T>()` and constructs a new `LayoutVerified`. If the check","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45265,"byte_end":45337,"line_start":1176,"line_end":1176,"column_start":5,"column_end":77}},{"value":"/ fails, it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45342,"byte_end":45371,"line_start":1177,"line_end":1177,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45376,"byte_end":45379,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45384,"byte_end":45396,"line_start":1179,"line_end":1179,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45401,"byte_end":45404,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ `new_slice` panics if `T` is a zero-sized type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45409,"byte_end":45460,"line_start":1181,"line_end":1181,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45465,"byte_end":45474,"line_start":1182,"line_end":1182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":46425,"byte_end":46456,"line_start":1205,"line_end":1205,"column_start":12,"column_end":43},"name":"new_slice_unaligned_from_prefix","qualname":"<LayoutVerified<B, [T]>>::new_slice_unaligned_from_prefix","value":"pub fn new_slice_unaligned_from_prefix(B, usize)\n-> Option<(LayoutVerified<B, [T]>, B)>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` of a slice type with no alignment\n requirement from the prefix of a byte slice.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` of a slice type with no alignment","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45743,"byte_end":45814,"line_start":1191,"line_end":1191,"column_start":5,"column_end":76}},{"value":"/ requirement from the prefix of a byte slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45819,"byte_end":45867,"line_start":1192,"line_end":1192,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45872,"byte_end":45875,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_prefix` verifies that `bytes.len() >= size_of::<T>() *","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45880,"byte_end":45954,"line_start":1194,"line_end":1194,"column_start":5,"column_end":79}},{"value":"/ count`. It consumes the first `size_of::<T>() * count` bytes from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45959,"byte_end":46028,"line_start":1195,"line_end":1195,"column_start":5,"column_end":74}},{"value":"/ `bytes` to construct a `LayoutVerified`, and returns the remaining bytes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":46033,"byte_end":46109,"line_start":1196,"line_end":1196,"column_start":5,"column_end":81}},{"value":"/ to the caller. It also ensures that `sizeof::<T>() * count` does not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":46114,"byte_end":46186,"line_start":1197,"line_end":1197,"column_start":5,"column_end":77}},{"value":"/ overflow a `usize`. If either the length, or overflow checks fail, it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":46191,"byte_end":46264,"line_start":1198,"line_end":1198,"column_start":5,"column_end":78}},{"value":"/ returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":46269,"byte_end":46288,"line_start":1199,"line_end":1199,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":46293,"byte_end":46296,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":46301,"byte_end":46313,"line_start":1201,"line_end":1201,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":46318,"byte_end":46321,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ `new_slice_unaligned_from_prefix` panics if `T` is a zero-sized type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":46326,"byte_end":46399,"line_start":1203,"line_end":1203,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":46404,"byte_end":46413,"line_start":1204,"line_end":1204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":47587,"byte_end":47618,"line_start":1234,"line_end":1234,"column_start":12,"column_end":43},"name":"new_slice_unaligned_from_suffix","qualname":"<LayoutVerified<B, [T]>>::new_slice_unaligned_from_suffix","value":"pub fn new_slice_unaligned_from_suffix(B, usize)\n-> Option<(B, LayoutVerified<B, [T]>)>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` of a slice type with no alignment\n requirement from the suffix of a byte slice.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` of a slice type with no alignment","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":46906,"byte_end":46977,"line_start":1220,"line_end":1220,"column_start":5,"column_end":76}},{"value":"/ requirement from the suffix of a byte slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":46982,"byte_end":47030,"line_start":1221,"line_end":1221,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":47035,"byte_end":47038,"line_start":1222,"line_end":1222,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_suffix` verifies that `bytes.len() >= size_of::<T>() *","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":47043,"byte_end":47117,"line_start":1223,"line_end":1223,"column_start":5,"column_end":79}},{"value":"/ count`. It consumes the last `size_of::<T>() * count` bytes from `bytes`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":47122,"byte_end":47198,"line_start":1224,"line_end":1224,"column_start":5,"column_end":81}},{"value":"/ to construct a `LayoutVerified`, and returns the remaining bytes to the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":47203,"byte_end":47278,"line_start":1225,"line_end":1225,"column_start":5,"column_end":80}},{"value":"/ caller. It also ensures that `sizeof::<T>() * count` does not overflow a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":47283,"byte_end":47359,"line_start":1226,"line_end":1226,"column_start":5,"column_end":81}},{"value":"/ `usize`. If either the length, or overflow checks fail, it returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":47364,"byte_end":47434,"line_start":1227,"line_end":1227,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":47439,"byte_end":47450,"line_start":1228,"line_end":1228,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":47455,"byte_end":47458,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":47463,"byte_end":47475,"line_start":1230,"line_end":1230,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":47480,"byte_end":47483,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ `new_slice_unaligned_from_suffix` panics if `T` is a zero-sized type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":47488,"byte_end":47561,"line_start":1232,"line_end":1232,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":47566,"byte_end":47575,"line_start":1233,"line_end":1233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48675,"byte_end":48695,"line_start":1266,"line_end":1266,"column_start":12,"column_end":32},"name":"new_unaligned_zeroed","qualname":"<LayoutVerified<B, T>>::new_unaligned_zeroed","value":"pub fn new_unaligned_zeroed(B) -> Option<LayoutVerified<B, T>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` for a type with no alignment\n requirement, zeroing the bytes.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` for a type with no alignment","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48149,"byte_end":48215,"line_start":1255,"line_end":1255,"column_start":5,"column_end":71}},{"value":"/ requirement, zeroing the bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48220,"byte_end":48255,"line_start":1256,"line_end":1256,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48260,"byte_end":48263,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ `new_unaligned_zeroed` verifies that `bytes.len() == size_of::<T>()` and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48268,"byte_end":48344,"line_start":1258,"line_end":1258,"column_start":5,"column_end":81}},{"value":"/ constructs a new `LayoutVerified`. If the check fails, it returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48349,"byte_end":48418,"line_start":1259,"line_end":1259,"column_start":5,"column_end":74}},{"value":"/ `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48423,"byte_end":48434,"line_start":1260,"line_end":1260,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48439,"byte_end":48442,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ If the check succeeds, then `bytes` will be initialized to zero. This","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48447,"byte_end":48520,"line_start":1262,"line_end":1262,"column_start":5,"column_end":78}},{"value":"/ can be useful when re-using buffers to ensure that sensitive data","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48525,"byte_end":48594,"line_start":1263,"line_end":1263,"column_start":5,"column_end":74}},{"value":"/ previously stored in the buffer is not leaked.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48599,"byte_end":48649,"line_start":1264,"line_end":1264,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48654,"byte_end":48663,"line_start":1265,"line_end":1265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":49505,"byte_end":49537,"line_start":1282,"line_end":1282,"column_start":12,"column_end":44},"name":"new_unaligned_from_prefix_zeroed","qualname":"<LayoutVerified<B, T>>::new_unaligned_from_prefix_zeroed","value":"pub fn new_unaligned_from_prefix_zeroed(B)\n-> Option<(LayoutVerified<B, T>, B)>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` from the prefix of a byte slice for a\n type with no alignment requirement, zeroing the prefix.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` from the prefix of a byte slice for a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48798,"byte_end":48873,"line_start":1270,"line_end":1270,"column_start":5,"column_end":80}},{"value":"/ type with no alignment requirement, zeroing the prefix.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48878,"byte_end":48937,"line_start":1271,"line_end":1271,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48942,"byte_end":48945,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ `new_unaligned_from_prefix_zeroed` verifies that `bytes.len() >=","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48950,"byte_end":49018,"line_start":1273,"line_end":1273,"column_start":5,"column_end":73}},{"value":"/ size_of::<T>()`. It consumes the first `size_of::<T>()` bytes from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":49023,"byte_end":49093,"line_start":1274,"line_end":1274,"column_start":5,"column_end":75}},{"value":"/ `bytes` to construct a `LayoutVerified`, and returns the remaining bytes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":49098,"byte_end":49174,"line_start":1275,"line_end":1275,"column_start":5,"column_end":81}},{"value":"/ to the caller. If the length check fails, it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":49179,"byte_end":49243,"line_start":1276,"line_end":1276,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":49248,"byte_end":49251,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ If the check succeeds, then the prefix which is consumed will be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":49256,"byte_end":49324,"line_start":1278,"line_end":1278,"column_start":5,"column_end":73}},{"value":"/ initialized to zero. This can be useful when re-using buffers to ensure","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":49329,"byte_end":49404,"line_start":1279,"line_end":1279,"column_start":5,"column_end":80}},{"value":"/ that sensitive data previously stored in the buffer is not leaked.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":49409,"byte_end":49479,"line_start":1280,"line_end":1280,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":49484,"byte_end":49493,"line_start":1281,"line_end":1281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":50376,"byte_end":50408,"line_start":1298,"line_end":1298,"column_start":12,"column_end":44},"name":"new_unaligned_from_suffix_zeroed","qualname":"<LayoutVerified<B, T>>::new_unaligned_from_suffix_zeroed","value":"pub fn new_unaligned_from_suffix_zeroed(B)\n-> Option<(B, LayoutVerified<B, T>)>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` from the suffix of a byte slice for a\n type with no alignment requirement, zeroing the suffix.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` from the suffix of a byte slice for a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":49670,"byte_end":49745,"line_start":1286,"line_end":1286,"column_start":5,"column_end":80}},{"value":"/ type with no alignment requirement, zeroing the suffix.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":49750,"byte_end":49809,"line_start":1287,"line_end":1287,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":49814,"byte_end":49817,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ `new_unaligned_from_suffix_zeroed` verifies that `bytes.len() >=","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":49822,"byte_end":49890,"line_start":1289,"line_end":1289,"column_start":5,"column_end":73}},{"value":"/ size_of::<T>()`. It consumes the last `size_of::<T>()` bytes from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":49895,"byte_end":49964,"line_start":1290,"line_end":1290,"column_start":5,"column_end":74}},{"value":"/ `bytes` to construct a `LayoutVerified`, and returns the preceding bytes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":49969,"byte_end":50045,"line_start":1291,"line_end":1291,"column_start":5,"column_end":81}},{"value":"/ to the caller. If the length check fails, it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":50050,"byte_end":50114,"line_start":1292,"line_end":1292,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":50119,"byte_end":50122,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ If the check succeeds, then the suffix which is consumed will be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":50127,"byte_end":50195,"line_start":1294,"line_end":1294,"column_start":5,"column_end":73}},{"value":"/ initialized to zero. This can be useful when re-using buffers to ensure","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":50200,"byte_end":50275,"line_start":1295,"line_end":1295,"column_start":5,"column_end":80}},{"value":"/ that sensitive data previously stored in the buffer is not leaked.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":50280,"byte_end":50350,"line_start":1296,"line_end":1296,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":50355,"byte_end":50364,"line_start":1297,"line_end":1297,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51267,"byte_end":51293,"line_start":1323,"line_end":1323,"column_start":12,"column_end":38},"name":"new_slice_unaligned_zeroed","qualname":"<LayoutVerified<B, [T]>>::new_slice_unaligned_zeroed","value":"pub fn new_slice_unaligned_zeroed(B) -> Option<LayoutVerified<B, [T]>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` for a slice type with no alignment\n requirement, zeroing the bytes.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` for a slice type with no alignment","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":50624,"byte_end":50696,"line_start":1308,"line_end":1308,"column_start":5,"column_end":77}},{"value":"/ requirement, zeroing the bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":50701,"byte_end":50736,"line_start":1309,"line_end":1309,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":50741,"byte_end":50744,"line_start":1310,"line_end":1310,"column_start":5,"column_end":8}},{"value":"/ `new_slice_unaligned_zeroed` verifies that `bytes.len()` is a multiple","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":50749,"byte_end":50823,"line_start":1311,"line_end":1311,"column_start":5,"column_end":79}},{"value":"/ of `size_of::<T>()` and constructs a new `LayoutVerified`. If the check","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":50828,"byte_end":50903,"line_start":1312,"line_end":1312,"column_start":5,"column_end":80}},{"value":"/ fails, it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":50908,"byte_end":50937,"line_start":1313,"line_end":1313,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":50942,"byte_end":50945,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ If the check succeeds, then `bytes` will be initialized to zero. This","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":50950,"byte_end":51023,"line_start":1315,"line_end":1315,"column_start":5,"column_end":78}},{"value":"/ can be useful when re-using buffers to ensure that sensitive data","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51028,"byte_end":51097,"line_start":1316,"line_end":1316,"column_start":5,"column_end":74}},{"value":"/ previously stored in the buffer is not leaked.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51102,"byte_end":51152,"line_start":1317,"line_end":1317,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51157,"byte_end":51160,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51165,"byte_end":51177,"line_start":1319,"line_end":1319,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51182,"byte_end":51185,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ `new_slice` panics if `T` is a zero-sized type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51190,"byte_end":51241,"line_start":1321,"line_end":1321,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51246,"byte_end":51255,"line_start":1322,"line_end":1322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":52344,"byte_end":52382,"line_start":1346,"line_end":1346,"column_start":12,"column_end":50},"name":"new_slice_unaligned_from_prefix_zeroed","qualname":"<LayoutVerified<B, [T]>>::new_slice_unaligned_from_prefix_zeroed","value":"pub fn new_slice_unaligned_from_prefix_zeroed(B, usize)\n-> Option<(LayoutVerified<B, [T]>, B)>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` of a slice type with no alignment\n requirement from the prefix of a byte slice, after zeroing the bytes.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` of a slice type with no alignment","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51404,"byte_end":51475,"line_start":1327,"line_end":1327,"column_start":5,"column_end":76}},{"value":"/ requirement from the prefix of a byte slice, after zeroing the bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51480,"byte_end":51553,"line_start":1328,"line_end":1328,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51558,"byte_end":51561,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_prefix` verifies that `bytes.len() >= size_of::<T>() *","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51566,"byte_end":51640,"line_start":1330,"line_end":1330,"column_start":5,"column_end":79}},{"value":"/ count`. It consumes the first `size_of::<T>() * count` bytes from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51645,"byte_end":51714,"line_start":1331,"line_end":1331,"column_start":5,"column_end":74}},{"value":"/ `bytes` to construct a `LayoutVerified`, and returns the remaining bytes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51719,"byte_end":51795,"line_start":1332,"line_end":1332,"column_start":5,"column_end":81}},{"value":"/ to the caller. It also ensures that `sizeof::<T>() * count` does not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51800,"byte_end":51872,"line_start":1333,"line_end":1333,"column_start":5,"column_end":77}},{"value":"/ overflow a `usize`. If either the length, or overflow checks fail, it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51877,"byte_end":51950,"line_start":1334,"line_end":1334,"column_start":5,"column_end":78}},{"value":"/ returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51955,"byte_end":51974,"line_start":1335,"line_end":1335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51979,"byte_end":51982,"line_start":1336,"line_end":1336,"column_start":5,"column_end":8}},{"value":"/ If the checks succeed, then the prefix will be initialized to zero. This","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":51987,"byte_end":52063,"line_start":1337,"line_end":1337,"column_start":5,"column_end":81}},{"value":"/ can be useful when re-using buffers to ensure that sensitive data","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":52068,"byte_end":52137,"line_start":1338,"line_end":1338,"column_start":5,"column_end":74}},{"value":"/ previously stored in the buffer is not leaked.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":52142,"byte_end":52192,"line_start":1339,"line_end":1339,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":52197,"byte_end":52200,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":52205,"byte_end":52217,"line_start":1341,"line_end":1341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":52222,"byte_end":52225,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ `new_slice_unaligned_from_prefix_zeroed` panics if `T` is a zero-sized","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":52230,"byte_end":52304,"line_start":1343,"line_end":1343,"column_start":5,"column_end":79}},{"value":"/ type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":52309,"byte_end":52318,"line_start":1344,"line_end":1344,"column_start":5,"column_end":14}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":52323,"byte_end":52332,"line_start":1345,"line_end":1345,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53506,"byte_end":53544,"line_start":1372,"line_end":1372,"column_start":12,"column_end":50},"name":"new_slice_unaligned_from_suffix_zeroed","qualname":"<LayoutVerified<B, [T]>>::new_slice_unaligned_from_suffix_zeroed","value":"pub fn new_slice_unaligned_from_suffix_zeroed(B, usize)\n-> Option<(B, LayoutVerified<B, [T]>)>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `LayoutVerified` of a slice type with no alignment\n requirement from the suffix of a byte slice, after zeroing the bytes.","sig":null,"attributes":[{"value":"/ Constructs a new `LayoutVerified` of a slice type with no alignment","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":52567,"byte_end":52638,"line_start":1353,"line_end":1353,"column_start":5,"column_end":76}},{"value":"/ requirement from the suffix of a byte slice, after zeroing the bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":52643,"byte_end":52716,"line_start":1354,"line_end":1354,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":52721,"byte_end":52724,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ `new_slice_from_suffix` verifies that `bytes.len() >= size_of::<T>() *","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":52729,"byte_end":52803,"line_start":1356,"line_end":1356,"column_start":5,"column_end":79}},{"value":"/ count`. It consumes the last `size_of::<T>() * count` bytes from `bytes`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":52808,"byte_end":52884,"line_start":1357,"line_end":1357,"column_start":5,"column_end":81}},{"value":"/ to construct a `LayoutVerified`, and returns the remaining bytes to the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":52889,"byte_end":52964,"line_start":1358,"line_end":1358,"column_start":5,"column_end":80}},{"value":"/ caller. It also ensures that `sizeof::<T>() * count` does not overflow a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":52969,"byte_end":53045,"line_start":1359,"line_end":1359,"column_start":5,"column_end":81}},{"value":"/ `usize`. If either the length, or overflow checks fail, it returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53050,"byte_end":53120,"line_start":1360,"line_end":1360,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53125,"byte_end":53136,"line_start":1361,"line_end":1361,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53141,"byte_end":53144,"line_start":1362,"line_end":1362,"column_start":5,"column_end":8}},{"value":"/ If the checks succeed, then the suffix will be initialized to zero. This","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53149,"byte_end":53225,"line_start":1363,"line_end":1363,"column_start":5,"column_end":81}},{"value":"/ can be useful when re-using buffers to ensure that sensitive data","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53230,"byte_end":53299,"line_start":1364,"line_end":1364,"column_start":5,"column_end":74}},{"value":"/ previously stored in the buffer is not leaked.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53304,"byte_end":53354,"line_start":1365,"line_end":1365,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53359,"byte_end":53362,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53367,"byte_end":53379,"line_start":1367,"line_end":1367,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53384,"byte_end":53387,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ `new_slice_unaligned_from_suffix_zeroed` panics if `T` is a zero-sized","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53392,"byte_end":53466,"line_start":1369,"line_end":1369,"column_start":5,"column_end":79}},{"value":"/ type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53471,"byte_end":53480,"line_start":1370,"line_end":1370,"column_start":5,"column_end":14}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53485,"byte_end":53494,"line_start":1371,"line_end":1371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53978,"byte_end":53986,"line_start":1389,"line_end":1389,"column_start":12,"column_end":20},"name":"into_ref","qualname":"<LayoutVerified<B, T>>::into_ref","value":"pub fn into_ref(Self) -> &'a T","parent":null,"children":[],"decl_id":null,"docs":" Converts this `LayoutVerified` into a reference.","sig":null,"attributes":[{"value":"/ Converts this `LayoutVerified` into a reference.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53816,"byte_end":53868,"line_start":1385,"line_end":1385,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53873,"byte_end":53876,"line_start":1386,"line_end":1386,"column_start":5,"column_end":8}},{"value":"/ `into_ref` consumes the `LayoutVerified`, and returns a reference to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53881,"byte_end":53953,"line_start":1387,"line_end":1387,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53958,"byte_end":53966,"line_start":1388,"line_end":1388,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":54757,"byte_end":54765,"line_start":1409,"line_end":1409,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<LayoutVerified<B, T>>::into_mut","value":"pub fn into_mut(Self) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Converts this `LayoutVerified` into a mutable reference.","sig":null,"attributes":[{"value":"/ Converts this `LayoutVerified` into a mutable reference.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":54579,"byte_end":54639,"line_start":1405,"line_end":1405,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":54644,"byte_end":54647,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ `into_mut` consumes the `LayoutVerified`, and returns a mutable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":54652,"byte_end":54719,"line_start":1407,"line_end":1407,"column_start":5,"column_end":72}},{"value":"/ reference to `T`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":54724,"byte_end":54745,"line_start":1408,"line_end":1408,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":55558,"byte_end":55568,"line_start":1429,"line_end":1429,"column_start":12,"column_end":22},"name":"into_slice","qualname":"<LayoutVerified<B, [T]>>::into_slice","value":"pub fn into_slice(Self) -> &'a [T]","parent":null,"children":[],"decl_id":null,"docs":" Converts this `LayoutVerified` into a slice reference.","sig":null,"attributes":[{"value":"/ Converts this `LayoutVerified` into a slice reference.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":55386,"byte_end":55444,"line_start":1425,"line_end":1425,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":55449,"byte_end":55452,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ `into_slice` consumes the `LayoutVerified`, and returns a reference to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":55457,"byte_end":55531,"line_start":1427,"line_end":1427,"column_start":5,"column_end":79}},{"value":"/ `[T]`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":55536,"byte_end":55546,"line_start":1428,"line_end":1428,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":56369,"byte_end":56383,"line_start":1449,"line_end":1449,"column_start":12,"column_end":26},"name":"into_mut_slice","qualname":"<LayoutVerified<B, [T]>>::into_mut_slice","value":"pub fn into_mut_slice(Self) -> &'a mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Converts this `LayoutVerified` into a mutable slice reference.","sig":null,"attributes":[{"value":"/ Converts this `LayoutVerified` into a mutable slice reference.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":56177,"byte_end":56243,"line_start":1445,"line_end":1445,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":56248,"byte_end":56251,"line_start":1446,"line_end":1446,"column_start":5,"column_end":8}},{"value":"/ `into_mut_slice` consumes the `LayoutVerified`, and returns a mutable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":56256,"byte_end":56329,"line_start":1447,"line_end":1447,"column_start":5,"column_end":78}},{"value":"/ reference to `[T]`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":56334,"byte_end":56357,"line_start":1448,"line_end":1448,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":59992,"byte_end":59997,"line_start":1554,"line_end":1554,"column_start":12,"column_end":17},"name":"bytes","qualname":"<LayoutVerified<B, T>>::bytes","value":"pub fn bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the underlying bytes.\n","sig":null,"attributes":[{"value":"/ Gets the underlying bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":59936,"byte_end":59966,"line_start":1552,"line_end":1552,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":59971,"byte_end":59980,"line_start":1553,"line_end":1553,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":60185,"byte_end":60194,"line_start":1566,"line_end":1566,"column_start":12,"column_end":21},"name":"bytes_mut","qualname":"<LayoutVerified<B, T>>::bytes_mut","value":"pub fn bytes_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the underlying bytes mutably.\n","sig":null,"attributes":[{"value":"/ Gets the underlying bytes mutably.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":60121,"byte_end":60159,"line_start":1564,"line_end":1564,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":60164,"byte_end":60173,"line_start":1565,"line_end":1565,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":60380,"byte_end":60384,"line_start":1578,"line_end":1578,"column_start":12,"column_end":16},"name":"read","qualname":"<LayoutVerified<B, T>>::read","value":"pub fn read(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reads a copy of `T`.\n","sig":null,"attributes":[{"value":"/ Reads a copy of `T`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":60330,"byte_end":60354,"line_start":1576,"line_end":1576,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":60359,"byte_end":60368,"line_start":1577,"line_end":1577,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":60912,"byte_end":60917,"line_start":1594,"line_end":1594,"column_start":12,"column_end":17},"name":"write","qualname":"<LayoutVerified<B, T>>::write","value":"pub fn write(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Writes the bytes of `t` and then forgets `t`.\n","sig":null,"attributes":[{"value":"/ Writes the bytes of `t` and then forgets `t`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":60837,"byte_end":60886,"line_start":1592,"line_end":1592,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":60891,"byte_end":60900,"line_start":1593,"line_end":1593,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":363},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":66681,"byte_end":66687,"line_start":1814,"line_end":1814,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":372},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68086,"byte_end":68095,"line_start":1843,"line_end":1843,"column_start":18,"column_end":27},"name":"ByteSlice","qualname":"::ByteSlice","value":"ByteSlice: Deref<Target = [u8]> + Sized + self::sealed::Sealed","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374}],"decl_id":null,"docs":" A mutable or immutable reference to a byte slice.","sig":null,"attributes":[{"value":"/ A mutable or immutable reference to a byte slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":67444,"byte_end":67497,"line_start":1830,"line_end":1830,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":67498,"byte_end":67501,"line_start":1831,"line_end":1831,"column_start":1,"column_end":4}},{"value":"/ `ByteSlice` abstracts over the mutability of a byte slice reference, and is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":67502,"byte_end":67581,"line_start":1832,"line_end":1832,"column_start":1,"column_end":80}},{"value":"/ implemented for various special reference types such as `Ref<[u8]>` and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":67582,"byte_end":67657,"line_start":1833,"line_end":1833,"column_start":1,"column_end":76}},{"value":"/ `RefMut<[u8]>`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":67658,"byte_end":67677,"line_start":1834,"line_end":1834,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":67678,"byte_end":67681,"line_start":1835,"line_end":1835,"column_start":1,"column_end":4}},{"value":"/ Note that, while it would be technically possible, `ByteSlice` is not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":67682,"byte_end":67755,"line_start":1836,"line_end":1836,"column_start":1,"column_end":74}},{"value":"/ implemented for [`Vec<u8>`], as the only way to implement the [`split_at`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":67756,"byte_end":67834,"line_start":1837,"line_end":1837,"column_start":1,"column_end":79}},{"value":"/ method would involve reallocation, and `split_at` must be a very cheap","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":67835,"byte_end":67909,"line_start":1838,"line_end":1838,"column_start":1,"column_end":75}},{"value":"/ operation in order for the utilities in this crate to perform as designed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":67910,"byte_end":67988,"line_start":1839,"line_end":1839,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":67989,"byte_end":67992,"line_start":1840,"line_end":1840,"column_start":1,"column_end":4}},{"value":"/ [`Vec<u8>`]: std::vec::Vec","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":67993,"byte_end":68023,"line_start":1841,"line_end":1841,"column_start":1,"column_end":31}},{"value":"/ [`split_at`]: crate::ByteSlice::split_at","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68024,"byte_end":68068,"line_start":1842,"line_end":1842,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68217,"byte_end":68223,"line_start":1845,"line_end":1845,"column_start":8,"column_end":14},"name":"as_ptr","qualname":"::ByteSlice::as_ptr","value":"pub fn as_ptr(&Self) -> *const u8","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" Gets a raw pointer to the first byte in the slice.\n","sig":null,"attributes":[{"value":"/ Gets a raw pointer to the first byte in the slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68155,"byte_end":68209,"line_start":1844,"line_end":1844,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68450,"byte_end":68458,"line_start":1854,"line_end":1854,"column_start":8,"column_end":16},"name":"split_at","qualname":"::ByteSlice::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" Splits the slice at the midpoint.","sig":null,"attributes":[{"value":"/ Splits the slice at the midpoint.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68250,"byte_end":68287,"line_start":1847,"line_end":1847,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68292,"byte_end":68295,"line_start":1848,"line_end":1848,"column_start":5,"column_end":8}},{"value":"/ `x.split_at(mid)` returns `x[..mid]` and `x[mid..]`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68300,"byte_end":68356,"line_start":1849,"line_end":1849,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68361,"byte_end":68364,"line_start":1850,"line_end":1850,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68369,"byte_end":68381,"line_start":1851,"line_end":1851,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68386,"byte_end":68389,"line_start":1852,"line_end":1852,"column_start":5,"column_end":8}},{"value":"/ `x.split_at(mid)` panics if `mid > x.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68394,"byte_end":68442,"line_start":1853,"line_end":1853,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":375},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68741,"byte_end":68753,"line_start":1862,"line_end":1862,"column_start":18,"column_end":30},"name":"ByteSliceMut","qualname":"::ByteSliceMut","value":"ByteSliceMut: ByteSlice + DerefMut","parent":null,"children":[{"krate":0,"index":376}],"decl_id":null,"docs":" A mutable reference to a byte slice.","sig":null,"attributes":[{"value":"/ A mutable reference to a byte slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68497,"byte_end":68537,"line_start":1857,"line_end":1857,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68538,"byte_end":68541,"line_start":1858,"line_end":1858,"column_start":1,"column_end":4}},{"value":"/ `ByteSliceMut` abstracts over various ways of storing a mutable reference to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68542,"byte_end":68622,"line_start":1859,"line_end":1859,"column_start":1,"column_end":81}},{"value":"/ a byte slice, and is implemented for various special reference types such as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68623,"byte_end":68703,"line_start":1860,"line_end":1860,"column_start":1,"column_end":81}},{"value":"/ `RefMut<[u8]>`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68704,"byte_end":68723,"line_start":1861,"line_end":1861,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68852,"byte_end":68862,"line_start":1864,"line_end":1864,"column_start":8,"column_end":18},"name":"as_mut_ptr","qualname":"::ByteSliceMut::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut u8","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" Gets a mutable raw pointer to the first byte in the slice.\n","sig":null,"attributes":[{"value":"/ Gets a mutable raw pointer to the first byte in the slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68782,"byte_end":68844,"line_start":1863,"line_end":1863,"column_start":5,"column_end":67}}]}],"impls":[{"id":17,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24332,"byte_end":24339,"line_start":641,"line_end":641,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24412,"byte_end":24419,"line_start":647,"line_end":647,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":26274,"byte_end":26281,"line_start":696,"line_end":696,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":26803,"byte_end":26810,"line_start":709,"line_end":709,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30973,"byte_end":30987,"line_start":818,"line_end":818,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":33295,"byte_end":33309,"line_start":873,"line_end":873,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":37234,"byte_end":37248,"line_start":985,"line_end":985,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":39733,"byte_end":39747,"line_start":1039,"line_end":1039,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":42928,"byte_end":42942,"line_start":1114,"line_end":1114,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45014,"byte_end":45028,"line_start":1167,"line_end":1167,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48077,"byte_end":48091,"line_start":1250,"line_end":1250,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":50550,"byte_end":50564,"line_start":1303,"line_end":1303,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53742,"byte_end":53756,"line_start":1380,"line_end":1380,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":54492,"byte_end":54506,"line_start":1400,"line_end":1400,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":55310,"byte_end":55324,"line_start":1420,"line_end":1420,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":56088,"byte_end":56102,"line_start":1440,"line_end":1440,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":56938,"byte_end":56952,"line_start":1460,"line_end":1460,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":57703,"byte_end":57717,"line_start":1481,"line_end":1481,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":58516,"byte_end":58530,"line_start":1502,"line_end":1502,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":59114,"byte_end":59128,"line_start":1522,"line_end":1522,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":59870,"byte_end":59884,"line_start":1547,"line_end":1547,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":60052,"byte_end":60066,"line_start":1559,"line_end":1559,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":60261,"byte_end":60275,"line_start":1571,"line_end":1571,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":60767,"byte_end":60781,"line_start":1587,"line_end":1587,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":61399,"byte_end":61413,"line_start":1604,"line_end":1604,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":62012,"byte_end":62026,"line_start":1622,"line_end":1622,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":62632,"byte_end":62646,"line_start":1639,"line_end":1639,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":63263,"byte_end":63277,"line_start":1657,"line_end":1657,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":63901,"byte_end":63915,"line_start":1674,"line_end":1674,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":64135,"byte_end":64149,"line_start":1686,"line_end":1686,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":64379,"byte_end":64393,"line_start":1699,"line_end":1699,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":64651,"byte_end":64665,"line_start":1711,"line_end":1711,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":64924,"byte_end":64938,"line_start":1723,"line_end":1723,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":65015,"byte_end":65029,"line_start":1730,"line_end":1730,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":65115,"byte_end":65129,"line_start":1737,"line_end":1737,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":65320,"byte_end":65334,"line_start":1748,"line_end":1748,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":65521,"byte_end":65535,"line_start":1759,"line_end":1759,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":65778,"byte_end":65792,"line_start":1772,"line_end":1772,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":66048,"byte_end":66062,"line_start":1785,"line_end":1785,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":66343,"byte_end":66357,"line_start":1798,"line_end":1798,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":66791,"byte_end":66794,"line_start":1817,"line_end":1817,"column_start":25,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":66832,"byte_end":66838,"line_start":1818,"line_end":1818,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":69343,"byte_end":69346,"line_start":1883,"line_end":1883,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":69587,"byte_end":69593,"line_start":1891,"line_end":1891,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":69976,"byte_end":69982,"line_start":1905,"line_end":1905,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":2111,"byte_end":2120,"line_start":48,"line_end":48,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":4}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24332,"byte_end":24339,"line_start":641,"line_end":641,"column_start":25,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1620},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":24412,"byte_end":24419,"line_start":647,"line_end":647,"column_start":9,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":26274,"byte_end":26281,"line_start":696,"line_end":696,"column_start":15,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":26803,"byte_end":26810,"line_start":709,"line_end":709,"column_start":37,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1620},"to":{"krate":0,"index":134}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":30973,"byte_end":30987,"line_start":818,"line_end":818,"column_start":12,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":33295,"byte_end":33309,"line_start":873,"line_end":873,"column_start":12,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":37234,"byte_end":37248,"line_start":985,"line_end":985,"column_start":12,"column_end":26},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":39733,"byte_end":39747,"line_start":1039,"line_end":1039,"column_start":12,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":42928,"byte_end":42942,"line_start":1114,"line_end":1114,"column_start":12,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":45014,"byte_end":45028,"line_start":1167,"line_end":1167,"column_start":12,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":48077,"byte_end":48091,"line_start":1250,"line_end":1250,"column_start":12,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":50550,"byte_end":50564,"line_start":1303,"line_end":1303,"column_start":12,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":53742,"byte_end":53756,"line_start":1380,"line_end":1380,"column_start":16,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":54492,"byte_end":54506,"line_start":1400,"line_end":1400,"column_start":16,"column_end":30},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":55310,"byte_end":55324,"line_start":1420,"line_end":1420,"column_start":16,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":56088,"byte_end":56102,"line_start":1440,"line_end":1440,"column_start":16,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":56938,"byte_end":56952,"line_start":1460,"line_end":1460,"column_start":12,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":57703,"byte_end":57717,"line_start":1481,"line_end":1481,"column_start":12,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":58516,"byte_end":58530,"line_start":1502,"line_end":1502,"column_start":12,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":59114,"byte_end":59128,"line_start":1522,"line_end":1522,"column_start":12,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":59870,"byte_end":59884,"line_start":1547,"line_end":1547,"column_start":12,"column_end":26},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":60052,"byte_end":60066,"line_start":1559,"line_end":1559,"column_start":12,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":60261,"byte_end":60275,"line_start":1571,"line_end":1571,"column_start":12,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":60767,"byte_end":60781,"line_start":1587,"line_end":1587,"column_start":12,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":61399,"byte_end":61413,"line_start":1604,"line_end":1604,"column_start":22,"column_end":36},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":3276}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":62012,"byte_end":62026,"line_start":1622,"line_end":1622,"column_start":25,"column_end":39},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":3289}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":62632,"byte_end":62646,"line_start":1639,"line_end":1639,"column_start":22,"column_end":36},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":3276}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":63263,"byte_end":63277,"line_start":1657,"line_end":1657,"column_start":25,"column_end":39},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":3289}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":63901,"byte_end":63915,"line_start":1674,"line_end":1674,"column_start":24,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":64135,"byte_end":64149,"line_start":1686,"line_end":1686,"column_start":24,"column_end":38},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":64379,"byte_end":64393,"line_start":1699,"line_end":1699,"column_start":22,"column_end":36},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":64651,"byte_end":64665,"line_start":1711,"line_end":1711,"column_start":22,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":64924,"byte_end":64938,"line_start":1723,"line_end":1723,"column_start":19,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":2714}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":65015,"byte_end":65029,"line_start":1730,"line_end":1730,"column_start":19,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":2714}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":65115,"byte_end":65129,"line_start":1737,"line_end":1737,"column_start":26,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":65320,"byte_end":65334,"line_start":1748,"line_end":1748,"column_start":26,"column_end":40},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":65521,"byte_end":65535,"line_start":1759,"line_end":1759,"column_start":20,"column_end":34},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":65778,"byte_end":65792,"line_start":1772,"line_end":1772,"column_start":20,"column_end":34},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":66048,"byte_end":66062,"line_start":1785,"line_end":1785,"column_start":27,"column_end":41},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":66343,"byte_end":66357,"line_start":1798,"line_end":1798,"column_start":27,"column_end":41},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":66791,"byte_end":66794,"line_start":1817,"line_end":1817,"column_start":25,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":1,"index":4644},"to":{"krate":0,"index":363}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":66832,"byte_end":66838,"line_start":1818,"line_end":1818,"column_start":25,"column_end":31},"kind":{"Impl":{"id":58}},"from":{"krate":1,"index":4698},"to":{"krate":0,"index":363}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68097,"byte_end":68102,"line_start":1843,"line_end":1843,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3276},"to":{"krate":0,"index":372}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68120,"byte_end":68125,"line_start":1843,"line_end":1843,"column_start":52,"column_end":57},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":372}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68142,"byte_end":68148,"line_start":1843,"line_end":1843,"column_start":74,"column_end":80},"kind":"SuperTrait","from":{"krate":0,"index":363},"to":{"krate":0,"index":372}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68755,"byte_end":68764,"line_start":1862,"line_end":1862,"column_start":32,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":372},"to":{"krate":0,"index":375}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":68767,"byte_end":68775,"line_start":1862,"line_end":1862,"column_start":44,"column_end":52},"kind":"SuperTrait","from":{"krate":1,"index":3289},"to":{"krate":0,"index":375}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":69343,"byte_end":69346,"line_start":1883,"line_end":1883,"column_start":31,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":1,"index":4644},"to":{"krate":0,"index":372}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":69587,"byte_end":69593,"line_start":1891,"line_end":1891,"column_start":31,"column_end":37},"kind":{"Impl":{"id":60}},"from":{"krate":1,"index":4698},"to":{"krate":0,"index":372}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zerocopy-0.6.1/src/lib.rs","byte_start":69976,"byte_end":69982,"line_start":1905,"line_end":1905,"column_start":34,"column_end":40},"kind":{"Impl":{"id":61}},"from":{"krate":1,"index":4698},"to":{"krate":0,"index":375}}]}