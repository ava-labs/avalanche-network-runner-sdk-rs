{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0","program":"/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","radium","--edition=2018","/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=c1338c2e6380a43b","-C","extra-filename=-c1338c2e6380a43b","--out-dir","/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","-L","dependency=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","--cap-lints","allow","--cfg","radium_atomic_8","--cfg","radium_atomic_16","--cfg","radium_atomic_32","--cfg","radium_atomic_64","--cfg","radium_atomic_ptr","--error-format=json","--sysroot","/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libradium-c1338c2e6380a43b.rmeta"},"prelude":{"crate_id":{"name":"radium","disambiguator":[7311690213042413157,0]},"crate_root":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src","external_crates":[{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}}],"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":0,"byte_end":30835,"line_start":1,"line_end":914,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":0,"byte_end":30835,"line_start":1,"line_end":914,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":11},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":31},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":151},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":189},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":227},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":265},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":303},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":341},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":379},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":417},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":455},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":493},{"krate":0,"index":149},{"krate":0,"index":56},{"krate":0,"index":531},{"krate":0,"index":57},{"krate":0,"index":567},{"krate":0,"index":61}],"decl_id":null,"docs":" `radium` provides a series of helpers for a uniform API over both atomic\n types like [`AtomicUsize`], and non-atomic types like [`Cell<T>`].","sig":null,"attributes":[{"value":"/ `radium` provides a series of helpers for a uniform API over both atomic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ types like [`AtomicUsize`], and non-atomic types like [`Cell<T>`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":77,"byte_end":147,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":148,"byte_end":151,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This crate is `#![no_std]`-compatible, and uses no non-core types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":152,"byte_end":222,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":223,"byte_end":226,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ For details, see the documentation for [`Radium`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":227,"byte_end":281,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":282,"byte_end":285,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `types` module provides type names that are atomic where the target","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":286,"byte_end":361,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ supports it, and fall back to `Cell` when the target does not.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":362,"byte_end":428,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":429,"byte_end":432,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The `if_atomic!` macro provides a means of conditional compilation based on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":433,"byte_end":512,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ the presence of atomic instructions. It is a substitute for the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":513,"byte_end":580,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ `cfg(target_has_atomic)` or `cfg(accessible)` attribute tests, which are not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":581,"byte_end":661,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ yet stabilized.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":662,"byte_end":681,"line_start":14,"line_end":14,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":682,"byte_end":685,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ---","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":686,"byte_end":693,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":694,"byte_end":697,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ **@kneecaw** - <https://twitter.com/kneecaw/status/1132695060812849154>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":698,"byte_end":773,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ > Feelin' lazy: Has someone already written a helper trait abstracting","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":774,"byte_end":848,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ > operations over `AtomicUsize` and `Cell<usize>` for generic code which may","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":849,"byte_end":929,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ > not care about atomicity?","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":930,"byte_end":961,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":962,"byte_end":965,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ **@ManishEarth** - <https://twitter.com/ManishEarth/status/1132706585300496384>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":966,"byte_end":1049,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/ > no but call the crate radium","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":1050,"byte_end":1084,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ >","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":1085,"byte_end":1090,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ > (since people didn't care that it was radioactive and used it in everything)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":1091,"byte_end":1173,"line_start":26,"line_end":26,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":1174,"byte_end":1177,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`AtomicUsize`]: core::sync::atomic::AtomicUsize","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":1178,"byte_end":1230,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/ [`Cell<T>`]: core::cell::Cell","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":1231,"byte_end":1264,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"no_std","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":1266,"byte_end":1276,"line_start":31,"line_end":31,"column_start":1,"column_end":11}},{"value":"deny(unconditional_recursion)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":1277,"byte_end":1310,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23}],"decl_id":null,"docs":" Best-effort atomic types","sig":null,"attributes":[{"value":"/ Best-effort atomic types","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":36085,"byte_end":36113,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":36114,"byte_end":36117,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module exports `RadiumType` aliases that map to the `AtomicType` on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":36118,"byte_end":36194,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ targets that have it, or `Cell<type>` on targets that do not. This alias can","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":36195,"byte_end":36275,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ be used as a consistent name for crates that need portable names for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":36276,"byte_end":36348,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ non-portable types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":36349,"byte_end":36372,"line_start":6,"line_end":6,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":12},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":36419,"byte_end":36429,"line_start":9,"line_end":9,"column_start":10,"column_end":20},"name":"RadiumBool","qualname":"::types::RadiumBool","value":"core::sync::atomic::AtomicBool","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `bool` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `bool` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":36374,"byte_end":36409,"line_start":8,"line_end":8,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":13},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":36583,"byte_end":36591,"line_start":15,"line_end":15,"column_start":10,"column_end":18},"name":"RadiumI8","qualname":"::types::RadiumI8","value":"core::sync::atomic::AtomicI8","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `i8` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `i8` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":36540,"byte_end":36573,"line_start":14,"line_end":14,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":14},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":36738,"byte_end":36746,"line_start":21,"line_end":21,"column_start":10,"column_end":18},"name":"RadiumU8","qualname":"::types::RadiumU8","value":"core::sync::atomic::AtomicU8","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `u8` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `u8` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":36695,"byte_end":36728,"line_start":20,"line_end":20,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":15},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":36894,"byte_end":36903,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"name":"RadiumI16","qualname":"::types::RadiumI16","value":"core::sync::atomic::AtomicI16","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `i16` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `i16` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":36850,"byte_end":36884,"line_start":26,"line_end":26,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":16},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":37054,"byte_end":37063,"line_start":33,"line_end":33,"column_start":10,"column_end":19},"name":"RadiumU16","qualname":"::types::RadiumU16","value":"core::sync::atomic::AtomicU16","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `u16` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `u16` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":37010,"byte_end":37044,"line_start":32,"line_end":32,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":17},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":37214,"byte_end":37223,"line_start":39,"line_end":39,"column_start":10,"column_end":19},"name":"RadiumI32","qualname":"::types::RadiumI32","value":"core::sync::atomic::AtomicI32","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `i32` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `i32` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":37170,"byte_end":37204,"line_start":38,"line_end":38,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":18},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":37374,"byte_end":37383,"line_start":45,"line_end":45,"column_start":10,"column_end":19},"name":"RadiumU32","qualname":"::types::RadiumU32","value":"core::sync::atomic::AtomicU32","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `u32` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `u32` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":37330,"byte_end":37364,"line_start":44,"line_end":44,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":19},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":37534,"byte_end":37543,"line_start":51,"line_end":51,"column_start":10,"column_end":19},"name":"RadiumI64","qualname":"::types::RadiumI64","value":"core::sync::atomic::AtomicI64","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `i64` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `i64` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":37490,"byte_end":37524,"line_start":50,"line_end":50,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":20},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":37694,"byte_end":37703,"line_start":57,"line_end":57,"column_start":10,"column_end":19},"name":"RadiumU64","qualname":"::types::RadiumU64","value":"core::sync::atomic::AtomicU64","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `u64` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `u64` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":37650,"byte_end":37684,"line_start":56,"line_end":56,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":21},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":37856,"byte_end":37867,"line_start":63,"line_end":63,"column_start":10,"column_end":21},"name":"RadiumIsize","qualname":"::types::RadiumIsize","value":"core::sync::atomic::AtomicIsize","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `isize` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `isize` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":37810,"byte_end":37846,"line_start":62,"line_end":62,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":22},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":38026,"byte_end":38037,"line_start":69,"line_end":69,"column_start":10,"column_end":21},"name":"RadiumUsize","qualname":"::types::RadiumUsize","value":"core::sync::atomic::AtomicUsize","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic `usize` type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic `usize` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":37980,"byte_end":38016,"line_start":68,"line_end":68,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":23},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":38196,"byte_end":38205,"line_start":75,"line_end":75,"column_start":10,"column_end":19},"name":"RadiumPtr","qualname":"::types::RadiumPtr","value":"core::sync::atomic::AtomicPtr<T>","parent":null,"children":[],"decl_id":null,"docs":" Best-effort atomic pointer type.\n","sig":null,"attributes":[{"value":"/ Best-effort atomic pointer type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/types.rs","byte_start":38150,"byte_end":38186,"line_start":74,"line_end":74,"column_start":1,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":31},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2642,"byte_end":2648,"line_start":75,"line_end":75,"column_start":11,"column_end":17},"name":"Radium","qualname":"::Radium","value":"Radium","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":" A maybe-atomic shared mutable fundamental type `T`.","sig":null,"attributes":[{"value":"/ A maybe-atomic shared mutable fundamental type `T`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":1862,"byte_end":1917,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":1918,"byte_end":1921,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented by both the [atomic wrapper] type for `T`, and by","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":1922,"byte_end":2001,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ [`Cell<T>`], providing a consistent interface for interacting with the two","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2002,"byte_end":2080,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2081,"byte_end":2091,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2092,"byte_end":2095,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This trait provides methods predicated on marker traits for the underlying","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2096,"byte_end":2174,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ fundamental. Only types which can be viewed as sequences of bits may use the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2175,"byte_end":2255,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ functions for bit-wise arithmetic, and only types which can be used as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2256,"byte_end":2330,"line_start":68,"line_end":68,"column_start":1,"column_end":75}},{"value":"/ integers may use the functions for numeric arithmetic. Use of these methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2331,"byte_end":2410,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ on insufficient underlying types (for example, `Radium::fetch_and` on an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2411,"byte_end":2487,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/ atomic or cell-wrapped pointer) will cause a compiler error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2488,"byte_end":2552,"line_start":71,"line_end":71,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2553,"byte_end":2556,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ [atomic wrapper]: core::sync::atomic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2557,"byte_end":2597,"line_start":73,"line_end":73,"column_start":1,"column_end":41}},{"value":"/ [`Cell<T>`]: core::cell::Cell","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2598,"byte_end":2631,"line_start":74,"line_end":74,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":32},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2660,"byte_end":2664,"line_start":76,"line_end":76,"column_start":10,"column_end":14},"name":"Item","qualname":"::Radium::Item","value":"type Item;","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2715,"byte_end":2718,"line_start":78,"line_end":78,"column_start":8,"column_end":11},"name":"new","qualname":"::Radium::new","value":"pub fn new(Self::Item) -> Self","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Creates a new value of this type.\n","sig":null,"attributes":[{"value":"/ Creates a new value of this type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2670,"byte_end":2707,"line_start":77,"line_end":77,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2980,"byte_end":2985,"line_start":85,"line_end":85,"column_start":8,"column_end":13},"name":"fence","qualname":"::Radium::fence","value":"pub fn fence(Ordering)","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" If the underlying value is atomic, calls [`fence`] with the given\n [`Ordering`]. Otherwise, does nothing.","sig":null,"attributes":[{"value":"/ If the underlying value is atomic, calls [`fence`] with the given","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2752,"byte_end":2821,"line_start":80,"line_end":80,"column_start":5,"column_end":74}},{"value":"/ [`Ordering`]. Otherwise, does nothing.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2826,"byte_end":2868,"line_start":81,"line_end":81,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2873,"byte_end":2876,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: core::sync::atomic::Ordering","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2881,"byte_end":2927,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ [`fence`]: core::sync::atomic::fence","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":2932,"byte_end":2972,"line_start":84,"line_end":84,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3207,"byte_end":3214,"line_start":91,"line_end":91,"column_start":8,"column_end":15},"name":"get_mut","qualname":"::Radium::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Self::Item","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying value.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3009,"byte_end":3065,"line_start":87,"line_end":87,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3070,"byte_end":3073,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This is safe because the mutable reference to `self` guarantees that no","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3078,"byte_end":3153,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/ other references exist to this value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3158,"byte_end":3199,"line_start":90,"line_end":90,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3400,"byte_end":3410,"line_start":96,"line_end":96,"column_start":8,"column_end":18},"name":"into_inner","qualname":"::Radium::into_inner","value":"pub fn into_inner(Self) -> Self::Item","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Consumes the wrapper and returns the contained value.","sig":null,"attributes":[{"value":"/ Consumes the wrapper and returns the contained value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3251,"byte_end":3308,"line_start":93,"line_end":93,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3313,"byte_end":3316,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This is safe as passing by value ensures no other references exist.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3321,"byte_end":3392,"line_start":95,"line_end":95,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3670,"byte_end":3674,"line_start":105,"line_end":105,"column_start":8,"column_end":12},"name":"load","qualname":"::Radium::load","value":"pub fn load(&Self, Ordering) -> Self::Item","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Load a value from this object.","sig":null,"attributes":[{"value":"/ Load a value from this object.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3437,"byte_end":3471,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3476,"byte_end":3479,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Ordering values are ignored by non-atomic types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3484,"byte_end":3536,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3541,"byte_end":3544,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::load`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3549,"byte_end":3585,"line_start":102,"line_end":102,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3590,"byte_end":3593,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::load`]: core::sync::atomic::AtomicUsize::load","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3598,"byte_end":3662,"line_start":104,"line_end":104,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3957,"byte_end":3962,"line_start":114,"line_end":114,"column_start":8,"column_end":13},"name":"store","qualname":"::Radium::store","value":"pub fn store(&Self, Self::Item, Ordering)","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Store a value in this object.","sig":null,"attributes":[{"value":"/ Store a value in this object.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3719,"byte_end":3752,"line_start":107,"line_end":107,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3757,"byte_end":3760,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3765,"byte_end":3820,"line_start":109,"line_end":109,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3825,"byte_end":3828,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::store`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3833,"byte_end":3870,"line_start":111,"line_end":111,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3875,"byte_end":3878,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::store`]: core::sync::atomic::AtomicUsize::store","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":3883,"byte_end":3949,"line_start":113,"line_end":113,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4260,"byte_end":4264,"line_start":123,"line_end":123,"column_start":8,"column_end":12},"name":"swap","qualname":"::Radium::swap","value":"pub fn swap(&Self, Self::Item, Ordering) -> Self::Item","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Swap with the value stored in this object.","sig":null,"attributes":[{"value":"/ Swap with the value stored in this object.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4012,"byte_end":4058,"line_start":116,"line_end":116,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4063,"byte_end":4066,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4071,"byte_end":4126,"line_start":118,"line_end":118,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4131,"byte_end":4134,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::swap`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4139,"byte_end":4175,"line_start":120,"line_end":120,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4180,"byte_end":4183,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::swap`]: core::sync::atomic::AtomicUsize::swap","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4188,"byte_end":4252,"line_start":122,"line_end":122,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4903,"byte_end":4919,"line_start":137,"line_end":137,"column_start":8,"column_end":24},"name":"compare_and_swap","qualname":"::Radium::compare_and_swap","value":"pub fn compare_and_swap(&Self, Self::Item, Self::Item, Ordering) -> Self::Item","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Stores a value into this object if the currently-stored value is the\n same as the `current` value.","sig":null,"attributes":[{"value":"/ Stores a value into this object if the currently-stored value is the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4328,"byte_end":4400,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ same as the `current` value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4405,"byte_end":4437,"line_start":126,"line_end":126,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4442,"byte_end":4445,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The return value is always the previously-stored value. If it is equal to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4450,"byte_end":4527,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ `current`, then the value was updated with `new`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4532,"byte_end":4585,"line_start":129,"line_end":129,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4590,"byte_end":4593,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4598,"byte_end":4653,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4658,"byte_end":4661,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::compare_and_swap`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4666,"byte_end":4714,"line_start":133,"line_end":133,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4719,"byte_end":4722,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::compare_and_swap`]: core::sync::atomic::AtomicUsize::compare_and_swap","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4727,"byte_end":4815,"line_start":135,"line_end":135,"column_start":5,"column_end":93}},{"value":"deprecated = \"Use `compare_exchange` or `compare_exchange_weak` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":4820,"byte_end":4895,"line_start":136,"line_end":136,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5573,"byte_end":5589,"line_start":152,"line_end":152,"column_start":8,"column_end":24},"name":"compare_exchange","qualname":"::Radium::compare_exchange","value":"pub fn compare_exchange(&Self, Self::Item, Self::Item, Ordering, Ordering)\n-> Result<Self::Item, Self::Item>","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Stores a value into this object if the currently-stored value is the\n same as the `current` value.","sig":null,"attributes":[{"value":"/ Stores a value into this object if the currently-stored value is the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5010,"byte_end":5082,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/ same as the `current` value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5087,"byte_end":5119,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5124,"byte_end":5127,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ The return value is a `Result` indicating whether the new value was","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5132,"byte_end":5203,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ written, and containing the previously-stored value. On success, this","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5208,"byte_end":5281,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ value is guaranteed to be equal to `current`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5286,"byte_end":5335,"line_start":145,"line_end":145,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5340,"byte_end":5343,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5348,"byte_end":5403,"line_start":147,"line_end":147,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5408,"byte_end":5411,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::compare_exchange`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5416,"byte_end":5464,"line_start":149,"line_end":149,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5469,"byte_end":5472,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::compare_exchange`]: core::sync::atomic::AtomicUsize::compare_exchange","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5477,"byte_end":5565,"line_start":151,"line_end":151,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6456,"byte_end":6477,"line_start":174,"line_end":174,"column_start":8,"column_end":29},"name":"compare_exchange_weak","qualname":"::Radium::compare_exchange_weak","value":"pub fn compare_exchange_weak(&Self, Self::Item, Self::Item, Ordering,\nOrdering) -> Result<Self::Item, Self::Item>","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Stores a value into this object if the currently-stored value is the\n same as the `current` value.","sig":null,"attributes":[{"value":"/ Stores a value into this object if the currently-stored value is the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5760,"byte_end":5832,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ same as the `current` value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5837,"byte_end":5869,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5874,"byte_end":5877,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Unlike `compare_exchange`, this function is allowed to spuriously fail","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5882,"byte_end":5956,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ even when the comparison succeeds, which can result in more efficient","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":5961,"byte_end":6034,"line_start":164,"line_end":164,"column_start":5,"column_end":78}},{"value":"/ code on some platforms. The return value is a `Result` indicating","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6039,"byte_end":6108,"line_start":165,"line_end":165,"column_start":5,"column_end":74}},{"value":"/ whether the new value was written, and containing the previously-stored","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6113,"byte_end":6188,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6193,"byte_end":6203,"line_start":167,"line_end":167,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6208,"byte_end":6211,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6216,"byte_end":6271,"line_start":169,"line_end":169,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6276,"byte_end":6279,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::compare_exchange_weak`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6284,"byte_end":6337,"line_start":171,"line_end":171,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6342,"byte_end":6345,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::compare_exchange_weak`]: core::sync::atomic::AtomicUsize::compare_exchange_weak","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6350,"byte_end":6448,"line_start":173,"line_end":173,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7043,"byte_end":7052,"line_start":192,"line_end":192,"column_start":8,"column_end":17},"name":"fetch_and","qualname":"::Radium::fetch_and","value":"pub fn fetch_and(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::BitOps","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Performs a bitwise \"and\" on the currently-stored value and the argument\n `value`, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Performs a bitwise \"and\" on the currently-stored value and the argument","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6648,"byte_end":6723,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ `value`, and stores the result in `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6728,"byte_end":6773,"line_start":183,"line_end":183,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6778,"byte_end":6781,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6786,"byte_end":6826,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6831,"byte_end":6834,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6839,"byte_end":6894,"line_start":187,"line_end":187,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6899,"byte_end":6902,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_and`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6907,"byte_end":6948,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6953,"byte_end":6956,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_and`]: core::sync::atomic::AtomicUsize::fetch_and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":6961,"byte_end":7035,"line_start":191,"line_end":191,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7560,"byte_end":7570,"line_start":206,"line_end":206,"column_start":8,"column_end":18},"name":"fetch_nand","qualname":"::Radium::fetch_nand","value":"pub fn fetch_nand(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::BitOps","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Performs a bitwise \"nand\" on the currently-stored value and the argument\n `value`, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Performs a bitwise \"nand\" on the currently-stored value and the argument","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7161,"byte_end":7237,"line_start":196,"line_end":196,"column_start":5,"column_end":81}},{"value":"/ `value`, and stores the result in `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7242,"byte_end":7287,"line_start":197,"line_end":197,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7292,"byte_end":7295,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7300,"byte_end":7340,"line_start":199,"line_end":199,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7345,"byte_end":7348,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7353,"byte_end":7408,"line_start":201,"line_end":201,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7413,"byte_end":7416,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_nand`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7421,"byte_end":7463,"line_start":203,"line_end":203,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7468,"byte_end":7471,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_nand`]: core::sync::atomic::AtomicUsize::fetch_nand","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7476,"byte_end":7552,"line_start":205,"line_end":205,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8070,"byte_end":8078,"line_start":220,"line_end":220,"column_start":8,"column_end":16},"name":"fetch_or","qualname":"::Radium::fetch_or","value":"pub fn fetch_or(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::BitOps","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Performs a bitwise \"or\" on the currently-stored value and the argument\n `value`, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Performs a bitwise \"or\" on the currently-stored value and the argument","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7679,"byte_end":7753,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ `value`, and stores the result in `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7758,"byte_end":7803,"line_start":211,"line_end":211,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7808,"byte_end":7811,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7816,"byte_end":7856,"line_start":213,"line_end":213,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7861,"byte_end":7864,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7869,"byte_end":7924,"line_start":215,"line_end":215,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7929,"byte_end":7932,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_or`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7937,"byte_end":7977,"line_start":217,"line_end":217,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7982,"byte_end":7985,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_or`]: core::sync::atomic::AtomicUsize::fetch_or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":7990,"byte_end":8062,"line_start":219,"line_end":219,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8582,"byte_end":8591,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"fetch_xor","qualname":"::Radium::fetch_xor","value":"pub fn fetch_xor(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::BitOps","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Performs a bitwise \"xor\" on the currently-stored value and the argument\n `value`, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Performs a bitwise \"xor\" on the currently-stored value and the argument","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8187,"byte_end":8262,"line_start":224,"line_end":224,"column_start":5,"column_end":80}},{"value":"/ `value`, and stores the result in `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8267,"byte_end":8312,"line_start":225,"line_end":225,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8317,"byte_end":8320,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8325,"byte_end":8365,"line_start":227,"line_end":227,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8370,"byte_end":8373,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8378,"byte_end":8433,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8438,"byte_end":8441,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_xor`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8446,"byte_end":8487,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8492,"byte_end":8495,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_xor`]: core::sync::atomic::AtomicUsize::fetch_xor","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8500,"byte_end":8574,"line_start":233,"line_end":233,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9080,"byte_end":9089,"line_start":248,"line_end":248,"column_start":8,"column_end":17},"name":"fetch_add","qualname":"::Radium::fetch_add","value":"pub fn fetch_add(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::NumericOps","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Adds `value` to the currently-stored value, wrapping on overflow, and\n stores the result in `self`.","sig":null,"attributes":[{"value":"/ Adds `value` to the currently-stored value, wrapping on overflow, and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8700,"byte_end":8773,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ stores the result in `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8778,"byte_end":8810,"line_start":239,"line_end":239,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8815,"byte_end":8818,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8823,"byte_end":8863,"line_start":241,"line_end":241,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8868,"byte_end":8871,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8876,"byte_end":8931,"line_start":243,"line_end":243,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8936,"byte_end":8939,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_add`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8944,"byte_end":8985,"line_start":245,"line_end":245,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8990,"byte_end":8993,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_add`]: core::sync::atomic::AtomicUsize::fetch_add","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":8998,"byte_end":9072,"line_start":247,"line_end":247,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9590,"byte_end":9599,"line_start":262,"line_end":262,"column_start":8,"column_end":17},"name":"fetch_sub","qualname":"::Radium::fetch_sub","value":"pub fn fetch_sub(&Self, Self::Item, Ordering) -> Self::Item where\nSelf::Item: marker::NumericOps","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Subtracts `value` from the currently-stored value, wrapping on\n underflow, and stores the result in `self`.","sig":null,"attributes":[{"value":"/ Subtracts `value` from the currently-stored value, wrapping on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9202,"byte_end":9268,"line_start":252,"line_end":252,"column_start":5,"column_end":71}},{"value":"/ underflow, and stores the result in `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9273,"byte_end":9320,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9325,"byte_end":9328,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Returns the previously-stored value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9333,"byte_end":9373,"line_start":255,"line_end":255,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9378,"byte_end":9381,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9386,"byte_end":9441,"line_start":257,"line_end":257,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9446,"byte_end":9449,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_sub`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9454,"byte_end":9495,"line_start":259,"line_end":259,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9500,"byte_end":9503,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_sub`]: core::sync::atomic::AtomicUsize::fetch_sub","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9508,"byte_end":9582,"line_start":261,"line_end":261,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10432,"byte_end":10444,"line_start":282,"line_end":282,"column_start":8,"column_end":20},"name":"fetch_update","qualname":"::Radium::fetch_update","value":"pub fn fetch_update<F>(&Self, Ordering, Ordering, F)\n-> Result<Self::Item, Self::Item> where F: FnMut(Self::Item) ->\nOption<Self::Item>","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Fetches the value, and applies a function to it that returns an\n optional new value.","sig":null,"attributes":[{"value":"/ Fetches the value, and applies a function to it that returns an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9712,"byte_end":9779,"line_start":266,"line_end":266,"column_start":5,"column_end":72}},{"value":"/ optional new value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9784,"byte_end":9807,"line_start":267,"line_end":267,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9812,"byte_end":9815,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Note: This may call the function multiple times if the value has been","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9820,"byte_end":9893,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ changed from other threads in the meantime, as long as the function","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9898,"byte_end":9969,"line_start":270,"line_end":270,"column_start":5,"column_end":76}},{"value":"/ returns `Some(_)`, but the function will have been applied only once to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":9974,"byte_end":10049,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ the stored value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10054,"byte_end":10075,"line_start":272,"line_end":272,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10080,"byte_end":10083,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Returns a `Result` of `Ok(previous_value)` if the function returned","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10088,"byte_end":10159,"line_start":274,"line_end":274,"column_start":5,"column_end":76}},{"value":"/ `Some(_)`, else `Err(previous_value)`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10164,"byte_end":10206,"line_start":275,"line_end":275,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10211,"byte_end":10214,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Ordering arguments are ignored by non-atomic types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10219,"byte_end":10274,"line_start":277,"line_end":277,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10279,"byte_end":10282,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ See also: [`AtomicUsize::fetch_update`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10287,"byte_end":10331,"line_start":279,"line_end":279,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10336,"byte_end":10339,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ [`AtomicUsize::fetch_update`]: core::sync::atomic::AtomicUsize::fetch_update","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10344,"byte_end":10424,"line_start":281,"line_end":281,"column_start":5,"column_end":85}}]},{"kind":"Mod","id":{"krate":0,"index":51},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10689,"byte_end":10695,"line_start":293,"line_end":293,"column_start":9,"column_end":15},"name":"marker","qualname":"::marker","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"decl_id":null,"docs":" Marker traits used by [`Radium`].\n","sig":null,"attributes":[{"value":"/ Marker traits used by [`Radium`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10643,"byte_end":10680,"line_start":292,"line_end":292,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":52},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11738,"byte_end":11744,"line_start":322,"line_end":322,"column_start":15,"column_end":21},"name":"BitOps","qualname":"::marker::BitOps","value":"BitOps","parent":null,"children":[],"decl_id":null,"docs":" Types supporting maybe-atomic bitwise operations.","sig":null,"attributes":[{"value":"/ Types supporting maybe-atomic bitwise operations.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10702,"byte_end":10755,"line_start":294,"line_end":294,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10760,"byte_end":10763,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ Types implementing this trait support the [`fetch_and`], [`fetch_nand`],","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10768,"byte_end":10844,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ [`fetch_or`], and [`fetch_xor`] maybe-atomic operations.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10849,"byte_end":10909,"line_start":297,"line_end":297,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10914,"byte_end":10917,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ [`fetch_and`]: crate::Radium::fetch_and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10922,"byte_end":10965,"line_start":299,"line_end":299,"column_start":5,"column_end":48}},{"value":"/ [`fetch_nand`]: crate::Radium::fetch_nand","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":10970,"byte_end":11015,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ [`fetch_or`]: crate::Radium::fetch_or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11020,"byte_end":11061,"line_start":301,"line_end":301,"column_start":5,"column_end":46}},{"value":"/ [`fetch_xor`]: crate::Radium::fetch_xor","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11066,"byte_end":11109,"line_start":302,"line_end":302,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11114,"byte_end":11117,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ `bool` and all integer fundamental types implement this.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11122,"byte_end":11182,"line_start":304,"line_end":304,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11187,"byte_end":11190,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11195,"byte_end":11206,"line_start":306,"line_end":306,"column_start":5,"column_end":16}},{"value":"/ # use core::sync::atomic::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11211,"byte_end":11243,"line_start":307,"line_end":307,"column_start":5,"column_end":37}},{"value":"/ # use radium::Radium;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11248,"byte_end":11273,"line_start":308,"line_end":308,"column_start":5,"column_end":30}},{"value":"/ let num: AtomicUsize = AtomicUsize::new(0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11278,"byte_end":11325,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/ Radium::fetch_or(&num, 2, Ordering::Relaxed);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11330,"byte_end":11379,"line_start":310,"line_end":310,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11384,"byte_end":11391,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11396,"byte_end":11399,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Pointers do not. This will cause a compiler error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11404,"byte_end":11458,"line_start":313,"line_end":313,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11463,"byte_end":11466,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11471,"byte_end":11495,"line_start":315,"line_end":315,"column_start":5,"column_end":29}},{"value":"/ # use core::sync::atomic::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11500,"byte_end":11532,"line_start":316,"line_end":316,"column_start":5,"column_end":37}},{"value":"/ # use radium::Radium;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11537,"byte_end":11562,"line_start":317,"line_end":317,"column_start":5,"column_end":30}},{"value":"/ # use core::ptr;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11567,"byte_end":11587,"line_start":318,"line_end":318,"column_start":5,"column_end":25}},{"value":"/ let ptr: AtomicPtr<usize> = Default::default();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11592,"byte_end":11643,"line_start":319,"line_end":319,"column_start":5,"column_end":56}},{"value":"/ Radium::fetch_or(&ptr, ptr::null_mut(), Ordering::Relaxed);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11648,"byte_end":11711,"line_start":320,"line_end":320,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11716,"byte_end":11723,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":53},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12651,"byte_end":12661,"line_start":349,"line_end":349,"column_start":15,"column_end":25},"name":"NumericOps","qualname":"::marker::NumericOps","value":"NumericOps: BitOps","parent":null,"children":[],"decl_id":null,"docs":" Types supporting maybe-atomic arithmetic operations.","sig":null,"attributes":[{"value":"/ Types supporting maybe-atomic arithmetic operations.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11753,"byte_end":11809,"line_start":324,"line_end":324,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11814,"byte_end":11817,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Types implementing this trait support the [`fetch_add`] and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11822,"byte_end":11885,"line_start":326,"line_end":326,"column_start":5,"column_end":68}},{"value":"/ [`fetch_sub`] maybe-atomic operations.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11890,"byte_end":11932,"line_start":327,"line_end":327,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11937,"byte_end":11940,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ [`fetch_add`]: crate::Radium::fetch_add","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11945,"byte_end":11988,"line_start":329,"line_end":329,"column_start":5,"column_end":48}},{"value":"/ [`fetch_sub`]: crate::Radium::fetch_sub","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":11993,"byte_end":12036,"line_start":330,"line_end":330,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12041,"byte_end":12044,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ The integer types, such as `usize` and `i32`, implement this trait.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12049,"byte_end":12120,"line_start":332,"line_end":332,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12125,"byte_end":12128,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12133,"byte_end":12144,"line_start":334,"line_end":334,"column_start":5,"column_end":16}},{"value":"/ # use core::sync::atomic::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12149,"byte_end":12181,"line_start":335,"line_end":335,"column_start":5,"column_end":37}},{"value":"/ # use radium::Radium;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12186,"byte_end":12211,"line_start":336,"line_end":336,"column_start":5,"column_end":30}},{"value":"/ let num: AtomicUsize = AtomicUsize::new(2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12216,"byte_end":12263,"line_start":337,"line_end":337,"column_start":5,"column_end":52}},{"value":"/ Radium::fetch_add(&num, 2, Ordering::Relaxed);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12268,"byte_end":12318,"line_start":338,"line_end":338,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12323,"byte_end":12330,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12335,"byte_end":12338,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ `bool` and pointers do not. This will cause a compiler error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12343,"byte_end":12408,"line_start":341,"line_end":341,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12413,"byte_end":12416,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12421,"byte_end":12445,"line_start":343,"line_end":343,"column_start":5,"column_end":29}},{"value":"/ # use core::sync::atomic::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12450,"byte_end":12482,"line_start":344,"line_end":344,"column_start":5,"column_end":37}},{"value":"/ # use radium::Radium;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12487,"byte_end":12512,"line_start":345,"line_end":345,"column_start":5,"column_end":30}},{"value":"/ let bit: AtomicBool = AtomicBool::new(false);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12517,"byte_end":12566,"line_start":346,"line_end":346,"column_start":5,"column_end":54}},{"value":"/ Radium::fetch_add(&bit, true, Ordering::Relaxed);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12571,"byte_end":12624,"line_start":347,"line_end":347,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12629,"byte_end":12636,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]}],"impls":[{"id":31,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":19834,"byte_end":19844,"line_start":628,"line_end":628,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":533},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":20783,"byte_end":20787,"line_start":658,"line_end":658,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":21671,"byte_end":21680,"line_start":688,"line_end":688,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":24421,"byte_end":24425,"line_start":761,"line_end":761,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":1346,"byte_end":1351,"line_start":37,"line_end":37,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":11}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":12663,"byte_end":12669,"line_start":349,"line_end":349,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":52},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":19834,"byte_end":19844,"line_start":628,"line_end":628,"column_start":21,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":1,"index":9205},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":20783,"byte_end":20787,"line_start":658,"line_end":658,"column_start":17,"column_end":21},"kind":{"Impl":{"id":32}},"from":{"krate":1,"index":4498},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":21671,"byte_end":21680,"line_start":688,"line_end":688,"column_start":24,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":1,"index":9210},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/radium-0.7.0/src/lib.rs","byte_start":24421,"byte_end":24425,"line_start":761,"line_end":761,"column_start":20,"column_end":24},"kind":{"Impl":{"id":34}},"from":{"krate":1,"index":4498},"to":{"krate":0,"index":31}}]}