{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0","program":"/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","base64ct","--edition=2021","/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","-C","metadata=edd71552d88a3848","-C","extra-filename=-edd71552d88a3848","--out-dir","/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","-L","dependency=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libbase64ct-edd71552d88a3848.rmeta"},"prelude":{"crate_id":{"name":"base64ct","disambiguator":[17597777528970430433,0]},"crate_root":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src","external_crates":[{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}}],"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":0,"byte_end":2724,"line_start":1,"line_end":104,"column_start":1,"column_end":33}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":388},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2338,"byte_end":2345,"line_start":90,"line_end":90,"column_start":14,"column_end":21},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2360,"byte_end":2367,"line_start":91,"line_end":91,"column_start":14,"column_end":21},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":176},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2383,"byte_end":2391,"line_start":92,"line_end":92,"column_start":15,"column_end":23},"alias_span":null,"name":"Encoding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":469},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2406,"byte_end":2411,"line_start":93,"line_end":93,"column_start":14,"column_end":19},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":456},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2413,"byte_end":2433,"line_start":93,"line_end":93,"column_start":21,"column_end":41},"alias_span":null,"name":"InvalidEncodingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":457},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2413,"byte_end":2433,"line_start":93,"line_end":93,"column_start":21,"column_end":41},"alias_span":null,"name":"InvalidEncodingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":443},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2435,"byte_end":2453,"line_start":93,"line_end":93,"column_start":43,"column_end":61},"alias_span":null,"name":"InvalidLengthError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":444},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2435,"byte_end":2453,"line_start":93,"line_end":93,"column_start":43,"column_end":61},"alias_span":null,"name":"InvalidLengthError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":485},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2473,"byte_end":2483,"line_start":94,"line_end":94,"column_start":18,"column_end":28},"alias_span":null,"name":"LineEnding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":507},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2516,"byte_end":2528,"line_start":96,"line_end":96,"column_start":17,"column_end":29},"alias_span":null,"name":"Base64Bcrypt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":508},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2516,"byte_end":2528,"line_start":96,"line_end":96,"column_start":17,"column_end":29},"alias_span":null,"name":"Base64Bcrypt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":520},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2545,"byte_end":2556,"line_start":97,"line_end":97,"column_start":16,"column_end":27},"alias_span":null,"name":"Base64Crypt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2545,"byte_end":2556,"line_start":97,"line_end":97,"column_start":16,"column_end":27},"alias_span":null,"name":"Base64Crypt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":533},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2577,"byte_end":2583,"line_start":98,"line_end":98,"column_start":20,"column_end":26},"alias_span":null,"name":"Base64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":534},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2577,"byte_end":2583,"line_start":98,"line_end":98,"column_start":20,"column_end":26},"alias_span":null,"name":"Base64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2585,"byte_end":2599,"line_start":98,"line_end":98,"column_start":28,"column_end":42},"alias_span":null,"name":"Base64Unpadded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2585,"byte_end":2599,"line_start":98,"line_end":98,"column_start":28,"column_end":42},"alias_span":null,"name":"Base64Unpadded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":559},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2616,"byte_end":2625,"line_start":99,"line_end":99,"column_start":15,"column_end":24},"alias_span":null,"name":"Base64Url","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2616,"byte_end":2625,"line_start":99,"line_end":99,"column_start":15,"column_end":24},"alias_span":null,"name":"Base64Url","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":572},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2627,"byte_end":2644,"line_start":99,"line_end":99,"column_start":26,"column_end":43},"alias_span":null,"name":"Base64UrlUnpadded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":573},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2627,"byte_end":2644,"line_start":99,"line_end":99,"column_start":26,"column_end":43},"alias_span":null,"name":"Base64UrlUnpadded","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":0,"byte_end":2724,"line_start":1,"line_end":104,"column_start":1,"column_end":33},"name":"","qualname":"::","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":90},{"krate":0,"index":150},{"krate":0,"index":215},{"krate":0,"index":233},{"krate":0,"index":241},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":387}],"decl_id":null,"docs":"# [RustCrypto]: Constant-Time Base64","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"warn(clippy :: integer_arithmetic, clippy :: panic, clippy ::\npanic_in_result_fn, clippy :: unwrap_used, missing_docs, rust_2018_idioms,\nunsafe_code, unused_lifetimes, unused_qualifications)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":334,"byte_end":558,"line_start":9,"line_end":19,"column_start":1,"column_end":3}},{"value":"/ # Usage","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":560,"byte_end":571,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":572,"byte_end":575,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ## Allocating (enable `alloc` crate feature)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":576,"byte_end":624,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":625,"byte_end":628,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":629,"byte_end":636,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"alloc\")]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":637,"byte_end":668,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ # {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":669,"byte_end":676,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use base64ct::{Base64, Encoding};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":677,"byte_end":714,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":715,"byte_end":718,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let bytes = b\"example bytestring!\";","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":719,"byte_end":758,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"/ let encoded = Base64::encode_string(bytes);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":759,"byte_end":806,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(encoded, \"ZXhhbXBsZSBieXRlc3RyaW5nIQ==\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":807,"byte_end":863,"line_start":32,"line_end":32,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":864,"byte_end":867,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let decoded = Base64::decode_vec(&encoded).unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":868,"byte_end":924,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(decoded, bytes);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":925,"byte_end":956,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":957,"byte_end":964,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":965,"byte_end":972,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":973,"byte_end":976,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Heapless `no_std` usage","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":977,"byte_end":1007,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1008,"byte_end":1011,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1012,"byte_end":1019,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use base64ct::{Base64, Encoding};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1020,"byte_end":1057,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1058,"byte_end":1061,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ const BUF_SIZE: usize = 128;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1062,"byte_end":1094,"line_start":44,"line_end":44,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1095,"byte_end":1098,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let bytes = b\"example bytestring!\";","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1099,"byte_end":1138,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/ assert!(Base64::encoded_len(bytes) <= BUF_SIZE);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1139,"byte_end":1191,"line_start":47,"line_end":47,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1192,"byte_end":1195,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let mut enc_buf = [0u8; BUF_SIZE];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1196,"byte_end":1234,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/ let encoded = Base64::encode(bytes, &mut enc_buf).unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1235,"byte_end":1298,"line_start":50,"line_end":50,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(encoded, \"ZXhhbXBsZSBieXRlc3RyaW5nIQ==\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1299,"byte_end":1355,"line_start":51,"line_end":51,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1356,"byte_end":1359,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let mut dec_buf = [0u8; BUF_SIZE];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1360,"byte_end":1398,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/ let decoded = Base64::decode(encoded, &mut dec_buf).unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1399,"byte_end":1464,"line_start":54,"line_end":54,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(decoded, bytes);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1465,"byte_end":1496,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1497,"byte_end":1504,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1505,"byte_end":1508,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1509,"byte_end":1529,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1530,"byte_end":1533,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Implemented using integer arithmetic alone without any lookup tables or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1534,"byte_end":1609,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ data-dependent branches, thereby providing portable \"best effort\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1610,"byte_end":1679,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ constant-time operation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1680,"byte_end":1708,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1709,"byte_end":1712,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Not constant-time with respect to message length (only data).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1713,"byte_end":1778,"line_start":64,"line_end":64,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1779,"byte_end":1782,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Adapted from the following constant-time C++ implementation of Base64:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1783,"byte_end":1857,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1858,"byte_end":1861,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ <https://github.com/Sc00bz/ConstTimeEncoding/blob/master/base64.cpp>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1862,"byte_end":1934,"line_start":68,"line_end":68,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1935,"byte_end":1938,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Copyright (c) 2014 Steve \"Sc00bz\" Thomas (steve at tobtu dot com).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":1939,"byte_end":2009,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ Derived code is dual licensed MIT + Apache 2 (with permission from Sc00bz).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/lib.rs","byte_start":2010,"byte_end":2089,"line_start":71,"line_end":71,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":388},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":3303,"byte_end":3310,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::decoder::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395}],"decl_id":null,"docs":" Stateful Base64 decoder with support for buffered, incremental decoding.","sig":null,"attributes":[{"value":"/ Stateful Base64 decoder with support for buffered, incremental decoding.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":3080,"byte_end":3156,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":3157,"byte_end":3160,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The `E` type parameter can be any type which impls [`Encoding`] such as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":3161,"byte_end":3236,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ [`Base64`] or [`Base64Unpadded`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":3237,"byte_end":3274,"line_start":24,"line_end":24,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4022,"byte_end":4025,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder>::new","value":"pub fn new(&'i [u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder for a byte slice containing contiguous\n (non-newline-delimited) Base64-encoded data.","sig":null,"attributes":[{"value":"/ Create a new decoder for a byte slice containing contiguous","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":3764,"byte_end":3827,"line_start":44,"line_end":44,"column_start":5,"column_end":68}},{"value":"/ (non-newline-delimited) Base64-encoded data.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":3832,"byte_end":3880,"line_start":45,"line_end":45,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":3885,"byte_end":3888,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":3893,"byte_end":3906,"line_start":47,"line_end":47,"column_start":5,"column_end":18}},{"value":"/ - `Ok(decoder)` on success.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":3911,"byte_end":3942,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/ - `Err(Error::InvalidLength)` if the input buffer is empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":3947,"byte_end":4010,"line_start":49,"line_end":49,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":5232,"byte_end":5243,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"new_wrapped","qualname":"<Decoder>::new_wrapped","value":"pub fn new_wrapped(&'i [u8], usize) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder for a byte slice containing Base64 which\n line wraps at the given line length.","sig":null,"attributes":[{"value":"/ Create a new decoder for a byte slice containing Base64 which","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4403,"byte_end":4468,"line_start":63,"line_end":63,"column_start":5,"column_end":70}},{"value":"/ line wraps at the given line length.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4473,"byte_end":4513,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4518,"byte_end":4521,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Trailing newlines are not supported and must be removed in advance.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4526,"byte_end":4597,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4602,"byte_end":4605,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Newlines are handled according to what are roughly [RFC7468] conventions:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4610,"byte_end":4687,"line_start":68,"line_end":68,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4692,"byte_end":4695,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4700,"byte_end":4711,"line_start":70,"line_end":70,"column_start":5,"column_end":16}},{"value":"/ [parsers] MUST handle different newline conventions","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4716,"byte_end":4771,"line_start":71,"line_end":71,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4776,"byte_end":4783,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4788,"byte_end":4791,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ RFC7468 allows any of the following as newlines, and allows a mixture","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4796,"byte_end":4869,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ of different types of newlines:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4874,"byte_end":4909,"line_start":75,"line_end":75,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4914,"byte_end":4917,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4922,"byte_end":4933,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/ eol        = CRLF / CR / LF","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4938,"byte_end":4969,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4974,"byte_end":4981,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4986,"byte_end":4989,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":4994,"byte_end":5007,"line_start":81,"line_end":81,"column_start":5,"column_end":18}},{"value":"/ - `Ok(decoder)` on success.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":5012,"byte_end":5043,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/ - `Err(Error::InvalidLength)` if the input buffer is empty or the line","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":5048,"byte_end":5122,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/   width is zero.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":5127,"byte_end":5147,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":5152,"byte_end":5155,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ [RFC7468]: https://datatracker.ietf.org/doc/html/rfc7468","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":5160,"byte_end":5220,"line_start":86,"line_end":86,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":5972,"byte_end":5978,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"decode","qualname":"<Decoder>::decode","value":"pub fn decode<'o>(&mut Self, &'o mut [u8]) -> Result<&'o [u8], Error>","parent":null,"children":[],"decl_id":null,"docs":" Fill the provided buffer with data decoded from Base64.","sig":null,"attributes":[{"value":"/ Fill the provided buffer with data decoded from Base64.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":5650,"byte_end":5709,"line_start":100,"line_end":100,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":5714,"byte_end":5717,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Enough Base64 input data must remain to fill the entire buffer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":5722,"byte_end":5789,"line_start":102,"line_end":102,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":5794,"byte_end":5797,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":5802,"byte_end":5815,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ - `Ok(bytes)` if the expected amount of data was read","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":5820,"byte_end":5877,"line_start":105,"line_end":105,"column_start":5,"column_end":62}},{"value":"/ - `Err(Error::InvalidLength)` if the exact amount of data couldn't be read","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":5882,"byte_end":5960,"line_start":106,"line_end":106,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":8584,"byte_end":8597,"line_start":170,"line_end":170,"column_start":12,"column_end":25},"name":"decode_to_end","qualname":"<Decoder>::decode_to_end","value":"pub fn decode_to_end<'o>(&mut Self, &'o mut Vec<u8>)\n-> Result<&'o [u8], Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode all remaining Base64 data, placing the result into `buf`.","sig":null,"attributes":[{"value":"/ Decode all remaining Base64 data, placing the result into `buf`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":8310,"byte_end":8378,"line_start":164,"line_end":164,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":8383,"byte_end":8386,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ If successful, this function will return the total number of bytes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":8391,"byte_end":8461,"line_start":166,"line_end":166,"column_start":5,"column_end":75}},{"value":"/ decoded into `buf`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":8466,"byte_end":8489,"line_start":167,"line_end":167,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":8494,"byte_end":8519,"line_start":168,"line_end":168,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":9296,"byte_end":9309,"line_start":188,"line_end":188,"column_start":12,"column_end":25},"name":"remaining_len","qualname":"<Decoder>::remaining_len","value":"pub fn remaining_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the remaining data after Base64 decoding.","sig":null,"attributes":[{"value":"/ Get the length of the remaining data after Base64 decoding.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":9167,"byte_end":9230,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":9235,"byte_end":9238,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Decreases every time data is decoded.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":9243,"byte_end":9284,"line_start":187,"line_end":187,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":9421,"byte_end":9432,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"is_finished","qualname":"<Decoder>::is_finished","value":"pub fn is_finished(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Has all of the input data been decoded?\n","sig":null,"attributes":[{"value":"/ Has all of the input data been decoded?","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":9366,"byte_end":9409,"line_start":192,"line_end":192,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":118},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":23309,"byte_end":23316,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"decl_id":null,"docs":" Stateful Base64 encoder with support for buffered, incremental encoding.","sig":null,"attributes":[{"value":"/ Stateful Base64 encoder with support for buffered, incremental encoding.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":23103,"byte_end":23179,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":23180,"byte_end":23183,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The `E` type parameter can be any type which impls [`Encoding`] such as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":23184,"byte_end":23259,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ [`Base64`] or [`Base64Unpadded`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":23260,"byte_end":23297,"line_start":19,"line_end":19,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":23956,"byte_end":23959,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder>::new","value":"pub fn new(&'o mut [u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder which writes output to the given byte slice.","sig":null,"attributes":[{"value":"/ Create a new encoder which writes output to the given byte slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":23801,"byte_end":23870,"line_start":39,"line_end":39,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":23875,"byte_end":23878,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Output constructed using this method is not line-wrapped.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":23883,"byte_end":23944,"line_start":41,"line_end":41,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":24640,"byte_end":24651,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"new_wrapped","qualname":"<Encoder>::new_wrapped","value":"pub fn new_wrapped(&'o mut [u8], usize, LineEnding) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder which writes line-wrapped output to the given byte\n slice.","sig":null,"attributes":[{"value":"/ Create a new encoder which writes line-wrapped output to the given byte","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":24290,"byte_end":24365,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":24370,"byte_end":24380,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":24385,"byte_end":24388,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Output will be wrapped at the specified interval, using the provided","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":24393,"byte_end":24465,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ line ending. Use [`LineEnding::default()`] to use the conventional line","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":24470,"byte_end":24545,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/ ending for the target OS.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":24550,"byte_end":24579,"line_start":61,"line_end":61,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":24584,"byte_end":24587,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Minimum allowed line width is 4.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":24592,"byte_end":24628,"line_start":63,"line_end":63,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":25176,"byte_end":25182,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoder>::encode","value":"pub fn encode(&mut Self, &[u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Encode the provided buffer as Base64, writing it to the output buffer.","sig":null,"attributes":[{"value":"/ Encode the provided buffer as Base64, writing it to the output buffer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":24912,"byte_end":24986,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":24991,"byte_end":24994,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":24999,"byte_end":25012,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ - `Ok(bytes)` if the expected amount of data was read","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":25017,"byte_end":25074,"line_start":77,"line_end":77,"column_start":5,"column_end":62}},{"value":"/ - `Err(Error::InvalidLength)` if there is insufficient space in the output buffer","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":25079,"byte_end":25164,"line_start":78,"line_end":78,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":26458,"byte_end":26466,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"position","qualname":"<Encoder>::position","value":"pub fn position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the position inside of the output buffer where the write cursor\n is currently located.\n","sig":null,"attributes":[{"value":"/ Get the position inside of the output buffer where the write cursor","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":26345,"byte_end":26416,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/ is currently located.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":26421,"byte_end":26446,"line_start":113,"line_end":113,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":26598,"byte_end":26604,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"finish","qualname":"<Encoder>::finish","value":"pub fn finish(Self) -> Result<&'o str, Error>","parent":null,"children":[],"decl_id":null,"docs":" Finish encoding data, returning the resulting Base64 as a `str`.\n","sig":null,"attributes":[{"value":"/ Finish encoding data, returning the resulting Base64 as a `str`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":26518,"byte_end":26586,"line_start":118,"line_end":118,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":26853,"byte_end":26874,"line_start":125,"line_end":125,"column_start":12,"column_end":33},"name":"finish_with_remaining","qualname":"<Encoder>::finish_with_remaining","value":"pub fn finish_with_remaining(Self) -> Result<(&'o str, &'o mut [u8]), Error>","parent":null,"children":[],"decl_id":null,"docs":" Finish encoding data, returning the resulting Base64 as a `str`\n along with the remaining space in the output buffer.\n","sig":null,"attributes":[{"value":"/ Finish encoding data, returning the resulting Base64 as a `str`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":26713,"byte_end":26780,"line_start":123,"line_end":123,"column_start":5,"column_end":72}},{"value":"/ along with the remaining space in the output buffer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":26785,"byte_end":26841,"line_start":124,"line_end":124,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":176},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":34702,"byte_end":34710,"line_start":19,"line_end":19,"column_start":11,"column_end":19},"name":"Encoding","qualname":"::encoding::Encoding","value":"Encoding: Variant","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":184}],"decl_id":null,"docs":" Base64 encoding trait.","sig":null,"attributes":[{"value":"/ Base64 encoding trait.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":34568,"byte_end":34594,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":34595,"byte_end":34598,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This trait must be imported to make use of any Base64 variant defined","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":34599,"byte_end":34672,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ in this crate.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":34673,"byte_end":34691,"line_start":18,"line_end":18,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":34798,"byte_end":34804,"line_start":21,"line_end":21,"column_start":8,"column_end":14},"name":"decode","qualname":"::encoding::Encoding::decode","value":"pub fn decode<impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>, &mut [u8])\n-> Result<&[u8], Error>","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Decode a Base64 string into the provided destination buffer.\n","sig":null,"attributes":[{"value":"/ Decode a Base64 string into the provided destination buffer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":34726,"byte_end":34790,"line_start":20,"line_end":20,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35053,"byte_end":35068,"line_start":27,"line_end":27,"column_start":8,"column_end":23},"name":"decode_in_place","qualname":"::encoding::Encoding::decode_in_place","value":"pub fn decode_in_place(&mut [u8]) -> Result<&[u8], InvalidEncodingError>","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Decode a Base64 string in-place.","sig":null,"attributes":[{"value":"/ Decode a Base64 string in-place.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":34874,"byte_end":34910,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":34915,"byte_end":34918,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ NOTE: this method does not (yet) validate that padding is well-formed,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":34923,"byte_end":34997,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ if the given Base64 encoding is padded.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35002,"byte_end":35045,"line_start":26,"line_end":26,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35267,"byte_end":35277,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"decode_vec","qualname":"::encoding::Encoding::decode_vec","value":"pub fn decode_vec(&str) -> Result<Vec<u8>, Error>","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Decode a Base64 string into a byte vector.\n","sig":null,"attributes":[{"value":"/ Decode a Base64 string into a byte vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35130,"byte_end":35176,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35181,"byte_end":35206,"line_start":30,"line_end":30,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35500,"byte_end":35506,"line_start":38,"line_end":38,"column_start":8,"column_end":14},"name":"encode","qualname":"::encoding::Encoding::encode","value":"pub fn encode<'a>(&[u8], &'a mut [u8]) -> Result<&'a str, InvalidLengthError>","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Encode the input byte slice as Base64.","sig":null,"attributes":[{"value":"/ Encode the input byte slice as Base64.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35323,"byte_end":35365,"line_start":34,"line_end":34,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35370,"byte_end":35373,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Writes the result into the provided destination slice, returning an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35378,"byte_end":35449,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ ASCII-encoded Base64 string value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35454,"byte_end":35492,"line_start":37,"line_end":37,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35825,"byte_end":35838,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"encode_string","qualname":"::encoding::Encoding::encode_string","value":"pub fn encode_string(&[u8]) -> String","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Encode input byte slice into a [`String`] containing Base64.","sig":null,"attributes":[{"value":"/ Encode input byte slice into a [`String`] containing Base64.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35587,"byte_end":35651,"line_start":40,"line_end":40,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35656,"byte_end":35659,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35664,"byte_end":35676,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/ If `input` length is greater than `usize::MAX/4`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35681,"byte_end":35734,"line_start":43,"line_end":43,"column_start":5,"column_end":58}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35739,"byte_end":35764,"line_start":44,"line_end":44,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":36039,"byte_end":36050,"line_start":51,"line_end":51,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"::encoding::Encoding::encoded_len","value":"pub fn encoded_len(&[u8]) -> usize","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Get the length of Base64 produced by encoding the given bytes.","sig":null,"attributes":[{"value":"/ Get the length of Base64 produced by encoding the given bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35869,"byte_end":35935,"line_start":48,"line_end":48,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35940,"byte_end":35943,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ WARNING: this function will return `0` for lengths greater than `usize::MAX/4`!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":35948,"byte_end":36031,"line_start":50,"line_end":50,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":443},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":46856,"byte_end":46874,"line_start":10,"line_end":10,"column_start":12,"column_end":30},"name":"InvalidLengthError","qualname":"::errors::InvalidLengthError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Insufficient output buffer length.\n","sig":null,"attributes":[{"value":"/ Insufficient output buffer length.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":46761,"byte_end":46799,"line_start":8,"line_end":8,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":456},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":47221,"byte_end":47241,"line_start":23,"line_end":23,"column_start":12,"column_end":32},"name":"InvalidEncodingError","qualname":"::errors::InvalidEncodingError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Invalid encoding of provided Base64 string.\n","sig":null,"attributes":[{"value":"/ Invalid encoding of provided Base64 string.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":47117,"byte_end":47164,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":470},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":47689,"byte_end":47704,"line_start":38,"line_end":38,"column_start":5,"column_end":20},"name":"InvalidEncoding","qualname":"::errors::Error::InvalidEncoding","value":"Error::InvalidEncoding","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Invalid encoding of provided Base64 string.\n","sig":null,"attributes":[{"value":"/ Invalid encoding of provided Base64 string.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":47637,"byte_end":47684,"line_start":37,"line_end":37,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":472},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":47754,"byte_end":47767,"line_start":41,"line_end":41,"column_start":5,"column_end":18},"name":"InvalidLength","qualname":"::errors::Error::InvalidLength","value":"Error::InvalidLength","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Insufficient output buffer length.\n","sig":null,"attributes":[{"value":"/ Insufficient output buffer length.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":47711,"byte_end":47749,"line_start":40,"line_end":40,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":469},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":47625,"byte_end":47630,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"name":"Error","qualname":"::errors::Error","value":"pub enum Error { InvalidEncoding, InvalidLength, }","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":472}],"decl_id":null,"docs":" Generic error, union of [`InvalidLengthError`] and [`InvalidEncodingError`].\n","sig":null,"attributes":[{"value":"/ Generic error, union of [`InvalidLengthError`] and [`InvalidEncodingError`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":47490,"byte_end":47570,"line_start":34,"line_end":34,"column_start":1,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":486},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49380,"byte_end":49382,"line_start":17,"line_end":17,"column_start":5,"column_end":7},"name":"CR","qualname":"::line_ending::LineEnding::CR","value":"LineEnding::CR","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Carriage return: `\\r` (Pre-OS X Macintosh)\n","sig":null,"attributes":[{"value":"/ Carriage return: `\\r` (Pre-OS X Macintosh)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49329,"byte_end":49375,"line_start":16,"line_end":16,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":488},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49425,"byte_end":49427,"line_start":20,"line_end":20,"column_start":5,"column_end":7},"name":"LF","qualname":"::line_ending::LineEnding::LF","value":"LineEnding::LF","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Line feed: `\\n` (Unix OSes)\n","sig":null,"attributes":[{"value":"/ Line feed: `\\n` (Unix OSes)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49389,"byte_end":49420,"line_start":19,"line_end":19,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":490},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49488,"byte_end":49492,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"CRLF","qualname":"::line_ending::LineEnding::CRLF","value":"LineEnding::CRLF","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Carriage return + line feed: `\\r\\n` (Windows)\n","sig":null,"attributes":[{"value":"/ Carriage return + line feed: `\\r\\n` (Windows)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49434,"byte_end":49483,"line_start":22,"line_end":22,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":485},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49312,"byte_end":49322,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"LineEnding","qualname":"::line_ending::LineEnding","value":"pub enum LineEnding { CR, LF, CRLF, }","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490}],"decl_id":null,"docs":" Line endings: variants of newline characters that can be used with Base64.","sig":null,"attributes":[{"value":"/ Line endings: variants of newline characters that can be used with Base64.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49016,"byte_end":49094,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49095,"byte_end":49098,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Use [`LineEnding::default`] to get an appropriate line ending for the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49099,"byte_end":49172,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ current operating system.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49173,"byte_end":49202,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"allow(clippy :: upper_case_acronyms)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49203,"byte_end":49240,"line_start":13,"line_end":13,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49889,"byte_end":49897,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<LineEnding>::as_bytes","value":"pub fn as_bytes(Self) -> &'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the byte serialization of this [`LineEnding`].\n","sig":null,"attributes":[{"value":"/ Get the byte serialization of this [`LineEnding`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49823,"byte_end":49877,"line_start":40,"line_end":40,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":50164,"byte_end":50167,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"len","qualname":"<LineEnding>::len","value":"pub fn len(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the encoded length of this [`LineEnding`].\n","sig":null,"attributes":[{"value":"/ Get the encoded length of this [`LineEnding`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":50102,"byte_end":50152,"line_start":49,"line_end":49,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":507},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/bcrypt.rs","byte_start":54192,"byte_end":54204,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"Base64Bcrypt","qualname":"::variant::bcrypt::Base64Bcrypt","value":"","parent":null,"children":[],"decl_id":null,"docs":" bcrypt Base64 encoding.","sig":null,"attributes":[{"value":"/ bcrypt Base64 encoding.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/bcrypt.rs","byte_start":53995,"byte_end":54022,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/bcrypt.rs","byte_start":54023,"byte_end":54026,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/bcrypt.rs","byte_start":54027,"byte_end":54038,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/ ./         [A-Z]      [a-z]     [0-9]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/bcrypt.rs","byte_start":54039,"byte_end":54080,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/ 0x2e-0x2f, 0x41-0x5a, 0x61-0x7a, 0x30-0x39","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/bcrypt.rs","byte_start":54081,"byte_end":54127,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/bcrypt.rs","byte_start":54128,"byte_end":54135,"line_start":10,"line_end":10,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":520},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/crypt.rs","byte_start":54936,"byte_end":54947,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"Base64Crypt","qualname":"::variant::crypt::Base64Crypt","value":"","parent":null,"children":[],"decl_id":null,"docs":" `crypt(3)` Base64 encoding.","sig":null,"attributes":[{"value":"/ `crypt(3)` Base64 encoding.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/crypt.rs","byte_start":54756,"byte_end":54787,"line_start":5,"line_end":5,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/crypt.rs","byte_start":54788,"byte_end":54791,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/crypt.rs","byte_start":54792,"byte_end":54803,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/ [.-9]      [A-Z]      [a-z]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/crypt.rs","byte_start":54804,"byte_end":54835,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/ 0x2e-0x39, 0x41-0x5a, 0x61-0x7a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/crypt.rs","byte_start":54836,"byte_end":54871,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/crypt.rs","byte_start":54872,"byte_end":54879,"line_start":10,"line_end":10,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":533},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":55620,"byte_end":55626,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Base64","qualname":"::variant::standard::Base64","value":"","parent":null,"children":[],"decl_id":null,"docs":" Standard Base64 encoding with `=` padding.","sig":null,"attributes":[{"value":"/ Standard Base64 encoding with `=` padding.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":55400,"byte_end":55446,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":55447,"byte_end":55450,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":55451,"byte_end":55462,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/ [A-Z]      [a-z]      [0-9]      +     /","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":55463,"byte_end":55507,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/ 0x41-0x5a, 0x61-0x7a, 0x30-0x39, 0x2b, 0x2f","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":55508,"byte_end":55555,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":55556,"byte_end":55563,"line_start":10,"line_end":10,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":546},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":56069,"byte_end":56083,"line_start":29,"line_end":29,"column_start":12,"column_end":26},"name":"Base64Unpadded","qualname":"::variant::standard::Base64Unpadded","value":"","parent":null,"children":[],"decl_id":null,"docs":" Standard Base64 encoding *without* padding.","sig":null,"attributes":[{"value":"/ Standard Base64 encoding *without* padding.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":55848,"byte_end":55895,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":55896,"byte_end":55899,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":55900,"byte_end":55911,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ [A-Z]      [a-z]      [0-9]      +     /","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":55912,"byte_end":55956,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ 0x41-0x5a, 0x61-0x7a, 0x30-0x39, 0x2b, 0x2f","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":55957,"byte_end":56004,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":56005,"byte_end":56012,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":559},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":57026,"byte_end":57035,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"Base64Url","qualname":"::variant::url::Base64Url","value":"","parent":null,"children":[],"decl_id":null,"docs":" URL-safe Base64 encoding with `=` padding.","sig":null,"attributes":[{"value":"/ URL-safe Base64 encoding with `=` padding.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":56806,"byte_end":56852,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":56853,"byte_end":56856,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":56857,"byte_end":56868,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/ [A-Z]      [a-z]      [0-9]      -     _","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":56869,"byte_end":56913,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/ 0x41-0x5a, 0x61-0x7a, 0x30-0x39, 0x2d, 0x5f","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":56914,"byte_end":56961,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":56962,"byte_end":56969,"line_start":10,"line_end":10,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":572},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":57484,"byte_end":57501,"line_start":29,"line_end":29,"column_start":12,"column_end":29},"name":"Base64UrlUnpadded","qualname":"::variant::url::Base64UrlUnpadded","value":"","parent":null,"children":[],"decl_id":null,"docs":" URL-safe Base64 encoding *without* padding.","sig":null,"attributes":[{"value":"/ URL-safe Base64 encoding *without* padding.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":57263,"byte_end":57310,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":57311,"byte_end":57314,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":57315,"byte_end":57326,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ [A-Z]      [a-z]      [0-9]      -     _","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":57327,"byte_end":57371,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ 0x41-0x5a, 0x61-0x7a, 0x30-0x39, 0x2d, 0x5f","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":57372,"byte_end":57419,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":57420,"byte_end":57427,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":333},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50518,"byte_end":50525,"line_start":14,"line_end":14,"column_start":11,"column_end":18},"name":"Variant","qualname":"::variant::Variant","value":"Variant: 'static + Copy + Debug + Eq + Send + Sized + Sync","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"decl_id":null,"docs":" Core encoder/decoder functions for a particular Base64 variant\n","sig":null,"attributes":[{"value":"/ Core encoder/decoder functions for a particular Base64 variant","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50441,"byte_end":50507,"line_start":13,"line_end":13,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":334},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50718,"byte_end":50726,"line_start":18,"line_end":18,"column_start":10,"column_end":18},"name":"Unpadded","qualname":"::variant::Variant::Unpadded","value":"type Unpadded: Variant;","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Unpadded equivalent of this variant.","sig":null,"attributes":[{"value":"/ Unpadded equivalent of this variant.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50583,"byte_end":50623,"line_start":15,"line_end":15,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50628,"byte_end":50631,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ For variants that are unpadded to begin with, this should be `Self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50636,"byte_end":50708,"line_start":17,"line_end":17,"column_start":5,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":335},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50781,"byte_end":50787,"line_start":21,"line_end":21,"column_start":11,"column_end":17},"name":"PADDED","qualname":"::variant::Variant::PADDED","value":"bool","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Is this encoding padded?\n","sig":null,"attributes":[{"value":"/ Is this encoding padded?","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50742,"byte_end":50770,"line_start":20,"line_end":20,"column_start":5,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":336},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50854,"byte_end":50858,"line_start":24,"line_end":24,"column_start":11,"column_end":15},"name":"BASE","qualname":"::variant::Variant::BASE","value":"u8","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" First character in this Base64 alphabet\n","sig":null,"attributes":[{"value":"/ First character in this Base64 alphabet","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50800,"byte_end":50843,"line_start":23,"line_end":23,"column_start":5,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":337},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50898,"byte_end":50905,"line_start":27,"line_end":27,"column_start":11,"column_end":18},"name":"DECODER","qualname":"::variant::Variant::DECODER","value":"&'static [Decode]","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Decoder passes\n","sig":null,"attributes":[{"value":"/ Decoder passes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50869,"byte_end":50887,"line_start":26,"line_end":26,"column_start":5,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":338},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50960,"byte_end":50967,"line_start":30,"line_end":30,"column_start":11,"column_end":18},"name":"ENCODER","qualname":"::variant::Variant::ENCODER","value":"&'static [Encode]","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Encoder passes\n","sig":null,"attributes":[{"value":"/ Encoder passes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50931,"byte_end":50949,"line_start":29,"line_end":29,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":51062,"byte_end":51075,"line_start":34,"line_end":34,"column_start":8,"column_end":21},"name":"decode_3bytes","qualname":"::variant::Variant::decode_3bytes","value":"pub fn decode_3bytes(&[u8], &mut [u8]) -> i16","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Decode 3 bytes of a Base64 message.\n","sig":null,"attributes":[{"value":"/ Decode 3 bytes of a Base64 message.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50993,"byte_end":51032,"line_start":32,"line_end":32,"column_start":5,"column_end":44}},{"value":"inline(always)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":51037,"byte_end":51054,"line_start":33,"line_end":33,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":51639,"byte_end":51651,"line_start":51,"line_end":51,"column_start":8,"column_end":20},"name":"decode_6bits","qualname":"::variant::Variant::decode_6bits","value":"pub fn decode_6bits(u8) -> i16","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Decode 6-bits of a Base64 message\n","sig":null,"attributes":[{"value":"/ Decode 6-bits of a Base64 message","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":51594,"byte_end":51631,"line_start":50,"line_end":50,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":52477,"byte_end":52490,"line_start":75,"line_end":75,"column_start":8,"column_end":21},"name":"encode_3bytes","qualname":"::variant::Variant::encode_3bytes","value":"pub fn encode_3bytes(&[u8], &mut [u8])","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Encode 3-bytes of a Base64 message\n","sig":null,"attributes":[{"value":"/ Encode 3-bytes of a Base64 message","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":52409,"byte_end":52447,"line_start":73,"line_end":73,"column_start":5,"column_end":43}},{"value":"inline(always)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":52452,"byte_end":52469,"line_start":74,"line_end":74,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":53034,"byte_end":53046,"line_start":91,"line_end":91,"column_start":8,"column_end":20},"name":"encode_6bits","qualname":"::variant::Variant::encode_6bits","value":"pub fn encode_6bits(i16) -> u8","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Encode 6-bits of a Base64 message\n","sig":null,"attributes":[{"value":"/ Encode 6-bits of a Base64 message","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":52967,"byte_end":53004,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"inline(always)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":53009,"byte_end":53026,"line_start":90,"line_end":90,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":586},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":53563,"byte_end":53568,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"name":"Range","qualname":"::variant::Decode::Range","value":"Decode::Range(Range<u8>, i16)","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":" Match the given range, offsetting the input on match\n","sig":null,"attributes":[{"value":"/ Match the given range, offsetting the input on match","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":53502,"byte_end":53558,"line_start":108,"line_end":108,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":590},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":53663,"byte_end":53665,"line_start":112,"line_end":112,"column_start":5,"column_end":7},"name":"Eq","qualname":"::variant::Decode::Eq","value":"Decode::Eq(u8, i16)","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":" Match the given value, returning the associated offset on match\n","sig":null,"attributes":[{"value":"/ Match the given value, returning the associated offset on match","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":53591,"byte_end":53658,"line_start":111,"line_end":111,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":585},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":53489,"byte_end":53495,"line_start":107,"line_end":107,"column_start":10,"column_end":16},"name":"Decode","qualname":"::variant::Decode","value":"pub enum Decode { Range(Range<u8>, i16), Eq(u8, i16), }","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":590}],"decl_id":null,"docs":" Constant-time decoder step\n","sig":null,"attributes":[{"value":"/ Constant-time decoder step","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":53432,"byte_end":53462,"line_start":105,"line_end":105,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":597},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":53827,"byte_end":53832,"line_start":119,"line_end":119,"column_start":5,"column_end":10},"name":"Apply","qualname":"::variant::Encode::Apply","value":"Encode::Apply(u8, i16)","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Apply the given offset to the cumulative result on match\n","sig":null,"attributes":[{"value":"/ Apply the given offset to the cumulative result on match","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":53762,"byte_end":53822,"line_start":118,"line_end":118,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":601},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":53909,"byte_end":53913,"line_start":122,"line_end":122,"column_start":5,"column_end":9},"name":"Diff","qualname":"::variant::Encode::Diff","value":"Encode::Diff(u8, i16)","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Compute a difference using the given offset on match\n","sig":null,"attributes":[{"value":"/ Compute a difference using the given offset on match","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":53848,"byte_end":53904,"line_start":121,"line_end":121,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":596},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":53749,"byte_end":53755,"line_start":117,"line_end":117,"column_start":10,"column_end":16},"name":"Encode","qualname":"::variant::Encode","value":"pub enum Encode { Apply(u8, i16), Diff(u8, i16), }","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":601}],"decl_id":null,"docs":" Constant-time encoder step\n","sig":null,"attributes":[{"value":"/ Constant-time encoder step","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":53679,"byte_end":53709,"line_start":115,"line_end":115,"column_start":1,"column_end":31}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":3743,"byte_end":3750,"line_start":43,"line_end":43,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":12399,"byte_end":12410,"line_start":290,"line_end":290,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":13912,"byte_end":13916,"line_start":338,"line_end":338,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":13991,"byte_end":13995,"line_start":344,"line_end":344,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":15486,"byte_end":15496,"line_start":399,"line_end":399,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":19278,"byte_end":19288,"line_start":499,"line_end":499,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":23780,"byte_end":23787,"line_start":38,"line_end":38,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":29057,"byte_end":29068,"line_start":194,"line_end":194,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":30457,"byte_end":30468,"line_start":241,"line_end":241,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":36108,"byte_end":36109,"line_start":54,"line_end":54,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":191},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":46899,"byte_end":46917,"line_start":12,"line_end":12,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":47266,"byte_end":47286,"line_start":25,"line_end":25,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":47794,"byte_end":47799,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":48098,"byte_end":48103,"line_start":54,"line_end":54,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":48242,"byte_end":48247,"line_start":61,"line_end":61,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":48384,"byte_end":48389,"line_start":68,"line_end":68,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49514,"byte_end":49524,"line_start":26,"line_end":26,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49806,"byte_end":49816,"line_start":39,"line_end":39,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/bcrypt.rs","byte_start":54224,"byte_end":54236,"line_start":14,"line_end":14,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/crypt.rs","byte_start":54967,"byte_end":54978,"line_start":14,"line_end":14,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":55646,"byte_end":55652,"line_start":14,"line_end":14,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":56103,"byte_end":56117,"line_start":31,"line_end":31,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":57055,"byte_end":57064,"line_start":14,"line_end":14,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":57521,"byte_end":57538,"line_start":31,"line_end":31,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":3743,"byte_end":3750,"line_start":43,"line_end":43,"column_start":23,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":12399,"byte_end":12410,"line_start":290,"line_end":290,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":13912,"byte_end":13916,"line_start":338,"line_end":338,"column_start":22,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":411},"to":{"krate":1,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":13991,"byte_end":13995,"line_start":344,"line_end":344,"column_start":10,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":15486,"byte_end":15496,"line_start":399,"line_end":399,"column_start":10,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/decoder.rs","byte_start":19278,"byte_end":19288,"line_start":499,"line_end":499,"column_start":23,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":420},"to":{"krate":1,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":23780,"byte_end":23787,"line_start":38,"line_end":38,"column_start":23,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":29057,"byte_end":29068,"line_start":194,"line_end":194,"column_start":6,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoder.rs","byte_start":30457,"byte_end":30468,"line_start":241,"line_end":241,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":34712,"byte_end":34719,"line_start":19,"line_end":19,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":333},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/encoding.rs","byte_start":36108,"byte_end":36109,"line_start":54,"line_end":54,"column_start":31,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":186},"to":{"krate":0,"index":176}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":46899,"byte_end":46917,"line_start":12,"line_end":12,"column_start":23,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":443},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":47266,"byte_end":47286,"line_start":25,"line_end":25,"column_start":23,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":456},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":47794,"byte_end":47799,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":48098,"byte_end":48103,"line_start":54,"line_end":54,"column_start":37,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":48242,"byte_end":48247,"line_start":61,"line_end":61,"column_start":35,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/errors.rs","byte_start":48384,"byte_end":48389,"line_start":68,"line_end":68,"column_start":37,"column_end":42},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49514,"byte_end":49524,"line_start":26,"line_end":26,"column_start":18,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":485},"to":{"krate":1,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/line_ending.rs","byte_start":49806,"byte_end":49816,"line_start":39,"line_end":39,"column_start":6,"column_end":16},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/bcrypt.rs","byte_start":54224,"byte_end":54236,"line_start":14,"line_end":14,"column_start":18,"column_end":30},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":507},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/crypt.rs","byte_start":54967,"byte_end":54978,"line_start":14,"line_end":14,"column_start":18,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":520},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":55646,"byte_end":55652,"line_start":14,"line_end":14,"column_start":18,"column_end":24},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":533},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/standard.rs","byte_start":56103,"byte_end":56117,"line_start":31,"line_end":31,"column_start":18,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":546},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":57055,"byte_end":57064,"line_start":14,"line_end":14,"column_start":18,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":559},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant/url.rs","byte_start":57521,"byte_end":57538,"line_start":31,"line_end":31,"column_start":18,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":572},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50537,"byte_end":50541,"line_start":14,"line_end":14,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3067},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50544,"byte_end":50549,"line_start":14,"line_end":14,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":9678},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50552,"byte_end":50554,"line_start":14,"line_end":14,"column_start":45,"column_end":47},"kind":"SuperTrait","from":{"krate":1,"index":2714},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50557,"byte_end":50561,"line_start":14,"line_end":14,"column_start":50,"column_end":54},"kind":"SuperTrait","from":{"krate":1,"index":3057},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50564,"byte_end":50569,"line_start":14,"line_end":14,"column_start":57,"column_end":62},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.0/src/variant.rs","byte_start":50572,"byte_end":50576,"line_start":14,"line_end":14,"column_start":65,"column_end":69},"kind":"SuperTrait","from":{"krate":1,"index":3069},"to":{"krate":0,"index":333}}]}