{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1","program":"/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","elliptic_curve","--edition=2021","/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"arithmetic\"","--cfg","feature=\"digest\"","--cfg","feature=\"ff\"","--cfg","feature=\"group\"","--cfg","feature=\"hazmat\"","--cfg","feature=\"sec1\"","-C","metadata=ddfd1d1871d78435","-C","extra-filename=-ddfd1d1871d78435","--out-dir","/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","-L","dependency=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","--extern","base16ct=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libbase16ct-bbe29cf6e1eed6bc.rmeta","--extern","crypto_bigint=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libcrypto_bigint-9cbeea6dc127a4c4.rmeta","--extern","der=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libder-16fb6d43d5c3ba0e.rmeta","--extern","digest=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libdigest-ce406066c76502e9.rmeta","--extern","ff=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libff-65216422858aa8c4.rmeta","--extern","generic_array=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libgeneric_array-3461042ac24cc513.rmeta","--extern","group=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libgroup-7dd6832b457ed227.rmeta","--extern","rand_core=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/librand_core-1b5cc875b7cb497b.rmeta","--extern","sec1=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libsec1-896282e62048c4df.rmeta","--extern","subtle=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libsubtle-045d338d50e14c25.rmeta","--extern","zeroize=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libzeroize-37937ab9f86ee0c3.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libelliptic_curve-ddfd1d1871d78435.rmeta"},"prelude":{"crate_id":{"name":"elliptic_curve","disambiguator":[13708530490539357062,0]},"crate_root":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src","external_crates":[{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":4,"id":{"name":"crypto_bigint","disambiguator":[747627100676232980,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","num":5,"id":{"name":"generic_array","disambiguator":[5117534517313398275,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":6,"id":{"name":"typenum","disambiguator":[12951824868898580498,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":7,"id":{"name":"subtle","disambiguator":[15969924641935166007,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","num":8,"id":{"name":"rand_core","disambiguator":[14749913703318114235,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":9,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":10,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":11,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":12,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":13,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":14,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":15,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":16,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":17,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":18,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":19,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":20,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":21,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":22,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":23,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":24,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":25,"id":{"name":"getrandom","disambiguator":[3704475170953657525,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":26,"id":{"name":"cfg_if","disambiguator":[243630855546215384,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":27,"id":{"name":"libc","disambiguator":[7983304030901990540,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","num":28,"id":{"name":"zeroize","disambiguator":[7943284036021793154,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":29,"id":{"name":"group","disambiguator":[9828398496524124998,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","num":30,"id":{"name":"ff","disambiguator":[12736192218260541892,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":31,"id":{"name":"digest","disambiguator":[15328286446701961349,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":32,"id":{"name":"crypto_common","disambiguator":[13792449736262150043,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","num":33,"id":{"name":"block_buffer","disambiguator":[10962747732163064116,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","num":34,"id":{"name":"sec1","disambiguator":[6003666380812108157,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","num":35,"id":{"name":"base16ct","disambiguator":[7227140462002639331,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","num":36,"id":{"name":"der","disambiguator":[5662256837128332266,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","num":37,"id":{"name":"const_oid","disambiguator":[14167798212880222160,0]}}],"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":0,"byte_end":7318,"line_start":1,"line_end":220,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":3125},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21037,"byte_end":21040,"line_start":3,"line_end":3,"column_start":21,"column_end":24},"alias_span":null,"name":"Add","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":1,"index":3156},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21042,"byte_end":21051,"line_start":3,"line_end":3,"column_start":26,"column_end":35},"alias_span":null,"name":"AddAssign","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":1,"index":3135},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21053,"byte_end":21056,"line_start":3,"line_end":3,"column_start":37,"column_end":40},"alias_span":null,"name":"Mul","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":1,"index":3152},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21058,"byte_end":21061,"line_start":3,"line_end":3,"column_start":42,"column_end":45},"alias_span":null,"name":"Neg","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":1,"index":3130},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21063,"byte_end":21066,"line_start":3,"line_end":3,"column_start":47,"column_end":50},"alias_span":null,"name":"Sub","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":1,"index":3160},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21068,"byte_end":21077,"line_start":3,"line_end":3,"column_start":52,"column_end":61},"alias_span":null,"name":"SubAssign","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":34,"index":339},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":24211,"byte_end":24222,"line_start":5,"line_end":5,"column_start":23,"column_end":34},"alias_span":null,"name":"Coordinates","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":34,"index":65},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":24224,"byte_end":24235,"line_start":5,"line_end":5,"column_start":36,"column_end":47},"alias_span":null,"name":"ModulusSize","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":34,"index":378},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":24237,"byte_end":24240,"line_start":5,"line_end":5,"column_start":49,"column_end":52},"alias_span":null,"name":"Tag","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":949},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3340,"byte_end":3345,"line_start":108,"line_end":108,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":950},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3340,"byte_end":3345,"line_start":108,"line_end":108,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":143},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3347,"byte_end":3353,"line_start":108,"line_end":108,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":166},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3377,"byte_end":3394,"line_start":110,"line_end":110,"column_start":9,"column_end":26},"alias_span":null,"name":"AffineXCoordinate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3396,"byte_end":3410,"line_start":110,"line_end":110,"column_start":28,"column_end":42},"alias_span":null,"name":"DecompactPoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":169},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3412,"byte_end":3427,"line_start":110,"line_end":110,"column_start":44,"column_end":59},"alias_span":null,"name":"DecompressPoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3429,"byte_end":3444,"line_start":110,"line_end":110,"column_start":61,"column_end":76},"alias_span":null,"name":"PointCompaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":175},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3446,"byte_end":3462,"line_start":110,"line_end":110,"column_start":78,"column_end":94},"alias_span":null,"name":"PointCompression","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":962},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3490,"byte_end":3500,"line_start":112,"line_end":112,"column_start":20,"column_end":30},"alias_span":null,"name":"ScalarCore","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":583},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3502,"byte_end":3508,"line_start":112,"line_end":112,"column_start":32,"column_end":38},"alias_span":null,"name":"IsHigh","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":982},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3527,"byte_end":3536,"line_start":113,"line_end":113,"column_start":17,"column_end":26},"alias_span":null,"name":"SecretKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3549,"byte_end":3562,"line_start":115,"line_end":115,"column_start":9,"column_end":22},"alias_span":null,"name":"bigint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3582,"byte_end":3595,"line_start":116,"line_end":116,"column_start":9,"column_end":22},"alias_span":null,"name":"generic_array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":2827},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3613,"byte_end":3619,"line_start":116,"line_end":116,"column_start":40,"column_end":46},"alias_span":null,"name":"consts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":8,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3630,"byte_end":3639,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"alias_span":null,"name":"rand_core","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3649,"byte_end":3655,"line_start":118,"line_end":118,"column_start":9,"column_end":15},"alias_span":null,"name":"subtle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3665,"byte_end":3672,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"alias_span":null,"name":"zeroize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":736},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3763,"byte_end":3779,"line_start":125,"line_end":125,"column_start":13,"column_end":29},"alias_span":null,"name":"AffineArithmetic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":738},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3781,"byte_end":3801,"line_start":125,"line_end":125,"column_start":31,"column_end":51},"alias_span":null,"name":"PrimeCurveArithmetic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":740},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3803,"byte_end":3823,"line_start":125,"line_end":125,"column_start":53,"column_end":73},"alias_span":null,"name":"ProjectiveArithmetic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":742},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3825,"byte_end":3841,"line_start":125,"line_end":125,"column_start":75,"column_end":91},"alias_span":null,"name":"ScalarArithmetic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":988},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3874,"byte_end":3883,"line_start":127,"line_end":127,"column_start":21,"column_end":30},"alias_span":null,"name":"PublicKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":976},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3911,"byte_end":3924,"line_start":128,"line_end":128,"column_start":27,"column_end":40},"alias_span":null,"name":"NonZeroScalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":581},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3926,"byte_end":3932,"line_start":128,"line_end":128,"column_start":42,"column_end":48},"alias_span":null,"name":"Scalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3946,"byte_end":3948,"line_start":130,"line_end":130,"column_start":5,"column_end":7},"alias_span":null,"name":"ff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":62},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3957,"byte_end":3962,"line_start":130,"line_end":130,"column_start":16,"column_end":21},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":82},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3964,"byte_end":3974,"line_start":130,"line_end":130,"column_start":23,"column_end":33},"alias_span":null,"name":"PrimeField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3981,"byte_end":3986,"line_start":131,"line_end":131,"column_start":5,"column_end":10},"alias_span":null,"name":"group","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":176},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3995,"byte_end":4000,"line_start":131,"line_end":131,"column_start":19,"column_end":24},"alias_span":null,"name":"Group","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":0,"byte_end":7318,"line_start":1,"line_end":220,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":68},{"krate":0,"index":121},{"krate":0,"index":135},{"krate":0,"index":151},{"krate":0,"index":179},{"krate":0,"index":585},{"krate":0,"index":700},{"krate":0,"index":744},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":864},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":947}],"decl_id":null,"docs":"# RustCrypto: Elliptic Curve Traits","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code, clippy :: unwrap_used)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":286,"byte_end":330,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"warn(missing_docs, rust_2018_idioms, unused_qualifications)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":331,"byte_end":394,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ ## Usage","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":396,"byte_end":408,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":409,"byte_end":412,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This crate provides traits for describing elliptic curves, along with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":413,"byte_end":486,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ types which are generic over elliptic curves which can be used as the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":487,"byte_end":560,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ basis of curve-agnostic code.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":561,"byte_end":594,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":595,"byte_end":598,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ It's intended to be used with the following concrete elliptic curve","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":599,"byte_end":670,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ implementations from the [`RustCrypto/elliptic-curves`] project:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":671,"byte_end":739,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":740,"byte_end":743,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - [`bp256`]: brainpoolP256r1 and brainpoolP256t1","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":744,"byte_end":796,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/ - [`bp384`]: brainpoolP384r1 and brainpoolP384t1","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":797,"byte_end":849,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/ - [`k256`]: secp256k1 a.k.a. K-256","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":850,"byte_end":888,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ - [`p256`]: NIST P-256 a.k.a secp256r1, prime256v1","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":889,"byte_end":943,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"/ - [`p384`]: NIST P-384 a.k.a. secp384r1","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":944,"byte_end":987,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":988,"byte_end":991,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The [`ecdsa`] crate provides a generic implementation of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":992,"byte_end":1056,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ Elliptic Curve Digital Signature Algorithm which can be used with any of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1057,"byte_end":1133,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ the above crates, either via an external ECDSA implementation, or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1134,"byte_end":1203,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ using native curve arithmetic where applicable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1204,"byte_end":1255,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1256,"byte_end":1259,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Type conversions","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1260,"byte_end":1283,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1284,"byte_end":1287,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The following chart illustrates the various conversions possible between","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1288,"byte_end":1364,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ the various types defined by this crate.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1365,"byte_end":1409,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1410,"byte_end":1413,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ![Type Conversion Map](https://raw.githubusercontent.com/RustCrypto/media/master/img/elliptic-curve/type-transforms.svg)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1414,"byte_end":1538,"line_start":36,"line_end":36,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1539,"byte_end":1542,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ## `serde` support","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1543,"byte_end":1565,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1566,"byte_end":1569,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature of this crate is enabled, `Serialize` and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1570,"byte_end":1640,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/ `Deserialize` impls are provided for the following types:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1641,"byte_end":1702,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1703,"byte_end":1706,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ - [`JwkEcKey`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1707,"byte_end":1725,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ - [`PublicKey`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1726,"byte_end":1745,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ - [`ScalarCore`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1746,"byte_end":1766,"line_start":45,"line_end":45,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1767,"byte_end":1770,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Please see type-specific documentation for more information.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1771,"byte_end":1835,"line_start":47,"line_end":47,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1836,"byte_end":1839,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [`RustCrypto/elliptic-curves`]: https://github.com/RustCrypto/elliptic-curves","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1840,"byte_end":1921,"line_start":49,"line_end":49,"column_start":1,"column_end":82}},{"value":"/ [`bp256`]: https://github.com/RustCrypto/elliptic-curves/tree/master/bp256","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":1922,"byte_end":2000,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ [`bp384`]: https://github.com/RustCrypto/elliptic-curves/tree/master/bp384","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":2001,"byte_end":2079,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ [`k256`]: https://github.com/RustCrypto/elliptic-curves/tree/master/k256","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":2080,"byte_end":2156,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/ [`p256`]: https://github.com/RustCrypto/elliptic-curves/tree/master/p256","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":2157,"byte_end":2233,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ [`p384`]: https://github.com/RustCrypto/elliptic-curves/tree/master/p384","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":2234,"byte_end":2310,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ [`ecdsa`]: https://github.com/RustCrypto/signatures/tree/master/ecdsa","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":2311,"byte_end":2384,"line_start":55,"line_end":55,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ops","qualname":"::ops","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":65}],"decl_id":null,"docs":" Traits for arithmetic operations on elliptic curve field elements.\n","sig":null,"attributes":[{"value":"/ Traits for arithmetic operations on elliptic curve field elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":20945,"byte_end":21015,"line_start":1,"line_end":1,"column_start":1,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21351,"byte_end":21357,"line_start":14,"line_end":14,"column_start":11,"column_end":17},"name":"Invert","qualname":"::ops::Invert","value":"Invert","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":" Perform an inversion on a field element (i.e. base field element or scalar)\n","sig":null,"attributes":[{"value":"/ Perform an inversion on a field element (i.e. base field element or scalar)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21261,"byte_end":21340,"line_start":13,"line_end":13,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":48},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21396,"byte_end":21402,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::Invert::Output","value":"type Output;","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Field element type\n","sig":null,"attributes":[{"value":"/ Field element type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21364,"byte_end":21386,"line_start":15,"line_end":15,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21444,"byte_end":21450,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"invert","qualname":"::ops::Invert::invert","value":"pub fn invert(&Self) -> Self::Output","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Invert a field element.\n","sig":null,"attributes":[{"value":"/ Invert a field element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21409,"byte_end":21436,"line_start":18,"line_end":18,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":54},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":22055,"byte_end":22072,"line_start":39,"line_end":39,"column_start":11,"column_end":28},"name":"LinearCombination","qualname":"::ops::LinearCombination","value":"LinearCombination: Group","parent":null,"children":[{"krate":0,"index":55}],"decl_id":null,"docs":" Linear combination.","sig":null,"attributes":[{"value":"/ Linear combination.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21654,"byte_end":21677,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21678,"byte_end":21681,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait enables crates to provide an optimized implementation of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21682,"byte_end":21753,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ linear combinations (e.g. Shamir's Trick), or otherwise provides a default","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21754,"byte_end":21832,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ non-optimized implementation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21833,"byte_end":21866,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21960,"byte_end":21990,"line_start":37,"line_end":37,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":22125,"byte_end":22132,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"lincomb","qualname":"::ops::LinearCombination::lincomb","value":"pub fn lincomb(&Self, &Self::Scalar, &Self, &Self::Scalar) -> Self","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Calculates `x * k + y * l`.\n","sig":null,"attributes":[{"value":"/ Calculates `x * k + y * l`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":22086,"byte_end":22117,"line_start":40,"line_end":40,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":22269,"byte_end":22275,"line_start":47,"line_end":47,"column_start":11,"column_end":17},"name":"Reduce","qualname":"::ops::Reduce","value":"Reduce<UInt: Integer + ArrayEncoding>: Sized","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":63}],"decl_id":null,"docs":" Modular reduction.\n","sig":null,"attributes":[{"value":"/ Modular reduction.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":22236,"byte_end":22258,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":22387,"byte_end":22404,"line_start":49,"line_end":49,"column_start":8,"column_end":25},"name":"from_uint_reduced","qualname":"::ops::Reduce::from_uint_reduced","value":"pub fn from_uint_reduced(UInt) -> Self","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Perform a modular reduction, returning a field element.\n","sig":null,"attributes":[{"value":"/ Perform a modular reduction, returning a field element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":22320,"byte_end":22379,"line_start":48,"line_end":48,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":22535,"byte_end":22556,"line_start":53,"line_end":53,"column_start":8,"column_end":29},"name":"from_be_bytes_reduced","qualname":"::ops::Reduce::from_be_bytes_reduced","value":"pub fn from_be_bytes_reduced(ByteArray<UInt>) -> Self","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Interpret the given byte array as a big endian integer and perform\n a modular reduction.\n","sig":null,"attributes":[{"value":"/ Interpret the given byte array as a big endian integer and perform","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":22428,"byte_end":22498,"line_start":51,"line_end":51,"column_start":5,"column_end":75}},{"value":"/ a modular reduction.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":22503,"byte_end":22527,"line_start":52,"line_end":52,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":22777,"byte_end":22798,"line_start":59,"line_end":59,"column_start":8,"column_end":29},"name":"from_le_bytes_reduced","qualname":"::ops::Reduce::from_le_bytes_reduced","value":"pub fn from_le_bytes_reduced(ByteArray<UInt>) -> Self","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Interpret the given byte array as a little endian integer and perform a\n modular reduction.\n","sig":null,"attributes":[{"value":"/ Interpret the given byte array as a little endian integer and perform a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":22667,"byte_end":22742,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ modular reduction.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":22747,"byte_end":22769,"line_start":58,"line_end":58,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":23089,"byte_end":23111,"line_start":67,"line_end":67,"column_start":8,"column_end":30},"name":"from_be_digest_reduced","qualname":"::ops::Reduce::from_be_digest_reduced","value":"pub fn from_be_digest_reduced<D>(D) -> Self where D: FixedOutput<OutputSize =\nUInt::ByteSize>","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Interpret a digest as a big endian integer and perform a modular\n reduction.\n","sig":null,"attributes":[{"value":"/ Interpret a digest as a big endian integer and perform a modular","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":22909,"byte_end":22977,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ reduction.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":22982,"byte_end":22996,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"cfg(feature = \"digest\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":23001,"byte_end":23027,"line_start":65,"line_end":65,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":23458,"byte_end":23480,"line_start":78,"line_end":78,"column_start":8,"column_end":30},"name":"from_le_digest_reduced","qualname":"::ops::Reduce::from_le_digest_reduced","value":"pub fn from_le_digest_reduced<D>(D) -> Self where D: FixedOutput<OutputSize =\nUInt::ByteSize>","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Interpret a digest as a little endian integer and perform a modular\n reduction.\n","sig":null,"attributes":[{"value":"/ Interpret a digest as a little endian integer and perform a modular","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":23275,"byte_end":23346,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ reduction.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":23351,"byte_end":23365,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"cfg(feature = \"digest\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":23370,"byte_end":23396,"line_start":76,"line_end":76,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":65},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":23919,"byte_end":23932,"line_start":93,"line_end":93,"column_start":11,"column_end":24},"name":"ReduceNonZero","qualname":"::ops::ReduceNonZero","value":"ReduceNonZero<UInt: Integer + ArrayEncoding>: Sized","parent":null,"children":[{"krate":0,"index":67}],"decl_id":null,"docs":" Modular reduction to a non-zero output.","sig":null,"attributes":[{"value":"/ Modular reduction to a non-zero output.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":23642,"byte_end":23685,"line_start":86,"line_end":86,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":23686,"byte_end":23689,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ This trait is primarily intended for use by curve implementations such","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":23690,"byte_end":23764,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ as the `k256` and `p256` crates.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":23765,"byte_end":23801,"line_start":89,"line_end":89,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":23802,"byte_end":23805,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ End users should use the [`Reduce`] impl on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":23806,"byte_end":23853,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"/ [`NonZeroScalar`][`crate::NonZeroScalar`] instead.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":23854,"byte_end":23908,"line_start":92,"line_end":92,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":24044,"byte_end":24069,"line_start":95,"line_end":95,"column_start":8,"column_end":33},"name":"from_uint_reduced_nonzero","qualname":"::ops::ReduceNonZero::from_uint_reduced_nonzero","value":"pub fn from_uint_reduced_nonzero(UInt) -> Self","parent":{"krate":0,"index":65},"children":[],"decl_id":null,"docs":" Perform a modular reduction, returning a field element.\n","sig":null,"attributes":[{"value":"/ Perform a modular reduction, returning a field element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":23977,"byte_end":24036,"line_start":94,"line_end":94,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":68},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sec1","qualname":"::sec1","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":118}],"decl_id":null,"docs":" Support for SEC1 elliptic curve encoding formats.","sig":null,"attributes":[{"value":"cfg(feature = \"sec1\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":2936,"byte_end":2960,"line_start":86,"line_end":86,"column_start":1,"column_end":25}},{"value":"/ Support for SEC1 elliptic curve encoding formats.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":24091,"byte_end":24144,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":24145,"byte_end":24148,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ <https://www.secg.org/sec1-v2.pdf>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":24149,"byte_end":24187,"line_start":3,"line_end":3,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":105},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":24485,"byte_end":24497,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"EncodedPoint","qualname":"::sec1::EncodedPoint","value":"sec1::point::EncodedPoint<FieldSize<C>>","parent":null,"children":[],"decl_id":null,"docs":" Encoded elliptic curve point sized appropriately for a given curve.\n","sig":null,"attributes":[{"value":"/ Encoded elliptic curve point sized appropriately for a given curve.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":24404,"byte_end":24475,"line_start":13,"line_end":13,"column_start":1,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":107},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":24713,"byte_end":24729,"line_start":19,"line_end":19,"column_start":11,"column_end":27},"name":"FromEncodedPoint","qualname":"::sec1::FromEncodedPoint","value":"FromEncodedPoint<C>","parent":null,"children":[{"krate":0,"index":109}],"decl_id":null,"docs":" Trait for deserializing a value from a SEC1 encoded curve point.","sig":null,"attributes":[{"value":"/ Trait for deserializing a value from a SEC1 encoded curve point.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":24545,"byte_end":24613,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":24614,"byte_end":24617,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This is intended for use with the `AffinePoint` type for a given elliptic curve.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":24618,"byte_end":24702,"line_start":18,"line_end":18,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":24889,"byte_end":24907,"line_start":26,"line_end":26,"column_start":8,"column_end":26},"name":"from_encoded_point","qualname":"::sec1::FromEncodedPoint::from_encoded_point","value":"pub fn from_encoded_point(&EncodedPoint<C>) -> CtOption<Self>","parent":{"krate":0,"index":107},"children":[],"decl_id":null,"docs":" Deserialize the type this trait is impl'd on from an [`EncodedPoint`].\n","sig":null,"attributes":[{"value":"/ Deserialize the type this trait is impl'd on from an [`EncodedPoint`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":24807,"byte_end":24881,"line_start":25,"line_end":25,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25119,"byte_end":25133,"line_start":32,"line_end":32,"column_start":11,"column_end":25},"name":"ToEncodedPoint","qualname":"::sec1::ToEncodedPoint","value":"ToEncodedPoint<C>","parent":null,"children":[{"krate":0,"index":112}],"decl_id":null,"docs":" Trait for serializing a value to a SEC1 encoded curve point.","sig":null,"attributes":[{"value":"/ Trait for serializing a value to a SEC1 encoded curve point.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":24955,"byte_end":25019,"line_start":29,"line_end":29,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25020,"byte_end":25023,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This is intended for use with the `AffinePoint` type for a given elliptic curve.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25024,"byte_end":25108,"line_start":31,"line_end":31,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25301,"byte_end":25317,"line_start":39,"line_end":39,"column_start":8,"column_end":24},"name":"to_encoded_point","qualname":"::sec1::ToEncodedPoint::to_encoded_point","value":"pub fn to_encoded_point(&Self, bool) -> EncodedPoint<C>","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Serialize this value as a SEC1 [`EncodedPoint`], optionally applying\n point compression.\n","sig":null,"attributes":[{"value":"/ Serialize this value as a SEC1 [`EncodedPoint`], optionally applying","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25194,"byte_end":25266,"line_start":37,"line_end":37,"column_start":5,"column_end":77}},{"value":"/ point compression.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25271,"byte_end":25293,"line_start":38,"line_end":38,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25544,"byte_end":25565,"line_start":45,"line_end":45,"column_start":11,"column_end":32},"name":"ToCompactEncodedPoint","qualname":"::sec1::ToCompactEncodedPoint","value":"ToCompactEncodedPoint<C>","parent":null,"children":[{"krate":0,"index":115}],"decl_id":null,"docs":" Trait for serializing a value to a SEC1 encoded curve point with compaction.","sig":null,"attributes":[{"value":"/ Trait for serializing a value to a SEC1 encoded curve point with compaction.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25364,"byte_end":25444,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25445,"byte_end":25448,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This is intended for use with the `AffinePoint` type for a given elliptic curve.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25449,"byte_end":25533,"line_start":44,"line_end":44,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25733,"byte_end":25757,"line_start":52,"line_end":52,"column_start":8,"column_end":32},"name":"to_compact_encoded_point","qualname":"::sec1::ToCompactEncodedPoint::to_compact_encoded_point","value":"pub fn to_compact_encoded_point(&Self) -> CtOption<EncodedPoint<C>>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Serialize this value as a SEC1 [`EncodedPoint`], optionally applying\n point compression.\n","sig":null,"attributes":[{"value":"/ Serialize this value as a SEC1 [`EncodedPoint`], optionally applying","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25626,"byte_end":25698,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ point compression.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25703,"byte_end":25725,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":116},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":26044,"byte_end":26061,"line_start":60,"line_end":60,"column_start":11,"column_end":28},"name":"ValidatePublicKey","qualname":"::sec1::ValidatePublicKey","value":"ValidatePublicKey","parent":null,"children":[{"krate":0,"index":117}],"decl_id":null,"docs":" Validate that the given [`EncodedPoint`] represents the encoded public key\n value of the given secret.","sig":null,"attributes":[{"value":"/ Validate that the given [`EncodedPoint`] represents the encoded public key","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25798,"byte_end":25876,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ value of the given secret.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25877,"byte_end":25907,"line_start":56,"line_end":56,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25908,"byte_end":25911,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Curve implementations which also impl [`ProjectiveArithmetic`] will receive","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25912,"byte_end":25991,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ a blanket default impl of this trait.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":25992,"byte_end":26033,"line_start":59,"line_end":59,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":26269,"byte_end":26288,"line_start":68,"line_end":68,"column_start":8,"column_end":27},"name":"validate_public_key","qualname":"::sec1::ValidatePublicKey::validate_public_key","value":"pub fn validate_public_key(&SecretKey<Self>, &EncodedPoint<Self>)\n-> Result<()>","parent":{"krate":0,"index":116},"children":[],"decl_id":null,"docs":" Validate that the given [`EncodedPoint`] is a valid public key for the\n provided secret value.\n","sig":null,"attributes":[{"value":"/ Validate that the given [`EncodedPoint`] is a valid public key for the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":26125,"byte_end":26199,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ provided secret value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":26204,"byte_end":26230,"line_start":66,"line_end":66,"column_start":5,"column_end":31}},{"value":"allow(unused_variables)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":26235,"byte_end":26261,"line_start":67,"line_end":67,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":121},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"weierstrass","qualname":"::weierstrass","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133}],"decl_id":null,"docs":" Complete projective formulas for prime order elliptic curves as described\n in [Renes-Costello-Batina 2015].","sig":null,"attributes":[{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3024,"byte_end":3054,"line_start":90,"line_end":90,"column_start":1,"column_end":31}},{"value":"/ Complete projective formulas for prime order elliptic curves as described","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":27300,"byte_end":27377,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ in [Renes-Costello-Batina 2015].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":27378,"byte_end":27414,"line_start":2,"line_end":2,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":27415,"byte_end":27418,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ [Renes-Costello-Batina 2015]: https://eprint.iacr.org/2015/1060","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":27419,"byte_end":27486,"line_start":4,"line_end":4,"column_start":1,"column_end":68}},{"value":"allow(clippy :: op_ref)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":27488,"byte_end":27513,"line_start":6,"line_end":6,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":125},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":27619,"byte_end":27630,"line_start":11,"line_end":11,"column_start":10,"column_end":21},"name":"AffinePoint","qualname":"::weierstrass::AffinePoint","value":"(Fe, Fe)","parent":null,"children":[],"decl_id":null,"docs":" Affine point whose coordinates are represented by the given field element.\n","sig":null,"attributes":[{"value":"/ Affine point whose coordinates are represented by the given field element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":27531,"byte_end":27609,"line_start":10,"line_end":10,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":127},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":27740,"byte_end":27755,"line_start":14,"line_end":14,"column_start":10,"column_end":25},"name":"ProjectivePoint","qualname":"::weierstrass::ProjectivePoint","value":"(Fe, Fe, Fe)","parent":null,"children":[],"decl_id":null,"docs":" Projective point whose coordinates are represented by the given field element.\n","sig":null,"attributes":[{"value":"/ Projective point whose coordinates are represented by the given field element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":27648,"byte_end":27730,"line_start":13,"line_end":13,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":129},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":27972,"byte_end":27975,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"add","qualname":"::weierstrass::add","value":"pub fn add<Fe>(ProjectivePoint<Fe>, ProjectivePoint<Fe>, Fe)\n-> ProjectivePoint<Fe> where Fe: Field","parent":null,"children":[],"decl_id":null,"docs":" Implements the complete addition formula from [Renes-Costello-Batina 2015]\n (Algorithm 4).","sig":null,"attributes":[{"value":"/ Implements the complete addition formula from [Renes-Costello-Batina 2015]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":27777,"byte_end":27855,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ (Algorithm 4).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":27856,"byte_end":27874,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":27875,"byte_end":27878,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [Renes-Costello-Batina 2015]: https://eprint.iacr.org/2015/1060","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":27879,"byte_end":27946,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":27947,"byte_end":27964,"line_start":20,"line_end":20,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":131},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":29447,"byte_end":29456,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"add_mixed","qualname":"::weierstrass::add_mixed","value":"pub fn add_mixed<Fe>(ProjectivePoint<Fe>, AffinePoint<Fe>, Fe)\n-> ProjectivePoint<Fe> where Fe: Field","parent":null,"children":[],"decl_id":null,"docs":" Implements the complete mixed addition formula from\n [Renes-Costello-Batina 2015] (Algorithm 5).","sig":null,"attributes":[{"value":"/ Implements the complete mixed addition formula from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":29246,"byte_end":29301,"line_start":55,"line_end":55,"column_start":1,"column_end":56}},{"value":"/ [Renes-Costello-Batina 2015] (Algorithm 5).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":29302,"byte_end":29349,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":29350,"byte_end":29353,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [Renes-Costello-Batina 2015]: https://eprint.iacr.org/2015/1060","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":29354,"byte_end":29421,"line_start":58,"line_end":58,"column_start":1,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":29422,"byte_end":29439,"line_start":59,"line_end":59,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":133},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":30835,"byte_end":30841,"line_start":98,"line_end":98,"column_start":8,"column_end":14},"name":"double","qualname":"::weierstrass::double","value":"pub fn double<Fe>(ProjectivePoint<Fe>, Fe) -> ProjectivePoint<Fe> where\nFe: Field","parent":null,"children":[],"decl_id":null,"docs":" Implements the exception-free point doubling formula from\n [Renes-Costello-Batina 2015] (Algorithm 6).","sig":null,"attributes":[{"value":"/ Implements the exception-free point doubling formula from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":30628,"byte_end":30689,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"/ [Renes-Costello-Batina 2015] (Algorithm 6).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":30690,"byte_end":30737,"line_start":94,"line_end":94,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":30738,"byte_end":30741,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [Renes-Costello-Batina 2015]: https://eprint.iacr.org/2015/1060","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":30742,"byte_end":30809,"line_start":96,"line_end":96,"column_start":1,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/weierstrass.rs","byte_start":30810,"byte_end":30827,"line_start":97,"line_end":97,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":143},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/error.rs","byte_start":32157,"byte_end":32163,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type with the `elliptic-curve` crate's [`Error`] type.\n","sig":null,"attributes":[{"value":"/ Result type with the `elliptic-curve` crate's [`Error`] type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/error.rs","byte_start":32082,"byte_end":32147,"line_start":8,"line_end":8,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":949},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/error.rs","byte_start":32285,"byte_end":32290,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Elliptic curve errors.\n","sig":null,"attributes":[{"value":"/ Elliptic curve errors.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/error.rs","byte_start":32202,"byte_end":32228,"line_start":11,"line_end":11,"column_start":1,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":166},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33016,"byte_end":33033,"line_start":7,"line_end":7,"column_start":11,"column_end":28},"name":"AffineXCoordinate","qualname":"::point::AffineXCoordinate","value":"AffineXCoordinate<C: Curve>","parent":null,"children":[{"krate":0,"index":168}],"decl_id":null,"docs":" Obtain the affine x-coordinate of an elliptic curve point.\n","sig":null,"attributes":[{"value":"/ Obtain the affine x-coordinate of an elliptic curve point.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":32943,"byte_end":33005,"line_start":6,"line_end":6,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33120,"byte_end":33121,"line_start":9,"line_end":9,"column_start":8,"column_end":9},"name":"x","qualname":"::point::AffineXCoordinate::x","value":"pub fn x(&Self) -> FieldBytes<C>","parent":{"krate":0,"index":166},"children":[],"decl_id":null,"docs":" Get the affine x-coordinate as a serialized field element.\n","sig":null,"attributes":[{"value":"/ Get the affine x-coordinate as a serialized field element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33050,"byte_end":33112,"line_start":8,"line_end":8,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":169},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33357,"byte_end":33372,"line_start":16,"line_end":16,"column_start":11,"column_end":26},"name":"DecompressPoint","qualname":"::point::DecompressPoint","value":"DecompressPoint<C: Curve>: Sized","parent":null,"children":[{"krate":0,"index":171}],"decl_id":null,"docs":" Decompress an elliptic curve point.","sig":null,"attributes":[{"value":"/ Decompress an elliptic curve point.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33150,"byte_end":33189,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33190,"byte_end":33193,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Point decompression recovers an original curve point from its x-coordinate","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33194,"byte_end":33272,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ and a boolean flag indicating whether or not the y-coordinate is odd.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33273,"byte_end":33346,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33454,"byte_end":33464,"line_start":18,"line_end":18,"column_start":8,"column_end":18},"name":"decompress","qualname":"::point::DecompressPoint::decompress","value":"pub fn decompress(&FieldBytes<C>, Choice) -> CtOption<Self>","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":" Attempt to decompress an elliptic curve point.\n","sig":null,"attributes":[{"value":"/ Attempt to decompress an elliptic curve point.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33396,"byte_end":33446,"line_start":17,"line_end":17,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":172},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33744,"byte_end":33758,"line_start":25,"line_end":25,"column_start":11,"column_end":25},"name":"DecompactPoint","qualname":"::point::DecompactPoint","value":"DecompactPoint<C: Curve>: Sized","parent":null,"children":[{"krate":0,"index":174}],"decl_id":null,"docs":" Decompact an elliptic curve point from an x-coordinate.","sig":null,"attributes":[{"value":"/ Decompact an elliptic curve point from an x-coordinate.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33524,"byte_end":33583,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33584,"byte_end":33587,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Decompaction relies on properties of specially-generated keys but provides","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33588,"byte_end":33666,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ a more compact representation than standard point compression.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33667,"byte_end":33733,"line_start":24,"line_end":24,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33838,"byte_end":33847,"line_start":27,"line_end":27,"column_start":8,"column_end":17},"name":"decompact","qualname":"::point::DecompactPoint::decompact","value":"pub fn decompact(&FieldBytes<C>) -> CtOption<Self>","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":" Attempt to decompact an elliptic curve point\n","sig":null,"attributes":[{"value":"/ Attempt to decompact an elliptic curve point","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33782,"byte_end":33830,"line_start":26,"line_end":26,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":175},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33931,"byte_end":33947,"line_start":31,"line_end":31,"column_start":11,"column_end":27},"name":"PointCompression","qualname":"::point::PointCompression","value":"PointCompression","parent":null,"children":[{"krate":0,"index":176}],"decl_id":null,"docs":" Point compression settings.\n","sig":null,"attributes":[{"value":"/ Point compression settings.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33889,"byte_end":33920,"line_start":30,"line_end":30,"column_start":1,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":176},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":34016,"byte_end":34031,"line_start":33,"line_end":33,"column_start":11,"column_end":26},"name":"COMPRESS_POINTS","qualname":"::point::PointCompression::COMPRESS_POINTS","value":"bool","parent":{"krate":0,"index":175},"children":[],"decl_id":null,"docs":" Should point compression be applied by default?\n","sig":null,"attributes":[{"value":"/ Should point compression be applied by default?","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33954,"byte_end":34005,"line_start":32,"line_end":32,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":177},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":34083,"byte_end":34098,"line_start":37,"line_end":37,"column_start":11,"column_end":26},"name":"PointCompaction","qualname":"::point::PointCompaction","value":"PointCompaction","parent":null,"children":[{"krate":0,"index":178}],"decl_id":null,"docs":" Point compaction settings.\n","sig":null,"attributes":[{"value":"/ Point compaction settings.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":34042,"byte_end":34072,"line_start":36,"line_end":36,"column_start":1,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":178},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":34166,"byte_end":34180,"line_start":39,"line_end":39,"column_start":11,"column_end":25},"name":"COMPACT_POINTS","qualname":"::point::PointCompaction::COMPACT_POINTS","value":"bool","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Should point compaction be applied by default?\n","sig":null,"attributes":[{"value":"/ Should point compaction be applied by default?","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":34105,"byte_end":34155,"line_start":38,"line_end":38,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":962},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36525,"byte_end":36535,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"ScalarCore","qualname":"::scalar::core::ScalarCore","value":"ScalarCore {  }","parent":null,"children":[{"krate":0,"index":964}],"decl_id":null,"docs":" Generic scalar type with core functionality.","sig":null,"attributes":[{"value":"/ Generic scalar type with core functionality.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":35785,"byte_end":35833,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":35834,"byte_end":35837,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This type provides a baseline level of scalar arithmetic functionality","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":35838,"byte_end":35912,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ which is always available for all curves, regardless of if they implement","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":35913,"byte_end":35990,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ any arithmetic traits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":35991,"byte_end":36017,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36018,"byte_end":36021,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # `serde` support","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36022,"byte_end":36043,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36044,"byte_end":36047,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ When the optional `serde` feature of this create is enabled, [`Serialize`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36048,"byte_end":36126,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ and [`Deserialize`] impls are provided for this type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36127,"byte_end":36184,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36185,"byte_end":36188,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The serialization is a fixed-width big endian encoding. When used with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36189,"byte_end":36263,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ textual formats, the binary data is encoded as hexadecimal.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36264,"byte_end":36327,"line_start":43,"line_end":43,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":282},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36687,"byte_end":36691,"line_start":57,"line_end":57,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::scalar::core::ScalarCore::<C>::ZERO","value":"Self","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Zero scalar.\n","sig":null,"attributes":[{"value":"/ Zero scalar.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36656,"byte_end":36672,"line_start":56,"line_end":56,"column_start":5,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":283},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36792,"byte_end":36795,"line_start":62,"line_end":62,"column_start":15,"column_end":18},"name":"ONE","qualname":"::scalar::core::ScalarCore::<C>::ONE","value":"Self","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Multiplicative identity.\n","sig":null,"attributes":[{"value":"/ Multiplicative identity.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36749,"byte_end":36777,"line_start":61,"line_end":61,"column_start":5,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":284},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36886,"byte_end":36893,"line_start":67,"line_end":67,"column_start":15,"column_end":22},"name":"MODULUS","qualname":"::scalar::core::ScalarCore::<C>::MODULUS","value":"C::UInt","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Scalar modulus.\n","sig":null,"attributes":[{"value":"/ Scalar modulus.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36852,"byte_end":36871,"line_start":66,"line_end":66,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36969,"byte_end":36975,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"random","qualname":"<ScalarCore<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\nRngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a random [`ScalarCore`].\n","sig":null,"attributes":[{"value":"/ Generate a random [`ScalarCore`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36920,"byte_end":36957,"line_start":69,"line_end":69,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":37194,"byte_end":37197,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<ScalarCore<C>>::new","value":"pub fn new(C::UInt) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new scalar from [`Curve::UInt`].\n","sig":null,"attributes":[{"value":"/ Create a new scalar from [`Curve::UInt`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":37137,"byte_end":37182,"line_start":76,"line_end":76,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":37376,"byte_end":37389,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"from_be_bytes","qualname":"<ScalarCore<C>>::from_be_bytes","value":"pub fn from_be_bytes(FieldBytes<C>) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`ScalarCore`] from big endian bytes.\n","sig":null,"attributes":[{"value":"/ Decode [`ScalarCore`] from big endian bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":37316,"byte_end":37364,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":37564,"byte_end":37577,"line_start":87,"line_end":87,"column_start":12,"column_end":25},"name":"from_be_slice","qualname":"<ScalarCore<C>>::from_be_slice","value":"pub fn from_be_slice(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`ScalarCore`] from a big endian byte slice.\n","sig":null,"attributes":[{"value":"/ Decode [`ScalarCore`] from a big endian byte slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":37497,"byte_end":37552,"line_start":86,"line_end":86,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":37879,"byte_end":37892,"line_start":96,"line_end":96,"column_start":12,"column_end":25},"name":"from_le_bytes","qualname":"<ScalarCore<C>>::from_le_bytes","value":"pub fn from_le_bytes(FieldBytes<C>) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`ScalarCore`] from little endian bytes.\n","sig":null,"attributes":[{"value":"/ Decode [`ScalarCore`] from little endian bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":37816,"byte_end":37867,"line_start":95,"line_end":95,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":38070,"byte_end":38083,"line_start":101,"line_end":101,"column_start":12,"column_end":25},"name":"from_le_slice","qualname":"<ScalarCore<C>>::from_le_slice","value":"pub fn from_le_slice(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`ScalarCore`] from a little endian byte slice.\n","sig":null,"attributes":[{"value":"/ Decode [`ScalarCore`] from a little endian byte slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":38000,"byte_end":38058,"line_start":100,"line_end":100,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":38365,"byte_end":38372,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"as_uint","qualname":"<ScalarCore<C>>::as_uint","value":"pub fn as_uint(&Self) -> &C::UInt","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner `C::UInt`.\n","sig":null,"attributes":[{"value":"/ Borrow the inner `C::UInt`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":38322,"byte_end":38353,"line_start":109,"line_end":109,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":38475,"byte_end":38483,"line_start":115,"line_end":115,"column_start":12,"column_end":20},"name":"as_limbs","qualname":"<ScalarCore<C>>::as_limbs","value":"pub fn as_limbs(&Self) -> &[Limb]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner limbs as a slice.\n","sig":null,"attributes":[{"value":"/ Borrow the inner limbs as a slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":38425,"byte_end":38463,"line_start":114,"line_end":114,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":38602,"byte_end":38609,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<ScalarCore<C>>::is_zero","value":"pub fn is_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this [`ScalarCore`] value equal to zero?\n","sig":null,"attributes":[{"value":"/ Is this [`ScalarCore`] value equal to zero?","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":38543,"byte_end":38590,"line_start":119,"line_end":119,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":38719,"byte_end":38726,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"is_even","qualname":"<ScalarCore<C>>::is_even","value":"pub fn is_even(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this [`ScalarCore`] value even?\n","sig":null,"attributes":[{"value":"/ Is this [`ScalarCore`] value even?","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":38669,"byte_end":38707,"line_start":124,"line_end":124,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":38835,"byte_end":38841,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"is_odd","qualname":"<ScalarCore<C>>::is_odd","value":"pub fn is_odd(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this [`ScalarCore`] value odd?\n","sig":null,"attributes":[{"value":"/ Is this [`ScalarCore`] value odd?","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":38786,"byte_end":38823,"line_start":129,"line_end":129,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":38958,"byte_end":38969,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"to_be_bytes","qualname":"<ScalarCore<C>>::to_be_bytes","value":"pub fn to_be_bytes(Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Encode [`ScalarCore`] as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Encode [`ScalarCore`] as big endian bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":38900,"byte_end":38946,"line_start":134,"line_end":134,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":39105,"byte_end":39116,"line_start":140,"line_end":140,"column_start":12,"column_end":23},"name":"to_le_bytes","qualname":"<ScalarCore<C>>::to_le_bytes","value":"pub fn to_le_bytes(Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Encode [`ScalarCore`] as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Encode [`ScalarCore`] as little endian bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":39044,"byte_end":39093,"line_start":139,"line_end":139,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":976},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":45820,"byte_end":45833,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"NonZeroScalar","qualname":"::scalar::nonzero::NonZeroScalar","value":"NonZeroScalar {  }","parent":null,"children":[{"krate":0,"index":978}],"decl_id":null,"docs":" Non-zero scalar type.","sig":null,"attributes":[{"value":"/ Non-zero scalar type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":45364,"byte_end":45389,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":45390,"byte_end":45393,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type ensures that its value is not zero, ala `core::num::NonZero*`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":45394,"byte_end":45470,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ To do this, the generic `S` type must impl both `Default` and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":45471,"byte_end":45536,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ `ConstantTimeEq`, with the requirement that `S::default()` returns 0.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":45537,"byte_end":45610,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":45611,"byte_end":45614,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the context of ECC, it's useful for ensuring that scalar multiplication","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":45615,"byte_end":45693,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ cannot result in the point at infinity.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":45694,"byte_end":45737,"line_start":29,"line_end":29,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":46024,"byte_end":46030,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"random","qualname":"<NonZeroScalar<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\nRngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a random `NonZeroScalar`.\n","sig":null,"attributes":[{"value":"/ Generate a random `NonZeroScalar`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":45974,"byte_end":46012,"line_start":43,"line_end":43,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":46516,"byte_end":46519,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<NonZeroScalar<C>>::new","value":"pub fn new(Scalar<C>) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`NonZeroScalar`] from a scalar.\n","sig":null,"attributes":[{"value":"/ Create a [`NonZeroScalar`] from a scalar.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":46459,"byte_end":46504,"line_start":55,"line_end":55,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":46714,"byte_end":46723,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"from_repr","qualname":"<NonZeroScalar<C>>::from_repr","value":"pub fn from_repr(FieldBytes<C>) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode a [`NonZeroScalar`] from a big endian-serialized field element.\n","sig":null,"attributes":[{"value":"/ Decode a [`NonZeroScalar`] from a big endian-serialized field element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":46628,"byte_end":46702,"line_start":60,"line_end":60,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":46893,"byte_end":46902,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"from_uint","qualname":"<NonZeroScalar<C>>::from_uint","value":"pub fn from_uint(C::UInt) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`NonZeroScalar`] from a `C::UInt`.\n","sig":null,"attributes":[{"value":"/ Create a [`NonZeroScalar`] from a `C::UInt`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":46833,"byte_end":46881,"line_start":65,"line_end":65,"column_start":5,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":581},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar.rs","byte_start":34522,"byte_end":34528,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::scalar::Scalar","value":"<C as ScalarArithmetic>::Scalar","parent":null,"children":[],"decl_id":null,"docs":" Scalar field element for a particular elliptic curve.\n","sig":null,"attributes":[{"value":"/ Scalar field element for a particular elliptic curve.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar.rs","byte_start":34370,"byte_end":34427,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar.rs","byte_start":34428,"byte_end":34458,"line_start":14,"line_end":14,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":583},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar.rs","byte_start":34981,"byte_end":34987,"line_start":29,"line_end":29,"column_start":11,"column_end":17},"name":"IsHigh","qualname":"::scalar::IsHigh","value":"IsHigh","parent":null,"children":[{"krate":0,"index":584}],"decl_id":null,"docs":" Is this scalar greater than n / 2?","sig":null,"attributes":[{"value":"/ Is this scalar greater than n / 2?","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar.rs","byte_start":34794,"byte_end":34832,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar.rs","byte_start":34833,"byte_end":34836,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar.rs","byte_start":34837,"byte_end":34850,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar.rs","byte_start":34851,"byte_end":34854,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ - For scalars 0 through n / 2: `Choice::from(0)`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar.rs","byte_start":34855,"byte_end":34907,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/ - For scalars (n / 2) + 1 through n - 1: `Choice::from(1)`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar.rs","byte_start":34908,"byte_end":34970,"line_start":28,"line_end":28,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar.rs","byte_start":35052,"byte_end":35059,"line_start":31,"line_end":31,"column_start":8,"column_end":15},"name":"is_high","qualname":"::scalar::IsHigh::is_high","value":"pub fn is_high(&Self) -> Choice","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Is this scalar greater than or equal to n / 2?\n","sig":null,"attributes":[{"value":"/ Is this scalar greater than or equal to n / 2?","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar.rs","byte_start":34994,"byte_end":35044,"line_start":30,"line_end":30,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":982},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56139,"byte_end":56148,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"SecretKey","qualname":"::secret_key::SecretKey","value":"SecretKey {  }","parent":null,"children":[{"krate":0,"index":984}],"decl_id":null,"docs":" Elliptic curve secret keys.","sig":null,"attributes":[{"value":"/ Elliptic curve secret keys.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55233,"byte_end":55264,"line_start":62,"line_end":62,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55265,"byte_end":55268,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This type wraps a secret scalar value, helping to prevent accidental","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55269,"byte_end":55341,"line_start":64,"line_end":64,"column_start":1,"column_end":73}},{"value":"/ exposure and securely erasing the value from memory when dropped.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55342,"byte_end":55411,"line_start":65,"line_end":65,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55412,"byte_end":55415,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Parsing PKCS#8 Keys","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55416,"byte_end":55441,"line_start":67,"line_end":67,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55442,"byte_end":55445,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ PKCS#8 is a commonly used format for encoding secret keys (especially ones","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55446,"byte_end":55524,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ generated by OpenSSL).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55525,"byte_end":55551,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55552,"byte_end":55555,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Keys in PKCS#8 format are either binary (ASN.1 BER/DER), or PEM encoded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55556,"byte_end":55631,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ (ASCII) and begin with the following:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55632,"byte_end":55673,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55674,"byte_end":55677,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55678,"byte_end":55689,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/ -----BEGIN PRIVATE KEY-----","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55690,"byte_end":55721,"line_start":76,"line_end":76,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55722,"byte_end":55729,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55730,"byte_end":55733,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ To decode an elliptic curve private key from PKCS#8, enable the `pkcs8`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55734,"byte_end":55809,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/ feature of this crate (or the `pkcs8` feature of a specific RustCrypto","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55810,"byte_end":55884,"line_start":80,"line_end":80,"column_start":1,"column_end":75}},{"value":"/ elliptic curve crate) and use the [`DecodePrivateKey`]  trait to parse it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55885,"byte_end":55963,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55964,"byte_end":55967,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ When the `pem` feature of this crate (or a specific RustCrypto elliptic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":55968,"byte_end":56043,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/ curve crate) is enabled, a [`FromStr`] impl is also available.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56044,"byte_end":56110,"line_start":84,"line_end":84,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56399,"byte_end":56405,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"random","qualname":"<SecretKey<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\nRngCore>(impl CryptoRng + RngCore) -> Self where C: ProjectiveArithmetic","parent":null,"children":[],"decl_id":null,"docs":" Generate a random [`SecretKey`].\n","sig":null,"attributes":[{"value":"/ Generate a random [`SecretKey`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56258,"byte_end":56294,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56299,"byte_end":56329,"line_start":96,"line_end":96,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56649,"byte_end":56652,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<SecretKey<C>>::new","value":"pub fn new(ScalarCore<C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new secret key from a scalar value.\n","sig":null,"attributes":[{"value":"/ Create a new secret key from a scalar value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56589,"byte_end":56637,"line_start":107,"line_end":107,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56925,"byte_end":56939,"line_start":119,"line_end":119,"column_start":12,"column_end":26},"name":"as_scalar_core","qualname":"<SecretKey<C>>::as_scalar_core","value":"pub fn as_scalar_core(&Self) -> &ScalarCore<C>","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner secret [`ScalarCore`] value.","sig":null,"attributes":[{"value":"/ Borrow the inner secret [`ScalarCore`] value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56728,"byte_end":56777,"line_start":112,"line_end":112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56782,"byte_end":56785,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # ⚠️ Warning","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56790,"byte_end":56810,"line_start":114,"line_end":114,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56815,"byte_end":56818,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This value is key material.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56823,"byte_end":56854,"line_start":116,"line_end":116,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56859,"byte_end":56862,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Please treat it with the care it deserves!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56867,"byte_end":56913,"line_start":118,"line_end":118,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":57295,"byte_end":57312,"line_start":132,"line_end":132,"column_start":12,"column_end":29},"name":"to_nonzero_scalar","qualname":"<SecretKey<C>>::to_nonzero_scalar","value":"pub fn to_nonzero_scalar(&Self) -> NonZeroScalar<C> where C: Curve +\nProjectiveArithmetic","parent":null,"children":[],"decl_id":null,"docs":" Get the secret [`NonZeroScalar`] value for this key.","sig":null,"attributes":[{"value":"/ Get the secret [`NonZeroScalar`] value for this key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56998,"byte_end":57054,"line_start":123,"line_end":123,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":57059,"byte_end":57062,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # ⚠️ Warning","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":57067,"byte_end":57087,"line_start":125,"line_end":125,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":57092,"byte_end":57095,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This value is key material.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":57100,"byte_end":57131,"line_start":127,"line_end":127,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":57136,"byte_end":57139,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ Please treat it with the care it deserves!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":57144,"byte_end":57190,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":57195,"byte_end":57225,"line_start":130,"line_end":130,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":57595,"byte_end":57605,"line_start":142,"line_end":142,"column_start":12,"column_end":22},"name":"public_key","qualname":"<SecretKey<C>>::public_key","value":"pub fn public_key(&Self) -> PublicKey<C> where C: Curve + ProjectiveArithmetic","parent":null,"children":[],"decl_id":null,"docs":" Get the [`PublicKey`] which corresponds to this secret key\n","sig":null,"attributes":[{"value":"/ Get the [`PublicKey`] which corresponds to this secret key","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":57428,"byte_end":57490,"line_start":139,"line_end":139,"column_start":5,"column_end":67}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":57495,"byte_end":57525,"line_start":140,"line_end":140,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":57832,"byte_end":57845,"line_start":150,"line_end":150,"column_start":12,"column_end":25},"name":"from_be_bytes","qualname":"<SecretKey<C>>::from_be_bytes","value":"pub fn from_be_bytes(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize raw secret scalar as a big endian integer.\n","sig":null,"attributes":[{"value":"/ Deserialize raw secret scalar as a big endian integer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":57762,"byte_end":57820,"line_start":149,"line_end":149,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":58313,"byte_end":58324,"line_start":168,"line_end":168,"column_start":12,"column_end":23},"name":"to_be_bytes","qualname":"<SecretKey<C>>::to_be_bytes","value":"pub fn to_be_bytes(&Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Serialize raw secret scalar as a big endian integer.\n","sig":null,"attributes":[{"value":"/ Serialize raw secret scalar as a big endian integer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":58245,"byte_end":58301,"line_start":167,"line_end":167,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":58572,"byte_end":58585,"line_start":175,"line_end":175,"column_start":12,"column_end":25},"name":"from_sec1_der","qualname":"<SecretKey<C>>::from_sec1_der","value":"pub fn from_sec1_der(&[u8]) -> Result<Self> where C: Curve +\nValidatePublicKey, FieldSize<C>: ModulusSize","parent":null,"children":[],"decl_id":null,"docs":" Deserialize secret key encoded in the SEC1 ASN.1 DER `ECPrivateKey` format.\n","sig":null,"attributes":[{"value":"/ Deserialize secret key encoded in the SEC1 ASN.1 DER `ECPrivateKey` format.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":58395,"byte_end":58474,"line_start":172,"line_end":172,"column_start":5,"column_end":84}},{"value":"cfg(all(feature = \"sec1\"))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":58479,"byte_end":58508,"line_start":173,"line_end":173,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":736},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":65682,"byte_end":65698,"line_start":12,"line_end":12,"column_start":11,"column_end":27},"name":"AffineArithmetic","qualname":"::arithmetic::AffineArithmetic","value":"AffineArithmetic: Curve + ScalarArithmetic","parent":null,"children":[{"krate":0,"index":737}],"decl_id":null,"docs":" Elliptic curve with affine arithmetic implementation.\n","sig":null,"attributes":[{"value":"/ Elliptic curve with affine arithmetic implementation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":65560,"byte_end":65617,"line_start":10,"line_end":10,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":737},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":65788,"byte_end":65799,"line_start":14,"line_end":14,"column_start":10,"column_end":21},"name":"AffinePoint","qualname":"::arithmetic::AffineArithmetic::AffinePoint","value":"type AffinePoint: 'static\n        + AffineXCoordinate<Self>\n        + Copy\n        + Clone\n        + ConditionallySelectable\n        + ConstantTimeEq\n        + Debug\n        + Default\n        + DefaultIsZeroes\n        + Eq\n        + PartialEq\n        + Sized\n        + Send\n        + Sync;","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":" Elliptic curve point in affine coordinates.\n","sig":null,"attributes":[{"value":"/ Elliptic curve point in affine coordinates.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":65731,"byte_end":65778,"line_start":13,"line_end":13,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":738},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66214,"byte_end":66234,"line_start":32,"line_end":32,"column_start":11,"column_end":31},"name":"PrimeCurveArithmetic","qualname":"::arithmetic::PrimeCurveArithmetic","value":"PrimeCurveArithmetic: PrimeCurve + ProjectiveArithmetic<ProjectivePoint = Self::CurveGroup>","parent":null,"children":[{"krate":0,"index":739}],"decl_id":null,"docs":" Prime order elliptic curve with projective arithmetic implementation.\n","sig":null,"attributes":[{"value":"/ Prime order elliptic curve with projective arithmetic implementation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66076,"byte_end":66149,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":739},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66363,"byte_end":66373,"line_start":36,"line_end":36,"column_start":10,"column_end":20},"name":"CurveGroup","qualname":"::arithmetic::PrimeCurveArithmetic::CurveGroup","value":"type CurveGroup: group::prime::PrimeCurve<Affine = <Self as AffineArithmetic>::AffinePoint>;","parent":{"krate":0,"index":738},"children":[],"decl_id":null,"docs":" Prime order elliptic curve group.\n","sig":null,"attributes":[{"value":"/ Prime order elliptic curve group.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66316,"byte_end":66353,"line_start":35,"line_end":35,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":740},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66580,"byte_end":66600,"line_start":41,"line_end":41,"column_start":11,"column_end":31},"name":"ProjectiveArithmetic","qualname":"::arithmetic::ProjectiveArithmetic","value":"ProjectiveArithmetic: Curve + AffineArithmetic","parent":null,"children":[{"krate":0,"index":741}],"decl_id":null,"docs":" Elliptic curve with projective arithmetic implementation.\n","sig":null,"attributes":[{"value":"/ Elliptic curve with projective arithmetic implementation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66454,"byte_end":66515,"line_start":39,"line_end":39,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":741},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66925,"byte_end":66940,"line_start":53,"line_end":53,"column_start":10,"column_end":25},"name":"ProjectivePoint","qualname":"::arithmetic::ProjectiveArithmetic::ProjectivePoint","value":"type ProjectivePoint: ConditionallySelectable\n        + ConstantTimeEq\n        + Default\n        + DefaultIsZeroes\n        + From<Self::AffinePoint>\n        + Into<Self::AffinePoint>\n        + LinearCombination\n        + group::Curve<AffineRepr = Self::AffinePoint>\n        + group::Group<Scalar = Self::Scalar>;","parent":{"krate":0,"index":740},"children":[],"decl_id":null,"docs":" Elliptic curve point in projective coordinates.","sig":null,"attributes":[{"value":"/ Elliptic curve point in projective coordinates.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66633,"byte_end":66684,"line_start":42,"line_end":42,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66689,"byte_end":66692,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note: the following bounds are provided by [`group::Group`]:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66697,"byte_end":66761,"line_start":44,"line_end":44,"column_start":5,"column_end":69}},{"value":"/ - `'static`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66766,"byte_end":66781,"line_start":45,"line_end":45,"column_start":5,"column_end":20}},{"value":"/ - [`Copy`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66786,"byte_end":66800,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/ - [`Clone`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66805,"byte_end":66820,"line_start":47,"line_end":47,"column_start":5,"column_end":20}},{"value":"/ - [`Debug`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66825,"byte_end":66840,"line_start":48,"line_end":48,"column_start":5,"column_end":20}},{"value":"/ - [`Eq`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66845,"byte_end":66857,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/ - [`Sized`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66862,"byte_end":66877,"line_start":50,"line_end":50,"column_start":5,"column_end":20}},{"value":"/ - [`Send`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66882,"byte_end":66896,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/ - [`Sync`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66901,"byte_end":66915,"line_start":52,"line_end":52,"column_start":5,"column_end":19}}]},{"kind":"Trait","id":{"krate":0,"index":742},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":67354,"byte_end":67370,"line_start":67,"line_end":67,"column_start":11,"column_end":27},"name":"ScalarArithmetic","qualname":"::arithmetic::ScalarArithmetic","value":"ScalarArithmetic: Curve","parent":null,"children":[{"krate":0,"index":743}],"decl_id":null,"docs":" Scalar arithmetic.\n","sig":null,"attributes":[{"value":"/ Scalar arithmetic.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":67236,"byte_end":67258,"line_start":64,"line_end":64,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":67259,"byte_end":67289,"line_start":65,"line_end":65,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":743},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":67696,"byte_end":67702,"line_start":80,"line_end":80,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::arithmetic::ScalarArithmetic::Scalar","value":"type Scalar: DefaultIsZeroes\n        + From<ScalarCore<Self>>\n        + Into<FieldBytes<Self>>\n        + Into<Self::UInt>\n        + IsHigh\n        + ff::Field\n        + ff::PrimeField<Repr = FieldBytes<Self>>;","parent":{"krate":0,"index":742},"children":[],"decl_id":null,"docs":" Scalar field type.","sig":null,"attributes":[{"value":"/ Scalar field type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":67384,"byte_end":67406,"line_start":68,"line_end":68,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":67411,"byte_end":67414,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note: the following bounds are provided by [`ff::Field`]:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":67419,"byte_end":67480,"line_start":70,"line_end":70,"column_start":5,"column_end":66}},{"value":"/ - `'static`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":67485,"byte_end":67500,"line_start":71,"line_end":71,"column_start":5,"column_end":20}},{"value":"/ - [`Copy`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":67505,"byte_end":67519,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/ - [`Clone`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":67524,"byte_end":67539,"line_start":73,"line_end":73,"column_start":5,"column_end":20}},{"value":"/ - [`ConditionallySelectable`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":67544,"byte_end":67577,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/ - [`ConstantTimeEq`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":67582,"byte_end":67606,"line_start":75,"line_end":75,"column_start":5,"column_end":29}},{"value":"/ - [`Debug`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":67611,"byte_end":67626,"line_start":76,"line_end":76,"column_start":5,"column_end":20}},{"value":"/ - [`Default`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":67631,"byte_end":67648,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"/ - [`Send`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":67653,"byte_end":67667,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/ - [`Sync`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":67672,"byte_end":67686,"line_start":79,"line_end":79,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":988},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":70267,"byte_end":70276,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::public_key::PublicKey","value":"PublicKey {  }","parent":null,"children":[{"krate":0,"index":990}],"decl_id":null,"docs":" Elliptic curve public keys.","sig":null,"attributes":[{"value":"/ Elliptic curve public keys.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":68759,"byte_end":68790,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":68791,"byte_end":68794,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper type for [`AffinePoint`] which ensures an inner","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":68795,"byte_end":68864,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/ non-identity point and provides a common place to handle encoding/decoding.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":68865,"byte_end":68944,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":68945,"byte_end":68948,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Parsing \"SPKI\" Keys","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":68949,"byte_end":68974,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":68975,"byte_end":68978,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ X.509 `SubjectPublicKeyInfo` (SPKI) is a commonly used format for encoding","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":68979,"byte_end":69057,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ public keys, notably public keys corresponding to PKCS#8 private keys.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69058,"byte_end":69132,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"/ (especially ones generated by OpenSSL).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69133,"byte_end":69176,"line_start":46,"line_end":46,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69177,"byte_end":69180,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Keys in SPKI format are either binary (ASN.1 BER/DER), or PEM encoded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69181,"byte_end":69254,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/ (ASCII) and begin with the following:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69255,"byte_end":69296,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69297,"byte_end":69300,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69301,"byte_end":69312,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ -----BEGIN PUBLIC KEY-----","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69313,"byte_end":69343,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69344,"byte_end":69351,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69352,"byte_end":69355,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ To decode an elliptic curve public key from SPKI, enable the `pkcs8`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69356,"byte_end":69428,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ feature of this crate (or the `pkcs8` feature of a specific RustCrypto","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69429,"byte_end":69503,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ elliptic curve crate) and use the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69504,"byte_end":69541,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ [`elliptic_curve::pkcs8::DecodePublicKey`][`pkcs8::DecodePublicKey`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69542,"byte_end":69614,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ trait to parse it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69615,"byte_end":69637,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69638,"byte_end":69641,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ When the `pem` feature of this crate (or a specific RustCrypto elliptic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69642,"byte_end":69717,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ curve crate) is enabled, a [`FromStr`] impl is also available.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69718,"byte_end":69784,"line_start":62,"line_end":62,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69785,"byte_end":69788,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # `serde` support","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69789,"byte_end":69810,"line_start":64,"line_end":64,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69811,"byte_end":69814,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ When the optional `serde` feature of this create is enabled, [`Serialize`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69815,"byte_end":69893,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and [`Deserialize`] impls are provided for this type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69894,"byte_end":69951,"line_start":67,"line_end":67,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69952,"byte_end":69955,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The serialization is binary-oriented and supports ASN.1 DER","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":69956,"byte_end":70019,"line_start":69,"line_end":69,"column_start":1,"column_end":64}},{"value":"/ Subject Public Key Info (SPKI) as the encoding format.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":70020,"byte_end":70078,"line_start":70,"line_end":70,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":70079,"byte_end":70082,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ For a more text-friendly encoding of public keys, use [`JwkEcKey`] instead.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":70083,"byte_end":70162,"line_start":72,"line_end":72,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":70488,"byte_end":70499,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"from_affine","qualname":"<PublicKey<C>>::from_affine","value":"pub fn from_affine(AffinePoint<C>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AffinePoint`] into a [`PublicKey`]\n","sig":null,"attributes":[{"value":"/ Convert an [`AffinePoint`] into a [`PublicKey`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":70425,"byte_end":70476,"line_start":86,"line_end":86,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":70840,"byte_end":70858,"line_start":97,"line_end":97,"column_start":12,"column_end":30},"name":"from_secret_scalar","qualname":"<PublicKey<C>>::from_secret_scalar","value":"pub fn from_secret_scalar(&NonZeroScalar<C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute a [`PublicKey`] from a secret [`NonZeroScalar`] value\n (i.e. a secret key represented as a raw scalar value)\n","sig":null,"attributes":[{"value":"/ Compute a [`PublicKey`] from a secret [`NonZeroScalar`] value","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":70701,"byte_end":70766,"line_start":95,"line_end":95,"column_start":5,"column_end":70}},{"value":"/ (i.e. a secret key represented as a raw scalar value)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":70771,"byte_end":70828,"line_start":96,"line_end":96,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":71403,"byte_end":71418,"line_start":111,"line_end":111,"column_start":12,"column_end":27},"name":"from_sec1_bytes","qualname":"<PublicKey<C>>::from_sec1_bytes","value":"pub fn from_sec1_bytes(&[u8]) -> Result<Self> where C: Curve,\nFieldSize<C>: ModulusSize, AffinePoint<C>: FromEncodedPoint<C> +\nToEncodedPoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Decode [`PublicKey`] (compressed or uncompressed) from the\n `Elliptic-Curve-Point-to-Octet-String` encoding described in\n SEC 1: Elliptic Curve Cryptography (Version 2.0) section\n 2.3.3 (page 10).","sig":null,"attributes":[{"value":"/ Decode [`PublicKey`] (compressed or uncompressed) from the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":71091,"byte_end":71153,"line_start":104,"line_end":104,"column_start":5,"column_end":67}},{"value":"/ `Elliptic-Curve-Point-to-Octet-String` encoding described in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":71158,"byte_end":71222,"line_start":105,"line_end":105,"column_start":5,"column_end":69}},{"value":"/ SEC 1: Elliptic Curve Cryptography (Version 2.0) section","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":71227,"byte_end":71287,"line_start":106,"line_end":106,"column_start":5,"column_end":65}},{"value":"/ 2.3.3 (page 10).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":71292,"byte_end":71312,"line_start":107,"line_end":107,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":71317,"byte_end":71320,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ <http://www.secg.org/sec1-v2.pdf>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":71325,"byte_end":71362,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"cfg(feature = \"sec1\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":71367,"byte_end":71391,"line_start":110,"line_end":110,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":71876,"byte_end":71885,"line_start":124,"line_end":124,"column_start":12,"column_end":21},"name":"as_affine","qualname":"<PublicKey<C>>::as_affine","value":"pub fn as_affine(&Self) -> &AffinePoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Borrow the inner [`AffinePoint`] from this [`PublicKey`].","sig":null,"attributes":[{"value":"/ Borrow the inner [`AffinePoint`] from this [`PublicKey`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":71740,"byte_end":71801,"line_start":121,"line_end":121,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":71806,"byte_end":71809,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ In ECC, public keys are elliptic curve points.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":71814,"byte_end":71864,"line_start":123,"line_end":123,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":72032,"byte_end":72045,"line_start":129,"line_end":129,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<PublicKey<C>>::to_projective","value":"pub fn to_projective(&Self) -> ProjectivePoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Convert this [`PublicKey`] to a [`ProjectivePoint`] for the given curve\n","sig":null,"attributes":[{"value":"/ Convert this [`PublicKey`] to a [`ProjectivePoint`] for the given curve","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":71945,"byte_end":72020,"line_start":128,"line_end":128,"column_start":5,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":937},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":4934,"byte_end":4939,"line_start":163,"line_end":163,"column_start":11,"column_end":16},"name":"Curve","qualname":"::Curve","value":"Curve: 'static + Copy + Clone + Debug + Default + Eq + Ord + Send + Sync","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939}],"decl_id":null,"docs":" Elliptic curve.","sig":null,"attributes":[{"value":"/ Elliptic curve.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":4608,"byte_end":4627,"line_start":155,"line_end":155,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":4628,"byte_end":4631,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ This trait is intended to be impl'd by a ZST which represents a concrete","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":4632,"byte_end":4708,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/ elliptic curve.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":4709,"byte_end":4728,"line_start":158,"line_end":158,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":4729,"byte_end":4732,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ Other traits in this crate which are bounded by [`Curve`] are intended to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":4733,"byte_end":4810,"line_start":160,"line_end":160,"column_start":1,"column_end":78}},{"value":"/ be impl'd by these ZSTs, facilitating types which are generic over elliptic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":4811,"byte_end":4890,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ curves (e.g. [`SecretKey`]).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":4891,"byte_end":4923,"line_start":162,"line_end":162,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":938},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":5246,"byte_end":5250,"line_start":167,"line_end":167,"column_start":10,"column_end":14},"name":"UInt","qualname":"::Curve::UInt","value":"type UInt: bigint::AddMod<Output = Self::UInt>\n        + bigint::ArrayEncoding\n        + bigint::Encoding\n        + bigint::Integer\n        + bigint::NegMod<Output = Self::UInt>\n        + bigint::Random\n        + bigint::RandomMod\n        + bigint::SubMod<Output = Self::UInt>\n        + zeroize::Zeroize;","parent":{"krate":0,"index":937},"children":[],"decl_id":null,"docs":" Integer type used to represent field elements of this elliptic curve.\n","sig":null,"attributes":[{"value":"/ Integer type used to represent field elements of this elliptic curve.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":5013,"byte_end":5086,"line_start":164,"line_end":164,"column_start":5,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":939},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":5738,"byte_end":5743,"line_start":181,"line_end":181,"column_start":11,"column_end":16},"name":"ORDER","qualname":"::Curve::ORDER","value":"Self::UInt","parent":{"krate":0,"index":937},"children":[],"decl_id":null,"docs":" Order constant.","sig":null,"attributes":[{"value":"/ Order constant.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":5551,"byte_end":5570,"line_start":177,"line_end":177,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":5575,"byte_end":5578,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Subdivided into either 32-bit or 64-bit \"limbs\" (depending on the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":5583,"byte_end":5652,"line_start":179,"line_end":179,"column_start":5,"column_end":74}},{"value":"/ target CPU's word size), specified from least to most significant.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":5657,"byte_end":5727,"line_start":180,"line_end":180,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":940},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":5825,"byte_end":5835,"line_start":185,"line_end":185,"column_start":11,"column_end":21},"name":"PrimeCurve","qualname":"::PrimeCurve","value":"PrimeCurve: Curve","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for elliptic curves with prime order.\n","sig":null,"attributes":[{"value":"/ Marker trait for elliptic curves with prime order.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":5760,"byte_end":5814,"line_start":184,"line_end":184,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":941},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":5907,"byte_end":5916,"line_start":188,"line_end":188,"column_start":10,"column_end":19},"name":"FieldSize","qualname":"::FieldSize","value":"<<C as Curve>::UInt as bigint::ArrayEncoding>::ByteSize","parent":null,"children":[],"decl_id":null,"docs":" Size of field elements of this elliptic curve.\n","sig":null,"attributes":[{"value":"/ Size of field elements of this elliptic curve.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":5847,"byte_end":5897,"line_start":187,"line_end":187,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":943},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":6062,"byte_end":6072,"line_start":191,"line_end":191,"column_start":10,"column_end":20},"name":"FieldBytes","qualname":"::FieldBytes","value":"GenericArray<u8, FieldSize<C>>","parent":null,"children":[],"decl_id":null,"docs":" Byte representation of a base/scalar field element of a given curve.\n","sig":null,"attributes":[{"value":"/ Byte representation of a base/scalar field element of a given curve.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":5980,"byte_end":6052,"line_start":190,"line_end":190,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":945},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":6297,"byte_end":6308,"line_start":197,"line_end":197,"column_start":10,"column_end":21},"name":"AffinePoint","qualname":"::AffinePoint","value":"<C as AffineArithmetic>::AffinePoint","parent":null,"children":[],"decl_id":null,"docs":" Affine point type for a given curve with a [`ProjectiveArithmetic`]\n implementation.\n","sig":null,"attributes":[{"value":"/ Affine point type for a given curve with a [`ProjectiveArithmetic`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":6111,"byte_end":6182,"line_start":193,"line_end":193,"column_start":1,"column_end":72}},{"value":"/ implementation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":6183,"byte_end":6202,"line_start":194,"line_end":194,"column_start":1,"column_end":20}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":6257,"byte_end":6287,"line_start":196,"line_end":196,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":947},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":6543,"byte_end":6558,"line_start":203,"line_end":203,"column_start":10,"column_end":25},"name":"ProjectivePoint","qualname":"::ProjectivePoint","value":"<C as ProjectiveArithmetic>::ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Projective point type for a given curve with a [`ProjectiveArithmetic`]\n implementation.\n","sig":null,"attributes":[{"value":"/ Projective point type for a given curve with a [`ProjectiveArithmetic`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":6353,"byte_end":6428,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ implementation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":6429,"byte_end":6448,"line_start":200,"line_end":200,"column_start":1,"column_end":20}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":6449,"byte_end":6479,"line_start":201,"line_end":201,"column_start":1,"column_end":31}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21539,"byte_end":21540,"line_start":23,"line_end":23,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":26838,"byte_end":26839,"line_start":84,"line_end":84,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/error.rs","byte_start":32310,"byte_end":32315,"line_start":15,"line_end":15,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/error.rs","byte_start":32457,"byte_end":32462,"line_start":21,"line_end":21,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/error.rs","byte_start":32708,"byte_end":32713,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36616,"byte_end":36626,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":39228,"byte_end":39238,"line_start":146,"line_end":146,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":39607,"byte_end":39617,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":39746,"byte_end":39756,"line_start":167,"line_end":167,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":39991,"byte_end":40001,"line_start":178,"line_end":178,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":40150,"byte_end":40160,"line_start":187,"line_end":187,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":40312,"byte_end":40322,"line_start":196,"line_end":196,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":40477,"byte_end":40487,"line_start":205,"line_end":205,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":40517,"byte_end":40527,"line_start":207,"line_end":207,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":40557,"byte_end":40567,"line_start":209,"line_end":209,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":40699,"byte_end":40709,"line_start":218,"line_end":218,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":40852,"byte_end":40862,"line_start":227,"line_end":227,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":41002,"byte_end":41012,"line_start":236,"line_end":236,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":41170,"byte_end":41180,"line_start":247,"line_end":247,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":41337,"byte_end":41347,"line_start":258,"line_end":258,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":41579,"byte_end":41589,"line_start":271,"line_end":271,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":41737,"byte_end":41747,"line_start":280,"line_end":280,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":41889,"byte_end":41899,"line_start":289,"line_end":289,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":42056,"byte_end":42066,"line_start":300,"line_end":300,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":42298,"byte_end":42308,"line_start":313,"line_end":313,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":42456,"byte_end":42466,"line_start":322,"line_end":322,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":42593,"byte_end":42603,"line_start":331,"line_end":331,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":42936,"byte_end":42946,"line_start":355,"line_end":355,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":43104,"byte_end":43114,"line_start":365,"line_end":365,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":43270,"byte_end":43280,"line_start":374,"line_end":374,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":43463,"byte_end":43473,"line_start":383,"line_end":383,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":43655,"byte_end":43665,"line_start":392,"line_end":392,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":45912,"byte_end":45925,"line_start":39,"line_end":39,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":47050,"byte_end":47063,"line_start":71,"line_end":71,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":47211,"byte_end":47224,"line_start":80,"line_end":80,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":47485,"byte_end":47498,"line_start":91,"line_end":91,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":47656,"byte_end":47669,"line_start":100,"line_end":100,"column_start":18,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":47729,"byte_end":47742,"line_start":102,"line_end":102,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":47918,"byte_end":47928,"line_start":113,"line_end":113,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":48103,"byte_end":48113,"line_start":122,"line_end":122,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":48285,"byte_end":48295,"line_start":131,"line_end":131,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":48503,"byte_end":48513,"line_start":140,"line_end":140,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":48717,"byte_end":48730,"line_start":149,"line_end":149,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":48892,"byte_end":48905,"line_start":158,"line_end":158,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":49163,"byte_end":49176,"line_start":169,"line_end":169,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":49463,"byte_end":49476,"line_start":183,"line_end":183,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":49610,"byte_end":49623,"line_start":192,"line_end":192,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":49909,"byte_end":49922,"line_start":205,"line_end":205,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":50127,"byte_end":50140,"line_start":217,"line_end":217,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":50595,"byte_end":50608,"line_start":233,"line_end":233,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":50843,"byte_end":50856,"line_start":244,"line_end":244,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":51204,"byte_end":51217,"line_start":257,"line_end":257,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":51608,"byte_end":51621,"line_start":275,"line_end":275,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":51970,"byte_end":51983,"line_start":289,"line_end":289,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":52158,"byte_end":52171,"line_start":298,"line_end":298,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":52369,"byte_end":52382,"line_start":307,"line_end":307,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":52578,"byte_end":52591,"line_start":316,"line_end":316,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56219,"byte_end":56228,"line_start":91,"line_end":91,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":63065,"byte_end":63074,"line_start":307,"line_end":307,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":63212,"byte_end":63221,"line_start":316,"line_end":316,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":63491,"byte_end":63500,"line_start":326,"line_end":326,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":63540,"byte_end":63549,"line_start":328,"line_end":328,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":63661,"byte_end":63670,"line_start":337,"line_end":337,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":63700,"byte_end":63709,"line_start":339,"line_end":339,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":63940,"byte_end":63949,"line_start":350,"line_end":350,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":64834,"byte_end":64843,"line_start":377,"line_end":377,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":65111,"byte_end":65120,"line_start":388,"line_end":388,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":70363,"byte_end":70372,"line_start":82,"line_end":82,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":73709,"byte_end":73718,"line_start":182,"line_end":182,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":73860,"byte_end":73869,"line_start":191,"line_end":191,"column_start":18,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":74020,"byte_end":74029,"line_start":195,"line_end":195,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":74649,"byte_end":74658,"line_start":212,"line_end":212,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":75137,"byte_end":75149,"line_start":227,"line_end":227,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":75527,"byte_end":75539,"line_start":240,"line_end":240,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":75920,"byte_end":75929,"line_start":253,"line_end":253,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":76260,"byte_end":76269,"line_start":266,"line_end":266,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":2651,"byte_end":2654,"line_start":72,"line_end":72,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3017,"byte_end":3021,"line_start":88,"line_end":88,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":68}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":3117,"byte_end":3128,"line_start":92,"line_end":92,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":121}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":21539,"byte_end":21540,"line_start":23,"line_end":23,"column_start":31,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":51},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":22074,"byte_end":22079,"line_start":39,"line_end":39,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":29,"index":176},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":22308,"byte_end":22313,"line_start":47,"line_end":47,"column_start":50,"column_end":55},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/ops.rs","byte_start":23965,"byte_end":23970,"line_start":93,"line_end":93,"column_start":57,"column_end":62},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":65}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/sec1.rs","byte_start":26838,"byte_end":26839,"line_start":84,"line_end":84,"column_start":31,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":119},"to":{"krate":0,"index":116}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/error.rs","byte_start":32310,"byte_end":32315,"line_start":15,"line_end":15,"column_start":18,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":949},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/error.rs","byte_start":32457,"byte_end":32462,"line_start":21,"line_end":21,"column_start":32,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":949},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/error.rs","byte_start":32708,"byte_end":32713,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":949},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33384,"byte_end":33389,"line_start":16,"line_end":16,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":169}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/point.rs","byte_start":33770,"byte_end":33775,"line_start":25,"line_end":25,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":172}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":36616,"byte_end":36626,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":39228,"byte_end":39238,"line_start":146,"line_end":146,"column_start":9,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":39607,"byte_end":39617,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":39746,"byte_end":39756,"line_start":167,"line_end":167,"column_start":37,"column_end":47},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":962},"to":{"krate":7,"index":65}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":39991,"byte_end":40001,"line_start":178,"line_end":178,"column_start":28,"column_end":38},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":962},"to":{"krate":7,"index":57}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":40150,"byte_end":40160,"line_start":187,"line_end":187,"column_start":30,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":962},"to":{"krate":7,"index":108}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":40312,"byte_end":40322,"line_start":196,"line_end":196,"column_start":33,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":962},"to":{"krate":7,"index":105}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":40477,"byte_end":40487,"line_start":205,"line_end":205,"column_start":36,"column_end":46},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":962},"to":{"krate":28,"index":107}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":40517,"byte_end":40527,"line_start":207,"line_end":207,"column_start":23,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":2714}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":40557,"byte_end":40567,"line_start":209,"line_end":209,"column_start":23,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":40699,"byte_end":40709,"line_start":218,"line_end":218,"column_start":24,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":40852,"byte_end":40862,"line_start":227,"line_end":227,"column_start":17,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":41002,"byte_end":41012,"line_start":236,"line_end":236,"column_start":23,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":41170,"byte_end":41180,"line_start":247,"line_end":247,"column_start":32,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":3125}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":41337,"byte_end":41347,"line_start":258,"line_end":258,"column_start":33,"column_end":43},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":3125}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":41579,"byte_end":41589,"line_start":271,"line_end":271,"column_start":38,"column_end":48},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":3156}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":41737,"byte_end":41747,"line_start":280,"line_end":280,"column_start":39,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":3156}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":41889,"byte_end":41899,"line_start":289,"line_end":289,"column_start":32,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":3130}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":42056,"byte_end":42066,"line_start":300,"line_end":300,"column_start":33,"column_end":43},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":3130}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":42298,"byte_end":42308,"line_start":313,"line_end":313,"column_start":38,"column_end":48},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":3160}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":42456,"byte_end":42466,"line_start":322,"line_end":322,"column_start":39,"column_end":49},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":3160}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":42593,"byte_end":42603,"line_start":331,"line_end":331,"column_start":17,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":3152}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":42936,"byte_end":42946,"line_start":355,"line_end":355,"column_start":20,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":962},"to":{"krate":0,"index":583}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":43104,"byte_end":43114,"line_start":365,"line_end":365,"column_start":26,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":43270,"byte_end":43280,"line_start":374,"line_end":374,"column_start":27,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":9691}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":43463,"byte_end":43473,"line_start":383,"line_end":383,"column_start":27,"column_end":37},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":9693}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/core.rs","byte_start":43655,"byte_end":43665,"line_start":392,"line_end":392,"column_start":26,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":12317}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":45912,"byte_end":45925,"line_start":39,"line_end":39,"column_start":9,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":47050,"byte_end":47063,"line_start":71,"line_end":71,"column_start":30,"column_end":43},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":976},"to":{"krate":1,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":47211,"byte_end":47224,"line_start":80,"line_end":80,"column_start":37,"column_end":50},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":976},"to":{"krate":7,"index":65}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":47485,"byte_end":47498,"line_start":91,"line_end":91,"column_start":28,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":976},"to":{"krate":7,"index":57}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":47656,"byte_end":47669,"line_start":100,"line_end":100,"column_start":18,"column_end":31},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":976},"to":{"krate":1,"index":3067}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":47729,"byte_end":47742,"line_start":102,"line_end":102,"column_start":19,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":976},"to":{"krate":1,"index":3276}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":47918,"byte_end":47928,"line_start":113,"line_end":113,"column_start":36,"column_end":46},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":943},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":48103,"byte_end":48113,"line_start":122,"line_end":122,"column_start":37,"column_end":47},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":943},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":48285,"byte_end":48295,"line_start":131,"line_end":131,"column_start":36,"column_end":46},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":48503,"byte_end":48513,"line_start":140,"line_end":140,"column_start":37,"column_end":47},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":962},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":48717,"byte_end":48730,"line_start":149,"line_end":149,"column_start":32,"column_end":45},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":976},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":48892,"byte_end":48905,"line_start":158,"line_end":158,"column_start":33,"column_end":46},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":976},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":49163,"byte_end":49176,"line_start":169,"line_end":169,"column_start":20,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":976},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":49463,"byte_end":49476,"line_start":183,"line_end":183,"column_start":20,"column_end":33},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":976},"to":{"krate":0,"index":583}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":49610,"byte_end":49623,"line_start":192,"line_end":192,"column_start":17,"column_end":30},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":976},"to":{"krate":1,"index":3152}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":49909,"byte_end":49922,"line_start":205,"line_end":205,"column_start":35,"column_end":48},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":976},"to":{"krate":1,"index":3135}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":50127,"byte_end":50140,"line_start":217,"line_end":217,"column_start":36,"column_end":49},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":976},"to":{"krate":1,"index":3135}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":50595,"byte_end":50608,"line_start":233,"line_end":233,"column_start":26,"column_end":39},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":976},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":50843,"byte_end":50856,"line_start":244,"line_end":244,"column_start":33,"column_end":46},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":976},"to":{"krate":0,"index":65}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":51204,"byte_end":51217,"line_start":257,"line_end":257,"column_start":28,"column_end":41},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":976},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":51608,"byte_end":51621,"line_start":275,"line_end":275,"column_start":21,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":976},"to":{"krate":28,"index":92}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":51970,"byte_end":51983,"line_start":289,"line_end":289,"column_start":26,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":976},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":52158,"byte_end":52171,"line_start":298,"line_end":298,"column_start":27,"column_end":40},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":976},"to":{"krate":1,"index":9691}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":52369,"byte_end":52382,"line_start":307,"line_end":307,"column_start":27,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":976},"to":{"krate":1,"index":9693}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/scalar/nonzero.rs","byte_start":52578,"byte_end":52591,"line_start":316,"line_end":316,"column_start":26,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":976},"to":{"krate":1,"index":12317}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":56219,"byte_end":56228,"line_start":91,"line_end":91,"column_start":9,"column_end":18},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":63065,"byte_end":63074,"line_start":307,"line_end":307,"column_start":28,"column_end":37},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":982},"to":{"krate":7,"index":57}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":63212,"byte_end":63221,"line_start":316,"line_end":316,"column_start":19,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":982},"to":{"krate":1,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":63491,"byte_end":63500,"line_start":326,"line_end":326,"column_start":27,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":982},"to":{"krate":28,"index":94}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":63540,"byte_end":63549,"line_start":328,"line_end":328,"column_start":18,"column_end":27},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":982},"to":{"krate":1,"index":3300}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":63661,"byte_end":63670,"line_start":337,"line_end":337,"column_start":23,"column_end":32},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":982},"to":{"krate":1,"index":2714}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":63700,"byte_end":63709,"line_start":339,"line_end":339,"column_start":23,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":982},"to":{"krate":1,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":63940,"byte_end":63949,"line_start":350,"line_end":350,"column_start":45,"column_end":54},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":982},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":64834,"byte_end":64843,"line_start":377,"line_end":377,"column_start":36,"column_end":45},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":982},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/secret_key.rs","byte_start":65111,"byte_end":65120,"line_start":388,"line_end":388,"column_start":37,"column_end":46},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":982},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":65700,"byte_end":65705,"line_start":12,"line_end":12,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":937},"to":{"krate":0,"index":736}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":65708,"byte_end":65724,"line_start":12,"line_end":12,"column_start":37,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":742},"to":{"krate":0,"index":736}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66240,"byte_end":66250,"line_start":33,"line_end":33,"column_start":5,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":940},"to":{"krate":0,"index":738}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66253,"byte_end":66273,"line_start":33,"line_end":33,"column_start":18,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":740},"to":{"krate":0,"index":738}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66602,"byte_end":66607,"line_start":41,"line_end":41,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":937},"to":{"krate":0,"index":740}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":66610,"byte_end":66626,"line_start":41,"line_end":41,"column_start":41,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":736},"to":{"krate":0,"index":740}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/arithmetic.rs","byte_start":67372,"byte_end":67377,"line_start":67,"line_end":67,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":937},"to":{"krate":0,"index":742}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":70363,"byte_end":70372,"line_start":82,"line_end":82,"column_start":9,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":73709,"byte_end":73718,"line_start":182,"line_end":182,"column_start":35,"column_end":44},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":988},"to":{"krate":1,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":73860,"byte_end":73869,"line_start":191,"line_end":191,"column_start":18,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":988},"to":{"krate":1,"index":3067}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":74020,"byte_end":74029,"line_start":195,"line_end":195,"column_start":33,"column_end":42},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":988},"to":{"krate":0,"index":107}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":74649,"byte_end":74658,"line_start":212,"line_end":212,"column_start":31,"column_end":40},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":988},"to":{"krate":0,"index":110}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":75137,"byte_end":75149,"line_start":227,"line_end":227,"column_start":32,"column_end":44},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":105},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":75527,"byte_end":75539,"line_start":240,"line_end":240,"column_start":33,"column_end":45},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":105},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":75920,"byte_end":75929,"line_start":253,"line_end":253,"column_start":24,"column_end":33},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":988},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/public_key.rs","byte_start":76260,"byte_end":76269,"line_start":266,"line_end":266,"column_start":17,"column_end":26},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":988},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":4951,"byte_end":4955,"line_start":163,"line_end":163,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":3067},"to":{"krate":0,"index":937}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":4958,"byte_end":4963,"line_start":163,"line_end":163,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":1,"index":2679},"to":{"krate":0,"index":937}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":4966,"byte_end":4971,"line_start":163,"line_end":163,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":9678},"to":{"krate":0,"index":937}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":4974,"byte_end":4981,"line_start":163,"line_end":163,"column_start":51,"column_end":58},"kind":"SuperTrait","from":{"krate":1,"index":3035},"to":{"krate":0,"index":937}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":4984,"byte_end":4986,"line_start":163,"line_end":163,"column_start":61,"column_end":63},"kind":"SuperTrait","from":{"krate":1,"index":2714},"to":{"krate":0,"index":937}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":4989,"byte_end":4992,"line_start":163,"line_end":163,"column_start":66,"column_end":69},"kind":"SuperTrait","from":{"krate":1,"index":2745},"to":{"krate":0,"index":937}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":4995,"byte_end":4999,"line_start":163,"line_end":163,"column_start":72,"column_end":76},"kind":"SuperTrait","from":{"krate":1,"index":3057},"to":{"krate":0,"index":937}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":5002,"byte_end":5006,"line_start":163,"line_end":163,"column_start":79,"column_end":83},"kind":"SuperTrait","from":{"krate":1,"index":3069},"to":{"krate":0,"index":937}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.12.1/src/lib.rs","byte_start":5837,"byte_end":5842,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":937},"to":{"krate":0,"index":940}}]}