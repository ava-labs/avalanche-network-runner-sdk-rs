{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2","program":"/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","impl_serde","--edition=2018","/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=25f15f24f7c7529a","-C","extra-filename=-25f15f24f7c7529a","--out-dir","/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","-L","dependency=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","--extern","serde=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libserde-42372f09b71258d6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libimpl_serde-25f15f24f7c7529a.rmeta"},"prelude":{"crate_id":{"name":"impl_serde","disambiguator":[8175919888175289893,0]},"crate_root":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src","external_crates":[{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":5,"id":{"name":"serde","disambiguator":[684194806532393625,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":6,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":10,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":12,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":13,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":14,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":15,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":16,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":17,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":18,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":19,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","num":21,"id":{"name":"serde_derive","disambiguator":[3697792355618157202,0]}}],"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","byte_start":342,"byte_end":2316,"line_start":9,"line_end":85,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":5,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","byte_start":512,"byte_end":517,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"alias_span":null,"name":"serde","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","byte_start":342,"byte_end":2316,"line_start":9,"line_end":85,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":83},{"krate":0,"index":84}],"decl_id":null,"docs":" Serde serialization support for uint and fixed hash.\n","sig":null,"attributes":[{"value":"/ Serde serialization support for uint and fixed hash.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","byte_start":342,"byte_end":398,"line_start":9,"line_end":9,"column_start":1,"column_end":57}},{"value":"no_std","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","byte_start":400,"byte_end":410,"line_start":11,"line_end":11,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serialize","qualname":"::serialize","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":85},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":100},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":66}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":3146,"byte_end":3152,"line_start":21,"line_end":21,"column_start":8,"column_end":14},"name":"to_hex","qualname":"::serialize::to_hex","value":"pub fn to_hex(&[u8], bool) -> String","parent":null,"children":[],"decl_id":null,"docs":" Serialize given bytes to a 0x-prefixed hex string.","sig":null,"attributes":[{"value":"/ Serialize given bytes to a 0x-prefixed hex string.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":2820,"byte_end":2874,"line_start":15,"line_end":15,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":2875,"byte_end":2878,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If `skip_leading_zero` initial 0s will not be printed out,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":2879,"byte_end":2941,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/ unless the byte string is empty, in which case `0x0` will be returned.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":2942,"byte_end":3016,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ The results are consistent with `serialize_uint` output if the flag is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":3017,"byte_end":3091,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ on and `serialize_raw` if the flag is off.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":3092,"byte_end":3138,"line_start":20,"line_end":20,"column_start":1,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":86},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":4452,"byte_end":4465,"line_start":70,"line_end":70,"column_start":2,"column_end":15},"name":"MissingPrefix","qualname":"::serialize::FromHexError::MissingPrefix","value":"FromHexError::MissingPrefix","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" The `0x` prefix is missing.\n","sig":null,"attributes":[{"value":"/ The `0x` prefix is missing.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":4338,"byte_end":4369,"line_start":68,"line_end":68,"column_start":2,"column_end":33}},{"value":"deprecated(since = \"0.3.2\", note =\n\"We support non 0x-prefixed hex strings\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":4371,"byte_end":4450,"line_start":69,"line_end":69,"column_start":2,"column_end":81}}]},{"kind":"StructVariant","id":{"krate":0,"index":88},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":4514,"byte_end":4524,"line_start":72,"line_end":72,"column_start":2,"column_end":12},"name":"InvalidHex","qualname":"::serialize::FromHexError::InvalidHex","value":"FromHexError::InvalidHex { character, index }","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Invalid (non-hex) character encountered.\n","sig":null,"attributes":[{"value":"/ Invalid (non-hex) character encountered.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":4468,"byte_end":4512,"line_start":71,"line_end":71,"column_start":2,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":85},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":4322,"byte_end":4334,"line_start":67,"line_end":67,"column_start":10,"column_end":22},"name":"FromHexError","qualname":"::serialize::FromHexError","value":"pub enum FromHexError {\n    MissingPrefix,\n    InvalidHex {\n            character: char,\n            index: usize,\n        },\n}","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":88}],"decl_id":null,"docs":" Decoding bytes from hex string error.\n","sig":null,"attributes":[{"value":"/ Decoding bytes from hex string error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":4239,"byte_end":4280,"line_start":65,"line_end":65,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":40},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":5165,"byte_end":5173,"line_start":96,"line_end":96,"column_start":8,"column_end":16},"name":"from_hex","qualname":"::serialize::from_hex","value":"pub fn from_hex(&str) -> Result<Vec<u8>, FromHexError>","parent":null,"children":[],"decl_id":null,"docs":" Decode given (both 0x-prefixed or not) hex string into a vector of bytes.","sig":null,"attributes":[{"value":"/ Decode given (both 0x-prefixed or not) hex string into a vector of bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":5020,"byte_end":5097,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":5098,"byte_end":5101,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Returns an error if non-hex characters are present.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":5102,"byte_end":5157,"line_start":95,"line_end":95,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":43},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":6395,"byte_end":6408,"line_start":142,"line_end":142,"column_start":8,"column_end":21},"name":"serialize_raw","qualname":"::serialize::serialize_raw","value":"pub fn serialize_raw<S>(&mut [u8], &[u8], S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serializes a slice of bytes.\n","sig":null,"attributes":[{"value":"/ Serializes a slice of bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":6355,"byte_end":6387,"line_start":141,"line_end":141,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":45},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":6682,"byte_end":6691,"line_start":154,"line_end":154,"column_start":8,"column_end":17},"name":"serialize","qualname":"::serialize::serialize","value":"pub fn serialize<S>(&[u8], S) -> Result<S::Ok, S::Error> where S: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serializes a slice of bytes.\n","sig":null,"attributes":[{"value":"/ Serializes a slice of bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":6642,"byte_end":6674,"line_start":153,"line_end":153,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":6986,"byte_end":7000,"line_start":165,"line_end":165,"column_start":8,"column_end":22},"name":"serialize_uint","qualname":"::serialize::serialize_uint","value":"pub fn serialize_uint<S>(&mut [u8], &[u8], S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a slice of bytes as uint.","sig":null,"attributes":[{"value":"/ Serialize a slice of bytes as uint.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":6875,"byte_end":6914,"line_start":162,"line_end":162,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":6915,"byte_end":6918,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ The representation will have all leading zeros trimmed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":6919,"byte_end":6978,"line_start":164,"line_end":164,"column_start":1,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":102},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":7455,"byte_end":7460,"line_start":182,"line_end":182,"column_start":2,"column_end":7},"name":"Exact","qualname":"::serialize::ExpectedLen::Exact","value":"ExpectedLen::Exact(&'a mut [u8])","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Exact length in bytes.\n","sig":null,"attributes":[{"value":"/ Exact length in bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":7427,"byte_end":7453,"line_start":181,"line_end":181,"column_start":2,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":105},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":7525,"byte_end":7532,"line_start":184,"line_end":184,"column_start":2,"column_end":9},"name":"Between","qualname":"::serialize::ExpectedLen::Between","value":"ExpectedLen::Between(usize, &'a mut [u8])","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" A bytes length between (min; slice.len()].\n","sig":null,"attributes":[{"value":"/ A bytes length between (min; slice.len()].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":7477,"byte_end":7523,"line_start":183,"line_end":183,"column_start":2,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":100},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":7408,"byte_end":7419,"line_start":180,"line_end":180,"column_start":10,"column_end":21},"name":"ExpectedLen","qualname":"::serialize::ExpectedLen","value":"pub enum ExpectedLen<'a> {\n    Exact(&'a mut [u8]),\n    Between(usize, &'a mut [u8]),\n}","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":105}],"decl_id":null,"docs":" Expected length of bytes vector.\n","sig":null,"attributes":[{"value":"/ Expected length of bytes vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":7330,"byte_end":7366,"line_start":178,"line_end":178,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":53},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":7959,"byte_end":7970,"line_start":198,"line_end":198,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::serialize::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<u8>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize into vector of bytes.  This will allocate an O(n) intermediate\n string.\n","sig":null,"attributes":[{"value":"/ Deserialize into vector of bytes.  This will allocate an O(n) intermediate","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":7861,"byte_end":7939,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"/ string.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":7940,"byte_end":7951,"line_start":197,"line_end":197,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":66},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":8647,"byte_end":8668,"line_start":225,"line_end":225,"column_start":8,"column_end":29},"name":"deserialize_check_len","qualname":"::serialize::deserialize_check_len","value":"pub fn deserialize_check_len<'a, 'de, D>(D, ExpectedLen)\n-> Result<usize, D::Error> where D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize into vector of bytes with additional size check.\n Returns number of bytes written.\n","sig":null,"attributes":[{"value":"/ Deserialize into vector of bytes with additional size check.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":8538,"byte_end":8602,"line_start":223,"line_end":223,"column_start":1,"column_end":65}},{"value":"/ Returns number of bytes written.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":8603,"byte_end":8639,"line_start":224,"line_end":224,"column_start":1,"column_end":37}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":4723,"byte_end":4735,"line_start":83,"line_end":83,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":7584,"byte_end":7595,"line_start":187,"line_end":187,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":8104,"byte_end":8111,"line_start":204,"line_end":204,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":8862,"byte_end":8869,"line_start":233,"line_end":233,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/lib.rs","byte_start":543,"byte_end":552,"line_start":23,"line_end":23,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":8}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":4723,"byte_end":4735,"line_start":83,"line_end":83,"column_start":23,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":85},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":7584,"byte_end":7595,"line_start":187,"line_end":187,"column_start":27,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":100},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":8104,"byte_end":8111,"line_start":204,"line_end":204,"column_start":31,"column_end":38},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":56},"to":{"krate":5,"index":1646}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.2/src/serialize.rs","byte_start":8862,"byte_end":8869,"line_start":233,"line_end":233,"column_start":35,"column_end":42},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":70},"to":{"krate":5,"index":1646}}]}