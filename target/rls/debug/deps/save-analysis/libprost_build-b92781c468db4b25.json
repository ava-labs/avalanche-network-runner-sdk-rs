{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4","program":"/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","prost_build","--edition=2018","/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=b92781c468db4b25","-C","extra-filename=-b92781c468db4b25","--out-dir","/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","-L","dependency=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","--extern","bytes=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libbytes-bdfc76c82c1f0afe.rmeta","--extern","heck=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libheck-101bfbbdccd014e6.rmeta","--extern","itertools=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libitertools-292503658204861a.rmeta","--extern","lazy_static=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/liblazy_static-1dc142688259d6c1.rmeta","--extern","log=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/liblog-a602c6d62dd5e398.rmeta","--extern","multimap=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libmultimap-83b2067245ff5876.rmeta","--extern","petgraph=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libpetgraph-2c90562586eb3cad.rmeta","--extern","prost=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libprost-648870dc61d64013.rmeta","--extern","prost_types=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libprost_types-2f838d1de547d078.rmeta","--extern","regex=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libregex-28c4c2d962013632.rmeta","--extern","tempfile=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libtempfile-99e40b34eb551856.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libprost_build-b92781c468db4b25.rmeta"},"prelude":{"crate_id":{"name":"prost_build","disambiguator":[13243952373731837340,0]},"crate_root":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src","external_crates":[{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","num":20,"id":{"name":"lazy_static","disambiguator":[2034204853663046624,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","num":21,"id":{"name":"spin","disambiguator":[16691178495116672345,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","num":22,"id":{"name":"prost_types","disambiguator":[5720903135259943675,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":23,"id":{"name":"prost","disambiguator":[7293225627425930837,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","num":24,"id":{"name":"prost_derive","disambiguator":[14462835091029970506,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","num":25,"id":{"name":"bytes","disambiguator":[8911258747785264939,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","num":26,"id":{"name":"regex","disambiguator":[18263831797589228821,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","num":27,"id":{"name":"regex_syntax","disambiguator":[15246642961285779483,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","num":28,"id":{"name":"aho_corasick","disambiguator":[17248635010410637963,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","num":29,"id":{"name":"memchr","disambiguator":[15255469418595263440,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/code_generator.rs","num":30,"id":{"name":"itertools","disambiguator":[9244086411298771906,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/code_generator.rs","num":31,"id":{"name":"either","disambiguator":[3293860395641130383,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/code_generator.rs","num":32,"id":{"name":"log","disambiguator":[3272753406751371455,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/code_generator.rs","num":33,"id":{"name":"cfg_if","disambiguator":[16442455012885040314,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/code_generator.rs","num":34,"id":{"name":"multimap","disambiguator":[8421023673603575076,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ident.rs","num":35,"id":{"name":"heck","disambiguator":[15721616540307203372,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/message_graph.rs","num":36,"id":{"name":"petgraph","disambiguator":[3697814016786174170,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/message_graph.rs","num":37,"id":{"name":"fixedbitset","disambiguator":[16011890624350660546,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/message_graph.rs","num":38,"id":{"name":"indexmap","disambiguator":[4063574378996912992,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/message_graph.rs","num":39,"id":{"name":"hashbrown","disambiguator":[366362317594047013,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":40,"id":{"name":"tempfile","disambiguator":[9273006669776863047,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":41,"id":{"name":"remove_dir_all","disambiguator":[7072844568730202172,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":42,"id":{"name":"fastrand","disambiguator":[12992847879450994621,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","num":43,"id":{"name":"libc","disambiguator":[14730682284296605087,0]}}],"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":0,"byte_end":46733,"line_start":1,"line_end":1302,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":488},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":4401,"byte_end":4409,"line_start":145,"line_end":145,"column_start":22,"column_end":30},"alias_span":null,"name":"Comments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":525},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":4411,"byte_end":4417,"line_start":145,"line_end":145,"column_start":32,"column_end":38},"alias_span":null,"name":"Method","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":516},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":4419,"byte_end":4426,"line_start":145,"line_end":145,"column_start":40,"column_end":47},"alias_span":null,"name":"Service","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":0,"byte_end":46733,"line_start":1,"line_end":1302,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":19},{"krate":0,"index":183},{"krate":0,"index":208},{"krate":0,"index":218},{"krate":0,"index":252},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":560},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":389},{"krate":0,"index":573},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":409},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":467},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":487}],"decl_id":null,"docs":" `prost-build` compiles `.proto` files into Rust.","sig":null,"attributes":[{"value":"allow(clippy :: option_as_ref_deref)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":62,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":39}},{"value":"/ `prost-build` compiles `.proto` files into Rust.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":102,"byte_end":154,"line_start":4,"line_end":4,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":155,"byte_end":158,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ `prost-build` is designed to be used for build-time code generation as part of a Cargo","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":159,"byte_end":249,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/ build-script.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":250,"byte_end":267,"line_start":7,"line_end":7,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":268,"byte_end":271,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":272,"byte_end":286,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":287,"byte_end":290,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Let's create a small crate, `snazzy`, that defines a collection of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":291,"byte_end":361,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ snazzy new items in a protobuf file.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":362,"byte_end":402,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":403,"byte_end":406,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":407,"byte_end":418,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ $ cargo new snazzy && cd snazzy","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":419,"byte_end":454,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":455,"byte_end":462,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":463,"byte_end":466,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ First, add `prost-build`, `prost` and its public dependencies to `Cargo.toml`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":467,"byte_end":548,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"/ (see [crates.io](https://crates.io/crates/prost) for the current versions):","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":549,"byte_end":628,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":629,"byte_end":632,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":633,"byte_end":644,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":645,"byte_end":663,"line_start":22,"line_end":22,"column_start":1,"column_end":19}},{"value":"/ bytes = <bytes-version>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":664,"byte_end":691,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/ prost = <prost-version>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":692,"byte_end":719,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":720,"byte_end":723,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [build-dependencies]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":724,"byte_end":748,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/ prost-build = { version = <prost-version> }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":749,"byte_end":796,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":797,"byte_end":804,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":805,"byte_end":808,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Next, add `src/items.proto` to the project:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":809,"byte_end":856,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":857,"byte_end":860,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```proto","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":861,"byte_end":873,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ syntax = \"proto3\";","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":874,"byte_end":896,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":897,"byte_end":900,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ package snazzy.items;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":901,"byte_end":926,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":927,"byte_end":930,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // A snazzy new shirt!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":931,"byte_end":957,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ message Shirt {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":958,"byte_end":977,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/     enum Size {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":978,"byte_end":997,"line_start":39,"line_end":39,"column_start":1,"column_end":20}},{"value":"/         SMALL = 0;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":998,"byte_end":1020,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/         MEDIUM = 1;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1021,"byte_end":1044,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/         LARGE = 2;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1045,"byte_end":1067,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1068,"byte_end":1077,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1078,"byte_end":1081,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     string color = 1;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1082,"byte_end":1107,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/     Size size = 2;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1108,"byte_end":1130,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1131,"byte_end":1136,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1137,"byte_end":1144,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1145,"byte_end":1148,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ To generate Rust code from `items.proto`, we use `prost-build` in the crate's","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1149,"byte_end":1230,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ `build.rs` build-script:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1231,"byte_end":1259,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1260,"byte_end":1263,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1264,"byte_end":1282,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/ use std::io::Result;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1283,"byte_end":1307,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/ fn main() -> Result<()> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1308,"byte_end":1337,"line_start":55,"line_end":55,"column_start":1,"column_end":30}},{"value":"/     prost_build::compile_protos(&[\"src/items.proto\"], &[\"src/\"])?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1338,"byte_end":1408,"line_start":56,"line_end":56,"column_start":1,"column_end":71}},{"value":"/     Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1409,"byte_end":1423,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1424,"byte_end":1429,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1430,"byte_end":1437,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1438,"byte_end":1441,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ And finally, in `lib.rs`, include the generated code:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1442,"byte_end":1499,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1500,"byte_end":1503,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1504,"byte_end":1522,"line_start":63,"line_end":63,"column_start":1,"column_end":19}},{"value":"/ // Include the `items` module, which is generated from items.proto.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1523,"byte_end":1594,"line_start":64,"line_end":64,"column_start":1,"column_end":72}},{"value":"/ pub mod items {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1595,"byte_end":1614,"line_start":65,"line_end":65,"column_start":1,"column_end":20}},{"value":"/     include!(concat!(env!(\"OUT_DIR\"), \"/snazzy.items.rs\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1615,"byte_end":1678,"line_start":66,"line_end":66,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1679,"byte_end":1684,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1685,"byte_end":1688,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ pub fn create_large_shirt(color: String) -> items::Shirt {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1689,"byte_end":1751,"line_start":69,"line_end":69,"column_start":1,"column_end":63}},{"value":"/     let mut shirt = items::Shirt::default();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1752,"byte_end":1800,"line_start":70,"line_end":70,"column_start":1,"column_end":49}},{"value":"/     shirt.color = color;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1801,"byte_end":1829,"line_start":71,"line_end":71,"column_start":1,"column_end":29}},{"value":"/     shirt.set_size(items::shirt::Size::Large);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1830,"byte_end":1880,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/     shirt","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1881,"byte_end":1894,"line_start":73,"line_end":73,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1895,"byte_end":1900,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1901,"byte_end":1908,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1909,"byte_end":1912,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ That's it! Run `cargo doc` to see documentation for the generated code. The full","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1913,"byte_end":1997,"line_start":77,"line_end":77,"column_start":1,"column_end":85}},{"value":"/ example project can be found on [GitHub](https://github.com/danburkert/snazzy).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":1998,"byte_end":2081,"line_start":78,"line_end":78,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2082,"byte_end":2085,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ## Sourcing `protoc`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2086,"byte_end":2110,"line_start":80,"line_end":80,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2111,"byte_end":2114,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ `prost-build` depends on the Protocol Buffers compiler, `protoc`, to parse `.proto` files into","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2115,"byte_end":2213,"line_start":82,"line_end":82,"column_start":1,"column_end":99}},{"value":"/ a representation that can be transformed into Rust. If set, `prost-build` uses the `PROTOC` and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2214,"byte_end":2313,"line_start":83,"line_end":83,"column_start":1,"column_end":100}},{"value":"/ `PROTOC_INCLUDE` environment variables for locating `protoc` and the Protobuf includes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2314,"byte_end":2404,"line_start":84,"line_end":84,"column_start":1,"column_end":91}},{"value":"/ directory. For example, on a macOS system where Protobuf is installed with Homebrew, set the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2405,"byte_end":2501,"line_start":85,"line_end":85,"column_start":1,"column_end":97}},{"value":"/ environment to:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2502,"byte_end":2521,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2522,"byte_end":2525,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2526,"byte_end":2537,"line_start":88,"line_end":88,"column_start":1,"column_end":12}},{"value":"/ PROTOC=/usr/local/bin/protoc","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2538,"byte_end":2570,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/ PROTOC_INCLUDE=/usr/local/include","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2571,"byte_end":2608,"line_start":90,"line_end":90,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2609,"byte_end":2616,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2617,"byte_end":2620,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ and in a typical Linux installation:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2621,"byte_end":2661,"line_start":93,"line_end":93,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2662,"byte_end":2665,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2666,"byte_end":2677,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ PROTOC=/usr/bin/protoc","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2678,"byte_end":2704,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/ PROTOC_INCLUDE=/usr/include","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2705,"byte_end":2736,"line_start":97,"line_end":97,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2737,"byte_end":2744,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2745,"byte_end":2748,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ If no `PROTOC` environment variable is set then `prost-build` will search the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2749,"byte_end":2830,"line_start":100,"line_end":100,"column_start":1,"column_end":82}},{"value":"/ current path for `protoc` or `protoc.exe`. If `protoc` is not found via these","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2831,"byte_end":2912,"line_start":101,"line_end":101,"column_start":1,"column_end":82}},{"value":"/ two methods then `prost-build` will attempt to compile `protoc` from the bundled","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2913,"byte_end":2997,"line_start":102,"line_end":102,"column_start":1,"column_end":85}},{"value":"/ source.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":2998,"byte_end":3009,"line_start":103,"line_end":103,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3010,"byte_end":3013,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ If you would not like `prost-build` to not compile `protoc` from source ever then","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3014,"byte_end":3099,"line_start":105,"line_end":105,"column_start":1,"column_end":86}},{"value":"/ ensure you have set `PROTOC_NO_VENDOR` environment variable as this will disable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3100,"byte_end":3184,"line_start":106,"line_end":106,"column_start":1,"column_end":85}},{"value":"/ compiling from source even if the `vendored` feature flag is enabled.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3185,"byte_end":3258,"line_start":107,"line_end":107,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3259,"byte_end":3262,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ If you would like to always compile from source then setting the `vendored` feature","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3263,"byte_end":3350,"line_start":109,"line_end":109,"column_start":1,"column_end":88}},{"value":"/ flag will force `prost-build` to always build `protoc` from source.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3351,"byte_end":3422,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3423,"byte_end":3426,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ If `PROTOC_INCLUDE` is not found in the environment, then the Protobuf include directory","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3427,"byte_end":3519,"line_start":112,"line_end":112,"column_start":1,"column_end":93}},{"value":"/ bundled in the prost-build crate is be used.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3520,"byte_end":3568,"line_start":113,"line_end":113,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3569,"byte_end":3572,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Compiling `protoc` from source","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3573,"byte_end":3611,"line_start":115,"line_end":115,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3612,"byte_end":3615,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Compiling `protoc` from source requires a few external dependencies. Currently,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3616,"byte_end":3699,"line_start":117,"line_end":117,"column_start":1,"column_end":84}},{"value":"/ `prost-build` uses `cmake` to build `protoc`. For more information check out the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3700,"byte_end":3784,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ [protobuf build instructions][protobuf-build].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3785,"byte_end":3835,"line_start":119,"line_end":119,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3836,"byte_end":3839,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [protobuf-build]: https://github.com/protocolbuffers/protobuf/blob/master/src/README.md","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":3840,"byte_end":3931,"line_start":121,"line_end":121,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":488},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":46890,"byte_end":46898,"line_start":7,"line_end":7,"column_start":12,"column_end":20},"name":"Comments","qualname":"::ast::Comments","value":"Comments { leading_detached, leading, trailing }","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491}],"decl_id":null,"docs":" Comments on a Protobuf item.\n","sig":null,"attributes":[{"value":"/ Comments on a Protobuf item.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":46829,"byte_end":46861,"line_start":5,"line_end":5,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":489},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":46954,"byte_end":46970,"line_start":9,"line_end":9,"column_start":9,"column_end":25},"name":"leading_detached","qualname":"::ast::Comments::leading_detached","value":"std::vec::Vec<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":488},"children":[],"decl_id":null,"docs":" Leading detached blocks of comments.\n","sig":null,"attributes":[{"value":"/ Leading detached blocks of comments.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":46905,"byte_end":46945,"line_start":8,"line_end":8,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":490},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":47025,"byte_end":47032,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"name":"leading","qualname":"::ast::Comments::leading","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":488},"children":[],"decl_id":null,"docs":" Leading comments.\n","sig":null,"attributes":[{"value":"/ Leading comments.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":46995,"byte_end":47016,"line_start":11,"line_end":11,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":491},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":47083,"byte_end":47091,"line_start":15,"line_end":15,"column_start":9,"column_end":17},"name":"trailing","qualname":"::ast::Comments::trailing","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":488},"children":[],"decl_id":null,"docs":" Trailing comments.\n","sig":null,"attributes":[{"value":"/ Trailing comments.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":47052,"byte_end":47074,"line_start":14,"line_end":14,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":48045,"byte_end":48063,"line_start":50,"line_end":50,"column_start":12,"column_end":30},"name":"append_with_indent","qualname":"<Comments>::append_with_indent","value":"pub fn append_with_indent(&Self, u8, &mut String)","parent":null,"children":[],"decl_id":null,"docs":" Appends the comments to a buffer with indentation.","sig":null,"attributes":[{"value":"/ Appends the comments to a buffer with indentation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":47893,"byte_end":47947,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":47952,"byte_end":47955,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Each level of indentation corresponds to four space (' ') characters.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":47960,"byte_end":48033,"line_start":49,"line_end":49,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":516},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50020,"byte_end":50027,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Service","qualname":"::ast::Service","value":"Service { name, proto_name, package, comments, methods, options }","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522}],"decl_id":null,"docs":" A service descriptor.\n","sig":null,"attributes":[{"value":"/ A service descriptor.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":49966,"byte_end":49991,"line_start":108,"line_end":108,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":517},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50078,"byte_end":50082,"line_start":112,"line_end":112,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::Service::name","value":"std::string::String","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":" The service name in Rust style.\n","sig":null,"attributes":[{"value":"/ The service name in Rust style.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50034,"byte_end":50069,"line_start":111,"line_end":111,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":518},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50159,"byte_end":50169,"line_start":114,"line_end":114,"column_start":9,"column_end":19},"name":"proto_name","qualname":"::ast::Service::proto_name","value":"std::string::String","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":" The service name as it appears in the .proto file.\n","sig":null,"attributes":[{"value":"/ The service name as it appears in the .proto file.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50096,"byte_end":50150,"line_start":113,"line_end":113,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":519},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50246,"byte_end":50253,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"package","qualname":"::ast::Service::package","value":"std::string::String","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":" The package name as it appears in the .proto file.\n","sig":null,"attributes":[{"value":"/ The package name as it appears in the .proto file.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50183,"byte_end":50237,"line_start":115,"line_end":115,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":520},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50301,"byte_end":50309,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"comments","qualname":"::ast::Service::comments","value":"ast::Comments","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":" The service comments.\n","sig":null,"attributes":[{"value":"/ The service comments.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50267,"byte_end":50292,"line_start":117,"line_end":117,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":521},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50358,"byte_end":50365,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"methods","qualname":"::ast::Service::methods","value":"std::vec::Vec<ast::Method>","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":" The service methods.\n","sig":null,"attributes":[{"value":"/ The service methods.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50325,"byte_end":50349,"line_start":119,"line_end":119,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":522},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50417,"byte_end":50424,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"options","qualname":"::ast::Service::options","value":"prost_types::ServiceOptions","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":" The service options.\n","sig":null,"attributes":[{"value":"/ The service options.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50384,"byte_end":50408,"line_start":121,"line_end":121,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":525},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50519,"byte_end":50525,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"Method","qualname":"::ast::Method","value":"Method { name, proto_name, comments, input_type, output_type, input_proto_type, output_proto_type, options, client_streaming, server_streaming }","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535}],"decl_id":null,"docs":" A service method descriptor.\n","sig":null,"attributes":[{"value":"/ A service method descriptor.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50458,"byte_end":50490,"line_start":125,"line_end":125,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":526},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50582,"byte_end":50586,"line_start":129,"line_end":129,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::Method::name","value":"std::string::String","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" The name of the method in Rust style.\n","sig":null,"attributes":[{"value":"/ The name of the method in Rust style.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50532,"byte_end":50573,"line_start":128,"line_end":128,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":527},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50669,"byte_end":50679,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"proto_name","qualname":"::ast::Method::proto_name","value":"std::string::String","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" The name of the method as it appears in the .proto file.\n","sig":null,"attributes":[{"value":"/ The name of the method as it appears in the .proto file.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50600,"byte_end":50660,"line_start":130,"line_end":130,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":528},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50726,"byte_end":50734,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"comments","qualname":"::ast::Method::comments","value":"ast::Comments","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" The method comments.\n","sig":null,"attributes":[{"value":"/ The method comments.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50693,"byte_end":50717,"line_start":132,"line_end":132,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":529},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50783,"byte_end":50793,"line_start":135,"line_end":135,"column_start":9,"column_end":19},"name":"input_type","qualname":"::ast::Method::input_type","value":"std::string::String","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" The input Rust type.\n","sig":null,"attributes":[{"value":"/ The input Rust type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50750,"byte_end":50774,"line_start":134,"line_end":134,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":530},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50841,"byte_end":50852,"line_start":137,"line_end":137,"column_start":9,"column_end":20},"name":"output_type","qualname":"::ast::Method::output_type","value":"std::string::String","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" The output Rust type.\n","sig":null,"attributes":[{"value":"/ The output Rust type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50807,"byte_end":50832,"line_start":136,"line_end":136,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":531},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50903,"byte_end":50919,"line_start":139,"line_end":139,"column_start":9,"column_end":25},"name":"input_proto_type","qualname":"::ast::Method::input_proto_type","value":"std::string::String","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" The input Protobuf type.\n","sig":null,"attributes":[{"value":"/ The input Protobuf type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50866,"byte_end":50894,"line_start":138,"line_end":138,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":532},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50971,"byte_end":50988,"line_start":141,"line_end":141,"column_start":9,"column_end":26},"name":"output_proto_type","qualname":"::ast::Method::output_proto_type","value":"std::string::String","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" The output Protobuf type.\n","sig":null,"attributes":[{"value":"/ The output Protobuf type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":50933,"byte_end":50962,"line_start":140,"line_end":140,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":533},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":51034,"byte_end":51041,"line_start":143,"line_end":143,"column_start":9,"column_end":16},"name":"options","qualname":"::ast::Method::options","value":"prost_types::MethodOptions","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" The method options.\n","sig":null,"attributes":[{"value":"/ The method options.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":51002,"byte_end":51025,"line_start":142,"line_end":142,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":534},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":51142,"byte_end":51158,"line_start":145,"line_end":145,"column_start":9,"column_end":25},"name":"client_streaming","qualname":"::ast::Method::client_streaming","value":"bool","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" Identifies if client streams multiple client messages.\n","sig":null,"attributes":[{"value":"/ Identifies if client streams multiple client messages.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":51075,"byte_end":51133,"line_start":144,"line_end":144,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":535},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":51237,"byte_end":51253,"line_start":147,"line_end":147,"column_start":9,"column_end":25},"name":"server_streaming","qualname":"::ast::Method::server_streaming","value":"bool","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" Identifies if server streams multiple server messages.\n","sig":null,"attributes":[{"value":"/ Identifies if server streams multiple server messages.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":51170,"byte_end":51228,"line_start":146,"line_end":146,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":385},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5392,"byte_end":5408,"line_start":166,"line_end":166,"column_start":11,"column_end":27},"name":"ServiceGenerator","qualname":"::ServiceGenerator","value":"ServiceGenerator","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388}],"decl_id":null,"docs":" A service generator takes a service descriptor and generates Rust code.","sig":null,"attributes":[{"value":"/ A service generator takes a service descriptor and generates Rust code.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":4604,"byte_end":4679,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":4680,"byte_end":4683,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ `ServiceGenerator` can be used to generate application-specific interfaces","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":4684,"byte_end":4762,"line_start":154,"line_end":154,"column_start":1,"column_end":79}},{"value":"/ or implementations for Protobuf service definitions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":4763,"byte_end":4819,"line_start":155,"line_end":155,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":4820,"byte_end":4823,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Service generators are registered with a code generator using the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":4824,"byte_end":4893,"line_start":157,"line_end":157,"column_start":1,"column_end":70}},{"value":"/ `Config::service_generator` method.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":4894,"byte_end":4933,"line_start":158,"line_end":158,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":4934,"byte_end":4937,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ A viable scenario is that an RPC framework provides a service generator. It generates a trait","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":4938,"byte_end":5035,"line_start":160,"line_end":160,"column_start":1,"column_end":98}},{"value":"/ describing methods of the service and some glue code to call the methods of the trait, defining","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5036,"byte_end":5135,"line_start":161,"line_end":161,"column_start":1,"column_end":100}},{"value":"/ details like how errors are handled or if it is asynchronous. Then the user provides an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5136,"byte_end":5227,"line_start":162,"line_end":162,"column_start":1,"column_end":92}},{"value":"/ implementation of the generated trait in the application code and plugs it into the framework.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5228,"byte_end":5326,"line_start":163,"line_end":163,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5327,"byte_end":5330,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Such framework isn't part of Prost at present.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5331,"byte_end":5381,"line_start":165,"line_end":165,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5523,"byte_end":5531,"line_start":169,"line_end":169,"column_start":8,"column_end":16},"name":"generate","qualname":"::ServiceGenerator::generate","value":"pub fn generate(&mut Self, Service, &mut String)","parent":{"krate":0,"index":385},"children":[],"decl_id":null,"docs":" Generates a Rust interface or implementation for a service, writing the\n result to `buf`.\n","sig":null,"attributes":[{"value":"/ Generates a Rust interface or implementation for a service, writing the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5415,"byte_end":5490,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ result to `buf`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5495,"byte_end":5515,"line_start":168,"line_end":168,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":6196,"byte_end":6204,"line_start":184,"line_end":184,"column_start":8,"column_end":16},"name":"finalize","qualname":"::ServiceGenerator::finalize","value":"pub fn finalize(&mut Self, &mut String)","parent":{"krate":0,"index":385},"children":[],"decl_id":null,"docs":" Finalizes the generation process.","sig":null,"attributes":[{"value":"/ Finalizes the generation process.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5585,"byte_end":5622,"line_start":171,"line_end":171,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5627,"byte_end":5630,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ In case there's something that needs to be output at the end of the generation process, it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5635,"byte_end":5729,"line_start":173,"line_end":173,"column_start":5,"column_end":99}},{"value":"/ goes here. Similar to [`generate`](#method.generate), the output should be appended to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5734,"byte_end":5824,"line_start":174,"line_end":174,"column_start":5,"column_end":95}},{"value":"/ `buf`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5829,"byte_end":5839,"line_start":175,"line_end":175,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5844,"byte_end":5847,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ An example can be a module or other thing that needs to appear just once, not for each","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5852,"byte_end":5942,"line_start":177,"line_end":177,"column_start":5,"column_end":95}},{"value":"/ service generated.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5947,"byte_end":5969,"line_start":178,"line_end":178,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5974,"byte_end":5977,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This still can be called multiple times in a lifetime of the service generator, because it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":5982,"byte_end":6076,"line_start":180,"line_end":180,"column_start":5,"column_end":99}},{"value":"/ is called once per `.proto` file.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":6081,"byte_end":6118,"line_start":181,"line_end":181,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":6123,"byte_end":6126,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ The default implementation is empty and does nothing.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":6131,"byte_end":6188,"line_start":183,"line_end":183,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":6707,"byte_end":6723,"line_start":194,"line_end":194,"column_start":8,"column_end":24},"name":"finalize_package","qualname":"::ServiceGenerator::finalize_package","value":"pub fn finalize_package(&mut Self, &str, &mut String)","parent":{"krate":0,"index":385},"children":[],"decl_id":null,"docs":" Finalizes the generation process for an entire protobuf package.","sig":null,"attributes":[{"value":"/ Finalizes the generation process for an entire protobuf package.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":6243,"byte_end":6311,"line_start":186,"line_end":186,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":6316,"byte_end":6319,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ This differs from [`finalize`](#method.finalize) by where (and how often) it is called","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":6324,"byte_end":6414,"line_start":188,"line_end":188,"column_start":5,"column_end":95}},{"value":"/ during the service generator life cycle. This method is called once per protobuf package,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":6419,"byte_end":6512,"line_start":189,"line_end":189,"column_start":5,"column_end":98}},{"value":"/ making it ideal for grouping services within a single package spread across multiple","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":6517,"byte_end":6605,"line_start":190,"line_end":190,"column_start":5,"column_end":93}},{"value":"/ `.proto` files.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":6610,"byte_end":6629,"line_start":191,"line_end":191,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":6634,"byte_end":6637,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The default implementation is empty and does nothing.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":6642,"byte_end":6699,"line_start":193,"line_end":193,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":393},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":7639,"byte_end":7645,"line_start":232,"line_end":232,"column_start":12,"column_end":18},"name":"Config","qualname":"::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"decl_id":null,"docs":" Configuration options for Protobuf code generation.","sig":null,"attributes":[{"value":"/ Configuration options for Protobuf code generation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":7481,"byte_end":7536,"line_start":229,"line_end":229,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":7537,"byte_end":7540,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ This configuration builder can be used to set non-default code generation options.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":7541,"byte_end":7627,"line_start":231,"line_end":231,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":8289,"byte_end":8292,"line_start":252,"line_end":252,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"pub fn new() -> Config","parent":null,"children":[],"decl_id":null,"docs":" Creates a new code generator configuration with default options.\n","sig":null,"attributes":[{"value":"/ Creates a new code generator configuration with default options.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":8209,"byte_end":8277,"line_start":251,"line_end":251,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":10598,"byte_end":10607,"line_start":304,"line_end":304,"column_start":12,"column_end":21},"name":"btree_map","qualname":"<Config>::btree_map","value":"pub fn btree_map<I, S>(&mut Self, I) -> &mut Self where I: IntoIterator<Item =\nS>, S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Configure the code generator to generate Rust [`BTreeMap`][1] fields for Protobuf\n [`map`][2] type fields.","sig":null,"attributes":[{"value":"/ Configure the code generator to generate Rust [`BTreeMap`][1] fields for Protobuf","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":8344,"byte_end":8429,"line_start":256,"line_end":256,"column_start":5,"column_end":90}},{"value":"/ [`map`][2] type fields.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":8434,"byte_end":8461,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":8466,"byte_end":8469,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":8474,"byte_end":8489,"line_start":259,"line_end":259,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":8494,"byte_end":8497,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ **`paths`** - paths to specific fields, messages, or packages which should use a Rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":8502,"byte_end":8591,"line_start":261,"line_end":261,"column_start":5,"column_end":94}},{"value":"/ `BTreeMap` for Protobuf `map` fields. Paths are specified in terms of the Protobuf type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":8596,"byte_end":8687,"line_start":262,"line_end":262,"column_start":5,"column_end":96}},{"value":"/ name (not the generated Rust type name). Paths with a leading `.` are treated as fully","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":8692,"byte_end":8782,"line_start":263,"line_end":263,"column_start":5,"column_end":95}},{"value":"/ qualified names. Paths without a leading `.` are treated as relative, and are suffix","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":8787,"byte_end":8875,"line_start":264,"line_end":264,"column_start":5,"column_end":93}},{"value":"/ matched on the fully qualified field name. If a Protobuf map field matches any of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":8880,"byte_end":8969,"line_start":265,"line_end":265,"column_start":5,"column_end":94}},{"value":"/ paths, a Rust `BTreeMap` field is generated instead of the default [`HashMap`][3].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":8974,"byte_end":9060,"line_start":266,"line_end":266,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9065,"byte_end":9068,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ The matching is done on the Protobuf names, before converting to Rust-friendly casing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9073,"byte_end":9162,"line_start":268,"line_end":268,"column_start":5,"column_end":94}},{"value":"/ standards.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9167,"byte_end":9181,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9186,"byte_end":9189,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9194,"byte_end":9208,"line_start":271,"line_end":271,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9213,"byte_end":9216,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9221,"byte_end":9232,"line_start":273,"line_end":273,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9237,"byte_end":9287,"line_start":274,"line_end":274,"column_start":5,"column_end":55}},{"value":"/ // Match a specific field in a message type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9292,"byte_end":9340,"line_start":275,"line_end":275,"column_start":5,"column_end":53}},{"value":"/ config.btree_map(&[\".my_messages.MyMessageType.my_map_field\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9345,"byte_end":9412,"line_start":276,"line_end":276,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9417,"byte_end":9420,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ // Match all map fields in a message type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9425,"byte_end":9471,"line_start":278,"line_end":278,"column_start":5,"column_end":51}},{"value":"/ config.btree_map(&[\".my_messages.MyMessageType\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9476,"byte_end":9530,"line_start":279,"line_end":279,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9535,"byte_end":9538,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ // Match all map fields in a package.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9543,"byte_end":9584,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/ config.btree_map(&[\".my_messages\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9589,"byte_end":9629,"line_start":282,"line_end":282,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9634,"byte_end":9637,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ // Match all map fields. Specially useful in `no_std` contexts.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9642,"byte_end":9709,"line_start":284,"line_end":284,"column_start":5,"column_end":72}},{"value":"/ config.btree_map(&[\".\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9714,"byte_end":9743,"line_start":285,"line_end":285,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9748,"byte_end":9751,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ // Match all map fields in a nested message.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9756,"byte_end":9804,"line_start":287,"line_end":287,"column_start":5,"column_end":53}},{"value":"/ config.btree_map(&[\".my_messages.MyMessageType.MyNestedMessageType\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9809,"byte_end":9883,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9888,"byte_end":9891,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_map_field'.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9896,"byte_end":9941,"line_start":290,"line_end":290,"column_start":5,"column_end":50}},{"value":"/ config.btree_map(&[\"my_map_field\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9946,"byte_end":9986,"line_start":291,"line_end":291,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9991,"byte_end":9994,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_map_field' in messages named 'MyMessageType', regardless of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":9999,"byte_end":10092,"line_start":293,"line_end":293,"column_start":5,"column_end":98}},{"value":"/ // package or nesting.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":10097,"byte_end":10123,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/ config.btree_map(&[\"MyMessageType.my_map_field\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":10128,"byte_end":10182,"line_start":295,"line_end":295,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":10187,"byte_end":10190,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_map_field', and all fields in the 'foo.bar' package.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":10195,"byte_end":10281,"line_start":297,"line_end":297,"column_start":5,"column_end":91}},{"value":"/ config.btree_map(&[\"my_map_field\", \".foo.bar\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":10286,"byte_end":10338,"line_start":298,"line_end":298,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":10343,"byte_end":10350,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":10355,"byte_end":10358,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [1]: https://doc.rust-lang.org/std/collections/struct.BTreeMap.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":10363,"byte_end":10434,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/ [2]: https://developers.google.com/protocol-buffers/docs/proto3#maps","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":10439,"byte_end":10511,"line_start":302,"line_end":302,"column_start":5,"column_end":77}},{"value":"/ [3]: https://doc.rust-lang.org/std/collections/struct.HashMap.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":10516,"byte_end":10586,"line_start":303,"line_end":303,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":13144,"byte_end":13149,"line_start":365,"line_end":365,"column_start":12,"column_end":17},"name":"bytes","qualname":"<Config>::bytes","value":"pub fn bytes<I, S>(&mut Self, I) -> &mut Self where I: IntoIterator<Item = S>,\nS: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Configure the code generator to generate Rust [`bytes::Bytes`][1] fields for Protobuf\n [`bytes`][2] type fields.","sig":null,"attributes":[{"value":"/ Configure the code generator to generate Rust [`bytes::Bytes`][1] fields for Protobuf","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":10918,"byte_end":11007,"line_start":317,"line_end":317,"column_start":5,"column_end":94}},{"value":"/ [`bytes`][2] type fields.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11012,"byte_end":11041,"line_start":318,"line_end":318,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11046,"byte_end":11049,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11054,"byte_end":11069,"line_start":320,"line_end":320,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11074,"byte_end":11077,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ **`paths`** - paths to specific fields, messages, or packages which should use a Rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11082,"byte_end":11171,"line_start":322,"line_end":322,"column_start":5,"column_end":94}},{"value":"/ `Bytes` for Protobuf `bytes` fields. Paths are specified in terms of the Protobuf type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11176,"byte_end":11266,"line_start":323,"line_end":323,"column_start":5,"column_end":95}},{"value":"/ name (not the generated Rust type name). Paths with a leading `.` are treated as fully","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11271,"byte_end":11361,"line_start":324,"line_end":324,"column_start":5,"column_end":95}},{"value":"/ qualified names. Paths without a leading `.` are treated as relative, and are suffix","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11366,"byte_end":11454,"line_start":325,"line_end":325,"column_start":5,"column_end":93}},{"value":"/ matched on the fully qualified field name. If a Protobuf map field matches any of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11459,"byte_end":11548,"line_start":326,"line_end":326,"column_start":5,"column_end":94}},{"value":"/ paths, a Rust `Bytes` field is generated instead of the default [`Vec<u8>`][3].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11553,"byte_end":11636,"line_start":327,"line_end":327,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11641,"byte_end":11644,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ The matching is done on the Protobuf names, before converting to Rust-friendly casing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11649,"byte_end":11738,"line_start":329,"line_end":329,"column_start":5,"column_end":94}},{"value":"/ standards.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11743,"byte_end":11757,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11762,"byte_end":11765,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11770,"byte_end":11784,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11789,"byte_end":11792,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11797,"byte_end":11808,"line_start":334,"line_end":334,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11813,"byte_end":11863,"line_start":335,"line_end":335,"column_start":5,"column_end":55}},{"value":"/ // Match a specific field in a message type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11868,"byte_end":11916,"line_start":336,"line_end":336,"column_start":5,"column_end":53}},{"value":"/ config.bytes(&[\".my_messages.MyMessageType.my_bytes_field\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11921,"byte_end":11986,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11991,"byte_end":11994,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ // Match all bytes fields in a message type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":11999,"byte_end":12047,"line_start":339,"line_end":339,"column_start":5,"column_end":53}},{"value":"/ config.bytes(&[\".my_messages.MyMessageType\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12052,"byte_end":12102,"line_start":340,"line_end":340,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12107,"byte_end":12110,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ // Match all bytes fields in a package.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12115,"byte_end":12158,"line_start":342,"line_end":342,"column_start":5,"column_end":48}},{"value":"/ config.bytes(&[\".my_messages\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12163,"byte_end":12199,"line_start":343,"line_end":343,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12204,"byte_end":12207,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ // Match all bytes fields. Specially useful in `no_std` contexts.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12212,"byte_end":12281,"line_start":345,"line_end":345,"column_start":5,"column_end":74}},{"value":"/ config.bytes(&[\".\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12286,"byte_end":12311,"line_start":346,"line_end":346,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12316,"byte_end":12319,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ // Match all bytes fields in a nested message.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12324,"byte_end":12374,"line_start":348,"line_end":348,"column_start":5,"column_end":55}},{"value":"/ config.bytes(&[\".my_messages.MyMessageType.MyNestedMessageType\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12379,"byte_end":12449,"line_start":349,"line_end":349,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12454,"byte_end":12457,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_bytes_field'.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12462,"byte_end":12509,"line_start":351,"line_end":351,"column_start":5,"column_end":52}},{"value":"/ config.bytes(&[\"my_bytes_field\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12514,"byte_end":12552,"line_start":352,"line_end":352,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12557,"byte_end":12560,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_bytes_field' in messages named 'MyMessageType', regardless of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12565,"byte_end":12660,"line_start":354,"line_end":354,"column_start":5,"column_end":100}},{"value":"/ // package or nesting.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12665,"byte_end":12691,"line_start":355,"line_end":355,"column_start":5,"column_end":31}},{"value":"/ config.bytes(&[\"MyMessageType.my_bytes_field\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12696,"byte_end":12748,"line_start":356,"line_end":356,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12753,"byte_end":12756,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_bytes_field', and all fields in the 'foo.bar' package.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12761,"byte_end":12849,"line_start":358,"line_end":358,"column_start":5,"column_end":93}},{"value":"/ config.bytes(&[\"my_bytes_field\", \".foo.bar\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12854,"byte_end":12904,"line_start":359,"line_end":359,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12909,"byte_end":12916,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12921,"byte_end":12924,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [1]: https://docs.rs/bytes/latest/bytes/struct.Bytes.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12929,"byte_end":12990,"line_start":362,"line_end":362,"column_start":5,"column_end":66}},{"value":"/ [2]: https://developers.google.com/protocol-buffers/docs/proto3#scalar","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":12995,"byte_end":13069,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ [3]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":13074,"byte_end":13132,"line_start":364,"line_end":364,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14539,"byte_end":14554,"line_start":401,"line_end":401,"column_start":12,"column_end":27},"name":"field_attribute","qualname":"<Config>::field_attribute","value":"pub fn field_attribute<P, A>(&mut Self, P, A) -> &mut Self where\nP: AsRef<str>, A: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attribute to matched fields.","sig":null,"attributes":[{"value":"/ Add additional attribute to matched fields.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":13463,"byte_end":13510,"line_start":378,"line_end":378,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":13515,"byte_end":13518,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":13523,"byte_end":13538,"line_start":380,"line_end":380,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":13543,"byte_end":13546,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ **`path`** - a path matching any number of fields. These fields get the attribute.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":13551,"byte_end":13637,"line_start":382,"line_end":382,"column_start":5,"column_end":91}},{"value":"/ For details about matching fields see [`btree_map`](#method.btree_map).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":13642,"byte_end":13717,"line_start":383,"line_end":383,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":13722,"byte_end":13725,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ **`attribute`** - an arbitrary string that'll be placed before each matched field. The","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":13730,"byte_end":13820,"line_start":385,"line_end":385,"column_start":5,"column_end":95}},{"value":"/ expected usage are additional attributes, usually in concert with whole-type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":13825,"byte_end":13905,"line_start":386,"line_end":386,"column_start":5,"column_end":85}},{"value":"/ attributes set with [`type_attribute`](method.type_attribute), but it is not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":13910,"byte_end":13990,"line_start":387,"line_end":387,"column_start":5,"column_end":85}},{"value":"/ checked and anything can be put there.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":13995,"byte_end":14037,"line_start":388,"line_end":388,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14042,"byte_end":14045,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Note that the calls to this method are cumulative ‒ if multiple paths from multiple calls","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14050,"byte_end":14145,"line_start":390,"line_end":390,"column_start":5,"column_end":98}},{"value":"/ match the same field, the field gets all the corresponding attributes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14150,"byte_end":14224,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14229,"byte_end":14232,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14237,"byte_end":14251,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14256,"byte_end":14259,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14264,"byte_end":14275,"line_start":395,"line_end":395,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14280,"byte_end":14330,"line_start":396,"line_end":396,"column_start":5,"column_end":55}},{"value":"/ // Prost renames fields named `in` to `in_`. But if serialized through serde,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14335,"byte_end":14416,"line_start":397,"line_end":397,"column_start":5,"column_end":86}},{"value":"/ // they should as `in`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14421,"byte_end":14448,"line_start":398,"line_end":398,"column_start":5,"column_end":32}},{"value":"/ config.field_attribute(\"in\", \"#[serde(rename = \\\"in\\\")]\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14453,"byte_end":14515,"line_start":399,"line_end":399,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14520,"byte_end":14527,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":16769,"byte_end":16783,"line_start":450,"line_end":450,"column_start":12,"column_end":26},"name":"type_attribute","qualname":"<Config>::type_attribute","value":"pub fn type_attribute<P, A>(&mut Self, P, A) -> &mut Self where P: AsRef<str>,\nA: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attribute to matched messages, enums and one-ofs.","sig":null,"attributes":[{"value":"/ Add additional attribute to matched messages, enums and one-ofs.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14804,"byte_end":14872,"line_start":411,"line_end":411,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14877,"byte_end":14880,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14885,"byte_end":14900,"line_start":413,"line_end":413,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14905,"byte_end":14908,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ **`paths`** - a path matching any number of types. It works the same way as in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":14913,"byte_end":14995,"line_start":415,"line_end":415,"column_start":5,"column_end":87}},{"value":"/ [`btree_map`](#method.btree_map), just with the field name omitted.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15000,"byte_end":15071,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15076,"byte_end":15079,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ **`attribute`** - an arbitrary string to be placed before each matched type. The","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15084,"byte_end":15168,"line_start":418,"line_end":418,"column_start":5,"column_end":89}},{"value":"/ expected usage are additional attributes, but anything is allowed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15173,"byte_end":15243,"line_start":419,"line_end":419,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15248,"byte_end":15251,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ The calls to this method are cumulative. They don't overwrite previous calls and if a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15256,"byte_end":15345,"line_start":421,"line_end":421,"column_start":5,"column_end":94}},{"value":"/ type is matched by multiple calls of the method, all relevant attributes are added to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15350,"byte_end":15439,"line_start":422,"line_end":422,"column_start":5,"column_end":94}},{"value":"/ it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15444,"byte_end":15451,"line_start":423,"line_end":423,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15456,"byte_end":15459,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ For things like serde it might be needed to combine with [field","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15464,"byte_end":15531,"line_start":425,"line_end":425,"column_start":5,"column_end":72}},{"value":"/ attributes](#method.field_attribute).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15536,"byte_end":15577,"line_start":426,"line_end":426,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15582,"byte_end":15585,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15590,"byte_end":15604,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15609,"byte_end":15612,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15617,"byte_end":15628,"line_start":430,"line_end":430,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15633,"byte_end":15683,"line_start":431,"line_end":431,"column_start":5,"column_end":55}},{"value":"/ // Nothing around uses floats, so we can derive real `Eq` in addition to `PartialEq`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15688,"byte_end":15777,"line_start":432,"line_end":432,"column_start":5,"column_end":94}},{"value":"/ config.type_attribute(\".\", \"#[derive(Eq)]\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15782,"byte_end":15830,"line_start":433,"line_end":433,"column_start":5,"column_end":53}},{"value":"/ // Some messages want to be serializable with serde as well.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15835,"byte_end":15899,"line_start":434,"line_end":434,"column_start":5,"column_end":69}},{"value":"/ config.type_attribute(\"my_messages.MyMessageType\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15904,"byte_end":15958,"line_start":435,"line_end":435,"column_start":5,"column_end":59}},{"value":"/                       \"#[derive(Serialize)] #[serde(rename-all = \\\"snake_case\\\")]\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":15963,"byte_end":16051,"line_start":436,"line_end":436,"column_start":5,"column_end":93}},{"value":"/ config.type_attribute(\"my_messages.MyMessageType.MyNestedMessageType\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":16056,"byte_end":16130,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/                       \"#[derive(Serialize)] #[serde(rename-all = \\\"snake_case\\\")]\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":16135,"byte_end":16223,"line_start":438,"line_end":438,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":16228,"byte_end":16235,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":16240,"byte_end":16243,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # Oneof fields","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":16248,"byte_end":16266,"line_start":441,"line_end":441,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":16271,"byte_end":16274,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `oneof` fields don't have a type name of their own inside Protobuf. Therefore, the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":16279,"byte_end":16369,"line_start":443,"line_end":443,"column_start":5,"column_end":95}},{"value":"/ field name can be used both with `type_attribute` and `field_attribute` ‒ the first is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":16374,"byte_end":16466,"line_start":444,"line_end":444,"column_start":5,"column_end":95}},{"value":"/ placed before the `enum` type definition, the other before the field inside corresponding","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":16471,"byte_end":16564,"line_start":445,"line_end":445,"column_start":5,"column_end":98}},{"value":"/ message `struct`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":16569,"byte_end":16590,"line_start":446,"line_end":446,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":16595,"byte_end":16598,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ In other words, to place an attribute on the `enum` implementing the `oneof`, the match","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":16603,"byte_end":16694,"line_start":448,"line_end":448,"column_start":5,"column_end":96}},{"value":"/ would look like `my_messages.MyMessageType.oneofname`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":16699,"byte_end":16757,"line_start":449,"line_end":449,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":17116,"byte_end":17133,"line_start":461,"line_end":461,"column_start":12,"column_end":29},"name":"service_generator","qualname":"<Config>::service_generator","value":"pub fn service_generator(&mut Self, Box<dyn ServiceGenerator>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the code generator to use the provided service generator.\n","sig":null,"attributes":[{"value":"/ Configures the code generator to use the provided service generator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":17032,"byte_end":17104,"line_start":460,"line_end":460,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":17487,"byte_end":17511,"line_start":468,"line_end":468,"column_start":12,"column_end":36},"name":"compile_well_known_types","qualname":"<Config>::compile_well_known_types","value":"pub fn compile_well_known_types(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the code generator to not use the `prost_types` crate for Protobuf well-known\n types, and instead generate Protobuf well-known types from their `.proto` definitions.\n","sig":null,"attributes":[{"value":"/ Configures the code generator to not use the `prost_types` crate for Protobuf well-known","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":17288,"byte_end":17380,"line_start":466,"line_end":466,"column_start":5,"column_end":97}},{"value":"/ types, and instead generate Protobuf well-known types from their `.proto` definitions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":17385,"byte_end":17475,"line_start":467,"line_end":467,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":18656,"byte_end":18672,"line_start":493,"line_end":493,"column_start":12,"column_end":28},"name":"disable_comments","qualname":"<Config>::disable_comments","value":"pub fn disable_comments<I, S>(&mut Self, I) -> &mut Self where\nI: IntoIterator<Item = S>, S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Configures the code generator to omit documentation comments on generated Protobuf types.","sig":null,"attributes":[{"value":"/ Configures the code generator to omit documentation comments on generated Protobuf types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":17596,"byte_end":17689,"line_start":473,"line_end":473,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":17694,"byte_end":17697,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":17702,"byte_end":17715,"line_start":475,"line_end":475,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":17720,"byte_end":17723,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ Occasionally `.proto` files contain code blocks which are not valid Rust. To avoid doctest","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":17728,"byte_end":17822,"line_start":477,"line_end":477,"column_start":5,"column_end":99}},{"value":"/ failures, annotate the invalid code blocks with an [`ignore` or `no_run` attribute][1], or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":17827,"byte_end":17921,"line_start":478,"line_end":478,"column_start":5,"column_end":99}},{"value":"/ disable doctests for the crate with a [Cargo.toml entry][2]. If neither of these options","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":17926,"byte_end":18018,"line_start":479,"line_end":479,"column_start":5,"column_end":97}},{"value":"/ are possible, then omit comments on generated code during doctest builds:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":18023,"byte_end":18100,"line_start":480,"line_end":480,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":18105,"byte_end":18108,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":18113,"byte_end":18131,"line_start":482,"line_end":482,"column_start":5,"column_end":23}},{"value":"/ let mut config = prost_build::Config::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":18136,"byte_end":18184,"line_start":483,"line_end":483,"column_start":5,"column_end":53}},{"value":"/ config.disable_comments(\".\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":18189,"byte_end":18222,"line_start":484,"line_end":484,"column_start":5,"column_end":38}},{"value":"/ config.compile_protos(&[\"src/frontend.proto\", \"src/backend.proto\"], &[\"src\"])?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":18227,"byte_end":18310,"line_start":485,"line_end":485,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":18315,"byte_end":18322,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":18327,"byte_end":18330,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ As with other options which take a set of paths, comments can be disabled on a per-package","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":18335,"byte_end":18429,"line_start":488,"line_end":488,"column_start":5,"column_end":99}},{"value":"/ or per-symbol basis.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":18434,"byte_end":18458,"line_start":489,"line_end":489,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":18463,"byte_end":18466,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ [1]: https://doc.rust-lang.org/rustdoc/documentation-tests.html#attributes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":18471,"byte_end":18549,"line_start":491,"line_end":491,"column_start":5,"column_end":83}},{"value":"/ [2]: https://doc.rust-lang.org/cargo/reference/cargo-targets.html#configuring-a-target","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":18554,"byte_end":18644,"line_start":492,"line_end":492,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":22724,"byte_end":22735,"line_start":608,"line_end":608,"column_start":12,"column_end":23},"name":"extern_path","qualname":"<Config>::extern_path","value":"pub fn extern_path<P1, P2>(&mut Self, P1, P2) -> &mut Self where\nP1: Into<String>, P2: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Declare an externally provided Protobuf package or type.","sig":null,"attributes":[{"value":"/ Declare an externally provided Protobuf package or type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":18984,"byte_end":19044,"line_start":506,"line_end":506,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19049,"byte_end":19052,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ `extern_path` allows `prost` types in external crates to be referenced in generated code.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19057,"byte_end":19150,"line_start":508,"line_end":508,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19155,"byte_end":19158,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ When `prost` compiles a `.proto` which includes an import of another `.proto`, it will","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19163,"byte_end":19253,"line_start":510,"line_end":510,"column_start":5,"column_end":95}},{"value":"/ automatically recursively compile the imported file as well. `extern_path` can be used","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19258,"byte_end":19348,"line_start":511,"line_end":511,"column_start":5,"column_end":95}},{"value":"/ to instead substitute types from an external crate.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19353,"byte_end":19408,"line_start":512,"line_end":512,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19413,"byte_end":19416,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19421,"byte_end":19434,"line_start":514,"line_end":514,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19439,"byte_end":19442,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ As an example, consider a crate, `uuid`, with a `prost`-generated `Uuid` type:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19447,"byte_end":19529,"line_start":516,"line_end":516,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19534,"byte_end":19537,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```proto","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19542,"byte_end":19554,"line_start":518,"line_end":518,"column_start":5,"column_end":17}},{"value":"/ // uuid.proto","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19559,"byte_end":19576,"line_start":519,"line_end":519,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19581,"byte_end":19584,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ syntax = \"proto3\";","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19589,"byte_end":19611,"line_start":521,"line_end":521,"column_start":5,"column_end":27}},{"value":"/ package uuid;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19616,"byte_end":19633,"line_start":522,"line_end":522,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19638,"byte_end":19641,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ message Uuid {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19646,"byte_end":19664,"line_start":524,"line_end":524,"column_start":5,"column_end":23}},{"value":"/     string uuid_str = 1;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19669,"byte_end":19697,"line_start":525,"line_end":525,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19702,"byte_end":19707,"line_start":526,"line_end":526,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19712,"byte_end":19719,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19724,"byte_end":19727,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ The `uuid` crate implements some traits for `Uuid`, and publicly exports it:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19732,"byte_end":19812,"line_start":529,"line_end":529,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19817,"byte_end":19820,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19825,"byte_end":19843,"line_start":531,"line_end":531,"column_start":5,"column_end":23}},{"value":"/ // lib.rs in the uuid crate","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19848,"byte_end":19879,"line_start":532,"line_end":532,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19884,"byte_end":19887,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ include!(concat!(env!(\"OUT_DIR\"), \"/uuid.rs\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19892,"byte_end":19943,"line_start":534,"line_end":534,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19948,"byte_end":19951,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ pub trait DoSomething {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19956,"byte_end":19983,"line_start":536,"line_end":536,"column_start":5,"column_end":32}},{"value":"/     fn do_it(&self);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":19988,"byte_end":20012,"line_start":537,"line_end":537,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20017,"byte_end":20022,"line_start":538,"line_end":538,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20027,"byte_end":20030,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ impl DoSomething for Uuid {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20035,"byte_end":20066,"line_start":540,"line_end":540,"column_start":5,"column_end":36}},{"value":"/     fn do_it(&self) {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20071,"byte_end":20096,"line_start":541,"line_end":541,"column_start":5,"column_end":30}},{"value":"/         println!(\"Done\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20101,"byte_end":20130,"line_start":542,"line_end":542,"column_start":5,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20135,"byte_end":20144,"line_start":543,"line_end":543,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20149,"byte_end":20154,"line_start":544,"line_end":544,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20159,"byte_end":20166,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20171,"byte_end":20174,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ A separate crate, `my_application`, uses `prost` to generate message types which reference","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20179,"byte_end":20273,"line_start":547,"line_end":547,"column_start":5,"column_end":99}},{"value":"/ `Uuid`:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20278,"byte_end":20289,"line_start":548,"line_end":548,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20294,"byte_end":20297,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ ```proto","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20302,"byte_end":20314,"line_start":550,"line_end":550,"column_start":5,"column_end":17}},{"value":"/ // my_application.proto","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20319,"byte_end":20346,"line_start":551,"line_end":551,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20351,"byte_end":20354,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ syntax = \"proto3\";","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20359,"byte_end":20381,"line_start":553,"line_end":553,"column_start":5,"column_end":27}},{"value":"/ package my_application;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20386,"byte_end":20413,"line_start":554,"line_end":554,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20418,"byte_end":20421,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ import \"uuid.proto\";","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20426,"byte_end":20450,"line_start":556,"line_end":556,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20455,"byte_end":20458,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ message MyMessage {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20463,"byte_end":20486,"line_start":558,"line_end":558,"column_start":5,"column_end":28}},{"value":"/     uuid.Uuid message_id = 1;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20491,"byte_end":20524,"line_start":559,"line_end":559,"column_start":5,"column_end":38}},{"value":"/     string some_payload = 2;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20529,"byte_end":20561,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20566,"byte_end":20571,"line_start":561,"line_end":561,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20576,"byte_end":20583,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20588,"byte_end":20591,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ Additionally, `my_application` depends on the trait impls provided by the `uuid` crate:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20596,"byte_end":20687,"line_start":564,"line_end":564,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20692,"byte_end":20695,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20700,"byte_end":20718,"line_start":566,"line_end":566,"column_start":5,"column_end":23}},{"value":"/ // `main.rs` of `my_application`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20723,"byte_end":20759,"line_start":567,"line_end":567,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20764,"byte_end":20767,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ use uuid::{DoSomething, Uuid};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20772,"byte_end":20806,"line_start":569,"line_end":569,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20811,"byte_end":20814,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ include!(concat!(env!(\"OUT_DIR\"), \"/my_application.rs\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20819,"byte_end":20880,"line_start":571,"line_end":571,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20885,"byte_end":20888,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ pub fn process_message(msg: MyMessage) {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20893,"byte_end":20937,"line_start":573,"line_end":573,"column_start":5,"column_end":49}},{"value":"/     if let Some(uuid) = msg.message_id {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20942,"byte_end":20986,"line_start":574,"line_end":574,"column_start":5,"column_end":49}},{"value":"/         uuid.do_it();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":20991,"byte_end":21016,"line_start":575,"line_end":575,"column_start":5,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":21021,"byte_end":21030,"line_start":576,"line_end":576,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":21035,"byte_end":21040,"line_start":577,"line_end":577,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":21045,"byte_end":21052,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":21057,"byte_end":21060,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ Without configuring `uuid` as an external path in `my_application`'s `build.rs`, `prost`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":21065,"byte_end":21157,"line_start":580,"line_end":580,"column_start":5,"column_end":97}},{"value":"/ would compile a completely separate version of the `Uuid` type, and `process_message` would","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":21162,"byte_end":21257,"line_start":581,"line_end":581,"column_start":5,"column_end":100}},{"value":"/ fail to compile. However, if `my_application` configures `uuid` as an extern path with a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":21262,"byte_end":21354,"line_start":582,"line_end":582,"column_start":5,"column_end":97}},{"value":"/ call to `.extern_path(\".uuid\", \"::uuid\")`, `prost` will use the external type instead of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":21359,"byte_end":21451,"line_start":583,"line_end":583,"column_start":5,"column_end":97}},{"value":"/ compiling a new version of `Uuid`. Note that the configuration could also be specified as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":21456,"byte_end":21549,"line_start":584,"line_end":584,"column_start":5,"column_end":98}},{"value":"/ `.extern_path(\".uuid.Uuid\", \"::uuid::Uuid\")` if only the `Uuid` type were externally","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":21554,"byte_end":21642,"line_start":585,"line_end":585,"column_start":5,"column_end":93}},{"value":"/ provided, and not the whole `uuid` package.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":21647,"byte_end":21694,"line_start":586,"line_end":586,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":21699,"byte_end":21702,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ # Usage","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":21707,"byte_end":21718,"line_start":588,"line_end":588,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":21723,"byte_end":21726,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ `extern_path` takes a fully-qualified Protobuf path, and the corresponding Rust path that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":21731,"byte_end":21824,"line_start":590,"line_end":590,"column_start":5,"column_end":98}},{"value":"/ it will be substituted with in generated code. The Protobuf path can refer to a package or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":21829,"byte_end":21923,"line_start":591,"line_end":591,"column_start":5,"column_end":99}},{"value":"/ a type, and the Rust path should correspondingly refer to a Rust module or type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":21928,"byte_end":22012,"line_start":592,"line_end":592,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":22017,"byte_end":22020,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":22025,"byte_end":22036,"line_start":594,"line_end":594,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":22041,"byte_end":22091,"line_start":595,"line_end":595,"column_start":5,"column_end":55}},{"value":"/ // Declare the `uuid` Protobuf package and all nested packages and types as externally","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":22096,"byte_end":22186,"line_start":596,"line_end":596,"column_start":5,"column_end":95}},{"value":"/ // provided by the `uuid` crate.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":22191,"byte_end":22227,"line_start":597,"line_end":597,"column_start":5,"column_end":41}},{"value":"/ config.extern_path(\".uuid\", \"::uuid\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":22232,"byte_end":22274,"line_start":598,"line_end":598,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":22279,"byte_end":22282,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ // Declare the `foo.bar.baz` Protobuf package and all nested packages and types as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":22287,"byte_end":22373,"line_start":600,"line_end":600,"column_start":5,"column_end":91}},{"value":"/ // externally provided by the `foo_bar_baz` crate.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":22378,"byte_end":22432,"line_start":601,"line_end":601,"column_start":5,"column_end":59}},{"value":"/ config.extern_path(\".foo.bar.baz\", \"::foo_bar_baz\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":22437,"byte_end":22493,"line_start":602,"line_end":602,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":22498,"byte_end":22501,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ // Declare the `uuid.Uuid` Protobuf type (and all nested types) as externally provided","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":22506,"byte_end":22596,"line_start":604,"line_end":604,"column_start":5,"column_end":95}},{"value":"/ // by the `uuid` crate's `Uuid` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":22601,"byte_end":22642,"line_start":605,"line_end":605,"column_start":5,"column_end":46}},{"value":"/ config.extern_path(\".uuid.Uuid\", \"::uuid::Uuid\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":22647,"byte_end":22700,"line_start":606,"line_end":606,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":22705,"byte_end":22712,"line_start":607,"line_end":607,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23988,"byte_end":24012,"line_start":643,"line_end":643,"column_start":12,"column_end":36},"name":"file_descriptor_set_path","qualname":"<Config>::file_descriptor_set_path","value":"pub fn file_descriptor_set_path<P>(&mut Self, P) -> &mut Self where\nP: Into<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" When set, the `FileDescriptorSet` generated by `protoc` is written to the provided\n filesystem path.","sig":null,"attributes":[{"value":"/ When set, the `FileDescriptorSet` generated by `protoc` is written to the provided","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":22975,"byte_end":23061,"line_start":618,"line_end":618,"column_start":5,"column_end":91}},{"value":"/ filesystem path.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23066,"byte_end":23086,"line_start":619,"line_end":619,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23091,"byte_end":23094,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This option can be used in conjunction with the [`include_bytes!`] macro and the types in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23099,"byte_end":23192,"line_start":621,"line_end":621,"column_start":5,"column_end":98}},{"value":"/ the `prost-types` crate for implementing reflection capabilities, among other things.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23197,"byte_end":23286,"line_start":622,"line_end":622,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23291,"byte_end":23294,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23299,"byte_end":23313,"line_start":624,"line_end":624,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23318,"byte_end":23321,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ In `build.rs`:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23326,"byte_end":23344,"line_start":626,"line_end":626,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23349,"byte_end":23352,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23357,"byte_end":23368,"line_start":628,"line_end":628,"column_start":5,"column_end":16}},{"value":"/ # use std::env;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23373,"byte_end":23392,"line_start":629,"line_end":629,"column_start":5,"column_end":24}},{"value":"/ # use std::path::PathBuf;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23397,"byte_end":23426,"line_start":630,"line_end":630,"column_start":5,"column_end":34}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23431,"byte_end":23481,"line_start":631,"line_end":631,"column_start":5,"column_end":55}},{"value":"/ config.file_descriptor_set_path(","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23486,"byte_end":23522,"line_start":632,"line_end":632,"column_start":5,"column_end":41}},{"value":"/     PathBuf::from(env::var(\"OUT_DIR\").expect(\"OUT_DIR environment variable not set\"))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23527,"byte_end":23616,"line_start":633,"line_end":633,"column_start":5,"column_end":94}},{"value":"/         .join(\"file_descriptor_set.bin\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23621,"byte_end":23667,"line_start":634,"line_end":634,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23672,"byte_end":23679,"line_start":635,"line_end":635,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23684,"byte_end":23687,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ In `lib.rs`:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23692,"byte_end":23708,"line_start":637,"line_end":637,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23713,"byte_end":23716,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23721,"byte_end":23739,"line_start":639,"line_end":639,"column_start":5,"column_end":23}},{"value":"/ let file_descriptor_set_bytes = include_bytes!(concat!(env!(\"OUT_DIR\"), \"/file_descriptor_set.bin\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23744,"byte_end":23849,"line_start":640,"line_end":640,"column_start":5,"column_end":110}},{"value":"/ let file_descriptor_set = prost_types::FileDescriptorSet::decode(&file_descriptor_set_bytes[..]).unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23854,"byte_end":23964,"line_start":641,"line_end":641,"column_start":5,"column_end":115}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":23969,"byte_end":23976,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24783,"byte_end":24798,"line_start":665,"line_end":665,"column_start":12,"column_end":27},"name":"skip_protoc_run","qualname":"<Config>::skip_protoc_run","value":"pub fn skip_protoc_run(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" In combination with with `file_descriptor_set_path`, this can be used to provide a file\n descriptor set as an input file, rather than having prost-build generate the file by calling\n protoc.  Prost-build does require that the descriptor set was generated with\n --include_source_info.","sig":null,"attributes":[{"value":"/ In combination with with `file_descriptor_set_path`, this can be used to provide a file","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24174,"byte_end":24265,"line_start":651,"line_end":651,"column_start":5,"column_end":96}},{"value":"/ descriptor set as an input file, rather than having prost-build generate the file by calling","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24270,"byte_end":24366,"line_start":652,"line_end":652,"column_start":5,"column_end":101}},{"value":"/ protoc.  Prost-build does require that the descriptor set was generated with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24371,"byte_end":24451,"line_start":653,"line_end":653,"column_start":5,"column_end":85}},{"value":"/ --include_source_info.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24456,"byte_end":24482,"line_start":654,"line_end":654,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24487,"byte_end":24490,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ In `build.rs`:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24495,"byte_end":24513,"line_start":656,"line_end":656,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24518,"byte_end":24521,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24526,"byte_end":24537,"line_start":658,"line_end":658,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24542,"byte_end":24592,"line_start":659,"line_end":659,"column_start":5,"column_end":55}},{"value":"/ config.file_descriptor_set_path(\"path/from/build/system\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24597,"byte_end":24658,"line_start":660,"line_end":660,"column_start":5,"column_end":66}},{"value":"/     .skip_protoc_run()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24663,"byte_end":24689,"line_start":661,"line_end":661,"column_start":5,"column_end":31}},{"value":"/     .compile_protos(&[\"src/items.proto\"], &[\"src/\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24694,"byte_end":24751,"line_start":662,"line_end":662,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24756,"byte_end":24763,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24768,"byte_end":24771,"line_start":664,"line_end":664,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":25297,"byte_end":25315,"line_start":676,"line_end":676,"column_start":12,"column_end":30},"name":"retain_enum_prefix","qualname":"<Config>::retain_enum_prefix","value":"pub fn retain_enum_prefix(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the code generator to not strip the enum name from variant names.","sig":null,"attributes":[{"value":"/ Configures the code generator to not strip the enum name from variant names.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24886,"byte_end":24966,"line_start":670,"line_end":670,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24971,"byte_end":24974,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ Protobuf enum definitions commonly include the enum name as a prefix of every variant name.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":24979,"byte_end":25074,"line_start":672,"line_end":672,"column_start":5,"column_end":100}},{"value":"/ This style is non-idiomatic in Rust, so by default `prost` strips the enum name prefix from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":25079,"byte_end":25174,"line_start":673,"line_end":673,"column_start":5,"column_end":100}},{"value":"/ variants which include it. Configuring this option prevents `prost` from stripping the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":25179,"byte_end":25269,"line_start":674,"line_end":674,"column_start":5,"column_end":95}},{"value":"/ prefix.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":25274,"byte_end":25285,"line_start":675,"line_end":675,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":25690,"byte_end":25697,"line_start":685,"line_end":685,"column_start":12,"column_end":19},"name":"out_dir","qualname":"<Config>::out_dir","value":"pub fn out_dir<P>(&mut Self, P) -> &mut Self where P: Into<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Configures the output directory where generated Rust files will be written.","sig":null,"attributes":[{"value":"/ Configures the output directory where generated Rust files will be written.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":25406,"byte_end":25485,"line_start":681,"line_end":681,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":25490,"byte_end":25493,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ If unset, defaults to the `OUT_DIR` environment variable. `OUT_DIR` is set by Cargo when","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":25498,"byte_end":25590,"line_start":683,"line_end":683,"column_start":5,"column_end":97}},{"value":"/ executing build scripts, so `out_dir` typically does not need to be configured.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":25595,"byte_end":25678,"line_start":684,"line_end":684,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":25935,"byte_end":25959,"line_start":694,"line_end":694,"column_start":12,"column_end":36},"name":"default_package_filename","qualname":"<Config>::default_package_filename","value":"pub fn default_package_filename<S>(&mut Self, S) -> &mut Self where\nS: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Configures what filename protobufs with no package definition are written to.\n","sig":null,"attributes":[{"value":"/ Configures what filename protobufs with no package definition are written to.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":25842,"byte_end":25923,"line_start":693,"line_end":693,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26654,"byte_end":26664,"line_start":716,"line_end":716,"column_start":12,"column_end":22},"name":"protoc_arg","qualname":"<Config>::protoc_arg","value":"pub fn protoc_arg<S>(&mut Self, S) -> &mut Self where S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Add an argument to the `protoc` protobuf compilation invocation.","sig":null,"attributes":[{"value":"/ Add an argument to the `protoc` protobuf compilation invocation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26122,"byte_end":26190,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26195,"byte_end":26198,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Example `build.rs`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26203,"byte_end":26227,"line_start":704,"line_end":704,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26232,"byte_end":26235,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26240,"byte_end":26258,"line_start":706,"line_end":706,"column_start":5,"column_end":23}},{"value":"/ # use std::io::Result;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26263,"byte_end":26289,"line_start":707,"line_end":707,"column_start":5,"column_end":31}},{"value":"/ fn main() -> Result<()> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26294,"byte_end":26323,"line_start":708,"line_end":708,"column_start":5,"column_end":34}},{"value":"/   let mut prost_build = prost_build::Config::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26328,"byte_end":26383,"line_start":709,"line_end":709,"column_start":5,"column_end":60}},{"value":"/   // Enable a protoc experimental feature.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26388,"byte_end":26434,"line_start":710,"line_end":710,"column_start":5,"column_end":51}},{"value":"/   prost_build.protoc_arg(\"--experimental_allow_proto3_optional\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26439,"byte_end":26508,"line_start":711,"line_end":711,"column_start":5,"column_end":74}},{"value":"/   prost_build.compile_protos(&[\"src/frontend.proto\", \"src/backend.proto\"], &[\"src\"])?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26513,"byte_end":26603,"line_start":712,"line_end":712,"column_start":5,"column_end":95}},{"value":"/   Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26608,"byte_end":26620,"line_start":713,"line_end":713,"column_start":5,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26625,"byte_end":26630,"line_start":714,"line_end":714,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26635,"byte_end":26642,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27750,"byte_end":27762,"line_start":749,"line_end":749,"column_start":12,"column_end":24},"name":"include_file","qualname":"<Config>::include_file","value":"pub fn include_file<P>(&mut Self, P) -> &mut Self where P: Into<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Configures the optional module filename for easy inclusion of all generated Rust files","sig":null,"attributes":[{"value":"/ Configures the optional module filename for easy inclusion of all generated Rust files","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26821,"byte_end":26911,"line_start":724,"line_end":724,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26916,"byte_end":26919,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ If set, generates a file (inside the `OUT_DIR` or `out_dir()` as appropriate) which contains","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":26924,"byte_end":27020,"line_start":726,"line_end":726,"column_start":5,"column_end":101}},{"value":"/ a set of `pub mod XXX` statements combining to load all Rust files generated.  This can allow","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27025,"byte_end":27122,"line_start":727,"line_end":727,"column_start":5,"column_end":102}},{"value":"/ for a shortcut where multiple related proto files have been compiled together resulting in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27127,"byte_end":27221,"line_start":728,"line_end":728,"column_start":5,"column_end":99}},{"value":"/ a semi-complex set of includes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27226,"byte_end":27261,"line_start":729,"line_end":729,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27266,"byte_end":27269,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ Turning a need for:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27274,"byte_end":27297,"line_start":731,"line_end":731,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27302,"byte_end":27305,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run,ignore","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27310,"byte_end":27335,"line_start":733,"line_end":733,"column_start":5,"column_end":30}},{"value":"/ pub mod Foo {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27340,"byte_end":27357,"line_start":734,"line_end":734,"column_start":5,"column_end":22}},{"value":"/     pub mod Bar {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27362,"byte_end":27383,"line_start":735,"line_end":735,"column_start":5,"column_end":26}},{"value":"/         include!(concat!(env!(\"OUT_DIR\"), \"/foo.bar.rs\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27388,"byte_end":27450,"line_start":736,"line_end":736,"column_start":5,"column_end":67}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27455,"byte_end":27464,"line_start":737,"line_end":737,"column_start":5,"column_end":14}},{"value":"/     pub mod Baz {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27469,"byte_end":27490,"line_start":738,"line_end":738,"column_start":5,"column_end":26}},{"value":"/         include!(concat!(env!(\"OUT_DIR\"), \"/foo.baz.rs\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27495,"byte_end":27557,"line_start":739,"line_end":739,"column_start":5,"column_end":67}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27562,"byte_end":27571,"line_start":740,"line_end":740,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27576,"byte_end":27581,"line_start":741,"line_end":741,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27586,"byte_end":27593,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27598,"byte_end":27601,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ Into the simpler:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27606,"byte_end":27627,"line_start":744,"line_end":744,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27632,"byte_end":27635,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run,ignore","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27640,"byte_end":27665,"line_start":746,"line_end":746,"column_start":5,"column_end":30}},{"value":"/ include!(concat!(env!(\"OUT_DIR\"), \"/_includes.rs\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27670,"byte_end":27726,"line_start":747,"line_end":747,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27731,"byte_end":27738,"line_start":748,"line_end":748,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28767,"byte_end":28781,"line_start":777,"line_end":777,"column_start":12,"column_end":26},"name":"compile_protos","qualname":"<Config>::compile_protos","value":"pub fn compile_protos<impl AsRef<Path>: AsRef<Path>,\nimpl AsRef<Path>: AsRef<Path>>(&mut Self, &[impl AsRef<Path>],\n&[impl AsRef<Path>]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Compile `.proto` files into Rust files during a Cargo build with additional code generator\n configuration options.","sig":null,"attributes":[{"value":"/ Compile `.proto` files into Rust files during a Cargo build with additional code generator","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":27912,"byte_end":28006,"line_start":757,"line_end":757,"column_start":5,"column_end":99}},{"value":"/ configuration options.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28011,"byte_end":28037,"line_start":758,"line_end":758,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28042,"byte_end":28045,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ This method is like the `prost_build::compile_protos` function, with the added ability to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28050,"byte_end":28143,"line_start":760,"line_end":760,"column_start":5,"column_end":98}},{"value":"/ specify non-default code generation options. See that function for more information about","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28148,"byte_end":28241,"line_start":761,"line_end":761,"column_start":5,"column_end":98}},{"value":"/ the arguments and generated outputs.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28246,"byte_end":28286,"line_start":762,"line_end":762,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28291,"byte_end":28294,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ The `protos` and `includes` arguments are ignored if `skip_protoc_run` is specified.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28299,"byte_end":28387,"line_start":764,"line_end":764,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28392,"byte_end":28395,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ # Example `build.rs`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28400,"byte_end":28424,"line_start":766,"line_end":766,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28429,"byte_end":28432,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28437,"byte_end":28455,"line_start":768,"line_end":768,"column_start":5,"column_end":23}},{"value":"/ # use std::io::Result;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28460,"byte_end":28486,"line_start":769,"line_end":769,"column_start":5,"column_end":31}},{"value":"/ fn main() -> Result<()> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28491,"byte_end":28520,"line_start":770,"line_end":770,"column_start":5,"column_end":34}},{"value":"/   let mut prost_build = prost_build::Config::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28525,"byte_end":28580,"line_start":771,"line_end":771,"column_start":5,"column_end":60}},{"value":"/   prost_build.btree_map(&[\".\"]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28585,"byte_end":28621,"line_start":772,"line_end":772,"column_start":5,"column_end":41}},{"value":"/   prost_build.compile_protos(&[\"src/frontend.proto\", \"src/backend.proto\"], &[\"src\"])?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28626,"byte_end":28716,"line_start":773,"line_end":773,"column_start":5,"column_end":95}},{"value":"/   Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28721,"byte_end":28733,"line_start":774,"line_end":774,"column_start":5,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28738,"byte_end":28743,"line_start":775,"line_end":775,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":28748,"byte_end":28755,"line_start":776,"line_end":776,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":36091,"byte_end":36099,"line_start":984,"line_end":984,"column_start":12,"column_end":20},"name":"generate","qualname":"<Config>::generate","value":"pub fn generate(&mut Self, Vec<(Module, FileDescriptorProto)>)\n-> Result<HashMap<Module, String>>","parent":null,"children":[],"decl_id":null,"docs":" Processes a set of modules and file descriptors, returning a map of modules to generated\n code contents.","sig":null,"attributes":[{"value":"/ Processes a set of modules and file descriptors, returning a map of modules to generated","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":35712,"byte_end":35804,"line_start":978,"line_end":978,"column_start":5,"column_end":97}},{"value":"/ code contents.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":35809,"byte_end":35827,"line_start":979,"line_end":979,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":35832,"byte_end":35835,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ This is generally used when control over the output should not be managed by Prost,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":35840,"byte_end":35927,"line_start":981,"line_end":981,"column_start":5,"column_end":92}},{"value":"/ such as in a flow for a `protoc` code generating plugin. When compiling as part of a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":35932,"byte_end":36020,"line_start":982,"line_end":982,"column_start":5,"column_end":93}},{"value":"/ `build.rs` file, instead use [`compile_protos()`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":36025,"byte_end":36079,"line_start":983,"line_end":983,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":586},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":39108,"byte_end":39114,"line_start":1061,"line_end":1061,"column_start":12,"column_end":18},"name":"Module","qualname":"::Module","value":"Module {  }","parent":null,"children":[{"krate":0,"index":587}],"decl_id":null,"docs":" A Rust module path for a Protobuf package.\n","sig":null,"attributes":[{"value":"/ A Rust module path for a Protobuf package.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":38988,"byte_end":39034,"line_start":1059,"line_end":1059,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":39233,"byte_end":39243,"line_start":1067,"line_end":1067,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Module>::from_parts","value":"pub fn from_parts<I>(I) -> Self where I: IntoIterator, I::Item: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Construct a module path from an iterator of parts.\n","sig":null,"attributes":[{"value":"/ Construct a module path from an iterator of parts.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":39167,"byte_end":39221,"line_start":1066,"line_end":1066,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":39648,"byte_end":39674,"line_start":1081,"line_end":1081,"column_start":12,"column_end":38},"name":"from_protobuf_package_name","qualname":"<Module>::from_protobuf_package_name","value":"pub fn from_protobuf_package_name(&str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a module path from a Protobuf package name.","sig":null,"attributes":[{"value":"/ Construct a module path from a Protobuf package name.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":39444,"byte_end":39501,"line_start":1077,"line_end":1077,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":39506,"byte_end":39509,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ Constituent parts are automatically converted to snake case in order to follow","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":39514,"byte_end":39596,"line_start":1079,"line_end":1079,"column_start":5,"column_end":87}},{"value":"/ Rust module naming conventions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":39601,"byte_end":39636,"line_start":1080,"line_end":1080,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":39947,"byte_end":39952,"line_start":1092,"line_end":1092,"column_start":12,"column_end":17},"name":"parts","qualname":"<Module>::parts","value":"pub fn parts(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the parts of the path.\n","sig":null,"attributes":[{"value":"/ An iterator over the parts of the path.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":39892,"byte_end":39935,"line_start":1091,"line_end":1091,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":40233,"byte_end":40248,"line_start":1099,"line_end":1099,"column_start":12,"column_end":27},"name":"to_file_name_or","qualname":"<Module>::to_file_name_or","value":"pub fn to_file_name_or(&Self, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Format the module path into a filename for generated Rust code.","sig":null,"attributes":[{"value":"/ Format the module path into a filename for generated Rust code.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":40054,"byte_end":40121,"line_start":1096,"line_end":1096,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":40126,"byte_end":40129,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ If the module path is empty, `default` is used to provide the root of the filename.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":40134,"byte_end":40221,"line_start":1098,"line_end":1098,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":40548,"byte_end":40551,"line_start":1112,"line_end":1112,"column_start":12,"column_end":15},"name":"len","qualname":"<Module>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of parts in the module's path.\n","sig":null,"attributes":[{"value":"/ The number of parts in the module's path.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":40491,"byte_end":40536,"line_start":1111,"line_end":1111,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":40677,"byte_end":40685,"line_start":1117,"line_end":1117,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Module>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the module's path contains any components.\n","sig":null,"attributes":[{"value":"/ Whether the module's path contains any components.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":40611,"byte_end":40665,"line_start":1116,"line_end":1116,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":483},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42996,"byte_end":43010,"line_start":1186,"line_end":1186,"column_start":8,"column_end":22},"name":"compile_protos","qualname":"::compile_protos","value":"pub fn compile_protos<impl AsRef<Path>: AsRef<Path>,\nimpl AsRef<Path>: AsRef<Path>>(&[impl AsRef<Path>], &[impl AsRef<Path>])\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Compile `.proto` files into Rust files during a Cargo build.","sig":null,"attributes":[{"value":"/ Compile `.proto` files into Rust files during a Cargo build.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":41301,"byte_end":41365,"line_start":1144,"line_end":1144,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":41366,"byte_end":41369,"line_start":1145,"line_end":1145,"column_start":1,"column_end":4}},{"value":"/ The generated `.rs` files are written to the Cargo `OUT_DIR` directory, suitable for use with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":41370,"byte_end":41467,"line_start":1146,"line_end":1146,"column_start":1,"column_end":98}},{"value":"/ the [include!][1] macro. See the [Cargo `build.rs` code generation][2] example for more info.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":41468,"byte_end":41565,"line_start":1147,"line_end":1147,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":41566,"byte_end":41569,"line_start":1148,"line_end":1148,"column_start":1,"column_end":4}},{"value":"/ This function should be called in a project's `build.rs`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":41570,"byte_end":41631,"line_start":1149,"line_end":1149,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":41632,"byte_end":41635,"line_start":1150,"line_end":1150,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":41636,"byte_end":41651,"line_start":1151,"line_end":1151,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":41652,"byte_end":41655,"line_start":1152,"line_end":1152,"column_start":1,"column_end":4}},{"value":"/ **`protos`** - Paths to `.proto` files to compile. Any transitively [imported][3] `.proto`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":41656,"byte_end":41750,"line_start":1153,"line_end":1153,"column_start":1,"column_end":95}},{"value":"/ files are automatically be included.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":41751,"byte_end":41791,"line_start":1154,"line_end":1154,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":41792,"byte_end":41795,"line_start":1155,"line_end":1155,"column_start":1,"column_end":4}},{"value":"/ **`includes`** - Paths to directories in which to search for imports. Directories are searched","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":41796,"byte_end":41894,"line_start":1156,"line_end":1156,"column_start":1,"column_end":99}},{"value":"/ in order. The `.proto` files passed in **`protos`** must be found in one of the provided","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":41895,"byte_end":41987,"line_start":1157,"line_end":1157,"column_start":1,"column_end":93}},{"value":"/ include directories.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":41988,"byte_end":42012,"line_start":1158,"line_end":1158,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42013,"byte_end":42016,"line_start":1159,"line_end":1159,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42017,"byte_end":42029,"line_start":1160,"line_end":1160,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42030,"byte_end":42033,"line_start":1161,"line_end":1161,"column_start":1,"column_end":4}},{"value":"/ This function can fail for a number of reasons:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42034,"byte_end":42085,"line_start":1162,"line_end":1162,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42086,"byte_end":42089,"line_start":1163,"line_end":1163,"column_start":1,"column_end":4}},{"value":"/   - Failure to locate or download `protoc`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42090,"byte_end":42137,"line_start":1164,"line_end":1164,"column_start":1,"column_end":48}},{"value":"/   - Failure to parse the `.proto`s.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42138,"byte_end":42177,"line_start":1165,"line_end":1165,"column_start":1,"column_end":40}},{"value":"/   - Failure to locate an imported `.proto`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42178,"byte_end":42225,"line_start":1166,"line_end":1166,"column_start":1,"column_end":48}},{"value":"/   - Failure to compile a `.proto` without a [package specifier][4].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42226,"byte_end":42297,"line_start":1167,"line_end":1167,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42298,"byte_end":42301,"line_start":1168,"line_end":1168,"column_start":1,"column_end":4}},{"value":"/ It's expected that this function call be `unwrap`ed in a `build.rs`; there is typically no","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42302,"byte_end":42396,"line_start":1169,"line_end":1169,"column_start":1,"column_end":95}},{"value":"/ reason to gracefully recover from errors during a build.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42397,"byte_end":42457,"line_start":1170,"line_end":1170,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42458,"byte_end":42461,"line_start":1171,"line_end":1171,"column_start":1,"column_end":4}},{"value":"/ # Example `build.rs`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42462,"byte_end":42486,"line_start":1172,"line_end":1172,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42487,"byte_end":42490,"line_start":1173,"line_end":1173,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42491,"byte_end":42509,"line_start":1174,"line_end":1174,"column_start":1,"column_end":19}},{"value":"/ # use std::io::Result;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42510,"byte_end":42536,"line_start":1175,"line_end":1175,"column_start":1,"column_end":27}},{"value":"/ fn main() -> Result<()> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42537,"byte_end":42566,"line_start":1176,"line_end":1176,"column_start":1,"column_end":30}},{"value":"/   prost_build::compile_protos(&[\"src/frontend.proto\", \"src/backend.proto\"], &[\"src\"])?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42567,"byte_end":42658,"line_start":1177,"line_end":1177,"column_start":1,"column_end":92}},{"value":"/   Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42659,"byte_end":42671,"line_start":1178,"line_end":1178,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42672,"byte_end":42677,"line_start":1179,"line_end":1179,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42678,"byte_end":42685,"line_start":1180,"line_end":1180,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42686,"byte_end":42689,"line_start":1181,"line_end":1181,"column_start":1,"column_end":4}},{"value":"/ [1]: https://doc.rust-lang.org/std/macro.include.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42690,"byte_end":42747,"line_start":1182,"line_end":1182,"column_start":1,"column_end":58}},{"value":"/ [2]: http://doc.crates.io/build-script.html#case-study-code-generation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42748,"byte_end":42822,"line_start":1183,"line_end":1183,"column_start":1,"column_end":75}},{"value":"/ [3]: https://developers.google.com/protocol-buffers/docs/proto3#importing-definitions","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42823,"byte_end":42912,"line_start":1184,"line_end":1184,"column_start":1,"column_end":90}},{"value":"/ [4]: https://developers.google.com/protocol-buffers/docs/proto#packages","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":42913,"byte_end":42988,"line_start":1185,"line_end":1185,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":486},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":43193,"byte_end":43199,"line_start":1191,"line_end":1191,"column_start":8,"column_end":14},"name":"protoc","qualname":"::protoc","value":"pub fn protoc() -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the `protoc` binary.\n","sig":null,"attributes":[{"value":"/ Returns the path to the `protoc` binary.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":43141,"byte_end":43185,"line_start":1190,"line_end":1190,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":487},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":43415,"byte_end":43429,"line_start":1199,"line_end":1199,"column_start":8,"column_end":22},"name":"protoc_include","qualname":"::protoc_include","value":"pub fn protoc_include() -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the Protobuf include directory.\n","sig":null,"attributes":[{"value":"/ Returns the path to the Protobuf include directory.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":43352,"byte_end":43407,"line_start":1198,"line_end":1198,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":47114,"byte_end":47122,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/code_generator.rs","byte_start":55338,"byte_end":55351,"line_start":47,"line_end":47,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/code_generator.rs","byte_start":87632,"byte_end":87639,"line_start":1016,"line_end":1016,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/code_generator.rs","byte_start":88175,"byte_end":88184,"line_start":1034,"line_end":1034,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/extern_paths.rs","byte_start":90541,"byte_end":90552,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/message_graph.rs","byte_start":103542,"byte_end":103554,"line_start":17,"line_end":17,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/path.rs","byte_start":106710,"byte_end":106717,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/path.rs","byte_start":108743,"byte_end":108747,"line_start":65,"line_end":65,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/path.rs","byte_start":109053,"byte_end":109057,"line_start":78,"line_end":78,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/path.rs","byte_start":109457,"byte_end":109461,"line_start":95,"line_end":95,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":7059,"byte_end":7066,"line_start":207,"line_end":207,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":7405,"byte_end":7414,"line_start":223,"line_end":223,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":8196,"byte_end":8202,"line_start":250,"line_end":250,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":443},{"krate":0,"index":454},{"krate":0,"index":458},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":37356,"byte_end":37362,"line_start":1017,"line_end":1017,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":38059,"byte_end":38065,"line_start":1039,"line_end":1039,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":39154,"byte_end":39160,"line_start":1065,"line_end":1065,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":40982,"byte_end":40988,"line_start":1130,"line_end":1130,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/ast.rs","byte_start":47114,"byte_end":47122,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/code_generator.rs","byte_start":55338,"byte_end":55351,"line_start":47,"line_end":47,"column_start":10,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/code_generator.rs","byte_start":87632,"byte_end":87639,"line_start":1016,"line_end":1016,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/code_generator.rs","byte_start":88175,"byte_end":88184,"line_start":1034,"line_end":1034,"column_start":6,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/extern_paths.rs","byte_start":90541,"byte_end":90552,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/message_graph.rs","byte_start":103542,"byte_end":103554,"line_start":17,"line_end":17,"column_start":6,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/path.rs","byte_start":106710,"byte_end":106717,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/path.rs","byte_start":108743,"byte_end":108747,"line_start":65,"line_end":65,"column_start":13,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/path.rs","byte_start":109053,"byte_end":109057,"line_start":78,"line_end":78,"column_start":37,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":270},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/path.rs","byte_start":109457,"byte_end":109461,"line_start":95,"line_end":95,"column_start":42,"column_end":46},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":270},"to":{"krate":2,"index":8253}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":7059,"byte_end":7066,"line_start":207,"line_end":207,"column_start":18,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":7405,"byte_end":7414,"line_start":223,"line_end":223,"column_start":18,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":573},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":8196,"byte_end":8202,"line_start":250,"line_end":250,"column_start":6,"column_end":12},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":37356,"byte_end":37362,"line_start":1017,"line_end":1017,"column_start":27,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":38059,"byte_end":38065,"line_start":1039,"line_end":1039,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":39154,"byte_end":39160,"line_start":1065,"line_end":1065,"column_start":6,"column_end":12},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.10.4/src/lib.rs","byte_start":40982,"byte_end":40988,"line_start":1130,"line_end":1130,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":9685}}]}