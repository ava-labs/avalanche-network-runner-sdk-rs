{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0","program":"/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bitvec","--edition=2021","/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"std\"","-C","metadata=8d0f52cba86f2182","-C","extra-filename=-8d0f52cba86f2182","--out-dir","/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","-L","dependency=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","--extern","funty=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libfunty-0e30c90f12833bb5.rmeta","--extern","radium=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libradium-c1338c2e6380a43b.rmeta","--extern","tap=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libtap-f49e81b6ea3702a5.rmeta","--extern","wyz=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libwyz-d8233747325634fa.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libbitvec-8d0f52cba86f2182.rmeta"},"prelude":{"crate_id":{"name":"bitvec","disambiguator":[11245959790793357662,0]},"crate_root":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src","external_crates":[{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/devel.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros/internal.rs","num":20,"id":{"name":"funty","disambiguator":[15770065805564930555,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","num":21,"id":{"name":"radium","disambiguator":[7311690213042413157,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","num":22,"id":{"name":"tap","disambiguator":[15141533886974157350,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","num":23,"id":{"name":"wyz","disambiguator":[10016541334912243662,0]}}],"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":0,"byte_end":1196,"line_start":1,"line_end":77,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros/internal.rs","byte_start":15920,"byte_end":15924,"line_start":7,"line_end":7,"column_start":9,"column_end":13},"alias_span":null,"name":"core","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros/internal.rs","byte_start":15950,"byte_end":15955,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"alias_span":null,"name":"funty","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":47},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros/internal.rs","byte_start":27646,"byte_end":27661,"line_start":414,"line_end":414,"column_start":15,"column_end":30},"alias_span":null,"name":"u8_from_ne_bits","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":5398},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":59516,"byte_end":59524,"line_start":21,"line_end":21,"column_start":21,"column_end":29},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":97}},{"kind":"Use","ref_id":{"krate":0,"index":684},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83117,"byte_end":83125,"line_start":39,"line_end":39,"column_start":21,"column_end":29},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":554}},{"kind":"Use","ref_id":{"krate":0,"index":5806},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":212074,"byte_end":212078,"line_start":218,"line_end":218,"column_start":15,"column_end":19},"alias_span":null,"name":"LocalBits","value":"","parent":{"krate":0,"index":1826}},{"kind":"Use","ref_id":{"krate":0,"index":5807},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":212074,"byte_end":212078,"line_start":218,"line_end":218,"column_start":15,"column_end":19},"alias_span":null,"name":"LocalBits","value":"","parent":{"krate":0,"index":1826}},{"kind":"Use","ref_id":{"krate":23,"index":440},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":219388,"byte_end":219393,"line_start":25,"line_end":25,"column_start":2,"column_end":7},"alias_span":null,"name":"Const","value":"","parent":{"krate":0,"index":1889}},{"kind":"Use","ref_id":{"krate":23,"index":441},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":219388,"byte_end":219393,"line_start":25,"line_end":25,"column_start":2,"column_end":7},"alias_span":null,"name":"Const","value":"","parent":{"krate":0,"index":1889}},{"kind":"Use","ref_id":{"krate":23,"index":462},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":219396,"byte_end":219399,"line_start":26,"line_end":26,"column_start":2,"column_end":5},"alias_span":null,"name":"Mut","value":"","parent":{"krate":0,"index":1889}},{"kind":"Use","ref_id":{"krate":23,"index":463},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":219396,"byte_end":219399,"line_start":26,"line_end":26,"column_start":2,"column_end":5},"alias_span":null,"name":"Mut","value":"","parent":{"krate":0,"index":1889}},{"kind":"Use","ref_id":{"krate":23,"index":83},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":219402,"byte_end":219412,"line_start":27,"line_end":27,"column_start":2,"column_end":12},"alias_span":null,"name":"Mutability","value":"","parent":{"krate":0,"index":1889}},{"kind":"Use","ref_id":{"krate":0,"index":1964},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":219506,"byte_end":219521,"line_start":36,"line_end":36,"column_start":3,"column_end":18},"alias_span":null,"name":"check_alignment","value":"","parent":{"krate":0,"index":1889}},{"kind":"Use","ref_id":{"krate":0,"index":5850},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":219525,"byte_end":219538,"line_start":37,"line_end":37,"column_start":3,"column_end":16},"alias_span":null,"name":"MisalignError","value":"","parent":{"krate":0,"index":1889}},{"kind":"Use","ref_id":{"krate":0,"index":2082},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":219552,"byte_end":219558,"line_start":39,"line_end":39,"column_start":9,"column_end":15},"alias_span":null,"name":"BitRef","value":"","parent":{"krate":0,"index":1889}},{"kind":"Use","ref_id":{"krate":0,"index":2284},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":219568,"byte_end":219579,"line_start":40,"line_end":40,"column_start":9,"column_end":20},"alias_span":null,"name":"BitPtrRange","value":"","parent":{"krate":0,"index":1889}},{"kind":"Use","ref_id":{"krate":0,"index":2489},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":219594,"byte_end":219600,"line_start":42,"line_end":42,"column_start":3,"column_end":9},"alias_span":null,"name":"BitPtr","value":"","parent":{"krate":0,"index":1889}},{"kind":"Use","ref_id":{"krate":0,"index":5882},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":219604,"byte_end":219615,"line_start":43,"line_end":43,"column_start":3,"column_end":14},"alias_span":null,"name":"BitPtrError","value":"","parent":{"krate":0,"index":1889}},{"kind":"Use","ref_id":{"krate":0,"index":5919},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":219628,"byte_end":219640,"line_start":45,"line_end":45,"column_start":8,"column_end":20},"alias_span":null,"name":"BitSpanError","value":"","parent":{"krate":0,"index":1889}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":317460,"byte_end":317461,"line_start":54,"line_end":54,"column_start":7,"column_end":8},"alias_span":null,"name":"*","value":"BitSliceIndex","parent":{"krate":0,"index":3020}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":317470,"byte_end":317471,"line_start":55,"line_end":55,"column_start":8,"column_end":9},"alias_span":null,"name":"*","value":"Windows, SplitMut, Split, RSplitMut, RChunksExactMut, IterMut, ChunksExactMut, IterZeros, SplitNMut, SplitInclusiveMut, RSplitNMut, RSplit, RChunksExact, Iter, ChunksExact, IterOnes, SplitN, SplitInclusive, RSplitN, RChunksMut, RChunks, ChunksMut, Chunks","parent":{"krate":0,"index":3020}},{"kind":"Use","ref_id":{"krate":0,"index":4666},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":558331,"byte_end":558336,"line_start":23,"line_end":23,"column_start":2,"column_end":7},"alias_span":null,"name":"Drain","value":"","parent":{"krate":0,"index":4310}},{"kind":"Use","ref_id":{"krate":0,"index":7813},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":558339,"byte_end":558345,"line_start":24,"line_end":24,"column_start":2,"column_end":8},"alias_span":null,"name":"Splice","value":"","parent":{"krate":0,"index":4310}},{"kind":"Use","ref_id":{"krate":0,"index":684},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":558372,"byte_end":558380,"line_start":26,"line_end":26,"column_start":23,"column_end":31},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":4310}},{"kind":"Use","ref_id":{"krate":0,"index":536},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":798,"byte_end":806,"line_start":45,"line_end":45,"column_start":10,"column_end":18},"alias_span":null,"name":"BitArray","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":53},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":810,"byte_end":816,"line_start":46,"line_end":46,"column_start":3,"column_end":9},"alias_span":null,"name":"bitarr","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":820,"byte_end":824,"line_start":47,"line_end":47,"column_start":3,"column_end":7},"alias_span":null,"name":"bits","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":1851},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":864,"byte_end":872,"line_start":50,"line_end":50,"column_start":4,"column_end":12},"alias_span":null,"name":"BitOrder","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":5806},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":877,"byte_end":886,"line_start":51,"line_end":51,"column_start":4,"column_end":13},"alias_span":null,"name":"LocalBits","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":5807},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":877,"byte_end":886,"line_start":51,"line_end":51,"column_start":4,"column_end":13},"alias_span":null,"name":"LocalBits","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":5806},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":891,"byte_end":895,"line_start":52,"line_end":52,"column_start":4,"column_end":8},"alias_span":null,"name":"Lsb0","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":5807},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":891,"byte_end":895,"line_start":52,"line_end":52,"column_start":4,"column_end":8},"alias_span":null,"name":"Lsb0","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":5828},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":900,"byte_end":904,"line_start":53,"line_end":53,"column_start":4,"column_end":8},"alias_span":null,"name":"Msb0","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":5829},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":900,"byte_end":904,"line_start":53,"line_end":53,"column_start":4,"column_end":8},"alias_span":null,"name":"Msb0","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":2489},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":923,"byte_end":929,"line_start":56,"line_end":56,"column_start":4,"column_end":10},"alias_span":null,"name":"BitPtr","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":2284},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":934,"byte_end":945,"line_start":57,"line_end":57,"column_start":4,"column_end":15},"alias_span":null,"name":"BitPtrRange","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":2082},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":950,"byte_end":956,"line_start":58,"line_end":58,"column_start":4,"column_end":10},"alias_span":null,"name":"BitRef","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":4142},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":972,"byte_end":980,"line_start":60,"line_end":60,"column_start":10,"column_end":18},"alias_span":null,"name":"BitSlice","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":4293},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":991,"byte_end":999,"line_start":61,"line_end":61,"column_start":10,"column_end":18},"alias_span":null,"name":"BitStore","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":5245},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":1014,"byte_end":1020,"line_start":63,"line_end":63,"column_start":4,"column_end":10},"alias_span":null,"name":"AsBits","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":5251},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":1025,"byte_end":1034,"line_start":64,"line_end":64,"column_start":4,"column_end":13},"alias_span":null,"name":"AsMutBits","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":52},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":1082,"byte_end":1088,"line_start":68,"line_end":68,"column_start":3,"column_end":9},"alias_span":null,"name":"BitArr","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":56},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":1141,"byte_end":1147,"line_start":72,"line_end":72,"column_start":3,"column_end":9},"alias_span":null,"name":"bitbox","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":1151,"byte_end":1157,"line_start":73,"line_end":73,"column_start":3,"column_end":9},"alias_span":null,"name":"bitvec","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":1083},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":1168,"byte_end":1174,"line_start":74,"line_end":74,"column_start":10,"column_end":16},"alias_span":null,"name":"BitBox","value":"","parent":{"krate":0,"index":5271}},{"kind":"Use","ref_id":{"krate":0,"index":5110},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":1183,"byte_end":1189,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"alias_span":null,"name":"BitVec","value":"","parent":{"krate":0,"index":5271}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":0,"byte_end":1196,"line_start":1,"line_end":77,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":33},{"krate":0,"index":57},{"krate":0,"index":97},{"krate":0,"index":554},{"krate":0,"index":1110},{"krate":0,"index":1396},{"krate":0,"index":1608},{"krate":0,"index":1795},{"krate":0,"index":1826},{"krate":0,"index":1889},{"krate":0,"index":3020},{"krate":0,"index":4267},{"krate":0,"index":4310},{"krate":0,"index":5161},{"krate":0,"index":5271}],"decl_id":null,"docs":"<div class=\"title-block\" style=\"text-align: center;\" align=\"center\">","sig":null,"attributes":[{"value":"warn(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":115,"byte_end":172,"line_start":5,"line_end":5,"column_start":2,"column_end":59}},{"value":"deny(unconditional_recursion)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":275,"byte_end":308,"line_start":11,"line_end":11,"column_start":1,"column_end":34}},{"value":"allow(clippy :: declare_interior_mutable_const, clippy :: type_complexity,\nunknown_lints)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":309,"byte_end":403,"line_start":12,"line_end":16,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":33},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros.rs","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56}],"decl_id":null,"docs":"# Constructor Macros","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":477,"byte_end":489,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"allow(deprecated)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros.rs","byte_start":3484,"byte_end":3505,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros/internal.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"internal","qualname":"::macros::internal","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros/internal.rs","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":"# Internal Macro Implementations","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros.rs","byte_start":3550,"byte_end":3562,"line_start":4,"line_end":4,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros/internal.rs","byte_start":26799,"byte_end":26814,"line_start":365,"line_end":365,"column_start":14,"column_end":29},"name":"u8_from_le_bits","qualname":"::macros::internal::u8_from_le_bits","value":"pub const fn u8_from_le_bits(bool, bool, bool, bool, bool, bool, bool, bool)\n-> u8","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `u8` from bits applied in `Lsb0` order (`a` low, `h` high).\n","sig":null,"attributes":[{"value":"/ Constructs a `u8` from bits applied in `Lsb0` order (`a` low, `h` high).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros/internal.rs","byte_start":26645,"byte_end":26721,"line_start":361,"line_end":361,"column_start":1,"column_end":77}},{"value":"inline(always)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros/internal.rs","byte_start":26737,"byte_end":26754,"line_start":363,"line_end":363,"column_start":1,"column_end":18}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros/internal.rs","byte_start":26755,"byte_end":26785,"line_start":364,"line_end":364,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros/internal.rs","byte_start":27221,"byte_end":27236,"line_start":389,"line_end":389,"column_start":14,"column_end":29},"name":"u8_from_be_bits","qualname":"::macros::internal::u8_from_be_bits","value":"pub const fn u8_from_be_bits(bool, bool, bool, bool, bool, bool, bool, bool)\n-> u8","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `u8` from bits applied in `Msb0` order (`a` high, `h` low).\n","sig":null,"attributes":[{"value":"/ Constructs a `u8` from bits applied in `Msb0` order (`a` high, `h` low).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros/internal.rs","byte_start":27067,"byte_end":27143,"line_start":385,"line_end":385,"column_start":1,"column_end":77}},{"value":"inline(always)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros/internal.rs","byte_start":27159,"byte_end":27176,"line_start":387,"line_end":387,"column_start":1,"column_end":18}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros/internal.rs","byte_start":27177,"byte_end":27207,"line_start":388,"line_end":388,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":57},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"access","qualname":"::access","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":96},{"krate":0,"index":5364},{"krate":0,"index":5366},{"krate":0,"index":5343},{"krate":0,"index":5345},{"krate":0,"index":5368},{"krate":0,"index":5370},{"krate":0,"index":5350},{"krate":0,"index":5352},{"krate":0,"index":5372},{"krate":0,"index":5374},{"krate":0,"index":5357},{"krate":0,"index":5359},{"krate":0,"index":5383},{"krate":0,"index":5385},{"krate":0,"index":5376},{"krate":0,"index":5378},{"krate":0,"index":5394},{"krate":0,"index":5396},{"krate":0,"index":5387},{"krate":0,"index":5389}],"decl_id":null,"docs":"# Memory Bus Access Management","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":81},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":51709,"byte_end":51718,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"BitAccess","qualname":"::access::BitAccess","value":"BitAccess: Radium","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":87}],"decl_id":null,"docs":"# Bit-Level Access Instructions","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52661,"byte_end":52671,"line_start":46,"line_end":46,"column_start":5,"column_end":15},"name":"clear_bits","qualname":"::access::BitAccess::clear_bits","value":"pub fn clear_bits(&Self, BitMask<Self::Item>) -> Self::Item","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" Clears bits within a memory element to `0`.","sig":null,"attributes":[{"value":"/ Clears bits within a memory element to `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":51772,"byte_end":51819,"line_start":21,"line_end":21,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":51821,"byte_end":51824,"line_start":22,"line_end":22,"column_start":2,"column_end":5}},{"value":"/ The mask provided to this method must be constructed from indices that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":51826,"byte_end":51900,"line_start":23,"line_end":23,"column_start":2,"column_end":76}},{"value":"/ are valid in the caller’s context. As the mask is already computed by","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":51902,"byte_end":51977,"line_start":24,"line_end":24,"column_start":2,"column_end":75}},{"value":"/ the caller, this does not take an ordering type parameter.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":51979,"byte_end":52041,"line_start":25,"line_end":25,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52043,"byte_end":52046,"line_start":26,"line_end":26,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52048,"byte_end":52065,"line_start":27,"line_end":27,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52067,"byte_end":52070,"line_start":28,"line_end":28,"column_start":2,"column_end":5}},{"value":"/ - `mask`: A mask of any number of bits. This is a selection mask: all","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52072,"byte_end":52145,"line_start":29,"line_end":29,"column_start":2,"column_end":75}},{"value":"/   bits in the mask that are set to `1` will set the corresponding bit in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52147,"byte_end":52223,"line_start":30,"line_end":30,"column_start":2,"column_end":78}},{"value":"/   `*self` to `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52225,"byte_end":52246,"line_start":31,"line_end":31,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52248,"byte_end":52251,"line_start":32,"line_end":32,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52253,"byte_end":52267,"line_start":33,"line_end":33,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52269,"byte_end":52272,"line_start":34,"line_end":34,"column_start":2,"column_end":5}},{"value":"/ The prior value of the memory element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52274,"byte_end":52316,"line_start":35,"line_end":35,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52318,"byte_end":52321,"line_start":36,"line_end":36,"column_start":2,"column_end":5}},{"value":"/ ## Effects","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52323,"byte_end":52337,"line_start":37,"line_end":37,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52339,"byte_end":52342,"line_start":38,"line_end":38,"column_start":2,"column_end":5}},{"value":"/ All bits in `*self` corresponding to `1` bits in the `mask` are cleared","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52344,"byte_end":52419,"line_start":39,"line_end":39,"column_start":2,"column_end":77}},{"value":"/ to `0`; all others retain their original value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52421,"byte_end":52472,"line_start":40,"line_end":40,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52474,"byte_end":52477,"line_start":41,"line_end":41,"column_start":2,"column_end":5}},{"value":"/ Do not invert the `mask` prior to calling this function. [`BitMask`] is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52479,"byte_end":52554,"line_start":42,"line_end":42,"column_start":2,"column_end":77}},{"value":"/ a selection type, not a bitwise-operation argument.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52556,"byte_end":52611,"line_start":43,"line_end":43,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52613,"byte_end":52616,"line_start":44,"line_end":44,"column_start":2,"column_end":5}},{"value":"/ [`BitMask`]: crate::index::BitMask","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52618,"byte_end":52656,"line_start":45,"line_end":45,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53482,"byte_end":53490,"line_start":70,"line_end":70,"column_start":5,"column_end":13},"name":"set_bits","qualname":"::access::BitAccess::set_bits","value":"pub fn set_bits(&Self, BitMask<Self::Item>) -> Self::Item","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" Sets bits within a memory element to `1`.","sig":null,"attributes":[{"value":"/ Sets bits within a memory element to `1`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52783,"byte_end":52828,"line_start":50,"line_end":50,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52830,"byte_end":52833,"line_start":51,"line_end":51,"column_start":2,"column_end":5}},{"value":"/ The mask provided to this method must be constructed from indices that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52835,"byte_end":52909,"line_start":52,"line_end":52,"column_start":2,"column_end":76}},{"value":"/ are valid in the caller’s context. As the mask is already computed by","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52911,"byte_end":52986,"line_start":53,"line_end":53,"column_start":2,"column_end":75}},{"value":"/ the caller, this does not take an ordering type parameter.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":52988,"byte_end":53050,"line_start":54,"line_end":54,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53052,"byte_end":53055,"line_start":55,"line_end":55,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53057,"byte_end":53074,"line_start":56,"line_end":56,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53076,"byte_end":53079,"line_start":57,"line_end":57,"column_start":2,"column_end":5}},{"value":"/ - `mask`: A mask of any number of bits. This is a selection mask: all","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53081,"byte_end":53154,"line_start":58,"line_end":58,"column_start":2,"column_end":75}},{"value":"/   bits in the mask that are set to `1` will set the corresponding bit in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53156,"byte_end":53232,"line_start":59,"line_end":59,"column_start":2,"column_end":78}},{"value":"/   `*self` to `1`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53234,"byte_end":53255,"line_start":60,"line_end":60,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53257,"byte_end":53260,"line_start":61,"line_end":61,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53262,"byte_end":53276,"line_start":62,"line_end":62,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53278,"byte_end":53281,"line_start":63,"line_end":63,"column_start":2,"column_end":5}},{"value":"/ The prior value of the memory element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53283,"byte_end":53325,"line_start":64,"line_end":64,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53327,"byte_end":53330,"line_start":65,"line_end":65,"column_start":2,"column_end":5}},{"value":"/ ## Effects","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53332,"byte_end":53346,"line_start":66,"line_end":66,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53348,"byte_end":53351,"line_start":67,"line_end":67,"column_start":2,"column_end":5}},{"value":"/ All bits in `*self` corresponding to `1` bits in the `mask` are set to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53353,"byte_end":53427,"line_start":68,"line_end":68,"column_start":2,"column_end":76}},{"value":"/ `1`; all others retain their original value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53429,"byte_end":53477,"line_start":69,"line_end":69,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54289,"byte_end":54300,"line_start":94,"line_end":94,"column_start":5,"column_end":16},"name":"invert_bits","qualname":"::access::BitAccess::invert_bits","value":"pub fn invert_bits(&Self, BitMask<Self::Item>) -> Self::Item","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" Inverts bits within a memory element.","sig":null,"attributes":[{"value":"/ Inverts bits within a memory element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53600,"byte_end":53641,"line_start":74,"line_end":74,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53643,"byte_end":53646,"line_start":75,"line_end":75,"column_start":2,"column_end":5}},{"value":"/ The mask provided to this method must be constructed from indices that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53648,"byte_end":53722,"line_start":76,"line_end":76,"column_start":2,"column_end":76}},{"value":"/ are valid in the caller’s context. As the mask is already computed by","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53724,"byte_end":53799,"line_start":77,"line_end":77,"column_start":2,"column_end":75}},{"value":"/ the caller, this does not take an ordering type parameter.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53801,"byte_end":53863,"line_start":78,"line_end":78,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53865,"byte_end":53868,"line_start":79,"line_end":79,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53870,"byte_end":53887,"line_start":80,"line_end":80,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53889,"byte_end":53892,"line_start":81,"line_end":81,"column_start":2,"column_end":5}},{"value":"/ - `mask`: A mask of any number of bits. This is a selection mask: all","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53894,"byte_end":53967,"line_start":82,"line_end":82,"column_start":2,"column_end":75}},{"value":"/   bits in the mask that are set to `1` will invert the corresponding bit","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":53969,"byte_end":54045,"line_start":83,"line_end":83,"column_start":2,"column_end":78}},{"value":"/   in `*self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54047,"byte_end":54064,"line_start":84,"line_end":84,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54066,"byte_end":54069,"line_start":85,"line_end":85,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54071,"byte_end":54085,"line_start":86,"line_end":86,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54087,"byte_end":54090,"line_start":87,"line_end":87,"column_start":2,"column_end":5}},{"value":"/ The prior value of the memory element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54092,"byte_end":54134,"line_start":88,"line_end":88,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54136,"byte_end":54139,"line_start":89,"line_end":89,"column_start":2,"column_end":5}},{"value":"/ ## Effects","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54141,"byte_end":54155,"line_start":90,"line_end":90,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54157,"byte_end":54160,"line_start":91,"line_end":91,"column_start":2,"column_end":5}},{"value":"/ All bits in `*self` corresponding to `1` bits in the `mask` are","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54162,"byte_end":54229,"line_start":92,"line_end":92,"column_start":2,"column_end":69}},{"value":"/ inverted; all others retain their original value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54231,"byte_end":54284,"line_start":93,"line_end":93,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55232,"byte_end":55241,"line_start":122,"line_end":122,"column_start":5,"column_end":14},"name":"write_bit","qualname":"::access::BitAccess::write_bit","value":"pub fn write_bit<O>(&Self, BitIdx<Self::Item>, bool) -> bool where O: BitOrder","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" Writes a value to one bit in a memory element, returning the previous\n value.","sig":null,"attributes":[{"value":"/ Writes a value to one bit in a memory element, returning the previous","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54411,"byte_end":54484,"line_start":98,"line_end":98,"column_start":2,"column_end":75}},{"value":"/ value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54486,"byte_end":54496,"line_start":99,"line_end":99,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54498,"byte_end":54501,"line_start":100,"line_end":100,"column_start":2,"column_end":5}},{"value":"/ ## Type Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54503,"byte_end":54525,"line_start":101,"line_end":101,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54527,"byte_end":54530,"line_start":102,"line_end":102,"column_start":2,"column_end":5}},{"value":"/ - `O`: An ordering of bits in a memory element that translates the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54532,"byte_end":54602,"line_start":103,"line_end":103,"column_start":2,"column_end":72}},{"value":"/   `index` into a real position.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54604,"byte_end":54639,"line_start":104,"line_end":104,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54641,"byte_end":54644,"line_start":105,"line_end":105,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54646,"byte_end":54663,"line_start":106,"line_end":106,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54665,"byte_end":54668,"line_start":107,"line_end":107,"column_start":2,"column_end":5}},{"value":"/ - `index`: The semantic index of the bit in `*self` to modify.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54670,"byte_end":54736,"line_start":108,"line_end":108,"column_start":2,"column_end":68}},{"value":"/ - `value`: The new bit value to write into `*self` at the `index`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54738,"byte_end":54808,"line_start":109,"line_end":109,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54810,"byte_end":54813,"line_start":110,"line_end":110,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54815,"byte_end":54829,"line_start":111,"line_end":111,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54831,"byte_end":54834,"line_start":112,"line_end":112,"column_start":2,"column_end":5}},{"value":"/ The bit previously stored in `*self` at `index`. These operations are","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54836,"byte_end":54909,"line_start":113,"line_end":113,"column_start":2,"column_end":75}},{"value":"/ required to load the `*self` value from memory in order to operate, and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54911,"byte_end":54986,"line_start":114,"line_end":114,"column_start":2,"column_end":77}},{"value":"/ so always have the prior value available for use. This can reduce","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":54988,"byte_end":55057,"line_start":115,"line_end":115,"column_start":2,"column_end":71}},{"value":"/ spurious loads throughout the crate.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55059,"byte_end":55099,"line_start":116,"line_end":116,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55101,"byte_end":55104,"line_start":117,"line_end":117,"column_start":2,"column_end":5}},{"value":"/ ## Effects","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55106,"byte_end":55120,"line_start":118,"line_end":118,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55122,"byte_end":55125,"line_start":119,"line_end":119,"column_start":2,"column_end":5}},{"value":"/ `*self` is updated with the bit at `index` set to `value`; all other","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55127,"byte_end":55199,"line_start":120,"line_end":120,"column_start":2,"column_end":74}},{"value":"/ bits remain unchanged.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55201,"byte_end":55227,"line_start":121,"line_end":121,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56182,"byte_end":56193,"line_start":151,"line_end":151,"column_start":5,"column_end":16},"name":"get_writers","qualname":"::access::BitAccess::get_writers","value":"pub fn get_writers(bool)\n-> for<'a> fn(: &'a Self, : BitMask<Self::Item>) -> Self::Item","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" Gets the function that will write `value` into all bits under a mask.","sig":null,"attributes":[{"value":"/ Gets the function that will write `value` into all bits under a mask.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55534,"byte_end":55607,"line_start":134,"line_end":134,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55609,"byte_end":55612,"line_start":135,"line_end":135,"column_start":2,"column_end":5}},{"value":"/ This is useful for preparing bulk operations that all write the same","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55614,"byte_end":55686,"line_start":136,"line_end":136,"column_start":2,"column_end":74}},{"value":"/ data into memory, and only need to provide the shape of memory to write.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55688,"byte_end":55764,"line_start":137,"line_end":137,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55766,"byte_end":55769,"line_start":138,"line_end":138,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55771,"byte_end":55788,"line_start":139,"line_end":139,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55790,"byte_end":55793,"line_start":140,"line_end":140,"column_start":2,"column_end":5}},{"value":"/ - `value`: The bit that will be written by the returned function.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55795,"byte_end":55864,"line_start":141,"line_end":141,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55866,"byte_end":55869,"line_start":142,"line_end":142,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55871,"byte_end":55885,"line_start":143,"line_end":143,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55887,"byte_end":55890,"line_start":144,"line_end":144,"column_start":2,"column_end":5}},{"value":"/ A function which writes `value` into memory at a given address and under","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55892,"byte_end":55968,"line_start":145,"line_end":145,"column_start":2,"column_end":78}},{"value":"/ a given mask. If `value` is `false`, then this produces [`clear_bits`];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":55970,"byte_end":56045,"line_start":146,"line_end":146,"column_start":2,"column_end":77}},{"value":"/ if it is `true`, then this produces [`set_bits`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56047,"byte_end":56100,"line_start":147,"line_end":147,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56102,"byte_end":56105,"line_start":148,"line_end":148,"column_start":2,"column_end":5}},{"value":"/ [`clear_bits`]: Self::clear_bits","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56107,"byte_end":56143,"line_start":149,"line_end":149,"column_start":2,"column_end":38}},{"value":"/ [`set_bits`]: Self::set_bits","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56145,"byte_end":56177,"line_start":150,"line_end":150,"column_start":2,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":91},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56478,"byte_end":56485,"line_start":171,"line_end":171,"column_start":11,"column_end":18},"name":"BitSafe","qualname":"::access::BitSafe","value":"BitSafe","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"decl_id":null,"docs":"# Read-Only Semivolatile Handle","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":92},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56679,"byte_end":56682,"line_start":176,"line_end":176,"column_start":7,"column_end":10},"name":"Mem","qualname":"::access::BitSafe::Mem","value":"type Mem: BitRegister;","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":" The element type being guarded against improper mutation.","sig":null,"attributes":[{"value":"/ The element type being guarded against improper mutation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56489,"byte_end":56550,"line_start":172,"line_end":172,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56552,"byte_end":56555,"line_start":173,"line_end":173,"column_start":2,"column_end":5}},{"value":"/ This is only present as an extra proof that the type graph has a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56557,"byte_end":56625,"line_start":174,"line_end":174,"column_start":2,"column_end":70}},{"value":"/ consistent view of the underlying memory.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56627,"byte_end":56672,"line_start":175,"line_end":175,"column_start":2,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":93},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56890,"byte_end":56893,"line_start":182,"line_end":182,"column_start":7,"column_end":10},"name":"Rad","qualname":"::access::BitSafe::Rad","value":"type Rad: Radium<Item = Self::Mem>;","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":" The memory-access type this guards.","sig":null,"attributes":[{"value":"/ The memory-access type this guards.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56699,"byte_end":56738,"line_start":178,"line_end":178,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56740,"byte_end":56743,"line_start":179,"line_end":179,"column_start":2,"column_end":5}},{"value":"/ This is exposed as an associated type so that `BitStore` can name it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56745,"byte_end":56817,"line_start":180,"line_end":180,"column_start":2,"column_end":74}},{"value":"/ without having to re-select it based on crate configuration.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56819,"byte_end":56883,"line_start":181,"line_end":181,"column_start":2,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":94},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56953,"byte_end":56957,"line_start":185,"line_end":185,"column_start":8,"column_end":12},"name":"ZERO","qualname":"::access::BitSafe::ZERO","value":"Self","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":" The zero constant.\n","sig":null,"attributes":[{"value":"/ The zero constant.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56923,"byte_end":56945,"line_start":184,"line_end":184,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":57087,"byte_end":57091,"line_start":189,"line_end":189,"column_start":5,"column_end":9},"name":"load","qualname":"::access::BitSafe::load","value":"pub fn load(&Self) -> Self::Mem","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":" Loads the value from memory, allowing for the possibility that other\n handles have write permissions to it.\n","sig":null,"attributes":[{"value":"/ Loads the value from memory, allowing for the possibility that other","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56967,"byte_end":57039,"line_start":187,"line_end":187,"column_start":2,"column_end":74}},{"value":"/ handles have write permissions to it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":57041,"byte_end":57082,"line_start":188,"line_end":188,"column_start":2,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5364},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":58129,"byte_end":58138,"line_start":233,"line_end":233,"column_start":8,"column_end":17},"name":"BitSafeU8","qualname":"::access::BitSafeU8","value":"BitSafeU8 {  }","parent":null,"children":[{"krate":0,"index":5365}],"decl_id":null,"docs":"# Read-Only Shared-Mutable Handle","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":57290,"byte_end":57310,"line_start":196,"line_end":196,"column_start":3,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5368},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":58175,"byte_end":58185,"line_start":234,"line_end":234,"column_start":9,"column_end":19},"name":"BitSafeU16","qualname":"::access::BitSafeU16","value":"BitSafeU16 {  }","parent":null,"children":[{"krate":0,"index":5369}],"decl_id":null,"docs":"# Read-Only Shared-Mutable Handle","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":57290,"byte_end":57310,"line_start":196,"line_end":196,"column_start":3,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5372},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":58223,"byte_end":58233,"line_start":235,"line_end":235,"column_start":9,"column_end":19},"name":"BitSafeU32","qualname":"::access::BitSafeU32","value":"BitSafeU32 {  }","parent":null,"children":[{"krate":0,"index":5373}],"decl_id":null,"docs":"# Read-Only Shared-Mutable Handle","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":57290,"byte_end":57310,"line_start":196,"line_end":196,"column_start":3,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5383},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":58315,"byte_end":58325,"line_start":239,"line_end":239,"column_start":14,"column_end":24},"name":"BitSafeU64","qualname":"::access::BitSafeU64","value":"BitSafeU64 {  }","parent":null,"children":[{"krate":0,"index":5384}],"decl_id":null,"docs":"# Read-Only Shared-Mutable Handle","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":57290,"byte_end":57310,"line_start":196,"line_end":196,"column_start":3,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5394},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":58372,"byte_end":58384,"line_start":241,"line_end":241,"column_start":16,"column_end":28},"name":"BitSafeUsize","qualname":"::access::BitSafeUsize","value":"BitSafeUsize {  }","parent":null,"children":[{"krate":0,"index":5395}],"decl_id":null,"docs":"# Read-Only Shared-Mutable Handle","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":57290,"byte_end":57310,"line_start":196,"line_end":196,"column_start":3,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":97},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"array","qualname":"::array","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":137},{"krate":0,"index":235},{"krate":0,"index":368},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":542}],"decl_id":null,"docs":"# Statically-Allocated, Fixed-Size, Bit Buffer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62366,"byte_end":62374,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"name":"as_slice","qualname":"<BitArray<A, O>>::as_slice","value":"pub fn as_slice(&Self) -> &BitSlice<A::Store, O>","parent":null,"children":[],"decl_id":null,"docs":" Returns a bit-slice containing the entire bit-array. Equivalent to\n `&a[..]`.","sig":null,"attributes":[{"value":"/ Returns a bit-slice containing the entire bit-array. Equivalent to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":61744,"byte_end":61814,"line_start":15,"line_end":15,"column_start":2,"column_end":72}},{"value":"/ `&a[..]`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":61816,"byte_end":61829,"line_start":16,"line_end":16,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":61831,"byte_end":61834,"line_start":17,"line_end":17,"column_start":2,"column_end":5}},{"value":"/ Because `BitArray` can be viewed as a slice of bits or as a slice of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":61836,"byte_end":61908,"line_start":18,"line_end":18,"column_start":2,"column_end":74}},{"value":"/ elements with equal ease, you should switch to using [`.as_bitslice()`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":61910,"byte_end":61985,"line_start":19,"line_end":19,"column_start":2,"column_end":77}},{"value":"/ or [`.as_raw_slice()`] to make your choice explicit.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":61987,"byte_end":62043,"line_start":20,"line_end":20,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62045,"byte_end":62048,"line_start":21,"line_end":21,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62050,"byte_end":62065,"line_start":22,"line_end":22,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62067,"byte_end":62070,"line_start":23,"line_end":23,"column_start":2,"column_end":5}},{"value":"/ [`array::as_slice`](https://doc.rust-lang.org/std/primitive.array.html#method.as_slice)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62072,"byte_end":62163,"line_start":24,"line_end":24,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62165,"byte_end":62168,"line_start":25,"line_end":25,"column_start":2,"column_end":5}},{"value":"/ [`.as_bitslice()`]: Self::as_bitslice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62170,"byte_end":62211,"line_start":26,"line_end":26,"column_start":2,"column_end":43}},{"value":"/ [`.as_raw_slice()`]: Self::as_raw_slice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62213,"byte_end":62256,"line_start":27,"line_end":27,"column_start":2,"column_end":45}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62258,"byte_end":62288,"line_start":28,"line_end":28,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.as_bitslice()` or `.as_raw_slice()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62290,"byte_end":62357,"line_start":29,"line_end":29,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":63115,"byte_end":63127,"line_start":50,"line_end":50,"column_start":9,"column_end":21},"name":"as_mut_slice","qualname":"<BitArray<A, O>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut BitSlice<A::Store, O>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable bit-slice containing the entire bit-array. Equivalent\n to `&mut a[..]`.","sig":null,"attributes":[{"value":"/ Returns a mutable bit-slice containing the entire bit-array. Equivalent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62436,"byte_end":62511,"line_start":34,"line_end":34,"column_start":2,"column_end":77}},{"value":"/ to `&mut a[..]`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62513,"byte_end":62533,"line_start":35,"line_end":35,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62535,"byte_end":62538,"line_start":36,"line_end":36,"column_start":2,"column_end":5}},{"value":"/ Because `BitArray` can be viewed as a slice of bits or as a slice of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62540,"byte_end":62612,"line_start":37,"line_end":37,"column_start":2,"column_end":74}},{"value":"/ elements with equal ease, you should switch to using","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62614,"byte_end":62670,"line_start":38,"line_end":38,"column_start":2,"column_end":58}},{"value":"/ [`.as_mut_bitslice()`] or [`.as_raw_mut_slice()`] to make your choice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62672,"byte_end":62745,"line_start":39,"line_end":39,"column_start":2,"column_end":75}},{"value":"/ explicit.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62747,"byte_end":62760,"line_start":40,"line_end":40,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62762,"byte_end":62765,"line_start":41,"line_end":41,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62767,"byte_end":62782,"line_start":42,"line_end":42,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62784,"byte_end":62787,"line_start":43,"line_end":43,"column_start":2,"column_end":5}},{"value":"/ [`array::as_mut_slice`](https://doc.rust-lang.org/std/primitive.array.html#method.as_mut_slice)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62789,"byte_end":62888,"line_start":44,"line_end":44,"column_start":2,"column_end":101}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62890,"byte_end":62893,"line_start":45,"line_end":45,"column_start":2,"column_end":5}},{"value":"/ [`.as_mut_bitslice()`]: Self::as_mut_bitslice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62895,"byte_end":62944,"line_start":46,"line_end":46,"column_start":2,"column_end":51}},{"value":"/ [`.as_raw_mut_slice()`]: Self::as_raw_mut_slice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62946,"byte_end":62997,"line_start":47,"line_end":47,"column_start":2,"column_end":53}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":62999,"byte_end":63029,"line_start":48,"line_end":48,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.as_mut_bitslice()` or `.as_raw_mut_slice()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":63031,"byte_end":63106,"line_start":49,"line_end":49,"column_start":2,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":5398},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":64775,"byte_end":64783,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::array::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5401},{"krate":0,"index":5402}],"decl_id":null,"docs":"# Bit-Array Iteration","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65519,"byte_end":65522,"line_start":99,"line_end":99,"column_start":9,"column_end":12},"name":"new","qualname":"<IntoIter<A, O>>::new","value":"pub fn new(BitArray<A, O>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a bit-array into its iterator.","sig":null,"attributes":[{"value":"/ Converts a bit-array into its iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65117,"byte_end":65160,"line_start":89,"line_end":89,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65162,"byte_end":65165,"line_start":90,"line_end":90,"column_start":2,"column_end":5}},{"value":"/ The [`.into_iter()`] method on bit-arrays forwards to this. While","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65167,"byte_end":65236,"line_start":91,"line_end":91,"column_start":2,"column_end":71}},{"value":"/ `BitArray` does deref to `&/mut BitSlice`, which also has","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65238,"byte_end":65299,"line_start":92,"line_end":92,"column_start":2,"column_end":63}},{"value":"/ `.into_iter()`, this behavior has always been present alongside","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65301,"byte_end":65368,"line_start":93,"line_end":93,"column_start":2,"column_end":69}},{"value":"/ `BitArray` and there is no legacy forwarding to preserve.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65370,"byte_end":65431,"line_start":94,"line_end":94,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65433,"byte_end":65436,"line_start":95,"line_end":95,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65438,"byte_end":65453,"line_start":96,"line_end":96,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65455,"byte_end":65458,"line_start":97,"line_end":97,"column_start":2,"column_end":5}},{"value":"/ [`IntoIter::new`](core::array::IntoIter::new)s","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65460,"byte_end":65510,"line_start":98,"line_end":98,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65772,"byte_end":65783,"line_start":111,"line_end":111,"column_start":9,"column_end":20},"name":"as_bitslice","qualname":"<IntoIter<A, O>>::as_bitslice","value":"pub fn as_bitslice(&Self) -> &BitSlice<A::Store, O>","parent":null,"children":[],"decl_id":null,"docs":" Views the remaining unyielded bits in the iterator.","sig":null,"attributes":[{"value":"/ Views the remaining unyielded bits in the iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65620,"byte_end":65675,"line_start":106,"line_end":106,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65677,"byte_end":65680,"line_start":107,"line_end":107,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65682,"byte_end":65697,"line_start":108,"line_end":108,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65699,"byte_end":65702,"line_start":109,"line_end":109,"column_start":2,"column_end":5}},{"value":"/ [`IntoIter::as_slice`](core::array::IntoIter::as_slice)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65704,"byte_end":65763,"line_start":110,"line_end":110,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":66046,"byte_end":66054,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"as_slice","qualname":"<IntoIter<A, O>>::as_slice","value":"pub fn as_slice(&Self) -> &BitSlice<A::Store, O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65896,"byte_end":65926,"line_start":115,"line_end":115,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.as_bitslice()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65928,"byte_end":65974,"line_start":116,"line_end":116,"column_start":2,"column_end":48}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65976,"byte_end":66037,"line_start":117,"line_end":117,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":66284,"byte_end":66299,"line_start":127,"line_end":127,"column_start":9,"column_end":24},"name":"as_mut_bitslice","qualname":"<IntoIter<A, O>>::as_mut_bitslice","value":"pub fn as_mut_bitslice(&mut Self) -> &mut BitSlice<A::Store, O>","parent":null,"children":[],"decl_id":null,"docs":" Mutably views the remaining unyielded bits in the iterator.","sig":null,"attributes":[{"value":"/ Mutably views the remaining unyielded bits in the iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":66116,"byte_end":66179,"line_start":122,"line_end":122,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":66181,"byte_end":66184,"line_start":123,"line_end":123,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":66186,"byte_end":66201,"line_start":124,"line_end":124,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":66203,"byte_end":66206,"line_start":125,"line_end":125,"column_start":2,"column_end":5}},{"value":"/ [`IntoIter::as_mut_slice`](core::array::IntoIter::as_mut_slice)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":66208,"byte_end":66275,"line_start":126,"line_end":126,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":66597,"byte_end":66609,"line_start":138,"line_end":138,"column_start":9,"column_end":21},"name":"as_mut_slice","qualname":"<IntoIter<A, O>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut BitSlice<A::Store, O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":66443,"byte_end":66473,"line_start":135,"line_end":135,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.as_bitslice_mut()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":66475,"byte_end":66525,"line_start":136,"line_end":136,"column_start":2,"column_end":52}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":66527,"byte_end":66588,"line_start":137,"line_end":137,"column_start":2,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":5430},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":80546,"byte_end":80566,"line_start":283,"line_end":283,"column_start":12,"column_end":32},"name":"TryFromBitSliceError","qualname":"::array::traits::TryFromBitSliceError","value":"","parent":null,"children":[],"decl_id":null,"docs":"# Bit-Slice to Bit-Array Conversion Error","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":80394,"byte_end":80414,"line_start":280,"line_end":280,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":536},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":59609,"byte_end":59617,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"BitArray","qualname":"::array::BitArray","value":"BitArray { _ord, data }","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541}],"decl_id":null,"docs":"# Bit-Precision Array Immediate","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":59527,"byte_end":59547,"line_start":23,"line_end":23,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":540},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":59745,"byte_end":59749,"line_start":31,"line_end":31,"column_start":6,"column_end":10},"name":"_ord","qualname":"::array::BitArray::_ord","value":"std::marker::PhantomData<O>","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" The ordering of bits within an `A::Store` element.\n","sig":null,"attributes":[{"value":"/ The ordering of bits within an `A::Store` element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":59685,"byte_end":59739,"line_start":30,"line_end":30,"column_start":2,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":541},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":59802,"byte_end":59806,"line_start":33,"line_end":33,"column_start":6,"column_end":10},"name":"data","qualname":"::array::BitArray::data","value":"A","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" The wrapped data buffer.\n","sig":null,"attributes":[{"value":"/ The wrapped data buffer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":59768,"byte_end":59796,"line_start":32,"line_end":32,"column_start":2,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":545},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":59943,"byte_end":59947,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"ZERO","qualname":"::array::BitArray::<A, O>::ZERO","value":"Self","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" A bit-array with all bits initialized to zero.\n","sig":null,"attributes":[{"value":"/ A bit-array with all bits initialized to zero.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":59881,"byte_end":59931,"line_start":41,"line_end":41,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60257,"byte_end":60260,"line_start":58,"line_end":58,"column_start":9,"column_end":12},"name":"new","qualname":"<BitArray<A, O>>::new","value":"pub fn new(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps an existing buffer as a bit-array.","sig":null,"attributes":[{"value":"/ Wraps an existing buffer as a bit-array.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60007,"byte_end":60051,"line_start":47,"line_end":47,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60053,"byte_end":60056,"line_start":48,"line_end":48,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60058,"byte_end":60073,"line_start":49,"line_end":49,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60075,"byte_end":60078,"line_start":50,"line_end":50,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60080,"byte_end":60091,"line_start":51,"line_end":51,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60093,"byte_end":60120,"line_start":52,"line_end":52,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60122,"byte_end":60125,"line_start":53,"line_end":53,"column_start":2,"column_end":5}},{"value":"/ let data = [0u16, 1, 2, 3];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60127,"byte_end":60158,"line_start":54,"line_end":54,"column_start":2,"column_end":33}},{"value":"/ let bits = BitArray::<_, Msb0>::new(data);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60160,"byte_end":60206,"line_start":55,"line_end":55,"column_start":2,"column_end":48}},{"value":"/ assert_eq!(bits.len(), 64);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60208,"byte_end":60239,"line_start":56,"line_end":56,"column_start":2,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60241,"byte_end":60248,"line_start":57,"line_end":57,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60554,"byte_end":60564,"line_start":72,"line_end":72,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<BitArray<A, O>>::into_inner","value":"pub fn into_inner(Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Removes the bit-array wrapper, returning the contained buffer.","sig":null,"attributes":[{"value":"/ Removes the bit-array wrapper, returning the contained buffer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60315,"byte_end":60381,"line_start":62,"line_end":62,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60383,"byte_end":60386,"line_start":63,"line_end":63,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60388,"byte_end":60403,"line_start":64,"line_end":64,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60405,"byte_end":60408,"line_start":65,"line_end":65,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60410,"byte_end":60421,"line_start":66,"line_end":66,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60423,"byte_end":60450,"line_start":67,"line_end":67,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60452,"byte_end":60455,"line_start":68,"line_end":68,"column_start":2,"column_end":5}},{"value":"/ let bits = bitarr![0; 30];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60457,"byte_end":60487,"line_start":69,"line_end":69,"column_start":2,"column_end":32}},{"value":"/ let native: [usize; 1] = bits.into_inner();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60489,"byte_end":60536,"line_start":70,"line_end":70,"column_start":2,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60538,"byte_end":60545,"line_start":71,"line_end":71,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60654,"byte_end":60665,"line_start":77,"line_end":77,"column_start":9,"column_end":20},"name":"as_bitslice","qualname":"<BitArray<A, O>>::as_bitslice","value":"pub fn as_bitslice(&Self) -> &BitSlice<A::Store, O>","parent":null,"children":[],"decl_id":null,"docs":" Explicitly views the bit-array as a bit-slice.\n","sig":null,"attributes":[{"value":"/ Explicitly views the bit-array as a bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60595,"byte_end":60645,"line_start":76,"line_end":76,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60802,"byte_end":60817,"line_start":82,"line_end":82,"column_start":9,"column_end":24},"name":"as_mut_bitslice","qualname":"<BitArray<A, O>>::as_mut_bitslice","value":"pub fn as_mut_bitslice(&mut Self) -> &mut BitSlice<A::Store, O>","parent":null,"children":[],"decl_id":null,"docs":" Explicitly views the bit-array as a mutable bit-slice.\n","sig":null,"attributes":[{"value":"/ Explicitly views the bit-array as a mutable bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60735,"byte_end":60793,"line_start":81,"line_end":81,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60977,"byte_end":60989,"line_start":87,"line_end":87,"column_start":9,"column_end":21},"name":"as_raw_slice","qualname":"<BitArray<A, O>>::as_raw_slice","value":"pub fn as_raw_slice(&Self) -> &[A::Store]","parent":null,"children":[],"decl_id":null,"docs":" Views the bit-array as a slice of its underlying memory elements.\n","sig":null,"attributes":[{"value":"/ Views the bit-array as a slice of its underlying memory elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":60899,"byte_end":60968,"line_start":86,"line_end":86,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":61137,"byte_end":61153,"line_start":93,"line_end":93,"column_start":9,"column_end":25},"name":"as_raw_mut_slice","qualname":"<BitArray<A, O>>::as_raw_mut_slice","value":"pub fn as_raw_mut_slice(&mut Self) -> &mut [A::Store]","parent":null,"children":[],"decl_id":null,"docs":" Views the bit-array as a mutable slice of its underlying memory\n elements.\n","sig":null,"attributes":[{"value":"/ Views the bit-array as a mutable slice of its underlying memory","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":61046,"byte_end":61113,"line_start":91,"line_end":91,"column_start":2,"column_end":69}},{"value":"/ elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":61115,"byte_end":61128,"line_start":92,"line_end":92,"column_start":2,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":61328,"byte_end":61331,"line_start":100,"line_end":100,"column_start":9,"column_end":12},"name":"len","qualname":"<BitArray<A, O>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the length (in bits) of the bit-array.","sig":null,"attributes":[{"value":"/ Gets the length (in bits) of the bit-array.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":61222,"byte_end":61269,"line_start":97,"line_end":97,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":61271,"byte_end":61274,"line_start":98,"line_end":98,"column_start":2,"column_end":5}},{"value":"/ This method is a compile-time constant.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":61276,"byte_end":61319,"line_start":99,"line_end":99,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":61473,"byte_end":61481,"line_start":107,"line_end":107,"column_start":9,"column_end":17},"name":"is_empty","qualname":"<BitArray<A, O>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the array is empty.","sig":null,"attributes":[{"value":"/ Tests whether the array is empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":61377,"byte_end":61414,"line_start":104,"line_end":104,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":61416,"byte_end":61419,"line_start":105,"line_end":105,"column_start":2,"column_end":5}},{"value":"/ This method is a compile-time constant.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":61421,"byte_end":61464,"line_start":106,"line_end":106,"column_start":2,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":554},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"boxed","qualname":"::boxed","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":643},{"krate":0,"index":737},{"krate":0,"index":876},{"krate":0,"index":1080},{"krate":0,"index":1083},{"krate":0,"index":1087}],"decl_id":null,"docs":"# Heap-Allocated, Fixed-Size, Bit Buffer","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":82688,"byte_end":82714,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95677,"byte_end":95685,"line_start":59,"line_end":59,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<BitBox<T, O>>::from_raw","value":"pub unsafe fn from_raw(*mut BitSlice<T, O>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a bit-box from a raw bit-slice pointer.","sig":null,"attributes":[{"value":"/ Constructs a bit-box from a raw bit-slice pointer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94214,"byte_end":94268,"line_start":21,"line_end":21,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94270,"byte_end":94273,"line_start":22,"line_end":22,"column_start":2,"column_end":5}},{"value":"/ This converts a `*mut BitSlice` pointer that had previously been","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94275,"byte_end":94343,"line_start":23,"line_end":23,"column_start":2,"column_end":70}},{"value":"/ produced by either [`::into_raw()`] or [`::leak()`] and restores the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94345,"byte_end":94417,"line_start":24,"line_end":24,"column_start":2,"column_end":74}},{"value":"/ bit-box containing it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94419,"byte_end":94445,"line_start":25,"line_end":25,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94447,"byte_end":94450,"line_start":26,"line_end":26,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94452,"byte_end":94467,"line_start":27,"line_end":27,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94469,"byte_end":94472,"line_start":28,"line_end":28,"column_start":2,"column_end":5}},{"value":"/ [`Box::from_raw`](alloc::boxed::Box::from_raw)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94474,"byte_end":94524,"line_start":29,"line_end":29,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94526,"byte_end":94529,"line_start":30,"line_end":30,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94531,"byte_end":94544,"line_start":31,"line_end":31,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94546,"byte_end":94549,"line_start":32,"line_end":32,"column_start":2,"column_end":5}},{"value":"/ You must only call this function on pointers produced by leaking a prior","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94551,"byte_end":94627,"line_start":33,"line_end":33,"column_start":2,"column_end":78}},{"value":"/ `BitBox`; you may not modify the value of a pointer returned by","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94629,"byte_end":94696,"line_start":34,"line_end":34,"column_start":2,"column_end":69}},{"value":"/ [`::into_raw()`], nor may you conjure pointer values of your own. Doing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94698,"byte_end":94773,"line_start":35,"line_end":35,"column_start":2,"column_end":77}},{"value":"/ so will corrupt the allocator state.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94775,"byte_end":94815,"line_start":36,"line_end":36,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94817,"byte_end":94820,"line_start":37,"line_end":37,"column_start":2,"column_end":5}},{"value":"/ You must only call this function on any given leaked pointer at most","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94822,"byte_end":94894,"line_start":38,"line_end":38,"column_start":2,"column_end":74}},{"value":"/ once. Not calling it at all will merely render the allocated memory","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94896,"byte_end":94967,"line_start":39,"line_end":39,"column_start":2,"column_end":73}},{"value":"/ unreachable for the duration of the program runtime, a normal (and safe)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94969,"byte_end":95045,"line_start":40,"line_end":40,"column_start":2,"column_end":78}},{"value":"/ memory leak. Calling it once restores ordinary functionality, and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95047,"byte_end":95116,"line_start":41,"line_end":41,"column_start":2,"column_end":71}},{"value":"/ ensures ordinary destruction at or before program termination. However,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95118,"byte_end":95193,"line_start":42,"line_end":42,"column_start":2,"column_end":77}},{"value":"/ calling it more than once on the same pointer will introduce data races,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95195,"byte_end":95271,"line_start":43,"line_end":43,"column_start":2,"column_end":78}},{"value":"/ use-after-free, and/or double-free errors.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95273,"byte_end":95319,"line_start":44,"line_end":44,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95321,"byte_end":95324,"line_start":45,"line_end":45,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95326,"byte_end":95341,"line_start":46,"line_end":46,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95343,"byte_end":95346,"line_start":47,"line_end":47,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95348,"byte_end":95359,"line_start":48,"line_end":48,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95361,"byte_end":95388,"line_start":49,"line_end":49,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95390,"byte_end":95393,"line_start":50,"line_end":50,"column_start":2,"column_end":5}},{"value":"/ let bb = bitbox![0; 80];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95395,"byte_end":95423,"line_start":51,"line_end":51,"column_start":2,"column_end":30}},{"value":"/ let ptr: *mut BitSlice = BitBox::into_raw(bb);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95425,"byte_end":95475,"line_start":52,"line_end":52,"column_start":2,"column_end":52}},{"value":"/ let bb = unsafe { BitBox::from_raw(ptr) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95477,"byte_end":95523,"line_start":53,"line_end":53,"column_start":2,"column_end":48}},{"value":"/ // unsafe { BitBox::from_raw(ptr) }; // UAF crash!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95525,"byte_end":95579,"line_start":54,"line_end":54,"column_start":2,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95581,"byte_end":95588,"line_start":55,"line_end":55,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95590,"byte_end":95593,"line_start":56,"line_end":56,"column_start":2,"column_end":5}},{"value":"/ [`::into_raw()`]: Self::into_raw","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95595,"byte_end":95631,"line_start":57,"line_end":57,"column_start":2,"column_end":38}},{"value":"/ [`::leak()`]: Self::leak","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95633,"byte_end":95661,"line_start":58,"line_end":58,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96646,"byte_end":96654,"line_start":91,"line_end":91,"column_start":9,"column_end":17},"name":"into_raw","qualname":"<BitBox<T, O>>::into_raw","value":"pub fn into_raw(Self) -> *mut BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the bit-box, returning a raw bit-slice pointer.","sig":null,"attributes":[{"value":"/ Consumes the bit-box, returning a raw bit-slice pointer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95789,"byte_end":95849,"line_start":65,"line_end":65,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95851,"byte_end":95854,"line_start":66,"line_end":66,"column_start":2,"column_end":5}},{"value":"/ Bit-slice pointers are always correctly encoded and non-null. The","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95856,"byte_end":95925,"line_start":67,"line_end":67,"column_start":2,"column_end":71}},{"value":"/ referent region is dereferenceäble *as a `BitSlice` for the remainder of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":95927,"byte_end":96004,"line_start":68,"line_end":68,"column_start":2,"column_end":78}},{"value":"/ the program, or until it is first passed to [`::from_raw()`], whichever","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96006,"byte_end":96081,"line_start":69,"line_end":69,"column_start":2,"column_end":77}},{"value":"/ comes first. Once the pointer is first passed to `::from_raw()`, all","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96083,"byte_end":96155,"line_start":70,"line_end":70,"column_start":2,"column_end":74}},{"value":"/ copies of that pointer become invalid to dereference.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96157,"byte_end":96214,"line_start":71,"line_end":71,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96216,"byte_end":96219,"line_start":72,"line_end":72,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96221,"byte_end":96236,"line_start":73,"line_end":73,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96238,"byte_end":96241,"line_start":74,"line_end":74,"column_start":2,"column_end":5}},{"value":"/ [`Box::into_raw`](alloc::boxed::Box::into_raw)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96243,"byte_end":96293,"line_start":75,"line_end":75,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96295,"byte_end":96298,"line_start":76,"line_end":76,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96300,"byte_end":96315,"line_start":77,"line_end":77,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96317,"byte_end":96320,"line_start":78,"line_end":78,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96322,"byte_end":96333,"line_start":79,"line_end":79,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96335,"byte_end":96362,"line_start":80,"line_end":80,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96364,"byte_end":96367,"line_start":81,"line_end":81,"column_start":2,"column_end":5}},{"value":"/ let bb = bitbox![0; 80];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96369,"byte_end":96397,"line_start":82,"line_end":82,"column_start":2,"column_end":30}},{"value":"/ let ptr = BitBox::into_raw(bb);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96399,"byte_end":96434,"line_start":83,"line_end":83,"column_start":2,"column_end":37}},{"value":"/ let bb = unsafe { BitBox::from_raw(ptr) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96436,"byte_end":96482,"line_start":84,"line_end":84,"column_start":2,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96484,"byte_end":96491,"line_start":85,"line_end":85,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96493,"byte_end":96496,"line_start":86,"line_end":86,"column_start":2,"column_end":5}},{"value":"/ You **may not** deällocate pointers produced by this function through","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96498,"byte_end":96572,"line_start":87,"line_end":87,"column_start":2,"column_end":75}},{"value":"/ any other means.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96574,"byte_end":96594,"line_start":88,"line_end":88,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96596,"byte_end":96599,"line_start":89,"line_end":89,"column_start":2,"column_end":5}},{"value":"/ [`::from_raw()`]: Self::from_raw","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96601,"byte_end":96637,"line_start":90,"line_end":90,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97578,"byte_end":97582,"line_start":124,"line_end":124,"column_start":9,"column_end":13},"name":"leak","qualname":"<BitBox<T, O>>::leak","value":"pub fn leak<'a>(Self) -> &'a mut BitSlice<T, O> where T: 'a","parent":null,"children":[],"decl_id":null,"docs":" Deliberately leaks the allocated memory, returning an\n `&'static mut BitSlice` reference.","sig":null,"attributes":[{"value":"/ Deliberately leaks the allocated memory, returning an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96716,"byte_end":96773,"line_start":95,"line_end":95,"column_start":2,"column_end":59}},{"value":"/ `&'static mut BitSlice` reference.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96775,"byte_end":96813,"line_start":96,"line_end":96,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96815,"byte_end":96818,"line_start":97,"line_end":97,"column_start":2,"column_end":5}},{"value":"/ This differs from [`::into_raw()`] in that the reference is safe to use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96820,"byte_end":96895,"line_start":98,"line_end":98,"column_start":2,"column_end":77}},{"value":"/ and can be tracked by the Rust borrow-checking system. Like the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96897,"byte_end":96964,"line_start":99,"line_end":99,"column_start":2,"column_end":69}},{"value":"/ bit-slice pointer produced by `::into_raw()`, this reference can be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":96966,"byte_end":97037,"line_start":100,"line_end":100,"column_start":2,"column_end":73}},{"value":"/ un-leaked by passing it into [`::from_raw()`] to reclaim the memory.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97039,"byte_end":97111,"line_start":101,"line_end":101,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97113,"byte_end":97116,"line_start":102,"line_end":102,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97118,"byte_end":97133,"line_start":103,"line_end":103,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97135,"byte_end":97138,"line_start":104,"line_end":104,"column_start":2,"column_end":5}},{"value":"/ [`Box::leak`](alloc::boxed::Box::leak)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97140,"byte_end":97182,"line_start":105,"line_end":105,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97184,"byte_end":97187,"line_start":106,"line_end":106,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97189,"byte_end":97204,"line_start":107,"line_end":107,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97206,"byte_end":97209,"line_start":108,"line_end":108,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97211,"byte_end":97222,"line_start":109,"line_end":109,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97224,"byte_end":97251,"line_start":110,"line_end":110,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97253,"byte_end":97256,"line_start":111,"line_end":111,"column_start":2,"column_end":5}},{"value":"/ let bb = bitbox![0; 80];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97258,"byte_end":97286,"line_start":112,"line_end":112,"column_start":2,"column_end":30}},{"value":"/ let static_ref: &'static mut BitSlice = BitBox::leak(bb);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97288,"byte_end":97349,"line_start":113,"line_end":113,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97351,"byte_end":97354,"line_start":114,"line_end":114,"column_start":2,"column_end":5}},{"value":"/ static_ref.set(0, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97356,"byte_end":97384,"line_start":115,"line_end":115,"column_start":2,"column_end":30}},{"value":"/ assert!(static_ref[0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97386,"byte_end":97413,"line_start":116,"line_end":116,"column_start":2,"column_end":29}},{"value":"/ let _ = unsafe {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97415,"byte_end":97435,"line_start":117,"line_end":117,"column_start":2,"column_end":22}},{"value":"/   BitBox::from_raw(static_ref)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97437,"byte_end":97471,"line_start":118,"line_end":118,"column_start":2,"column_end":36}},{"value":"/ };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97473,"byte_end":97479,"line_start":119,"line_end":119,"column_start":2,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97481,"byte_end":97488,"line_start":120,"line_end":120,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97490,"byte_end":97493,"line_start":121,"line_end":121,"column_start":2,"column_end":5}},{"value":"/ [`::from_raw()`]: Self::from_raw","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97495,"byte_end":97531,"line_start":122,"line_end":122,"column_start":2,"column_end":38}},{"value":"/ [`::into_raw()`]: Self::into_raw","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97533,"byte_end":97569,"line_start":123,"line_end":123,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97821,"byte_end":97829,"line_start":132,"line_end":132,"column_start":9,"column_end":17},"name":"into_vec","qualname":"<BitBox<T, O>>::into_vec","value":"pub fn into_vec(Self) -> BitVec<T, O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97734,"byte_end":97764,"line_start":130,"line_end":130,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.into_bitvec()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":97766,"byte_end":97812,"line_start":131,"line_end":131,"column_start":2,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":684},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":98468,"byte_end":98476,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::boxed::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688}],"decl_id":null,"docs":" An iterator over a `BitBox`.","sig":null,"attributes":[{"value":"* An iterator over a `BitBox`.\n\n## Original\n\n[`vec::IntoIter`](alloc::vec::IntoIter)\n**/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":98366,"byte_end":98456,"line_start":37,"line_end":42,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":99125,"byte_end":99136,"line_start":71,"line_end":71,"column_start":9,"column_end":20},"name":"as_bitslice","qualname":"<IntoIter<T, O>>::as_bitslice","value":"pub fn as_bitslice(&Self) -> &BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":" Views the remaining unyielded bits as a bit-slice.","sig":null,"attributes":[{"value":"/ Views the remaining unyielded bits as a bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":98975,"byte_end":99029,"line_start":66,"line_end":66,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":99031,"byte_end":99034,"line_start":67,"line_end":67,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":99036,"byte_end":99051,"line_start":68,"line_end":68,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":99053,"byte_end":99056,"line_start":69,"line_end":69,"column_start":2,"column_end":5}},{"value":"/ [`IntoIter::as_slice`](alloc::vec::IntoIter::as_slice)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":99058,"byte_end":99116,"line_start":70,"line_end":70,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":99566,"byte_end":99574,"line_start":87,"line_end":87,"column_start":9,"column_end":17},"name":"as_slice","qualname":"<IntoIter<T, O>>::as_slice","value":"pub fn as_slice(&Self) -> &BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":99416,"byte_end":99446,"line_start":84,"line_end":84,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.as_bitslice()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":99448,"byte_end":99494,"line_start":85,"line_end":85,"column_start":2,"column_end":48}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":99496,"byte_end":99557,"line_start":86,"line_end":86,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":99795,"byte_end":99810,"line_start":96,"line_end":96,"column_start":9,"column_end":24},"name":"as_mut_bitslice","qualname":"<IntoIter<T, O>>::as_mut_bitslice","value":"pub fn as_mut_bitslice(&mut Self) -> &mut BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":" Views the remaining unyielded bits as a mutable bit-slice.","sig":null,"attributes":[{"value":"/ Views the remaining unyielded bits as a mutable bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":99629,"byte_end":99691,"line_start":91,"line_end":91,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":99693,"byte_end":99696,"line_start":92,"line_end":92,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":99698,"byte_end":99713,"line_start":93,"line_end":93,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":99715,"byte_end":99718,"line_start":94,"line_end":94,"column_start":2,"column_end":5}},{"value":"/ [`IntoIter::as_mut_slice`](alloc::vec::IntoIter::as_mut_slice)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":99720,"byte_end":99786,"line_start":95,"line_end":95,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":100159,"byte_end":100171,"line_start":110,"line_end":110,"column_start":9,"column_end":21},"name":"as_mut_slice","qualname":"<IntoIter<T, O>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":100005,"byte_end":100035,"line_start":107,"line_end":107,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.as_mut_bitslice()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":100037,"byte_end":100087,"line_start":108,"line_end":108,"column_start":2,"column_end":52}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":100089,"byte_end":100150,"line_start":109,"line_end":109,"column_start":2,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1083},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83208,"byte_end":83214,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"BitBox","qualname":"::boxed::BitBox","value":"BitBox {  }","parent":null,"children":[{"krate":0,"index":1086}],"decl_id":null,"docs":"# Fixed-Size, Heap-Allocated, Bit Slice","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83128,"byte_end":83148,"line_start":41,"line_end":41,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84624,"byte_end":84637,"line_start":87,"line_end":87,"column_start":9,"column_end":22},"name":"from_bitslice","qualname":"<BitBox<T, O>>::from_bitslice","value":"pub fn from_bitslice(&BitSlice<T, O>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Copies a bit-slice region into a new bit-box allocation.","sig":null,"attributes":[{"value":"/ Copies a bit-slice region into a new bit-box allocation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83411,"byte_end":83471,"line_start":57,"line_end":57,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83473,"byte_end":83476,"line_start":58,"line_end":58,"column_start":2,"column_end":5}},{"value":"/ The referent memory is `memcpy`d into the heap, exactly preserving the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83478,"byte_end":83552,"line_start":59,"line_end":59,"column_start":2,"column_end":76}},{"value":"/ original bit-slice’s memory layout and contents. This allows the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83554,"byte_end":83624,"line_start":60,"line_end":60,"column_start":2,"column_end":70}},{"value":"/ function to run as fast as possible, but misaligned source bit-slices","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83626,"byte_end":83699,"line_start":61,"line_end":61,"column_start":2,"column_end":75}},{"value":"/ may result in decreased performance or unexpected layout behavior during","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83701,"byte_end":83777,"line_start":62,"line_end":62,"column_start":2,"column_end":78}},{"value":"/ use. You can use [`.force_align()`] to ensure that the referent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83779,"byte_end":83846,"line_start":63,"line_end":63,"column_start":2,"column_end":69}},{"value":"/ bit-slice is aligned in memory.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83848,"byte_end":83883,"line_start":64,"line_end":64,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83885,"byte_end":83888,"line_start":65,"line_end":65,"column_start":2,"column_end":5}},{"value":"/ ## Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83890,"byte_end":83902,"line_start":66,"line_end":66,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83904,"byte_end":83907,"line_start":67,"line_end":67,"column_start":2,"column_end":5}},{"value":"/ Bits in the allocation of the source bit-slice, but outside its own","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83909,"byte_end":83980,"line_start":68,"line_end":68,"column_start":2,"column_end":73}},{"value":"/ description of that memory, have an **unspecified**, but initialized,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83982,"byte_end":84055,"line_start":69,"line_end":69,"column_start":2,"column_end":75}},{"value":"/ value. You may not rely on their contents in any way, and you *should*","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84057,"byte_end":84131,"line_start":70,"line_end":70,"column_start":2,"column_end":76}},{"value":"/ call [`.force_align()`] and/or [`.fill_uninitialized()`] if you are","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84133,"byte_end":84204,"line_start":71,"line_end":71,"column_start":2,"column_end":73}},{"value":"/ going to inspect the underlying memory of the new allocation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84206,"byte_end":84271,"line_start":72,"line_end":72,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84273,"byte_end":84276,"line_start":73,"line_end":73,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84278,"byte_end":84293,"line_start":74,"line_end":74,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84295,"byte_end":84298,"line_start":75,"line_end":75,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84300,"byte_end":84311,"line_start":76,"line_end":76,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84313,"byte_end":84340,"line_start":77,"line_end":77,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84342,"byte_end":84345,"line_start":78,"line_end":78,"column_start":2,"column_end":5}},{"value":"/ let data = 0b0101_1011u8;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84347,"byte_end":84376,"line_start":79,"line_end":79,"column_start":2,"column_end":31}},{"value":"/ let bits = data.view_bits::<Msb0>();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84378,"byte_end":84418,"line_start":80,"line_end":80,"column_start":2,"column_end":42}},{"value":"/ let bb = BitBox::from_bitslice(&bits[2 ..]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84420,"byte_end":84468,"line_start":81,"line_end":81,"column_start":2,"column_end":50}},{"value":"/ assert_eq!(bb, bits[2 ..]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84470,"byte_end":84501,"line_start":82,"line_end":82,"column_start":2,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84503,"byte_end":84510,"line_start":83,"line_end":83,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84512,"byte_end":84515,"line_start":84,"line_end":84,"column_start":2,"column_end":5}},{"value":"/ [`.fill_uninitialized()`]: Self::fill_uninitialized","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84517,"byte_end":84572,"line_start":85,"line_end":85,"column_start":2,"column_end":57}},{"value":"/ [`.force_align()`]: Self::force_align","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84574,"byte_end":84615,"line_start":86,"line_end":86,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85308,"byte_end":85324,"line_start":112,"line_end":112,"column_start":9,"column_end":25},"name":"from_boxed_slice","qualname":"<BitBox<T, O>>::from_boxed_slice","value":"pub fn from_boxed_slice(Box<[T]>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Box<[T]>` into a `BitBox<T, O>`, in place.","sig":null,"attributes":[{"value":"/ Converts a `Box<[T]>` into a `BitBox<T, O>`, in place.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84730,"byte_end":84788,"line_start":91,"line_end":91,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84790,"byte_end":84793,"line_start":92,"line_end":92,"column_start":2,"column_end":5}},{"value":"/ This does not affect the referent buffer, and only transforms the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84795,"byte_end":84864,"line_start":93,"line_end":93,"column_start":2,"column_end":71}},{"value":"/ handle.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84866,"byte_end":84877,"line_start":94,"line_end":94,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84879,"byte_end":84882,"line_start":95,"line_end":95,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84884,"byte_end":84897,"line_start":96,"line_end":96,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84899,"byte_end":84902,"line_start":97,"line_end":97,"column_start":2,"column_end":5}},{"value":"/ This panics if the provided `boxed` slice is too long to view as a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84904,"byte_end":84974,"line_start":98,"line_end":98,"column_start":2,"column_end":72}},{"value":"/ bit-slice region.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84976,"byte_end":84997,"line_start":99,"line_end":99,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":84999,"byte_end":85002,"line_start":100,"line_end":100,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85004,"byte_end":85019,"line_start":101,"line_end":101,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85021,"byte_end":85024,"line_start":102,"line_end":102,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85026,"byte_end":85037,"line_start":103,"line_end":103,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85039,"byte_end":85066,"line_start":104,"line_end":104,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85068,"byte_end":85071,"line_start":105,"line_end":105,"column_start":2,"column_end":5}},{"value":"/ let boxed: Box<[u8]> = Box::new([0; 40]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85073,"byte_end":85118,"line_start":106,"line_end":106,"column_start":2,"column_end":47}},{"value":"/ let addr = boxed.as_ptr();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85120,"byte_end":85150,"line_start":107,"line_end":107,"column_start":2,"column_end":32}},{"value":"/ let bb = BitBox::<u8>::from_boxed_slice(boxed);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85152,"byte_end":85203,"line_start":108,"line_end":108,"column_start":2,"column_end":53}},{"value":"/ assert_eq!(bb, bits![0; 320]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85205,"byte_end":85239,"line_start":109,"line_end":109,"column_start":2,"column_end":36}},{"value":"/ assert_eq!(addr, bb.as_raw_slice().as_ptr());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85241,"byte_end":85290,"line_start":110,"line_end":110,"column_start":2,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85292,"byte_end":85299,"line_start":111,"line_end":111,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86404,"byte_end":86424,"line_start":141,"line_end":141,"column_start":9,"column_end":29},"name":"try_from_boxed_slice","qualname":"<BitBox<T, O>>::try_from_boxed_slice","value":"pub fn try_from_boxed_slice(Box<[T]>) -> Result<Self, Box<[T]>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert an ordinary boxed slice into a boxed bit-slice.","sig":null,"attributes":[{"value":"/ Attempts to convert an ordinary boxed slice into a boxed bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85458,"byte_end":85529,"line_start":117,"line_end":117,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85531,"byte_end":85534,"line_start":118,"line_end":118,"column_start":2,"column_end":5}},{"value":"/ This does not perform a copy or reällocation; it only attempts to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85536,"byte_end":85606,"line_start":119,"line_end":119,"column_start":2,"column_end":71}},{"value":"/ transform the handle. Because `Box<[T]>` can be longer than `BitBox`es,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85608,"byte_end":85683,"line_start":120,"line_end":120,"column_start":2,"column_end":77}},{"value":"/ it may fail, and will return the original handle if it does.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85685,"byte_end":85749,"line_start":121,"line_end":121,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85751,"byte_end":85754,"line_start":122,"line_end":122,"column_start":2,"column_end":5}},{"value":"/ It is unlikely that you have a single `Box<[_]>` that is too large to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85756,"byte_end":85829,"line_start":123,"line_end":123,"column_start":2,"column_end":75}},{"value":"/ convert into a bit-box. You can find the length restrictions as the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85831,"byte_end":85902,"line_start":124,"line_end":124,"column_start":2,"column_end":73}},{"value":"/ bit-slice associated constants [`MAX_BITS`] and [`MAX_ELTS`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85904,"byte_end":85969,"line_start":125,"line_end":125,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85971,"byte_end":85974,"line_start":126,"line_end":126,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85976,"byte_end":85991,"line_start":127,"line_end":127,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85993,"byte_end":85996,"line_start":128,"line_end":128,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":85998,"byte_end":86009,"line_start":129,"line_end":129,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86011,"byte_end":86038,"line_start":130,"line_end":130,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86040,"byte_end":86043,"line_start":131,"line_end":131,"column_start":2,"column_end":5}},{"value":"/ let boxed: Box<[u8]> = Box::new([0u8; 40]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86045,"byte_end":86092,"line_start":132,"line_end":132,"column_start":2,"column_end":49}},{"value":"/ let addr = boxed.as_ptr();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86094,"byte_end":86124,"line_start":133,"line_end":133,"column_start":2,"column_end":32}},{"value":"/ let bb = BitBox::<u8>::try_from_boxed_slice(boxed).unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86126,"byte_end":86190,"line_start":134,"line_end":134,"column_start":2,"column_end":66}},{"value":"/ assert_eq!(bb, bits![0; 320]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86192,"byte_end":86226,"line_start":135,"line_end":135,"column_start":2,"column_end":36}},{"value":"/ assert_eq!(addr, bb.as_raw_slice().as_ptr());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86228,"byte_end":86277,"line_start":136,"line_end":136,"column_start":2,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86279,"byte_end":86286,"line_start":137,"line_end":137,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86288,"byte_end":86291,"line_start":138,"line_end":138,"column_start":2,"column_end":5}},{"value":"/ [`MAX_BITS`]: crate::slice::BitSlice::MAX_BITS","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86293,"byte_end":86343,"line_start":139,"line_end":139,"column_start":2,"column_end":52}},{"value":"/ [`MAX_ELTS`]: crate::slice::BitSlice::MAX_ELTS","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86345,"byte_end":86395,"line_start":140,"line_end":140,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87149,"byte_end":87165,"line_start":166,"line_end":166,"column_start":9,"column_end":25},"name":"into_boxed_slice","qualname":"<BitBox<T, O>>::into_boxed_slice","value":"pub fn into_boxed_slice(Self) -> Box<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Converts the bit-box back into an ordinary boxed element slice.","sig":null,"attributes":[{"value":"/ Converts the bit-box back into an ordinary boxed element slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86695,"byte_end":86762,"line_start":150,"line_end":150,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86764,"byte_end":86767,"line_start":151,"line_end":151,"column_start":2,"column_end":5}},{"value":"/ This does not touch the allocator or the buffer contents; it is purely a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86769,"byte_end":86845,"line_start":152,"line_end":152,"column_start":2,"column_end":78}},{"value":"/ handle transform.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86847,"byte_end":86868,"line_start":153,"line_end":153,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86870,"byte_end":86873,"line_start":154,"line_end":154,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86875,"byte_end":86890,"line_start":155,"line_end":155,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86892,"byte_end":86895,"line_start":156,"line_end":156,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86897,"byte_end":86908,"line_start":157,"line_end":157,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86910,"byte_end":86937,"line_start":158,"line_end":158,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86939,"byte_end":86942,"line_start":159,"line_end":159,"column_start":2,"column_end":5}},{"value":"/ let bb = bitbox![0; 5];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86944,"byte_end":86971,"line_start":160,"line_end":160,"column_start":2,"column_end":29}},{"value":"/ let addr = bb.as_raw_slice().as_ptr();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":86973,"byte_end":87015,"line_start":161,"line_end":161,"column_start":2,"column_end":44}},{"value":"/ let boxed = bb.into_boxed_slice();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87017,"byte_end":87055,"line_start":162,"line_end":162,"column_start":2,"column_end":40}},{"value":"/ assert_eq!(boxed[..], [0][..]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87057,"byte_end":87092,"line_start":163,"line_end":163,"column_start":2,"column_end":37}},{"value":"/ assert_eq!(addr, boxed.as_ptr());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87094,"byte_end":87131,"line_start":164,"line_end":164,"column_start":2,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87133,"byte_end":87140,"line_start":165,"line_end":165,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":88235,"byte_end":88246,"line_start":203,"line_end":203,"column_start":9,"column_end":20},"name":"into_bitvec","qualname":"<BitBox<T, O>>::into_bitvec","value":"pub fn into_bitvec(Self) -> BitVec<T, O>","parent":null,"children":[],"decl_id":null,"docs":" Converts the bit-box into a bit-vector.","sig":null,"attributes":[{"value":"/ Converts the bit-box into a bit-vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87295,"byte_end":87338,"line_start":172,"line_end":172,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87340,"byte_end":87343,"line_start":173,"line_end":173,"column_start":2,"column_end":5}},{"value":"/ This uses the Rust allocator API, and does not guarantee whether or not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87345,"byte_end":87420,"line_start":174,"line_end":174,"column_start":2,"column_end":77}},{"value":"/ a reällocation occurs internally.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87422,"byte_end":87460,"line_start":175,"line_end":175,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87462,"byte_end":87465,"line_start":176,"line_end":176,"column_start":2,"column_end":5}},{"value":"/ The resulting bit-vector can be converted back into a bit-box via","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87467,"byte_end":87536,"line_start":177,"line_end":177,"column_start":2,"column_end":71}},{"value":"/ [`BitBox::into_boxed_bitslice`][0].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87538,"byte_end":87577,"line_start":178,"line_end":178,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87579,"byte_end":87582,"line_start":179,"line_end":179,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87584,"byte_end":87599,"line_start":180,"line_end":180,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87601,"byte_end":87604,"line_start":181,"line_end":181,"column_start":2,"column_end":5}},{"value":"/ [`slice::into_vec`](https://doc.rust-lang.org/std/primitive.slice.html#method.into_vec)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87606,"byte_end":87697,"line_start":182,"line_end":182,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87699,"byte_end":87702,"line_start":183,"line_end":183,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87704,"byte_end":87726,"line_start":184,"line_end":184,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87728,"byte_end":87731,"line_start":185,"line_end":185,"column_start":2,"column_end":5}},{"value":"/ The original function is implemented in an `impl<T> [T]` block, despite","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87733,"byte_end":87808,"line_start":186,"line_end":186,"column_start":2,"column_end":77}},{"value":"/ taking a `Box<[T]>` receiver. Since `BitBox` cannot be used as an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87810,"byte_end":87879,"line_start":187,"line_end":187,"column_start":2,"column_end":71}},{"value":"/ explicit receiver outside its own `impl` blocks, the method is relocated","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87881,"byte_end":87957,"line_start":188,"line_end":188,"column_start":2,"column_end":78}},{"value":"/ here.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87959,"byte_end":87968,"line_start":189,"line_end":189,"column_start":2,"column_end":11}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87970,"byte_end":87973,"line_start":190,"line_end":190,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87975,"byte_end":87990,"line_start":191,"line_end":191,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87992,"byte_end":87995,"line_start":192,"line_end":192,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":87997,"byte_end":88008,"line_start":193,"line_end":193,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":88010,"byte_end":88037,"line_start":194,"line_end":194,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":88039,"byte_end":88042,"line_start":195,"line_end":195,"column_start":2,"column_end":5}},{"value":"/ let bb = bitbox![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":88044,"byte_end":88080,"line_start":196,"line_end":196,"column_start":2,"column_end":38}},{"value":"/ let bv = bb.into_bitvec();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":88082,"byte_end":88112,"line_start":197,"line_end":197,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":88114,"byte_end":88117,"line_start":198,"line_end":198,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(bv, bitvec![0, 1, 0, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":88119,"byte_end":88162,"line_start":199,"line_end":199,"column_start":2,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":88164,"byte_end":88171,"line_start":200,"line_end":200,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":88173,"byte_end":88176,"line_start":201,"line_end":201,"column_start":2,"column_end":5}},{"value":"/ [0]: crate::vec::BitVec::into_boxed_bitslice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":88178,"byte_end":88226,"line_start":202,"line_end":202,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":89016,"byte_end":89027,"line_start":224,"line_end":224,"column_start":9,"column_end":20},"name":"as_bitslice","qualname":"<BitBox<T, O>>::as_bitslice","value":"pub fn as_bitslice(&Self) -> &BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":" Explicitly views the bit-box as a bit-slice.\n","sig":null,"attributes":[{"value":"/ Explicitly views the bit-box as a bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":88959,"byte_end":89007,"line_start":223,"line_end":223,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":89172,"byte_end":89187,"line_start":229,"line_end":229,"column_start":9,"column_end":24},"name":"as_mut_bitslice","qualname":"<BitBox<T, O>>::as_mut_bitslice","value":"pub fn as_mut_bitslice(&mut Self) -> &mut BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":" Explicitly views the bit-box as a mutable bit-slice.\n","sig":null,"attributes":[{"value":"/ Explicitly views the bit-box as a mutable bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":89107,"byte_end":89163,"line_start":228,"line_end":228,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":89497,"byte_end":89509,"line_start":237,"line_end":237,"column_start":9,"column_end":21},"name":"as_raw_slice","qualname":"<BitBox<T, O>>::as_raw_slice","value":"pub fn as_raw_slice(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Views the bit-box as a slice of its underlying memory elements.","sig":null,"attributes":[{"value":"/ Views the bit-box as a slice of its underlying memory elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":89275,"byte_end":89342,"line_start":233,"line_end":233,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":89344,"byte_end":89347,"line_start":234,"line_end":234,"column_start":2,"column_end":5}},{"value":"/ Because bit-boxes uniquely own their buffer, they can safely view the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":89349,"byte_end":89422,"line_start":235,"line_end":235,"column_start":2,"column_end":75}},{"value":"/ underlying buffer without dealing with contending neighbors.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":89424,"byte_end":89488,"line_start":236,"line_end":236,"column_start":2,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":89893,"byte_end":89909,"line_start":247,"line_end":247,"column_start":9,"column_end":25},"name":"as_raw_mut_slice","qualname":"<BitBox<T, O>>::as_raw_mut_slice","value":"pub fn as_raw_mut_slice(&mut Self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Views the bit-box as a mutable slice of its underlying memory elements.","sig":null,"attributes":[{"value":"/ Views the bit-box as a mutable slice of its underlying memory elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":89663,"byte_end":89738,"line_start":243,"line_end":243,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":89740,"byte_end":89743,"line_start":244,"line_end":244,"column_start":2,"column_end":5}},{"value":"/ Because bit-boxes uniquely own their buffer, they can safely view the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":89745,"byte_end":89818,"line_start":245,"line_end":245,"column_start":2,"column_end":75}},{"value":"/ underlying buffer without dealing with contending neighbors.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":89820,"byte_end":89884,"line_start":246,"line_end":246,"column_start":2,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":91428,"byte_end":91446,"line_start":284,"line_end":284,"column_start":9,"column_end":27},"name":"fill_uninitialized","qualname":"<BitBox<T, O>>::fill_uninitialized","value":"pub fn fill_uninitialized(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the unused bits outside the `BitBox` buffer to a fixed value.","sig":null,"attributes":[{"value":"/ Sets the unused bits outside the `BitBox` buffer to a fixed value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90073,"byte_end":90143,"line_start":253,"line_end":253,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90145,"byte_end":90148,"line_start":254,"line_end":254,"column_start":2,"column_end":5}},{"value":"/ This method modifies all bits that the allocated buffer owns but which","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90150,"byte_end":90224,"line_start":255,"line_end":255,"column_start":2,"column_end":76}},{"value":"/ are outside the `self.as_bitslice()` view. `bitvec` guarantees that all","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90226,"byte_end":90301,"line_start":256,"line_end":256,"column_start":2,"column_end":77}},{"value":"/ owned bits are initialized to *some* value, but does not guarantee","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90303,"byte_end":90373,"line_start":257,"line_end":257,"column_start":2,"column_end":72}},{"value":"/ *which* value. This method can be used to make all such unused bits have","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90375,"byte_end":90451,"line_start":258,"line_end":258,"column_start":2,"column_end":78}},{"value":"/ a known value after the call, so that viewing the underlying memory","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90453,"byte_end":90524,"line_start":259,"line_end":259,"column_start":2,"column_end":73}},{"value":"/ directly has consistent results.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90526,"byte_end":90562,"line_start":260,"line_end":260,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90564,"byte_end":90567,"line_start":261,"line_end":261,"column_start":2,"column_end":5}},{"value":"/ Note that the crate implementation guarantees that all bits owned by its","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90569,"byte_end":90645,"line_start":262,"line_end":262,"column_start":2,"column_end":78}},{"value":"/ handles are stably initialized according to the language and compiler","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90647,"byte_end":90720,"line_start":263,"line_end":263,"column_start":2,"column_end":75}},{"value":"/ rules! `bitvec` will never cause UB by using uninitialized memory.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90722,"byte_end":90792,"line_start":264,"line_end":264,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90794,"byte_end":90797,"line_start":265,"line_end":265,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90799,"byte_end":90814,"line_start":266,"line_end":266,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90816,"byte_end":90819,"line_start":267,"line_end":267,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90821,"byte_end":90832,"line_start":268,"line_end":268,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90834,"byte_end":90861,"line_start":269,"line_end":269,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90863,"byte_end":90866,"line_start":270,"line_end":270,"column_start":2,"column_end":5}},{"value":"/ let bits = 0b1011_0101u8.view_bits::<Msb0>();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90868,"byte_end":90917,"line_start":271,"line_end":271,"column_start":2,"column_end":51}},{"value":"/ let mut bb = BitBox::from_bitslice(&bits[2 .. 6]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90919,"byte_end":90973,"line_start":272,"line_end":272,"column_start":2,"column_end":56}},{"value":"/ assert_eq!(bb.count_ones(), 3);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":90975,"byte_end":91010,"line_start":273,"line_end":273,"column_start":2,"column_end":37}},{"value":"/ // Remember, the two bits on each edge are unspecified, and cannot be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":91012,"byte_end":91085,"line_start":274,"line_end":274,"column_start":2,"column_end":75}},{"value":"/ // observed! They must be masked away for the test to be meaningful.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":91087,"byte_end":91159,"line_start":275,"line_end":275,"column_start":2,"column_end":74}},{"value":"/ assert_eq!(bb.as_raw_slice()[0] & 0x3C, 0b00_1101_00u8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":91161,"byte_end":91221,"line_start":276,"line_end":276,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":91223,"byte_end":91226,"line_start":277,"line_end":277,"column_start":2,"column_end":5}},{"value":"/ bb.fill_uninitialized(false);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":91228,"byte_end":91261,"line_start":278,"line_end":278,"column_start":2,"column_end":35}},{"value":"/ assert_eq!(bb.as_raw_slice(), &[0b00_1101_00u8]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":91263,"byte_end":91316,"line_start":279,"line_end":279,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":91318,"byte_end":91321,"line_start":280,"line_end":280,"column_start":2,"column_end":5}},{"value":"/ bb.fill_uninitialized(true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":91323,"byte_end":91355,"line_start":281,"line_end":281,"column_start":2,"column_end":34}},{"value":"/ assert_eq!(bb.as_raw_slice(), &[0b11_1101_11u8]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":91357,"byte_end":91410,"line_start":282,"line_end":282,"column_start":2,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":91412,"byte_end":91419,"line_start":283,"line_end":283,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":93152,"byte_end":93163,"line_start":327,"line_end":327,"column_start":9,"column_end":20},"name":"force_align","qualname":"<BitBox<T, O>>::force_align","value":"pub fn force_align(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Ensures that the allocated buffer has no dead bits between the start of\n the buffer and the start of the live bit-slice.","sig":null,"attributes":[{"value":"/ Ensures that the allocated buffer has no dead bits between the start of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":91762,"byte_end":91837,"line_start":295,"line_end":295,"column_start":2,"column_end":77}},{"value":"/ the buffer and the start of the live bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":91839,"byte_end":91890,"line_start":296,"line_end":296,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":91892,"byte_end":91895,"line_start":297,"line_end":297,"column_start":2,"column_end":5}},{"value":"/ This is useful for ensuring a consistent memory layout in bit-boxes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":91897,"byte_end":91968,"line_start":298,"line_end":298,"column_start":2,"column_end":73}},{"value":"/ created by cloning an arbitrary bit-slice into the heap. As bit-slices","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":91970,"byte_end":92044,"line_start":299,"line_end":299,"column_start":2,"column_end":76}},{"value":"/ can begin and end anywhere in memory, the [`::from_bitslice()`] function","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92046,"byte_end":92122,"line_start":300,"line_end":300,"column_start":2,"column_end":78}},{"value":"/ does not attempt to normalize them and only does a fast element-wise","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92124,"byte_end":92196,"line_start":301,"line_end":301,"column_start":2,"column_end":74}},{"value":"/ copy when creating the bit-box.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92198,"byte_end":92233,"line_start":302,"line_end":302,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92235,"byte_end":92238,"line_start":303,"line_end":303,"column_start":2,"column_end":5}},{"value":"/ The value of dead bits that are in the allocation but not in the live","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92240,"byte_end":92313,"line_start":304,"line_end":304,"column_start":2,"column_end":75}},{"value":"/ region are *initialized*, but do not have a *specified* value. After","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92315,"byte_end":92387,"line_start":305,"line_end":305,"column_start":2,"column_end":74}},{"value":"/ calling this method, you should use [`.fill_uninitialized()`] to set the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92389,"byte_end":92465,"line_start":306,"line_end":306,"column_start":2,"column_end":78}},{"value":"/ excess bits in the buffer to a fixed value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92467,"byte_end":92514,"line_start":307,"line_end":307,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92516,"byte_end":92519,"line_start":308,"line_end":308,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92521,"byte_end":92536,"line_start":309,"line_end":309,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92538,"byte_end":92541,"line_start":310,"line_end":310,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92543,"byte_end":92554,"line_start":311,"line_end":311,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92556,"byte_end":92583,"line_start":312,"line_end":312,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92585,"byte_end":92588,"line_start":313,"line_end":313,"column_start":2,"column_end":5}},{"value":"/ let bits = &0b10_1101_01u8.view_bits::<Msb0>()[2 .. 6];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92590,"byte_end":92649,"line_start":314,"line_end":314,"column_start":2,"column_end":61}},{"value":"/ let mut bb = BitBox::from_bitslice(bits);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92651,"byte_end":92696,"line_start":315,"line_end":315,"column_start":2,"column_end":47}},{"value":"/ // Remember, the two bits on each edge are unspecified, and cannot be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92698,"byte_end":92771,"line_start":316,"line_end":316,"column_start":2,"column_end":75}},{"value":"/ // observed! They must be masked away for the test to be meaningful.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92773,"byte_end":92845,"line_start":317,"line_end":317,"column_start":2,"column_end":74}},{"value":"/ assert_eq!(bb.as_raw_slice()[0] & 0x3C, 0b00_1101_00u8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92847,"byte_end":92907,"line_start":318,"line_end":318,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92909,"byte_end":92912,"line_start":319,"line_end":319,"column_start":2,"column_end":5}},{"value":"/ bb.force_align();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92914,"byte_end":92935,"line_start":320,"line_end":320,"column_start":2,"column_end":23}},{"value":"/ bb.fill_uninitialized(false);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92937,"byte_end":92970,"line_start":321,"line_end":321,"column_start":2,"column_end":35}},{"value":"/ assert_eq!(bb.as_raw_slice(), &[0b1101_0000u8]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":92972,"byte_end":93024,"line_start":322,"line_end":322,"column_start":2,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":93026,"byte_end":93033,"line_start":323,"line_end":323,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":93035,"byte_end":93038,"line_start":324,"line_end":324,"column_start":2,"column_end":5}},{"value":"/ [`::from_bitslice()`]: Self::from_bitslice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":93040,"byte_end":93086,"line_start":325,"line_end":325,"column_start":2,"column_end":48}},{"value":"/ [`.fill_uninitialized()`]: Self::fill_uninitialized","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":93088,"byte_end":93143,"line_start":326,"line_end":326,"column_start":2,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":1110},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"domain","qualname":"::domain","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1126},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1135},{"krate":0,"index":1138},{"krate":0,"index":1141},{"krate":0,"index":1144},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1151},{"krate":0,"index":1154},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1164},{"krate":0,"index":1167},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1181},{"krate":0,"index":1184},{"krate":0,"index":1187},{"krate":0,"index":1190},{"krate":0,"index":1193},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1204},{"krate":0,"index":1207},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1217},{"krate":0,"index":1220},{"krate":0,"index":1223},{"krate":0,"index":1226},{"krate":0,"index":1238},{"krate":0,"index":1245},{"krate":0,"index":1251},{"krate":0,"index":1257},{"krate":0,"index":1261},{"krate":0,"index":1264},{"krate":0,"index":1276},{"krate":0,"index":1284},{"krate":0,"index":1296},{"krate":0,"index":1302},{"krate":0,"index":1308},{"krate":0,"index":1312},{"krate":0,"index":1318},{"krate":0,"index":1323},{"krate":0,"index":1327},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":5497},{"krate":0,"index":5502},{"krate":0,"index":5507},{"krate":0,"index":5512},{"krate":0,"index":5517},{"krate":0,"index":1334},{"krate":0,"index":1345},{"krate":0,"index":1360},{"krate":0,"index":1369},{"krate":0,"index":1375},{"krate":0,"index":1380},{"krate":0,"index":1386},{"krate":0,"index":1393}],"decl_id":null,"docs":"# Memory Region Description","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1231},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":117688,"byte_end":117695,"line_start":74,"line_end":74,"column_start":2,"column_end":9},"name":"Enclave","qualname":"::domain::BitDomain::Enclave","value":"BitDomain::Enclave(Reference)","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" Indicates that a bit-slice’s contents are entirely in the interior\n indices of a single memory element.","sig":null,"attributes":[{"value":"/ Indicates that a bit-slice’s contents are entirely in the interior","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":117495,"byte_end":117567,"line_start":70,"line_end":70,"column_start":2,"column_end":72}},{"value":"/ indices of a single memory element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":117569,"byte_end":117608,"line_start":71,"line_end":71,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":117610,"byte_end":117613,"line_start":72,"line_end":72,"column_start":2,"column_end":5}},{"value":"/ The contained value is always the bit-slice that created this view.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":117615,"byte_end":117686,"line_start":73,"line_end":73,"column_start":2,"column_end":73}}]},{"kind":"StructVariant","id":{"krate":0,"index":1234},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":118092,"byte_end":118098,"line_start":81,"line_end":81,"column_start":2,"column_end":8},"name":"Region","qualname":"::domain::BitDomain::Region","value":"BitDomain::Region { head, body, tail }","parent":{"krate":0,"index":1226},"children":[],"decl_id":null,"docs":" Indicates that a bit-slice’s contents touch an element edge.","sig":null,"attributes":[{"value":"/ Indicates that a bit-slice’s contents touch an element edge.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":117732,"byte_end":117798,"line_start":75,"line_end":75,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":117800,"byte_end":117803,"line_start":76,"line_end":76,"column_start":2,"column_end":5}},{"value":"/ This splits the bit-slice into three partitions, each of which may be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":117805,"byte_end":117878,"line_start":77,"line_end":77,"column_start":2,"column_end":75}},{"value":"/ empty: two partially-occupied edge elements, with their original type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":117880,"byte_end":117953,"line_start":78,"line_end":78,"column_start":2,"column_end":75}},{"value":"/ status, and one interior span, which is known to not have any other","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":117955,"byte_end":118026,"line_start":79,"line_end":79,"column_start":2,"column_end":73}},{"value":"/ aliases derived from the bit-slice that created this view.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":118028,"byte_end":118090,"line_start":80,"line_end":80,"column_start":2,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":1226},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":117290,"byte_end":117299,"line_start":62,"line_end":62,"column_start":10,"column_end":19},"name":"BitDomain","qualname":"::domain::BitDomain","value":"pub enum BitDomain<'a, M = Const, T = usize, O = Lsb0> where M: Mutability,\n    T: 'a + BitStore, O: BitOrder, Address<M, BitSlice<T, O>>: Referential,\n    Address<M, BitSlice<T::Unalias, O>>: Referential {\n    Enclave(Reference),\n    Region {\n            head: Reference,\n            body: Reference,\n            tail: Reference,\n        },\n}","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1234}],"decl_id":null,"docs":"# Bit-Slice Partitioning","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":119826,"byte_end":119833,"line_start":126,"line_end":126,"column_start":9,"column_end":16},"name":"enclave","qualname":"<BitDomain>::enclave","value":"pub fn enclave(Self) -> Option<Reference>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to unpack the bit-domain as an [`Enclave`] variant. This is\n just a shorthand for explicit destructuring.","sig":null,"attributes":[{"value":"/ Attempts to unpack the bit-domain as an [`Enclave`] variant. This is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":119658,"byte_end":119730,"line_start":122,"line_end":122,"column_start":2,"column_end":74}},{"value":"/ just a shorthand for explicit destructuring.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":119732,"byte_end":119780,"line_start":123,"line_end":123,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":119782,"byte_end":119785,"line_start":124,"line_end":124,"column_start":2,"column_end":5}},{"value":"/ [`Enclave`]: Self::Enclave","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":119787,"byte_end":119817,"line_start":125,"line_end":125,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":120126,"byte_end":120132,"line_start":137,"line_end":137,"column_start":9,"column_end":15},"name":"region","qualname":"<BitDomain>::region","value":"pub fn region(Self) -> Option<(Reference, Reference, Reference)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to unpack the bit-domain as a [`Region`] variant. This is just\n a shorthand for explicit destructuring.","sig":null,"attributes":[{"value":"/ Attempts to unpack the bit-domain as a [`Region`] variant. This is just","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":119962,"byte_end":120037,"line_start":133,"line_end":133,"column_start":2,"column_end":77}},{"value":"/ a shorthand for explicit destructuring.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":120039,"byte_end":120082,"line_start":134,"line_end":134,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":120084,"byte_end":120087,"line_start":135,"line_end":135,"column_start":2,"column_end":5}},{"value":"/ [`Region`]: Self::Region","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":120089,"byte_end":120117,"line_start":136,"line_end":136,"column_start":2,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1269},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":122411,"byte_end":122418,"line_start":235,"line_end":235,"column_start":2,"column_end":9},"name":"Enclave","qualname":"::domain::Domain::Enclave","value":"Domain::Enclave(PartialElement)","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":" Indicates that a bit-slice’s contents are entirely in the interior\n indices of a single memory element.","sig":null,"attributes":[{"value":"/ Indicates that a bit-slice’s contents are entirely in the interior","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":122068,"byte_end":122140,"line_start":229,"line_end":229,"column_start":2,"column_end":72}},{"value":"/ indices of a single memory element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":122142,"byte_end":122181,"line_start":230,"line_end":230,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":122183,"byte_end":122186,"line_start":231,"line_end":231,"column_start":2,"column_end":5}},{"value":"/ The contained reference is only able to observe the bits governed by the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":122188,"byte_end":122264,"line_start":232,"line_end":232,"column_start":2,"column_end":78}},{"value":"/ generating bit-slice. Other handles to the element may exist, and may","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":122266,"byte_end":122339,"line_start":233,"line_end":233,"column_start":2,"column_end":75}},{"value":"/ write to bits outside the range that this reference can observe.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":122341,"byte_end":122409,"line_start":234,"line_end":234,"column_start":2,"column_end":70}}]},{"kind":"StructVariant","id":{"krate":0,"index":1272},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":122810,"byte_end":122816,"line_start":242,"line_end":242,"column_start":2,"column_end":8},"name":"Region","qualname":"::domain::Domain::Region","value":"Domain::Region { head, body, tail }","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":" Indicates that a bit-slice’s contents touch an element edge.","sig":null,"attributes":[{"value":"/ Indicates that a bit-slice’s contents touch an element edge.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":122450,"byte_end":122516,"line_start":236,"line_end":236,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":122518,"byte_end":122521,"line_start":237,"line_end":237,"column_start":2,"column_end":5}},{"value":"/ This splits the bit-slice into three partitions, each of which may be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":122523,"byte_end":122596,"line_start":238,"line_end":238,"column_start":2,"column_end":75}},{"value":"/ empty: two partially-occupied edge elements, with their original type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":122598,"byte_end":122671,"line_start":239,"line_end":239,"column_start":2,"column_end":75}},{"value":"/ status, and one interior span, which is known not to have any other","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":122673,"byte_end":122744,"line_start":240,"line_end":240,"column_start":2,"column_end":73}},{"value":"/ aliases derived from the bit-slice that created this view.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":122746,"byte_end":122808,"line_start":241,"line_end":241,"column_start":2,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":1264},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":121885,"byte_end":121891,"line_start":221,"line_end":221,"column_start":10,"column_end":16},"name":"Domain","qualname":"::domain::Domain","value":"pub enum Domain<'a, M = Const, T = usize, O = Lsb0> where M: Mutability,\n    T: 'a + BitStore, O: BitOrder, Address<M, T>: Referential,\n    Address<M, [T::Unalias]>: SliceReferential {\n    Enclave(PartialElement),\n    Region {\n            head: Option<PartialElement>,\n            body: Reference,\n            tail: Option<PartialElement>,\n        },\n}","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1272}],"decl_id":null,"docs":"# Bit-Slice Element Partitioning","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":123910,"byte_end":123917,"line_start":272,"line_end":272,"column_start":9,"column_end":16},"name":"enclave","qualname":"<Domain>::enclave","value":"pub fn enclave(Self) -> Option<PartialElement>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to unpack the bit-domain as an [`Enclave`] variant. This is\n just a shorthand for explicit destructuring.","sig":null,"attributes":[{"value":"/ Attempts to unpack the bit-domain as an [`Enclave`] variant. This is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":123742,"byte_end":123814,"line_start":268,"line_end":268,"column_start":2,"column_end":74}},{"value":"/ just a shorthand for explicit destructuring.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":123816,"byte_end":123864,"line_start":269,"line_end":269,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":123866,"byte_end":123869,"line_start":270,"line_end":270,"column_start":2,"column_end":5}},{"value":"/ [`Enclave`]: Self::Enclave","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":123871,"byte_end":123901,"line_start":271,"line_end":271,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":124205,"byte_end":124211,"line_start":283,"line_end":283,"column_start":9,"column_end":15},"name":"region","qualname":"<Domain>::region","value":"pub fn region(Self)\n-> Option<(Option<PartialElement>, Reference, Option<PartialElement>)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to unpack the bit-domain as a [`Region`] variant. This is just\n a shorthand for explicit destructuring.","sig":null,"attributes":[{"value":"/ Attempts to unpack the bit-domain as a [`Region`] variant. This is just","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":124041,"byte_end":124116,"line_start":279,"line_end":279,"column_start":2,"column_end":77}},{"value":"/ a shorthand for explicit destructuring.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":124118,"byte_end":124161,"line_start":280,"line_end":280,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":124163,"byte_end":124166,"line_start":281,"line_end":281,"column_start":2,"column_end":5}},{"value":"/ [`Region`]: Self::Region","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":124168,"byte_end":124196,"line_start":282,"line_end":282,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":124640,"byte_end":124655,"line_start":300,"line_end":300,"column_start":9,"column_end":24},"name":"into_bit_domain","qualname":"<Domain>::into_bit_domain","value":"pub fn into_bit_domain(Self) -> BitDomain where\nAddress<M, BitSlice<T, O>>: Referential,\nAddress<M, BitSlice<T::Unalias, O>>: Referential, Reference: Default,\nReference: TryFrom<Reference>","parent":null,"children":[],"decl_id":null,"docs":" Converts the element-wise `Domain` into the equivalent `BitDomain`.","sig":null,"attributes":[{"value":"/ Converts the element-wise `Domain` into the equivalent `BitDomain`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":124458,"byte_end":124529,"line_start":296,"line_end":296,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":124531,"byte_end":124534,"line_start":297,"line_end":297,"column_start":2,"column_end":5}},{"value":"/ This transform replaces each memory reference with an equivalent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":124536,"byte_end":124604,"line_start":298,"line_end":298,"column_start":2,"column_end":70}},{"value":"/ `BitSlice` reference.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":124606,"byte_end":124631,"line_start":299,"line_end":299,"column_start":2,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1334},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":132691,"byte_end":132705,"line_start":654,"line_end":654,"column_start":12,"column_end":26},"name":"PartialElement","qualname":"::domain::PartialElement","value":"PartialElement {  }","parent":null,"children":[{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344}],"decl_id":null,"docs":"# Partially-Owned Memory Element","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":134512,"byte_end":134522,"line_start":720,"line_end":720,"column_start":9,"column_end":19},"name":"load_value","qualname":"<PartialElement>::load_value","value":"pub fn load_value(&Self) -> T::Mem","parent":null,"children":[],"decl_id":null,"docs":" Fetches the value stored through `self` and masks away extra bits.","sig":null,"attributes":[{"value":"/ Fetches the value stored through `self` and masks away extra bits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":134299,"byte_end":134369,"line_start":714,"line_end":714,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":134371,"byte_end":134374,"line_start":715,"line_end":715,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":134376,"byte_end":134390,"line_start":716,"line_end":716,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":134392,"byte_end":134395,"line_start":717,"line_end":717,"column_start":2,"column_end":5}},{"value":"/ A bit-map containing any bits set to `1` in the governed bits. All other","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":134397,"byte_end":134473,"line_start":718,"line_end":718,"column_start":2,"column_end":78}},{"value":"/ bits are cleared to `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":134475,"byte_end":134503,"line_start":719,"line_end":719,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":134751,"byte_end":134755,"line_start":729,"line_end":729,"column_start":9,"column_end":13},"name":"head","qualname":"<PartialElement>::head","value":"pub fn head(&Self) -> BitIdx<T::Mem>","parent":null,"children":[],"decl_id":null,"docs":" Gets the starting index of the live bits in the element.\n","sig":null,"attributes":[{"value":"/ Gets the starting index of the live bits in the element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":134650,"byte_end":134710,"line_start":727,"line_end":727,"column_start":2,"column_end":62}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":134712,"byte_end":134742,"line_start":728,"line_end":728,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":134899,"byte_end":134903,"line_start":735,"line_end":735,"column_start":9,"column_end":13},"name":"tail","qualname":"<PartialElement>::tail","value":"pub fn tail(&Self) -> BitEnd<T::Mem>","parent":null,"children":[],"decl_id":null,"docs":" Gets the ending index of the live bits in the element.\n","sig":null,"attributes":[{"value":"/ Gets the ending index of the live bits in the element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":134800,"byte_end":134858,"line_start":733,"line_end":733,"column_start":2,"column_end":60}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":134860,"byte_end":134890,"line_start":734,"line_end":734,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":135104,"byte_end":135110,"line_start":742,"line_end":742,"column_start":9,"column_end":15},"name":"bounds","qualname":"<PartialElement>::bounds","value":"pub fn bounds(&Self) -> (BitIdx<T::Mem>, BitEnd<T::Mem>)","parent":null,"children":[],"decl_id":null,"docs":" Gets the semantic head and tail indices that constrain which bits of the\n referent element may be accessed.\n","sig":null,"attributes":[{"value":"/ Gets the semantic head and tail indices that constrain which bits of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":134948,"byte_end":135024,"line_start":739,"line_end":739,"column_start":2,"column_end":78}},{"value":"/ referent element may be accessed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":135026,"byte_end":135063,"line_start":740,"line_end":740,"column_start":2,"column_end":39}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":135065,"byte_end":135095,"line_start":741,"line_end":741,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":135274,"byte_end":135278,"line_start":748,"line_end":748,"column_start":9,"column_end":13},"name":"mask","qualname":"<PartialElement>::mask","value":"pub fn mask(&Self) -> BitMask<T::Mem>","parent":null,"children":[],"decl_id":null,"docs":" Gets the bit-mask over all accessible bits.\n","sig":null,"attributes":[{"value":"/ Gets the bit-mask over all accessible bits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":135186,"byte_end":135233,"line_start":746,"line_end":746,"column_start":2,"column_end":49}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":135235,"byte_end":135265,"line_start":747,"line_end":747,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":135406,"byte_end":135419,"line_start":753,"line_end":753,"column_start":9,"column_end":22},"name":"into_bitslice","qualname":"<PartialElement>::into_bitslice","value":"pub fn into_bitslice(Self) -> Reference where\nAddress<M, BitSlice<T, O>>: Referential","parent":null,"children":[],"decl_id":null,"docs":" Converts the partial element into a bit-slice over its governed bits.\n","sig":null,"attributes":[{"value":"/ Converts the partial element into a bit-slice over its governed bits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":135324,"byte_end":135397,"line_start":752,"line_end":752,"column_start":2,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136258,"byte_end":136269,"line_start":785,"line_end":785,"column_start":9,"column_end":20},"name":"store_value","qualname":"<PartialElement>::store_value","value":"pub fn store_value(&mut Self, T::Mem) -> T::Mem","parent":null,"children":[],"decl_id":null,"docs":" Stores a value through `self` after masking away extra bits.","sig":null,"attributes":[{"value":"/ Stores a value through `self` after masking away extra bits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":135796,"byte_end":135860,"line_start":772,"line_end":772,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":135862,"byte_end":135865,"line_start":773,"line_end":773,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":135867,"byte_end":135884,"line_start":774,"line_end":774,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":135886,"byte_end":135889,"line_start":775,"line_end":775,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":135891,"byte_end":135908,"line_start":776,"line_end":776,"column_start":2,"column_end":19}},{"value":"/ - `value`: A bit-map which will be written into the governed bits. This","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":135910,"byte_end":135985,"line_start":777,"line_end":777,"column_start":2,"column_end":77}},{"value":"/   is a bit-map store, not an integer store; the value will not be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":135987,"byte_end":136056,"line_start":778,"line_end":778,"column_start":2,"column_end":71}},{"value":"/   shifted into position and will only be masked directly against the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136058,"byte_end":136130,"line_start":779,"line_end":779,"column_start":2,"column_end":74}},{"value":"/   bits that this partial-element governs.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136132,"byte_end":136177,"line_start":780,"line_end":780,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136179,"byte_end":136182,"line_start":781,"line_end":781,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136184,"byte_end":136198,"line_start":782,"line_end":782,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136200,"byte_end":136203,"line_start":783,"line_end":783,"column_start":2,"column_end":5}},{"value":"/ The previous value of the governed bits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136205,"byte_end":136249,"line_start":784,"line_end":784,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136629,"byte_end":136635,"line_start":798,"line_end":798,"column_start":9,"column_end":15},"name":"invert","qualname":"<PartialElement>::invert","value":"pub fn invert(&mut Self) -> T::Mem","parent":null,"children":[],"decl_id":null,"docs":" Inverts the value of each bit governed by the partial-element.","sig":null,"attributes":[{"value":"/ Inverts the value of each bit governed by the partial-element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136450,"byte_end":136516,"line_start":792,"line_end":792,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136518,"byte_end":136521,"line_start":793,"line_end":793,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136523,"byte_end":136537,"line_start":794,"line_end":794,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136539,"byte_end":136542,"line_start":795,"line_end":795,"column_start":2,"column_end":5}},{"value":"/ The previous value of the governed bits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136544,"byte_end":136588,"line_start":796,"line_end":796,"column_start":2,"column_end":46}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136590,"byte_end":136620,"line_start":797,"line_end":797,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136900,"byte_end":136905,"line_start":808,"line_end":808,"column_start":9,"column_end":14},"name":"clear","qualname":"<PartialElement>::clear","value":"pub fn clear(&mut Self) -> T::Mem","parent":null,"children":[],"decl_id":null,"docs":" Clears all bits governed by the partial-element to `0`.","sig":null,"attributes":[{"value":"/ Clears all bits governed by the partial-element to `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136728,"byte_end":136787,"line_start":802,"line_end":802,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136789,"byte_end":136792,"line_start":803,"line_end":803,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136794,"byte_end":136808,"line_start":804,"line_end":804,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136810,"byte_end":136813,"line_start":805,"line_end":805,"column_start":2,"column_end":5}},{"value":"/ The previous value of the governed bits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136815,"byte_end":136859,"line_start":806,"line_end":806,"column_start":2,"column_end":46}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136861,"byte_end":136891,"line_start":807,"line_end":807,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":137167,"byte_end":137170,"line_start":818,"line_end":818,"column_start":9,"column_end":12},"name":"set","qualname":"<PartialElement>::set","value":"pub fn set(&mut Self) -> T::Mem","parent":null,"children":[],"decl_id":null,"docs":" Sets all bits governed by the partial-element to `1`.","sig":null,"attributes":[{"value":"/ Sets all bits governed by the partial-element to `1`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":136997,"byte_end":137054,"line_start":812,"line_end":812,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":137056,"byte_end":137059,"line_start":813,"line_end":813,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":137061,"byte_end":137075,"line_start":814,"line_end":814,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":137077,"byte_end":137080,"line_start":815,"line_end":815,"column_start":2,"column_end":5}},{"value":"/ The previous value of the governed bits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":137082,"byte_end":137126,"line_start":816,"line_end":816,"column_start":2,"column_end":46}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":137128,"byte_end":137158,"line_start":817,"line_end":817,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":137691,"byte_end":137710,"line_start":837,"line_end":837,"column_start":9,"column_end":28},"name":"store_value_aliased","qualname":"<PartialElement>::store_value_aliased","value":"pub fn store_value_aliased(&Self, T::Mem) -> T::Mem","parent":null,"children":[],"decl_id":null,"docs":" Performs a store operation on a partial-element whose bits might be\n observed by another handle.\n","sig":null,"attributes":[{"value":"/ Performs a store operation on a partial-element whose bits might be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":137578,"byte_end":137649,"line_start":835,"line_end":835,"column_start":2,"column_end":73}},{"value":"/ observed by another handle.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":137651,"byte_end":137682,"line_start":836,"line_end":836,"column_start":2,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":1396},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"field","qualname":"::field","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","parent":null,"children":[{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1401},{"krate":0,"index":1404},{"krate":0,"index":1407},{"krate":0,"index":1410},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1424},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1431},{"krate":0,"index":1434},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1447},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1460},{"krate":0,"index":1463},{"krate":0,"index":1516},{"krate":0,"index":1529},{"krate":0,"index":1541},{"krate":0,"index":1553},{"krate":0,"index":1564},{"krate":0,"index":1575},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1596},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1605}],"decl_id":null,"docs":"# Bit-Field Memory Slots","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1516},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":144496,"byte_end":144504,"line_start":43,"line_end":43,"column_start":11,"column_end":19},"name":"BitField","qualname":"::field::BitField","value":"BitField","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1519},{"krate":0,"index":1521},{"krate":0,"index":1523},{"krate":0,"index":1525},{"krate":0,"index":1527}],"decl_id":null,"docs":"# C-Style Bit-Field Access","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":144599,"byte_end":144603,"line_start":46,"line_end":46,"column_start":5,"column_end":9},"name":"load","qualname":"::field::BitField::load","value":"pub fn load<I>(&Self) -> I where I: Integral","parent":{"krate":0,"index":1516},"children":[],"decl_id":null,"docs":"# Integer Loading","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":144508,"byte_end":144538,"line_start":44,"line_end":44,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":145015,"byte_end":145020,"line_start":64,"line_end":64,"column_start":5,"column_end":10},"name":"store","qualname":"::field::BitField::store","value":"pub fn store<I>(&mut Self, I) where I: Integral","parent":{"krate":0,"index":1516},"children":[],"decl_id":null,"docs":"# Integer Storing","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":144923,"byte_end":144953,"line_start":62,"line_end":62,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":145418,"byte_end":145425,"line_start":81,"line_end":81,"column_start":5,"column_end":12},"name":"load_le","qualname":"::field::BitField::load_le","value":"pub fn load_le<I>(&Self) -> I where I: Integral","parent":{"krate":0,"index":1516},"children":[],"decl_id":null,"docs":"# Little-Endian Integer Loading","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":145525,"byte_end":145532,"line_start":85,"line_end":85,"column_start":5,"column_end":12},"name":"load_be","qualname":"::field::BitField::load_be","value":"pub fn load_be<I>(&Self) -> I where I: Integral","parent":{"krate":0,"index":1516},"children":[],"decl_id":null,"docs":"# Big-Endian Integer Loading","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":145633,"byte_end":145641,"line_start":89,"line_end":89,"column_start":5,"column_end":13},"name":"store_le","qualname":"::field::BitField::store_le","value":"pub fn store_le<I>(&mut Self, I) where I: Integral","parent":{"krate":0,"index":1516},"children":[],"decl_id":null,"docs":"# Little-Endian Integer Storing","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":145751,"byte_end":145759,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"store_be","qualname":"::field::BitField::store_be","value":"pub fn store_be<I>(&mut Self, I) where I: Integral","parent":{"krate":0,"index":1516},"children":[],"decl_id":null,"docs":"# Big-Endian Integer Storing","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1608},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"index","qualname":"::index","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","parent":null,"children":[{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1623},{"krate":0,"index":1626},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1633},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1643},{"krate":0,"index":1646},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1654},{"krate":0,"index":1657},{"krate":0,"index":5522},{"krate":0,"index":5526},{"krate":0,"index":5529},{"krate":0,"index":5531},{"krate":0,"index":5534},{"krate":0,"index":5536},{"krate":0,"index":5539},{"krate":0,"index":5543},{"krate":0,"index":5546},{"krate":0,"index":5548},{"krate":0,"index":5552},{"krate":0,"index":1660},{"krate":0,"index":1682},{"krate":0,"index":1685},{"krate":0,"index":1688},{"krate":0,"index":5555},{"krate":0,"index":5559},{"krate":0,"index":5562},{"krate":0,"index":5564},{"krate":0,"index":5567},{"krate":0,"index":5569},{"krate":0,"index":5572},{"krate":0,"index":5576},{"krate":0,"index":5579},{"krate":0,"index":5581},{"krate":0,"index":5585},{"krate":0,"index":1691},{"krate":0,"index":1695},{"krate":0,"index":1698},{"krate":0,"index":1701},{"krate":0,"index":5588},{"krate":0,"index":5592},{"krate":0,"index":5595},{"krate":0,"index":5597},{"krate":0,"index":5600},{"krate":0,"index":5602},{"krate":0,"index":5605},{"krate":0,"index":5609},{"krate":0,"index":5612},{"krate":0,"index":5614},{"krate":0,"index":5618},{"krate":0,"index":1703},{"krate":0,"index":1714},{"krate":0,"index":1717},{"krate":0,"index":1720},{"krate":0,"index":5621},{"krate":0,"index":5625},{"krate":0,"index":5628},{"krate":0,"index":5630},{"krate":0,"index":5633},{"krate":0,"index":5635},{"krate":0,"index":5638},{"krate":0,"index":5642},{"krate":0,"index":5645},{"krate":0,"index":5647},{"krate":0,"index":5651},{"krate":0,"index":1723},{"krate":0,"index":1735},{"krate":0,"index":1738},{"krate":0,"index":1741},{"krate":0,"index":5654},{"krate":0,"index":5657},{"krate":0,"index":5660},{"krate":0,"index":5662},{"krate":0,"index":5665},{"krate":0,"index":5667},{"krate":0,"index":5670},{"krate":0,"index":5674},{"krate":0,"index":5677},{"krate":0,"index":5679},{"krate":0,"index":5683},{"krate":0,"index":1744},{"krate":0,"index":1752},{"krate":0,"index":1755},{"krate":0,"index":1758},{"krate":0,"index":5686},{"krate":0,"index":5689},{"krate":0,"index":5692},{"krate":0,"index":5694},{"krate":0,"index":5697},{"krate":0,"index":5699},{"krate":0,"index":5702},{"krate":0,"index":5706},{"krate":0,"index":5709},{"krate":0,"index":5711},{"krate":0,"index":5715},{"krate":0,"index":1761},{"krate":0,"index":1770},{"krate":0,"index":1773},{"krate":0,"index":1776},{"krate":0,"index":1779},{"krate":0,"index":1783},{"krate":0,"index":1787},{"krate":0,"index":1791}],"decl_id":null,"docs":"# Bit Indices","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5522},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":168392,"byte_end":168398,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"name":"BitIdx","qualname":"::index::BitIdx","value":"BitIdx {  }","parent":null,"children":[{"krate":0,"index":5524},{"krate":0,"index":5525}],"decl_id":null,"docs":"# Semantic Bit Index","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":168242,"byte_end":168262,"line_start":32,"line_end":32,"column_start":1,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":1662},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":168689,"byte_end":168692,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"MAX","qualname":"::index::BitIdx::<R>::MAX","value":"Self","parent":{"krate":0,"index":1660},"children":[],"decl_id":null,"docs":" The inclusive maximum index within an `R` element.\n","sig":null,"attributes":[{"value":"/ The inclusive maximum index within an `R` element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":168623,"byte_end":168677,"line_start":47,"line_end":47,"column_start":2,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":1663},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":168815,"byte_end":168818,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"MIN","qualname":"::index::BitIdx::<R>::MIN","value":"Self","parent":{"krate":0,"index":1660},"children":[],"decl_id":null,"docs":" The inclusive minimum index within an `R` element.\n","sig":null,"attributes":[{"value":"/ The inclusive minimum index within an `R` element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":168749,"byte_end":168803,"line_start":52,"line_end":52,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169253,"byte_end":169256,"line_start":69,"line_end":69,"column_start":9,"column_end":12},"name":"new","qualname":"<BitIdx<R>>::new","value":"pub fn new(u8) -> Result<Self, BitIdxError<R>>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a counter value as a known-good index into an `R` register.","sig":null,"attributes":[{"value":"/ Wraps a counter value as a known-good index into an `R` register.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":168870,"byte_end":168939,"line_start":58,"line_end":58,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":168941,"byte_end":168944,"line_start":59,"line_end":59,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":168946,"byte_end":168963,"line_start":60,"line_end":60,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":168965,"byte_end":168968,"line_start":61,"line_end":61,"column_start":2,"column_end":5}},{"value":"/ - `idx`: The counter value to mark as an index. This must be in the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":168970,"byte_end":169041,"line_start":62,"line_end":62,"column_start":2,"column_end":73}},{"value":"/   range `0 .. R::BITS`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169043,"byte_end":169070,"line_start":63,"line_end":63,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169072,"byte_end":169075,"line_start":64,"line_end":64,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169077,"byte_end":169091,"line_start":65,"line_end":65,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169093,"byte_end":169096,"line_start":66,"line_end":66,"column_start":2,"column_end":5}},{"value":"/ This returns `idx`, either marked as a valid `BitIdx` or an invalid","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169098,"byte_end":169169,"line_start":67,"line_end":67,"column_start":2,"column_end":73}},{"value":"/ `BitIdxError` by whether it is within the valid range `0 .. R::BITS`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169171,"byte_end":169244,"line_start":68,"line_end":68,"column_start":2,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169935,"byte_end":169948,"line_start":92,"line_end":92,"column_start":16,"column_end":29},"name":"new_unchecked","qualname":"<BitIdx<R>>::new_unchecked","value":"pub unsafe fn new_unchecked(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps a counter value as an assumed-good index into an `R` register.","sig":null,"attributes":[{"value":"/ Wraps a counter value as an assumed-good index into an `R` register.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169424,"byte_end":169496,"line_start":76,"line_end":76,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169498,"byte_end":169501,"line_start":77,"line_end":77,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169503,"byte_end":169520,"line_start":78,"line_end":78,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169522,"byte_end":169525,"line_start":79,"line_end":79,"column_start":2,"column_end":5}},{"value":"/ - `idx`: The counter value to mark as an index. This must be in the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169527,"byte_end":169598,"line_start":80,"line_end":80,"column_start":2,"column_end":73}},{"value":"/   range `0 .. R::BITS`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169600,"byte_end":169627,"line_start":81,"line_end":81,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169629,"byte_end":169632,"line_start":82,"line_end":82,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169634,"byte_end":169648,"line_start":83,"line_end":83,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169650,"byte_end":169653,"line_start":84,"line_end":84,"column_start":2,"column_end":5}},{"value":"/ This unconditionally marks `idx` as a valid bit-index.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169655,"byte_end":169713,"line_start":85,"line_end":85,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169715,"byte_end":169718,"line_start":86,"line_end":86,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169720,"byte_end":169733,"line_start":87,"line_end":87,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169735,"byte_end":169738,"line_start":88,"line_end":88,"column_start":2,"column_end":5}},{"value":"/ If the `idx` value is outside the valid range, then the program is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169740,"byte_end":169810,"line_start":89,"line_end":89,"column_start":2,"column_end":72}},{"value":"/ incorrect. Debug builds will panic; release builds do not inspect the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169812,"byte_end":169885,"line_start":90,"line_end":90,"column_start":2,"column_end":75}},{"value":"/ value or specify a behavior.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":169887,"byte_end":169919,"line_start":91,"line_end":91,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170243,"byte_end":170253,"line_start":107,"line_end":107,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<BitIdx<R>>::into_inner","value":"pub fn into_inner(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Removes the index wrapper, leaving the internal counter.\n","sig":null,"attributes":[{"value":"/ Removes the index wrapper, leaving the internal counter.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170142,"byte_end":170202,"line_start":105,"line_end":105,"column_start":2,"column_end":62}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170204,"byte_end":170234,"line_start":106,"line_end":106,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1667},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170580,"byte_end":170584,"line_start":121,"line_end":121,"column_start":9,"column_end":13},"name":"next","qualname":"<BitIdx<R>>::next","value":"pub fn next(Self) -> (Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Increments an index counter, wrapping at the back edge of the register.","sig":null,"attributes":[{"value":"/ Increments an index counter, wrapping at the back edge of the register.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170284,"byte_end":170359,"line_start":111,"line_end":111,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170361,"byte_end":170364,"line_start":112,"line_end":112,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170366,"byte_end":170383,"line_start":113,"line_end":113,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170385,"byte_end":170388,"line_start":114,"line_end":114,"column_start":2,"column_end":5}},{"value":"/ - `self`: The index to increment.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170390,"byte_end":170427,"line_start":115,"line_end":115,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170429,"byte_end":170432,"line_start":116,"line_end":116,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170434,"byte_end":170448,"line_start":117,"line_end":117,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170450,"byte_end":170453,"line_start":118,"line_end":118,"column_start":2,"column_end":5}},{"value":"/ - `.0`: The next index after `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170455,"byte_end":170495,"line_start":119,"line_end":119,"column_start":2,"column_end":42}},{"value":"/ - `.1`: Indicates whether the new index is in the next memory address.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170497,"byte_end":170571,"line_start":120,"line_end":120,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171046,"byte_end":171050,"line_start":140,"line_end":140,"column_start":9,"column_end":13},"name":"prev","qualname":"<BitIdx<R>>::prev","value":"pub fn prev(Self) -> (Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Decrements an index counter, wrapping at the front edge of the register.","sig":null,"attributes":[{"value":"/ Decrements an index counter, wrapping at the front edge of the register.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170733,"byte_end":170809,"line_start":129,"line_end":129,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170811,"byte_end":170814,"line_start":130,"line_end":130,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170816,"byte_end":170833,"line_start":131,"line_end":131,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170835,"byte_end":170838,"line_start":132,"line_end":132,"column_start":2,"column_end":5}},{"value":"/ - `self`: The index to decrement.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170840,"byte_end":170877,"line_start":133,"line_end":133,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170879,"byte_end":170882,"line_start":134,"line_end":134,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170884,"byte_end":170898,"line_start":135,"line_end":135,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170900,"byte_end":170903,"line_start":136,"line_end":136,"column_start":2,"column_end":5}},{"value":"/ - `.0`: The previous index before `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170905,"byte_end":170950,"line_start":137,"line_end":137,"column_start":2,"column_end":47}},{"value":"/ - `.1`: Indicates whether the new index is in the previous memory","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":170952,"byte_end":171021,"line_start":138,"line_end":138,"column_start":2,"column_end":71}},{"value":"/   address.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171023,"byte_end":171037,"line_start":139,"line_end":139,"column_start":2,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171480,"byte_end":171488,"line_start":155,"line_end":155,"column_start":9,"column_end":17},"name":"position","qualname":"<BitIdx<R>>::position","value":"pub fn position<O>(Self) -> BitPos<R> where O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Computes the bit position corresponding to `self` under some ordering.","sig":null,"attributes":[{"value":"/ Computes the bit position corresponding to `self` under some ordering.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171196,"byte_end":171270,"line_start":148,"line_end":148,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171272,"byte_end":171275,"line_start":149,"line_end":149,"column_start":2,"column_end":5}},{"value":"/ This forwards to [`O::at::<R>`], which is the only public, safe,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171277,"byte_end":171345,"line_start":150,"line_end":150,"column_start":2,"column_end":70}},{"value":"/ constructor for a position counter.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171347,"byte_end":171386,"line_start":151,"line_end":151,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171388,"byte_end":171391,"line_start":152,"line_end":152,"column_start":2,"column_end":5}},{"value":"/ [`O::at::<R>`]: crate::order::BitOrder::at","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171393,"byte_end":171439,"line_start":153,"line_end":153,"column_start":2,"column_end":48}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171441,"byte_end":171471,"line_start":154,"line_end":154,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171846,"byte_end":171852,"line_start":167,"line_end":167,"column_start":9,"column_end":15},"name":"select","qualname":"<BitIdx<R>>::select","value":"pub fn select<O>(Self) -> BitSel<R> where O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Computes the bit selector corresponding to `self` under an ordering.","sig":null,"attributes":[{"value":"/ Computes the bit selector corresponding to `self` under an ordering.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171556,"byte_end":171628,"line_start":160,"line_end":160,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171630,"byte_end":171633,"line_start":161,"line_end":161,"column_start":2,"column_end":5}},{"value":"/ This forwards to [`O::select::<R>`], which is the only public, safe,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171635,"byte_end":171707,"line_start":162,"line_end":162,"column_start":2,"column_end":74}},{"value":"/ constructor for a bit selector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171709,"byte_end":171744,"line_start":163,"line_end":163,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171746,"byte_end":171749,"line_start":164,"line_end":164,"column_start":2,"column_end":5}},{"value":"/ [`O::select::<R>`]: crate::order::BitOrder::select","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171751,"byte_end":171805,"line_start":165,"line_end":165,"column_start":2,"column_end":56}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171807,"byte_end":171837,"line_start":166,"line_end":166,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172120,"byte_end":172124,"line_start":178,"line_end":178,"column_start":9,"column_end":13},"name":"mask","qualname":"<BitIdx<R>>::mask","value":"pub fn mask<O>(Self) -> BitMask<R> where O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Computes the bit selector for `self` as an accessor mask.","sig":null,"attributes":[{"value":"/ Computes the bit selector for `self` as an accessor mask.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171924,"byte_end":171985,"line_start":172,"line_end":172,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171987,"byte_end":171990,"line_start":173,"line_end":173,"column_start":2,"column_end":5}},{"value":"/ This is a type-cast over [`Self::select`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":171992,"byte_end":172038,"line_start":174,"line_end":174,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172040,"byte_end":172043,"line_start":175,"line_end":175,"column_start":2,"column_end":5}},{"value":"/ [`Self::select`]: Self::select","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172045,"byte_end":172079,"line_start":176,"line_end":176,"column_start":2,"column_end":36}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172081,"byte_end":172111,"line_start":177,"line_end":177,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":173087,"byte_end":173092,"line_start":208,"line_end":208,"column_start":9,"column_end":14},"name":"range","qualname":"<BitIdx<R>>::range","value":"pub fn range(Self, BitEnd<R>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterates over all indices between an inclusive start and exclusive end\n point.","sig":null,"attributes":[{"value":"/ Iterates over all indices between an inclusive start and exclusive end","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172202,"byte_end":172276,"line_start":183,"line_end":183,"column_start":2,"column_end":76}},{"value":"/ point.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172278,"byte_end":172288,"line_start":184,"line_end":184,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172290,"byte_end":172293,"line_start":185,"line_end":185,"column_start":2,"column_end":5}},{"value":"/ Because implementation details of the range type family, including the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172295,"byte_end":172369,"line_start":186,"line_end":186,"column_start":2,"column_end":76}},{"value":"/ [`RangeBounds`] trait, are not yet stable, and heterogeneous ranges are","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172371,"byte_end":172446,"line_start":187,"line_end":187,"column_start":2,"column_end":77}},{"value":"/ not supported, this must be an opaque iterator rather than a direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172448,"byte_end":172519,"line_start":188,"line_end":188,"column_start":2,"column_end":73}},{"value":"/ [`Range<BitIdx<R>>`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172521,"byte_end":172546,"line_start":189,"line_end":189,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172548,"byte_end":172551,"line_start":190,"line_end":190,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172553,"byte_end":172569,"line_start":191,"line_end":191,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172571,"byte_end":172574,"line_start":192,"line_end":192,"column_start":2,"column_end":5}},{"value":"/ - `from`: The inclusive low bound of the range. This will be the first","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172576,"byte_end":172650,"line_start":193,"line_end":193,"column_start":2,"column_end":76}},{"value":"/   index produced by the iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172652,"byte_end":172689,"line_start":194,"line_end":194,"column_start":2,"column_end":39}},{"value":"/ - `upto`: The exclusive high bound of the range. The iterator will halt","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172691,"byte_end":172766,"line_start":195,"line_end":195,"column_start":2,"column_end":77}},{"value":"/   before yielding an index of this value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172768,"byte_end":172813,"line_start":196,"line_end":196,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172815,"byte_end":172818,"line_start":197,"line_end":197,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172820,"byte_end":172833,"line_start":198,"line_end":198,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172835,"byte_end":172838,"line_start":199,"line_end":199,"column_start":2,"column_end":5}},{"value":"/ An opaque iterator that is equivalent to the range `from .. upto`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172840,"byte_end":172910,"line_start":200,"line_end":200,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172912,"byte_end":172915,"line_start":201,"line_end":201,"column_start":2,"column_end":5}},{"value":"/ # Requirements","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172917,"byte_end":172935,"line_start":202,"line_end":202,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172937,"byte_end":172940,"line_start":203,"line_end":203,"column_start":2,"column_end":5}},{"value":"/ `from` must be no greater than `upto`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172942,"byte_end":172984,"line_start":204,"line_end":204,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172986,"byte_end":172989,"line_start":205,"line_end":205,"column_start":2,"column_end":5}},{"value":"/ [`RangeBounds`]: core::ops::RangeBounds","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":172991,"byte_end":173034,"line_start":206,"line_end":206,"column_start":2,"column_end":45}},{"value":"/ [`Range<BitIdx<R>>`]: core::ops::Range","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":173036,"byte_end":173078,"line_start":207,"line_end":207,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":173467,"byte_end":173476,"line_start":221,"line_end":221,"column_start":9,"column_end":18},"name":"range_all","qualname":"<BitIdx<R>>::range_all","value":"pub fn range_all() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterates over all possible index values.\n","sig":null,"attributes":[{"value":"/ Iterates over all possible index values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":173414,"byte_end":173458,"line_start":220,"line_end":220,"column_start":2,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5555},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":176594,"byte_end":176605,"line_start":317,"line_end":317,"column_start":12,"column_end":23},"name":"BitIdxError","qualname":"::index::BitIdxError","value":"BitIdxError {  }","parent":null,"children":[{"krate":0,"index":5557},{"krate":0,"index":5558}],"decl_id":null,"docs":"# Bit Index Error","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":176439,"byte_end":176459,"line_start":314,"line_end":314,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":177539,"byte_end":177549,"line_start":360,"line_end":360,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<BitIdxError<R>>::into_inner","value":"pub fn into_inner(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Removes the error wrapper, leaving the internal counter.\n","sig":null,"attributes":[{"value":"/ Removes the error wrapper, leaving the internal counter.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":177438,"byte_end":177498,"line_start":358,"line_end":358,"column_start":2,"column_end":62}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":177500,"byte_end":177530,"line_start":359,"line_end":359,"column_start":2,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5588},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":178302,"byte_end":178308,"line_start":394,"line_end":394,"column_start":12,"column_end":18},"name":"BitEnd","qualname":"::index::BitEnd","value":"BitEnd {  }","parent":null,"children":[{"krate":0,"index":5590},{"krate":0,"index":5591}],"decl_id":null,"docs":"# One-Bit-After Tail Index","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":178152,"byte_end":178172,"line_start":391,"line_end":391,"column_start":1,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":1705},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":178621,"byte_end":178624,"line_start":408,"line_end":408,"column_start":12,"column_end":15},"name":"MAX","qualname":"::index::BitEnd::<R>::MAX","value":"Self","parent":{"krate":0,"index":1703},"children":[],"decl_id":null,"docs":" The inclusive maximum tail within (or after) an `R` element.\n","sig":null,"attributes":[{"value":"/ The inclusive maximum tail within (or after) an `R` element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":178545,"byte_end":178609,"line_start":407,"line_end":407,"column_start":2,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":1706},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":178770,"byte_end":178773,"line_start":413,"line_end":413,"column_start":12,"column_end":15},"name":"MIN","qualname":"::index::BitEnd::<R>::MIN","value":"Self","parent":{"krate":0,"index":1703},"children":[],"decl_id":null,"docs":" The inclusive minimum tail within (or after) an `R` element.\n","sig":null,"attributes":[{"value":"/ The inclusive minimum tail within (or after) an `R` element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":178694,"byte_end":178758,"line_start":412,"line_end":412,"column_start":2,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":179165,"byte_end":179168,"line_start":429,"line_end":429,"column_start":9,"column_end":12},"name":"new","qualname":"<BitEnd<R>>::new","value":"pub fn new(u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a counter value as a known-good tail of an `R` register.","sig":null,"attributes":[{"value":"/ Wraps a counter value as a known-good tail of an `R` register.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":178825,"byte_end":178891,"line_start":418,"line_end":418,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":178893,"byte_end":178896,"line_start":419,"line_end":419,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":178898,"byte_end":178915,"line_start":420,"line_end":420,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":178917,"byte_end":178920,"line_start":421,"line_end":421,"column_start":2,"column_end":5}},{"value":"/ - `end`: The counter value to mark as a tail. This must be in the range","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":178922,"byte_end":178997,"line_start":422,"line_end":422,"column_start":2,"column_end":77}},{"value":"/   `0 ..= R::BITS`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":178999,"byte_end":179021,"line_start":423,"line_end":423,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":179023,"byte_end":179026,"line_start":424,"line_end":424,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":179028,"byte_end":179042,"line_start":425,"line_end":425,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":179044,"byte_end":179047,"line_start":426,"line_end":426,"column_start":2,"column_end":5}},{"value":"/ This returns `Some(end)` when it is in the valid range `0 ..= R::BITS`,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":179049,"byte_end":179124,"line_start":427,"line_end":427,"column_start":2,"column_end":77}},{"value":"/ and `None` when it is not.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":179126,"byte_end":179156,"line_start":428,"line_end":428,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180121,"byte_end":180131,"line_start":467,"line_end":467,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<BitEnd<R>>::into_inner","value":"pub fn into_inner(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Removes the tail wrapper, leaving the internal counter.\n","sig":null,"attributes":[{"value":"/ Removes the tail wrapper, leaving the internal counter.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180021,"byte_end":180080,"line_start":465,"line_end":465,"column_start":2,"column_end":61}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180082,"byte_end":180112,"line_start":466,"line_end":466,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180853,"byte_end":180863,"line_start":490,"line_end":490,"column_start":9,"column_end":19},"name":"range_from","qualname":"<BitEnd<R>>::range_from","value":"pub fn range_from(BitIdx<R>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterates over all tail indices at and after an inclusive starting point.","sig":null,"attributes":[{"value":"/ Iterates over all tail indices at and after an inclusive starting point.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180162,"byte_end":180238,"line_start":471,"line_end":471,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180240,"byte_end":180243,"line_start":472,"line_end":472,"column_start":2,"column_end":5}},{"value":"/ Because implementation details of the range type family, including the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180245,"byte_end":180319,"line_start":473,"line_end":473,"column_start":2,"column_end":76}},{"value":"/ [`RangeBounds`] trait, are not yet stable, and heterogeneous ranges are","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180321,"byte_end":180396,"line_start":474,"line_end":474,"column_start":2,"column_end":77}},{"value":"/ not yet supported, this must be an opaque iterator rather than a direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180398,"byte_end":180473,"line_start":475,"line_end":475,"column_start":2,"column_end":77}},{"value":"/ [`Range<BitEnd<R>>`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180475,"byte_end":180500,"line_start":476,"line_end":476,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180502,"byte_end":180505,"line_start":477,"line_end":477,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180507,"byte_end":180523,"line_start":478,"line_end":478,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180525,"byte_end":180528,"line_start":479,"line_end":479,"column_start":2,"column_end":5}},{"value":"/ - `from`: The inclusive low bound of the range. This will be the first","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180530,"byte_end":180604,"line_start":480,"line_end":480,"column_start":2,"column_end":76}},{"value":"/   tail produced by the iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180606,"byte_end":180642,"line_start":481,"line_end":481,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180644,"byte_end":180647,"line_start":482,"line_end":482,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180649,"byte_end":180662,"line_start":483,"line_end":483,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180664,"byte_end":180667,"line_start":484,"line_end":484,"column_start":2,"column_end":5}},{"value":"/ An opaque iterator that is equivalent to the range `from ..=","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180669,"byte_end":180733,"line_start":485,"line_end":485,"column_start":2,"column_end":66}},{"value":"/ Self::MAX`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180735,"byte_end":180750,"line_start":486,"line_end":486,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180752,"byte_end":180755,"line_start":487,"line_end":487,"column_start":2,"column_end":5}},{"value":"/ [`RangeBounds`]: core::ops::RangeBounds","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180757,"byte_end":180800,"line_start":488,"line_end":488,"column_start":2,"column_end":45}},{"value":"/ [`Range<BitEnd<R>>`]: core::ops::Range","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":180802,"byte_end":180844,"line_start":489,"line_end":489,"column_start":2,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":5621},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":183247,"byte_end":183253,"line_start":578,"line_end":578,"column_start":12,"column_end":18},"name":"BitPos","qualname":"::index::BitPos","value":"BitPos {  }","parent":null,"children":[{"krate":0,"index":5623},{"krate":0,"index":5624}],"decl_id":null,"docs":"# Bit Position","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":183046,"byte_end":183066,"line_start":574,"line_end":574,"column_start":1,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":1725},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":183569,"byte_end":183572,"line_start":592,"line_end":592,"column_start":12,"column_end":15},"name":"MAX","qualname":"::index::BitPos::<R>::MAX","value":"Self","parent":{"krate":0,"index":1723},"children":[],"decl_id":null,"docs":" The position value of the most significant bit in an `R` element.\n","sig":null,"attributes":[{"value":"/ The position value of the most significant bit in an `R` element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":183488,"byte_end":183557,"line_start":591,"line_end":591,"column_start":2,"column_end":71}}]},{"kind":"Const","id":{"krate":0,"index":1726},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":183717,"byte_end":183720,"line_start":597,"line_end":597,"column_start":12,"column_end":15},"name":"MIN","qualname":"::index::BitPos::<R>::MIN","value":"Self","parent":{"krate":0,"index":1723},"children":[],"decl_id":null,"docs":" The position value of the least significant bit in an `R` element.\n","sig":null,"attributes":[{"value":"/ The position value of the least significant bit in an `R` element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":183635,"byte_end":183705,"line_start":596,"line_end":596,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184122,"byte_end":184125,"line_start":613,"line_end":613,"column_start":9,"column_end":12},"name":"new","qualname":"<BitPos<R>>::new","value":"pub fn new(u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a counter value as a known-good position within an `R` register.","sig":null,"attributes":[{"value":"/ Wraps a counter value as a known-good position within an `R` register.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":183772,"byte_end":183846,"line_start":602,"line_end":602,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":183848,"byte_end":183851,"line_start":603,"line_end":603,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":183853,"byte_end":183870,"line_start":604,"line_end":604,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":183872,"byte_end":183875,"line_start":605,"line_end":605,"column_start":2,"column_end":5}},{"value":"/ - `pos`: The counter value to mark as a position. This must be in the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":183877,"byte_end":183950,"line_start":606,"line_end":606,"column_start":2,"column_end":75}},{"value":"/   range `0 .. R::BITS`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":183952,"byte_end":183979,"line_start":607,"line_end":607,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":183981,"byte_end":183984,"line_start":608,"line_end":608,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":183986,"byte_end":184000,"line_start":609,"line_end":609,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184002,"byte_end":184005,"line_start":610,"line_end":610,"column_start":2,"column_end":5}},{"value":"/ This returns `Some(pos)` when it is in the valid range `0 .. R::BITS`,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184007,"byte_end":184081,"line_start":611,"line_end":611,"column_start":2,"column_end":76}},{"value":"/ and `None` when it is not.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184083,"byte_end":184113,"line_start":612,"line_end":612,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184785,"byte_end":184798,"line_start":637,"line_end":637,"column_start":16,"column_end":29},"name":"new_unchecked","qualname":"<BitPos<R>>::new_unchecked","value":"pub unsafe fn new_unchecked(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps a counter value as an assumed-good position within an `R`\n register.","sig":null,"attributes":[{"value":"/ Wraps a counter value as an assumed-good position within an `R`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184257,"byte_end":184324,"line_start":620,"line_end":620,"column_start":2,"column_end":69}},{"value":"/ register.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184326,"byte_end":184339,"line_start":621,"line_end":621,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184341,"byte_end":184344,"line_start":622,"line_end":622,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184346,"byte_end":184363,"line_start":623,"line_end":623,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184365,"byte_end":184368,"line_start":624,"line_end":624,"column_start":2,"column_end":5}},{"value":"/ - `value`: The counter value to mark as a position. This must be in the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184370,"byte_end":184445,"line_start":625,"line_end":625,"column_start":2,"column_end":77}},{"value":"/   range `0 .. R::BITS`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184447,"byte_end":184474,"line_start":626,"line_end":626,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184476,"byte_end":184479,"line_start":627,"line_end":627,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184481,"byte_end":184495,"line_start":628,"line_end":628,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184497,"byte_end":184500,"line_start":629,"line_end":629,"column_start":2,"column_end":5}},{"value":"/ This unconditionally marks `pos` as a valid bit-position.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184502,"byte_end":184563,"line_start":630,"line_end":630,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184565,"byte_end":184568,"line_start":631,"line_end":631,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184570,"byte_end":184583,"line_start":632,"line_end":632,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184585,"byte_end":184588,"line_start":633,"line_end":633,"column_start":2,"column_end":5}},{"value":"/ If the `pos` value is outside the valid range, then the program is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184590,"byte_end":184660,"line_start":634,"line_end":634,"column_start":2,"column_end":72}},{"value":"/ incorrect. Debug builds will panic; release builds do not inspect the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184662,"byte_end":184735,"line_start":635,"line_end":635,"column_start":2,"column_end":75}},{"value":"/ value or specify a behavior.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184737,"byte_end":184769,"line_start":636,"line_end":636,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":185099,"byte_end":185109,"line_start":652,"line_end":652,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<BitPos<R>>::into_inner","value":"pub fn into_inner(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Removes the position wrapper, leaving the internal counter.\n","sig":null,"attributes":[{"value":"/ Removes the position wrapper, leaving the internal counter.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":184995,"byte_end":185058,"line_start":650,"line_end":650,"column_start":2,"column_end":65}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":185060,"byte_end":185090,"line_start":651,"line_end":651,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":185245,"byte_end":185251,"line_start":659,"line_end":659,"column_start":9,"column_end":15},"name":"select","qualname":"<BitPos<R>>::select","value":"pub fn select(Self) -> BitSel<R>","parent":null,"children":[],"decl_id":null,"docs":" Computes the bit selector corresponding to `self`.","sig":null,"attributes":[{"value":"/ Computes the bit selector corresponding to `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":185140,"byte_end":185194,"line_start":656,"line_end":656,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":185196,"byte_end":185199,"line_start":657,"line_end":657,"column_start":2,"column_end":5}},{"value":"/ This is always `1 << self.pos`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":185201,"byte_end":185236,"line_start":658,"line_end":658,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":185529,"byte_end":185533,"line_start":669,"line_end":669,"column_start":9,"column_end":13},"name":"mask","qualname":"<BitPos<R>>::mask","value":"pub fn mask(Self) -> BitMask<R>","parent":null,"children":[],"decl_id":null,"docs":" Computes the bit selector for `self` as an accessor mask.","sig":null,"attributes":[{"value":"/ Computes the bit selector for `self` as an accessor mask.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":185333,"byte_end":185394,"line_start":663,"line_end":663,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":185396,"byte_end":185399,"line_start":664,"line_end":664,"column_start":2,"column_end":5}},{"value":"/ This is a type-cast over [`Self::select`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":185401,"byte_end":185447,"line_start":665,"line_end":665,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":185449,"byte_end":185452,"line_start":666,"line_end":666,"column_start":2,"column_end":5}},{"value":"/ [`Self::select`]: Self::select","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":185454,"byte_end":185488,"line_start":667,"line_end":667,"column_start":2,"column_end":36}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":185490,"byte_end":185520,"line_start":668,"line_end":668,"column_start":2,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5654},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186523,"byte_end":186529,"line_start":711,"line_end":711,"column_start":12,"column_end":18},"name":"BitSel","qualname":"::index::BitSel","value":"BitSel {  }","parent":null,"children":[{"krate":0,"index":5656}],"decl_id":null,"docs":"# One-Hot Bit Selection Mask","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186322,"byte_end":186342,"line_start":707,"line_end":707,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186987,"byte_end":186990,"line_start":731,"line_end":731,"column_start":9,"column_end":12},"name":"new","qualname":"<BitSel<R>>::new","value":"pub fn new(R) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a selector value as a known-good selection in an `R` register.","sig":null,"attributes":[{"value":"/ Wraps a selector value as a known-good selection in an `R` register.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186649,"byte_end":186721,"line_start":721,"line_end":721,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186723,"byte_end":186726,"line_start":722,"line_end":722,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186728,"byte_end":186745,"line_start":723,"line_end":723,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186747,"byte_end":186750,"line_start":724,"line_end":724,"column_start":2,"column_end":5}},{"value":"/ - `sel`: A one-hot selection mask of a bit in an `R` register.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186752,"byte_end":186818,"line_start":725,"line_end":725,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186820,"byte_end":186823,"line_start":726,"line_end":726,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186825,"byte_end":186839,"line_start":727,"line_end":727,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186841,"byte_end":186844,"line_start":728,"line_end":728,"column_start":2,"column_end":5}},{"value":"/ This returns `Some(sel)` when it is a power of two (exactly one bit set","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186846,"byte_end":186921,"line_start":729,"line_end":729,"column_start":2,"column_end":77}},{"value":"/ and all others cleared), and `None` when it is not.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186923,"byte_end":186978,"line_start":730,"line_end":730,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187646,"byte_end":187659,"line_start":753,"line_end":753,"column_start":16,"column_end":29},"name":"new_unchecked","qualname":"<BitSel<R>>::new_unchecked","value":"pub unsafe fn new_unchecked(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps a selector value as an assumed-good selection in an `R` register.","sig":null,"attributes":[{"value":"/ Wraps a selector value as an assumed-good selection in an `R` register.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187115,"byte_end":187190,"line_start":738,"line_end":738,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187192,"byte_end":187195,"line_start":739,"line_end":739,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187197,"byte_end":187214,"line_start":740,"line_end":740,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187216,"byte_end":187219,"line_start":741,"line_end":741,"column_start":2,"column_end":5}},{"value":"/ - `sel`: A one-hot selection mask of a bit in an `R` register.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187221,"byte_end":187287,"line_start":742,"line_end":742,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187289,"byte_end":187292,"line_start":743,"line_end":743,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187294,"byte_end":187308,"line_start":744,"line_end":744,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187310,"byte_end":187313,"line_start":745,"line_end":745,"column_start":2,"column_end":5}},{"value":"/ This unconditionally marks `sel` as a one-hot bit selector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187315,"byte_end":187378,"line_start":746,"line_end":746,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187380,"byte_end":187383,"line_start":747,"line_end":747,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187385,"byte_end":187398,"line_start":748,"line_end":748,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187400,"byte_end":187403,"line_start":749,"line_end":749,"column_start":2,"column_end":5}},{"value":"/ If the `sel` value has zero or multiple bits set, then it is invalid to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187405,"byte_end":187480,"line_start":750,"line_end":750,"column_start":2,"column_end":77}},{"value":"/ be used as a `BitSel` and the program is incorrect. Debug builds will","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187482,"byte_end":187555,"line_start":751,"line_end":751,"column_start":2,"column_end":75}},{"value":"/ panic; release builds do not inspect the value or specify a behavior.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187557,"byte_end":187630,"line_start":752,"line_end":752,"column_start":2,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187960,"byte_end":187970,"line_start":765,"line_end":765,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<BitSel<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Removes the one-hot selection wrapper, leaving the internal mask.\n","sig":null,"attributes":[{"value":"/ Removes the one-hot selection wrapper, leaving the internal mask.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187850,"byte_end":187919,"line_start":763,"line_end":763,"column_start":2,"column_end":71}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":187921,"byte_end":187951,"line_start":764,"line_end":764,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":188097,"byte_end":188101,"line_start":771,"line_end":771,"column_start":9,"column_end":13},"name":"mask","qualname":"<BitSel<R>>::mask","value":"pub fn mask(Self) -> BitMask<R>","parent":null,"children":[],"decl_id":null,"docs":" Computes a bit-mask for `self`. This is a type-cast.\n","sig":null,"attributes":[{"value":"/ Computes a bit-mask for `self`. This is a type-cast.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":188000,"byte_end":188056,"line_start":769,"line_end":769,"column_start":2,"column_end":58}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":188058,"byte_end":188088,"line_start":770,"line_end":770,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":188210,"byte_end":188219,"line_start":776,"line_end":776,"column_start":9,"column_end":18},"name":"range_all","qualname":"<BitSel<R>>::range_all","value":"pub fn range_all() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterates over all possible selector values.\n","sig":null,"attributes":[{"value":"/ Iterates over all possible selector values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":188154,"byte_end":188201,"line_start":775,"line_end":775,"column_start":2,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5686},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":188999,"byte_end":189006,"line_start":811,"line_end":811,"column_start":12,"column_end":19},"name":"BitMask","qualname":"::index::BitMask","value":"BitMask {  }","parent":null,"children":[{"krate":0,"index":5688}],"decl_id":null,"docs":"# Multi-Bit Selection Mask","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":188848,"byte_end":188868,"line_start":808,"line_end":808,"column_start":1,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":1763},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189193,"byte_end":189196,"line_start":822,"line_end":822,"column_start":12,"column_end":15},"name":"ALL","qualname":"::index::BitMask::<R>::ALL","value":"Self","parent":{"krate":0,"index":1761},"children":[],"decl_id":null,"docs":" A full bit-mask with every bit set.\n","sig":null,"attributes":[{"value":"/ A full bit-mask with every bit set.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189142,"byte_end":189181,"line_start":821,"line_end":821,"column_start":2,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":1764},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189286,"byte_end":189290,"line_start":824,"line_end":824,"column_start":12,"column_end":16},"name":"ZERO","qualname":"::index::BitMask::<R>::ZERO","value":"Self","parent":{"krate":0,"index":1761},"children":[],"decl_id":null,"docs":" An empty bit-mask with every bit cleared.\n","sig":null,"attributes":[{"value":"/ An empty bit-mask with every bit cleared.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189229,"byte_end":189274,"line_start":823,"line_end":823,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189992,"byte_end":189995,"line_start":849,"line_end":849,"column_start":9,"column_end":12},"name":"new","qualname":"<BitMask<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps any `R` value as a bit-mask.","sig":null,"attributes":[{"value":"/ Wraps any `R` value as a bit-mask.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189325,"byte_end":189363,"line_start":826,"line_end":826,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189365,"byte_end":189368,"line_start":827,"line_end":827,"column_start":2,"column_end":5}},{"value":"/ This constructor is provided to explicitly declare that an operation is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189370,"byte_end":189445,"line_start":828,"line_end":828,"column_start":2,"column_end":77}},{"value":"/ discarding the numeric value of an integer and instead using it only as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189447,"byte_end":189522,"line_start":829,"line_end":829,"column_start":2,"column_end":77}},{"value":"/ a bit-mask.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189524,"byte_end":189539,"line_start":830,"line_end":830,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189541,"byte_end":189544,"line_start":831,"line_end":831,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189546,"byte_end":189563,"line_start":832,"line_end":832,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189565,"byte_end":189568,"line_start":833,"line_end":833,"column_start":2,"column_end":5}},{"value":"/ - `mask`: Some integer to use as a bit-mask.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189570,"byte_end":189618,"line_start":834,"line_end":834,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189620,"byte_end":189623,"line_start":835,"line_end":835,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189625,"byte_end":189639,"line_start":836,"line_end":836,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189641,"byte_end":189644,"line_start":837,"line_end":837,"column_start":2,"column_end":5}},{"value":"/ The `mask` value wrapped as a bit-mask, with its numeric context","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189646,"byte_end":189714,"line_start":838,"line_end":838,"column_start":2,"column_end":70}},{"value":"/ discarded.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189716,"byte_end":189730,"line_start":839,"line_end":839,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189732,"byte_end":189735,"line_start":840,"line_end":840,"column_start":2,"column_end":5}},{"value":"/ Prefer accumulating [`BitSel`] values using its `Sum` implementation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189737,"byte_end":189810,"line_start":841,"line_end":841,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189812,"byte_end":189815,"line_start":842,"line_end":842,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189817,"byte_end":189830,"line_start":843,"line_end":843,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189832,"byte_end":189835,"line_start":844,"line_end":844,"column_start":2,"column_end":5}},{"value":"/ The `mask` value must be computed from a set of valid bit positions in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189837,"byte_end":189911,"line_start":845,"line_end":845,"column_start":2,"column_end":76}},{"value":"/ the caller’s context.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189913,"byte_end":189940,"line_start":846,"line_end":846,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189942,"byte_end":189945,"line_start":847,"line_end":847,"column_start":2,"column_end":5}},{"value":"/ [`BitSel`]: crate::index::BitSel","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189947,"byte_end":189983,"line_start":848,"line_end":848,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190134,"byte_end":190144,"line_start":855,"line_end":855,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<BitMask<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Removes the mask wrapper, leaving the internal value.\n","sig":null,"attributes":[{"value":"/ Removes the mask wrapper, leaving the internal value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190036,"byte_end":190093,"line_start":853,"line_end":853,"column_start":2,"column_end":59}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190095,"byte_end":190125,"line_start":854,"line_end":854,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190434,"byte_end":190438,"line_start":869,"line_end":869,"column_start":9,"column_end":13},"name":"test","qualname":"<BitMask<R>>::test","value":"pub fn test(&Self, BitSel<R>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if a mask contains a given selector bit.","sig":null,"attributes":[{"value":"/ Tests if a mask contains a given selector bit.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190175,"byte_end":190225,"line_start":859,"line_end":859,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190227,"byte_end":190230,"line_start":860,"line_end":860,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190232,"byte_end":190249,"line_start":861,"line_end":861,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190251,"byte_end":190254,"line_start":862,"line_end":862,"column_start":2,"column_end":5}},{"value":"/ - `&self`: The mask being tested.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190256,"byte_end":190293,"line_start":863,"line_end":863,"column_start":2,"column_end":39}},{"value":"/ - `sel`: A selector bit to test in `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190295,"byte_end":190341,"line_start":864,"line_end":864,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190343,"byte_end":190346,"line_start":865,"line_end":865,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190348,"byte_end":190362,"line_start":866,"line_end":866,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190364,"byte_end":190367,"line_start":867,"line_end":867,"column_start":2,"column_end":5}},{"value":"/ Whether `self` has set the bit that `sel` indicates.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190369,"byte_end":190425,"line_start":868,"line_end":868,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190749,"byte_end":190755,"line_start":883,"line_end":883,"column_start":9,"column_end":15},"name":"insert","qualname":"<BitMask<R>>::insert","value":"pub fn insert(&mut Self, BitSel<R>)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a selector bit into a mask.","sig":null,"attributes":[{"value":"/ Inserts a selector bit into a mask.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190510,"byte_end":190549,"line_start":873,"line_end":873,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190551,"byte_end":190554,"line_start":874,"line_end":874,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190556,"byte_end":190573,"line_start":875,"line_end":875,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190575,"byte_end":190578,"line_start":876,"line_end":876,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`: The mask being modified.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190580,"byte_end":190623,"line_start":877,"line_end":877,"column_start":2,"column_end":45}},{"value":"/ - `sel`: A selector bit to insert into `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190625,"byte_end":190675,"line_start":878,"line_end":878,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190677,"byte_end":190680,"line_start":879,"line_end":879,"column_start":2,"column_end":5}},{"value":"/ ## Effects","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190682,"byte_end":190696,"line_start":880,"line_end":880,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190698,"byte_end":190701,"line_start":881,"line_end":881,"column_start":2,"column_end":5}},{"value":"/ The `sel` bit is set in the mask.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190703,"byte_end":190740,"line_start":882,"line_end":882,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":191065,"byte_end":191072,"line_start":897,"line_end":897,"column_start":9,"column_end":16},"name":"combine","qualname":"<BitMask<R>>::combine","value":"pub fn combine(Self, BitSel<R>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new mask with a selector bit activated.","sig":null,"attributes":[{"value":"/ Creates a new mask with a selector bit activated.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190814,"byte_end":190867,"line_start":887,"line_end":887,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190869,"byte_end":190872,"line_start":888,"line_end":888,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190874,"byte_end":190891,"line_start":889,"line_end":889,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190893,"byte_end":190896,"line_start":890,"line_end":890,"column_start":2,"column_end":5}},{"value":"/ - `self`: The original mask.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190898,"byte_end":190930,"line_start":891,"line_end":891,"column_start":2,"column_end":34}},{"value":"/ - `sel`: The selector bit being added into the mask.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190932,"byte_end":190988,"line_start":892,"line_end":892,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190990,"byte_end":190993,"line_start":893,"line_end":893,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":190995,"byte_end":191009,"line_start":894,"line_end":894,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":191011,"byte_end":191014,"line_start":895,"line_end":895,"column_start":2,"column_end":5}},{"value":"/ A new bit-mask with `sel` activated.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":191016,"byte_end":191056,"line_start":896,"line_end":896,"column_start":2,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":1795},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mem","qualname":"::mem","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","parent":null,"children":[{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1800},{"krate":0,"index":1803},{"krate":0,"index":1806},{"krate":0,"index":1809},{"krate":0,"index":1813},{"krate":0,"index":5718},{"krate":0,"index":5720},{"krate":0,"index":5722},{"krate":0,"index":1814},{"krate":0,"index":5724},{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1820},{"krate":0,"index":1822},{"krate":0,"index":5726},{"krate":0,"index":5729},{"krate":0,"index":5732},{"krate":0,"index":5734},{"krate":0,"index":5737},{"krate":0,"index":5740},{"krate":0,"index":5742},{"krate":0,"index":5745},{"krate":0,"index":5749},{"krate":0,"index":5752},{"krate":0,"index":5754},{"krate":0,"index":5758},{"krate":0,"index":1825},{"krate":0,"index":5761},{"krate":0,"index":5763},{"krate":0,"index":5773},{"krate":0,"index":5776},{"krate":0,"index":5765},{"krate":0,"index":5767},{"krate":0,"index":5778},{"krate":0,"index":5781},{"krate":0,"index":5769},{"krate":0,"index":5771},{"krate":0,"index":5783},{"krate":0,"index":5786},{"krate":0,"index":5788},{"krate":0,"index":5790},{"krate":0,"index":5792},{"krate":0,"index":5795},{"krate":0,"index":5797},{"krate":0,"index":5799},{"krate":0,"index":5801},{"krate":0,"index":5804}],"decl_id":null,"docs":"# Memory Element Descriptions","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1809},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":201275,"byte_end":201286,"line_start":12,"line_end":12,"column_start":11,"column_end":22},"name":"BitRegister","qualname":"::mem::BitRegister","value":"BitRegister: Unsigned + BitOps","parent":null,"children":[{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1812}],"decl_id":null,"docs":"# Register Descriptions","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1810},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":201392,"byte_end":201396,"line_start":14,"line_end":14,"column_start":8,"column_end":12},"name":"INDX","qualname":"::mem::BitRegister::INDX","value":"u8","parent":{"krate":0,"index":1809},"children":[],"decl_id":null,"docs":" The number of bits required to store an index in the range `0 .. BITS`.\n","sig":null,"attributes":[{"value":"/ The number of bits required to store an index in the range `0 .. BITS`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":201309,"byte_end":201384,"line_start":13,"line_end":13,"column_start":2,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":1811},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":201604,"byte_end":201608,"line_start":17,"line_end":17,"column_start":8,"column_end":12},"name":"MASK","qualname":"::mem::BitRegister::MASK","value":"u8","parent":{"krate":0,"index":1809},"children":[],"decl_id":null,"docs":" A mask over all bits that can be used as an index within the element.\n This is the value with the least significant `INDX`-many bits set high.\n","sig":null,"attributes":[{"value":"/ A mask over all bits that can be used as an index within the element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":201446,"byte_end":201519,"line_start":15,"line_end":15,"column_start":2,"column_end":75}},{"value":"/ This is the value with the least significant `INDX`-many bits set high.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":201521,"byte_end":201596,"line_start":16,"line_end":16,"column_start":2,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":1812},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":201674,"byte_end":201677,"line_start":19,"line_end":19,"column_start":8,"column_end":11},"name":"ALL","qualname":"::mem::BitRegister::ALL","value":"Self","parent":{"krate":0,"index":1809},"children":[],"decl_id":null,"docs":" The literal `!0`.\n","sig":null,"attributes":[{"value":"/ The literal `!0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":201645,"byte_end":201666,"line_start":18,"line_end":18,"column_start":2,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":1816},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":202235,"byte_end":202242,"line_start":46,"line_end":46,"column_start":14,"column_end":21},"name":"bits_of","qualname":"::mem::bits_of","value":"pub const fn bits_of<T>() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Counts the number of bits in a value of type `T`.\n","sig":null,"attributes":[{"value":"/ Counts the number of bits in a value of type `T`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":202168,"byte_end":202221,"line_start":45,"line_end":45,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":1818},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":202382,"byte_end":202386,"line_start":51,"line_end":51,"column_start":14,"column_end":18},"name":"elts","qualname":"::mem::elts","value":"pub const fn elts<T>(usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":"# Bit Storage Calculator","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1820},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":202635,"byte_end":202650,"line_start":62,"line_end":62,"column_start":14,"column_end":29},"name":"aligned_to_size","qualname":"::mem::aligned_to_size","value":"pub const fn aligned_to_size<T>() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if a type has alignment equal to its size.\n","sig":null,"attributes":[{"value":"/ Tests if a type has alignment equal to its size.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":202523,"byte_end":202575,"line_start":59,"line_end":59,"column_start":1,"column_end":53}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":202591,"byte_end":202621,"line_start":61,"line_end":61,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":1822},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":202851,"byte_end":202860,"line_start":69,"line_end":69,"column_start":14,"column_end":23},"name":"layout_eq","qualname":"::mem::layout_eq","value":"pub const fn layout_eq<T, U>() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if two types have identical layouts (size and alignment are equal).\n","sig":null,"attributes":[{"value":"/ Tests if two types have identical layouts (size and alignment are equal).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":202714,"byte_end":202791,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":202807,"byte_end":202837,"line_start":68,"line_end":68,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5726},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":203150,"byte_end":203160,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"BitElement","qualname":"::mem::BitElement","value":"BitElement { elem }","parent":null,"children":[{"krate":0,"index":5728}],"decl_id":null,"docs":"# Unified Element Constructor","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":202991,"byte_end":203011,"line_start":75,"line_end":75,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":5728},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":203179,"byte_end":203183,"line_start":79,"line_end":79,"column_start":6,"column_end":10},"name":"elem","qualname":"::mem::BitElement::elem","value":"T","parent":{"krate":0,"index":5726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1826},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"order","qualname":"::order","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","parent":null,"children":[{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1832},{"krate":0,"index":1835},{"krate":0,"index":1838},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1848},{"krate":0,"index":1851},{"krate":0,"index":5806},{"krate":0,"index":5808},{"krate":0,"index":5810},{"krate":0,"index":5811},{"krate":0,"index":5813},{"krate":0,"index":5815},{"krate":0,"index":5816},{"krate":0,"index":5818},{"krate":0,"index":5821},{"krate":0,"index":5823},{"krate":0,"index":5824},{"krate":0,"index":5826},{"krate":0,"index":5828},{"krate":0,"index":5830},{"krate":0,"index":5832},{"krate":0,"index":5833},{"krate":0,"index":5835},{"krate":0,"index":5837},{"krate":0,"index":5838},{"krate":0,"index":5840},{"krate":0,"index":5843},{"krate":0,"index":5845},{"krate":0,"index":5846},{"krate":0,"index":5848},{"krate":0,"index":1860},{"krate":0,"index":1869},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1883}],"decl_id":null,"docs":"# In-Element Bit Ordering","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1851},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205198,"byte_end":205206,"line_start":18,"line_end":18,"column_start":18,"column_end":26},"name":"BitOrder","qualname":"::order::BitOrder","value":"BitOrder: 'static","parent":null,"children":[{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":1856}],"decl_id":null,"docs":"# In-Element Bit Ordering","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1852},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":207162,"byte_end":207164,"line_start":61,"line_end":61,"column_start":5,"column_end":7},"name":"at","qualname":"::order::BitOrder::at","value":"pub fn at<R>(BitIdx<R>) -> BitPos<R> where R: BitRegister","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" Translates a semantic bit index into a real bit position.","sig":null,"attributes":[{"value":"/ Translates a semantic bit index into a real bit position.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205219,"byte_end":205280,"line_start":19,"line_end":19,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205282,"byte_end":205285,"line_start":20,"line_end":20,"column_start":2,"column_end":5}},{"value":"/ This function is the basis of the trait, and must adhere to a number of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205287,"byte_end":205362,"line_start":21,"line_end":21,"column_start":2,"column_end":77}},{"value":"/ requirements in order for an implementation to be correct.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205364,"byte_end":205426,"line_start":22,"line_end":22,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205428,"byte_end":205431,"line_start":23,"line_end":23,"column_start":2,"column_end":5}},{"value":"/ ## Type Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205433,"byte_end":205455,"line_start":24,"line_end":24,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205457,"byte_end":205460,"line_start":25,"line_end":25,"column_start":2,"column_end":5}},{"value":"/ - `R`: The memory element type that the index and position govern.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205462,"byte_end":205532,"line_start":26,"line_end":26,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205534,"byte_end":205537,"line_start":27,"line_end":27,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205539,"byte_end":205556,"line_start":28,"line_end":28,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205558,"byte_end":205561,"line_start":29,"line_end":29,"column_start":2,"column_end":5}},{"value":"/ - `index`: A semantic bit-index within some `R` element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205563,"byte_end":205623,"line_start":30,"line_end":30,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205625,"byte_end":205628,"line_start":31,"line_end":31,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205630,"byte_end":205644,"line_start":32,"line_end":32,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205646,"byte_end":205649,"line_start":33,"line_end":33,"column_start":2,"column_end":5}},{"value":"/ The real position of the indexed bit within an `R` element. See the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205651,"byte_end":205722,"line_start":34,"line_end":34,"column_start":2,"column_end":73}},{"value":"/ `BitPos` documentation for what these positions are considered to mean.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205724,"byte_end":205799,"line_start":35,"line_end":35,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205801,"byte_end":205804,"line_start":36,"line_end":36,"column_start":2,"column_end":5}},{"value":"/ ## Requirements","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205806,"byte_end":205825,"line_start":37,"line_end":37,"column_start":2,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205827,"byte_end":205830,"line_start":38,"line_end":38,"column_start":2,"column_end":5}},{"value":"/ This function must satisfy the following requirements for all possible","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205832,"byte_end":205906,"line_start":39,"line_end":39,"column_start":2,"column_end":76}},{"value":"/ input and output values, for all possible `R` type parameters:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205908,"byte_end":205974,"line_start":40,"line_end":40,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205976,"byte_end":205979,"line_start":41,"line_end":41,"column_start":2,"column_end":5}},{"value":"/ - Totality: The implementation must be able to accept every input in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":205981,"byte_end":206053,"line_start":42,"line_end":42,"column_start":2,"column_end":74}},{"value":"/   [`BitIdx::<R>::range_all()`], and produce some `BitPos` value for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":206055,"byte_end":206126,"line_start":43,"line_end":43,"column_start":2,"column_end":73}},{"value":"/   each.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":206128,"byte_end":206139,"line_start":44,"line_end":44,"column_start":2,"column_end":13}},{"value":"/ - Bijection: There must be an exactly one-to-one correspondence between","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":206141,"byte_end":206216,"line_start":45,"line_end":45,"column_start":2,"column_end":77}},{"value":"/   input and output values. No input index may choose its output from a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":206218,"byte_end":206292,"line_start":46,"line_end":46,"column_start":2,"column_end":76}},{"value":"/   set of more than one position, and no output position may be produced","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":206294,"byte_end":206369,"line_start":47,"line_end":47,"column_start":2,"column_end":77}},{"value":"/   by more than one input index.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":206371,"byte_end":206406,"line_start":48,"line_end":48,"column_start":2,"column_end":37}},{"value":"/ - Purity: The translation from index to position must be consistent for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":206408,"byte_end":206483,"line_start":49,"line_end":49,"column_start":2,"column_end":77}},{"value":"/   the lifetime of *at least* all data structures in the program. This","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":206485,"byte_end":206558,"line_start":50,"line_end":50,"column_start":2,"column_end":75}},{"value":"/   function *may* refer to global state, but that state **must** be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":206560,"byte_end":206630,"line_start":51,"line_end":51,"column_start":2,"column_end":72}},{"value":"/   immutable while any `bitvec` data structures exist, and must not be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":206632,"byte_end":206705,"line_start":52,"line_end":52,"column_start":2,"column_end":75}},{"value":"/   used to violate the totality or bijection requirements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":206707,"byte_end":206768,"line_start":53,"line_end":53,"column_start":2,"column_end":63}},{"value":"/ - Validity: The produced `BitPos` value must be within the valid range","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":206770,"byte_end":206844,"line_start":54,"line_end":54,"column_start":2,"column_end":76}},{"value":"/   of its type. This is enforced by [`BitPos::new`], but not by the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":206846,"byte_end":206916,"line_start":55,"line_end":55,"column_start":2,"column_end":72}},{"value":"/   unsafe constructor [`BitPos::new_unchecked`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":206918,"byte_end":206969,"line_start":56,"line_end":56,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":206971,"byte_end":206974,"line_start":57,"line_end":57,"column_start":2,"column_end":5}},{"value":"/ [`BitIdx::<R>::range_all()`]: crate::index::BitIdx::range_all","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":206976,"byte_end":207041,"line_start":58,"line_end":58,"column_start":2,"column_end":67}},{"value":"/ [`BitPos::new`]: crate::index::BitPos::new","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":207043,"byte_end":207089,"line_start":59,"line_end":59,"column_start":2,"column_end":48}},{"value":"/ [`BitPos::new_unchecked`]: crate::index::BitPos::new_unchecked","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":207091,"byte_end":207157,"line_start":60,"line_end":60,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":207550,"byte_end":207556,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"select","qualname":"::order::BitOrder::select","value":"pub fn select<R>(BitIdx<R>) -> BitSel<R> where R: BitRegister","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" Produces a single-bit selection mask from a bit-index.","sig":null,"attributes":[{"value":"/ Produces a single-bit selection mask from a bit-index.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":207224,"byte_end":207282,"line_start":64,"line_end":64,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":207284,"byte_end":207287,"line_start":65,"line_end":65,"column_start":2,"column_end":5}},{"value":"/ This is an optional function: it is implemented as, and must always be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":207289,"byte_end":207363,"line_start":66,"line_end":66,"column_start":2,"column_end":76}},{"value":"/ exactly identical to, `BitOrder::at(index).select()`. If your ordering","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":207365,"byte_end":207439,"line_start":67,"line_end":67,"column_start":2,"column_end":76}},{"value":"/ has a faster implementation, you may provide it, but it must be exactly","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":207441,"byte_end":207516,"line_start":68,"line_end":68,"column_start":2,"column_end":77}},{"value":"/ numerically equivalent.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":207518,"byte_end":207545,"line_start":69,"line_end":69,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":208486,"byte_end":208490,"line_start":97,"line_end":97,"column_start":5,"column_end":9},"name":"mask","qualname":"::order::BitOrder::mask","value":"pub fn mask<R, impl Into<Option<BitIdx<R>>>: Into<Option<BitIdx<R>>>,\nimpl Into<Option<BitEnd<R>>>: Into<Option<BitEnd<R>>>>(impl Into<Option<BitIdx<R>>>,\nimpl Into<Option<BitEnd<R>>>) -> BitMask<R> where R: BitRegister","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" Produces a multi-bit selection mask from a range of bit-indices.","sig":null,"attributes":[{"value":"/ Produces a multi-bit selection mask from a range of bit-indices.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":207652,"byte_end":207720,"line_start":75,"line_end":75,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":207722,"byte_end":207725,"line_start":76,"line_end":76,"column_start":2,"column_end":5}},{"value":"/ This is an optional function: it is implemented as, and must always be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":207727,"byte_end":207801,"line_start":77,"line_end":77,"column_start":2,"column_end":76}},{"value":"/ exactly identical to,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":207803,"byte_end":207828,"line_start":78,"line_end":78,"column_start":2,"column_end":27}},{"value":"/ `BitIdx::range(from, upto).map(BitOrder::select).sum()`. If your","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":207830,"byte_end":207898,"line_start":79,"line_end":79,"column_start":2,"column_end":70}},{"value":"/ ordering has a faster implementation, you may provide it, but it must be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":207900,"byte_end":207976,"line_start":80,"line_end":80,"column_start":2,"column_end":78}},{"value":"/ exactly numerically equivalent.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":207978,"byte_end":208013,"line_start":81,"line_end":81,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":208015,"byte_end":208018,"line_start":82,"line_end":82,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":208020,"byte_end":208037,"line_start":83,"line_end":83,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":208039,"byte_end":208042,"line_start":84,"line_end":84,"column_start":2,"column_end":5}},{"value":"/ - `from`: The inclusive starting value of the indices being selected.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":208044,"byte_end":208117,"line_start":85,"line_end":85,"column_start":2,"column_end":75}},{"value":"/   Defaults to [`BitIdx::MIN`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":208119,"byte_end":208153,"line_start":86,"line_end":86,"column_start":2,"column_end":36}},{"value":"/ - `upto`: The exclusive ending value of the indices being selected.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":208155,"byte_end":208226,"line_start":87,"line_end":87,"column_start":2,"column_end":73}},{"value":"/   Defaults to [`BitEnd::MAX`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":208228,"byte_end":208262,"line_start":88,"line_end":88,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":208264,"byte_end":208267,"line_start":89,"line_end":89,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":208269,"byte_end":208283,"line_start":90,"line_end":90,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":208285,"byte_end":208288,"line_start":91,"line_end":91,"column_start":2,"column_end":5}},{"value":"/ A selection mask with all bit-positions corresponding to `from .. upto`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":208290,"byte_end":208365,"line_start":92,"line_end":92,"column_start":2,"column_end":77}},{"value":"/ selected.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":208367,"byte_end":208380,"line_start":93,"line_end":93,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":208382,"byte_end":208385,"line_start":94,"line_end":94,"column_start":2,"column_end":5}},{"value":"/ [`BitEnd::MAX`]: crate::index::BitEnd::MAX","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":208387,"byte_end":208433,"line_start":95,"line_end":95,"column_start":2,"column_end":48}},{"value":"/ [`BitIdx::MIN`]: crate::index::BitIdx::MIN","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":208435,"byte_end":208481,"line_start":96,"line_end":96,"column_start":2,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5806},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":209042,"byte_end":209046,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"Lsb0","qualname":"::order::Lsb0","value":"","parent":null,"children":[],"decl_id":null,"docs":"# Least-Significant-First Bit Traversal","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5828},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":209183,"byte_end":209187,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"Msb0","qualname":"::order::Msb0","value":"","parent":null,"children":[],"decl_id":null,"docs":"# Most-Significant-First Bit Traversal","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1881},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":212484,"byte_end":212490,"line_start":231,"line_end":231,"column_start":8,"column_end":14},"name":"verify","qualname":"::order::verify","value":"pub fn verify<O>(bool) where O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Complete `BitOrder` Verification","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":212398,"byte_end":212428,"line_start":229,"line_end":229,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":1883},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":213010,"byte_end":213025,"line_start":253,"line_end":253,"column_start":8,"column_end":23},"name":"verify_for_type","qualname":"::order::verify_for_type","value":"pub fn verify_for_type<R, O>(bool) where R: BitRegister, O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Single-Type `BitOrder` Verification","sig":null,"attributes":[{"value":"cfg(not(miri))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":212928,"byte_end":212945,"line_start":251,"line_end":251,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1889},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ptr","qualname":"::ptr","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","parent":null,"children":[{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1894},{"krate":0,"index":1897},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1904},{"krate":0,"index":1907},{"krate":0,"index":1910},{"krate":0,"index":1913},{"krate":0,"index":2011},{"krate":0,"index":2224},{"krate":0,"index":2374},{"krate":0,"index":2657},{"krate":0,"index":2903},{"krate":0,"index":2904},{"krate":0,"index":2905},{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2910},{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2917},{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2925},{"krate":0,"index":2928},{"krate":0,"index":2931},{"krate":0,"index":2934},{"krate":0,"index":2935},{"krate":0,"index":2938},{"krate":0,"index":2941},{"krate":0,"index":2944},{"krate":0,"index":2949},{"krate":0,"index":2954},{"krate":0,"index":2957},{"krate":0,"index":2961},{"krate":0,"index":2965},{"krate":0,"index":2968},{"krate":0,"index":2971},{"krate":0,"index":2974},{"krate":0,"index":2977},{"krate":0,"index":2980},{"krate":0,"index":2983},{"krate":0,"index":2986},{"krate":0,"index":2989},{"krate":0,"index":2994},{"krate":0,"index":2999},{"krate":0,"index":3002},{"krate":0,"index":3005},{"krate":0,"index":3008},{"krate":0,"index":3011},{"krate":0,"index":3014},{"krate":0,"index":3017}],"decl_id":null,"docs":"# Raw Pointer Implementation","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1964},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":225893,"byte_end":225908,"line_start":31,"line_end":31,"column_start":8,"column_end":23},"name":"check_alignment","qualname":"::ptr::addr::check_alignment","value":"pub fn check_alignment<M, T>(Address<M, T>)\n-> Result<Address<M, T>, MisalignError<T>> where M: Mutability","parent":null,"children":[],"decl_id":null,"docs":" Ensures that an address is well-aligned to its referent type width.\n","sig":null,"attributes":[{"value":"/ Ensures that an address is well-aligned to its referent type width.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":225814,"byte_end":225885,"line_start":30,"line_end":30,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":1968},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":226303,"byte_end":226313,"line_start":48,"line_end":48,"column_start":7,"column_end":17},"name":"Permission","qualname":"::ptr::addr::AddressExt::Permission","value":"type Permission: Mutability;","parent":{"krate":0,"index":1967},"children":[],"decl_id":null,"docs":" Tracks the original mutation capability of the source pointer.\n","sig":null,"attributes":[{"value":"/ Tracks the original mutation capability of the source pointer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":226230,"byte_end":226296,"line_start":47,"line_end":47,"column_start":2,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":1969},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":226376,"byte_end":226384,"line_start":50,"line_end":50,"column_start":7,"column_end":15},"name":"Referent","qualname":"::ptr::addr::AddressExt::Referent","value":"type Referent: Sized;","parent":{"krate":0,"index":1967},"children":[],"decl_id":null,"docs":" The type to which the pointer points.\n","sig":null,"attributes":[{"value":"/ The type to which the pointer points.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":226328,"byte_end":226369,"line_start":49,"line_end":49,"column_start":2,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5850},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":228394,"byte_end":228407,"line_start":125,"line_end":125,"column_start":12,"column_end":25},"name":"MisalignError","qualname":"::ptr::addr::MisalignError","value":"MisalignError {  }","parent":null,"children":[{"krate":0,"index":5852}],"decl_id":null,"docs":" The error produced when an address is insufficiently aligned to the width of\n its type.\n","sig":null,"attributes":[{"value":"/ The error produced when an address is insufficiently aligned to the width of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":228227,"byte_end":228307,"line_start":122,"line_end":122,"column_start":1,"column_end":81}},{"value":"/ its type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":228308,"byte_end":228321,"line_start":123,"line_end":123,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2082},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":230239,"byte_end":230245,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"BitRef","qualname":"::ptr::proxy::BitRef","value":"BitRef {  }","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089}],"decl_id":null,"docs":"# Proxy Bit-Reference","sig":null,"attributes":[{"value":"repr(C, align(8))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":230115,"byte_end":230132,"line_start":44,"line_end":44,"column_start":41,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":231145,"byte_end":231156,"line_start":83,"line_end":83,"column_start":16,"column_end":27},"name":"from_bitptr","qualname":"<BitRef>::from_bitptr","value":"pub unsafe fn from_bitptr(BitPtr<M, T, O>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a bit-pointer into a proxy bit-reference.","sig":null,"attributes":[{"value":"/ Converts a bit-pointer into a proxy bit-reference.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":230667,"byte_end":230721,"line_start":69,"line_end":69,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":230723,"byte_end":230726,"line_start":70,"line_end":70,"column_start":2,"column_end":5}},{"value":"/ This reads through the pointer in order to cache the current bit value","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":230728,"byte_end":230802,"line_start":71,"line_end":71,"column_start":2,"column_end":76}},{"value":"/ in the proxy.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":230804,"byte_end":230821,"line_start":72,"line_end":72,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":230823,"byte_end":230826,"line_start":73,"line_end":73,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":230828,"byte_end":230843,"line_start":74,"line_end":74,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":230845,"byte_end":230848,"line_start":75,"line_end":75,"column_start":2,"column_end":5}},{"value":"/ The syntax `unsafe { &* ptr }`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":230850,"byte_end":230885,"line_start":76,"line_end":76,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":230887,"byte_end":230890,"line_start":77,"line_end":77,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":230892,"byte_end":230905,"line_start":78,"line_end":78,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":230907,"byte_end":230910,"line_start":79,"line_end":79,"column_start":2,"column_end":5}},{"value":"/ This is equivalent to (and is!) dereferencing a raw pointer. The pointer","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":230912,"byte_end":230988,"line_start":80,"line_end":80,"column_start":2,"column_end":78}},{"value":"/ must be well-constructed, refer to a live memory location in the program","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":230990,"byte_end":231066,"line_start":81,"line_end":81,"column_start":2,"column_end":78}},{"value":"/ context, and not be aliased beyond its typing indicators.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":231068,"byte_end":231129,"line_start":82,"line_end":82,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":231434,"byte_end":231445,"line_start":98,"line_end":98,"column_start":9,"column_end":20},"name":"into_bitptr","qualname":"<BitRef>::into_bitptr","value":"pub fn into_bitptr(Self) -> BitPtr<M, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Decays the bit-reference to an ordinary bit-pointer.","sig":null,"attributes":[{"value":"/ Decays the bit-reference to an ordinary bit-pointer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":231280,"byte_end":231336,"line_start":92,"line_end":92,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":231338,"byte_end":231341,"line_start":93,"line_end":93,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":231343,"byte_end":231358,"line_start":94,"line_end":94,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":231360,"byte_end":231363,"line_start":95,"line_end":95,"column_start":2,"column_end":5}},{"value":"/ The syntax `&val as *T`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":231365,"byte_end":231393,"line_start":96,"line_end":96,"column_start":2,"column_end":30}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":231395,"byte_end":231425,"line_start":97,"line_end":97,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232154,"byte_end":232161,"line_start":128,"line_end":128,"column_start":9,"column_end":16},"name":"replace","qualname":"<BitRef>::replace","value":"pub fn replace(&mut Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Moves `src` into the referenced bit, returning the previous value.","sig":null,"attributes":[{"value":"/ Moves `src` into the referenced bit, returning the previous value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232006,"byte_end":232076,"line_start":123,"line_end":123,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232078,"byte_end":232081,"line_start":124,"line_end":124,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232083,"byte_end":232098,"line_start":125,"line_end":125,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232100,"byte_end":232103,"line_start":126,"line_end":126,"column_start":2,"column_end":5}},{"value":"/ [`mem::replace`](core::mem::replace)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232105,"byte_end":232145,"line_start":127,"line_end":127,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232347,"byte_end":232351,"line_start":137,"line_end":137,"column_start":9,"column_end":13},"name":"swap","qualname":"<BitRef>::swap","value":"pub fn swap<T2, O2>(&mut Self, &mut BitRef<, Mut, T2, O2>) where T2: BitStore,\nO2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Swaps the bit values of two proxies.","sig":null,"attributes":[{"value":"/ Swaps the bit values of two proxies.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232235,"byte_end":232275,"line_start":132,"line_end":132,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232277,"byte_end":232280,"line_start":133,"line_end":133,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232282,"byte_end":232297,"line_start":134,"line_end":134,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232299,"byte_end":232302,"line_start":135,"line_end":135,"column_start":2,"column_end":5}},{"value":"/ [`mem::swap`](core::mem::swap)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232304,"byte_end":232338,"line_start":136,"line_end":136,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232776,"byte_end":232782,"line_start":150,"line_end":150,"column_start":9,"column_end":15},"name":"commit","qualname":"<BitRef>::commit","value":"pub fn commit(Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Commits a bit into the proxied location.","sig":null,"attributes":[{"value":"/ Commits a bit into the proxied location.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232496,"byte_end":232540,"line_start":145,"line_end":145,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232542,"byte_end":232545,"line_start":146,"line_end":146,"column_start":2,"column_end":5}},{"value":"/ This function writes `value` directly into the proxied location,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232547,"byte_end":232615,"line_start":147,"line_end":147,"column_start":2,"column_end":70}},{"value":"/ bypassing the cache and destroying the proxy. This eliminates the second","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232617,"byte_end":232693,"line_start":148,"line_end":148,"column_start":2,"column_end":78}},{"value":"/ write done in the destructor, and allows code to be slightly faster.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232695,"byte_end":232767,"line_start":149,"line_end":149,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":233029,"byte_end":233032,"line_start":161,"line_end":161,"column_start":9,"column_end":12},"name":"set","qualname":"<BitRef>::set","value":"pub fn set(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Writes `value` into the proxy.","sig":null,"attributes":[{"value":"/ Writes `value` into the proxy.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232874,"byte_end":232908,"line_start":157,"line_end":157,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232910,"byte_end":232913,"line_start":158,"line_end":158,"column_start":2,"column_end":5}},{"value":"/ This does not write into the proxied location; that is deferred until","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232915,"byte_end":232988,"line_start":159,"line_end":159,"column_start":2,"column_end":75}},{"value":"/ the proxy destructor runs.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":232990,"byte_end":233020,"line_start":160,"line_end":160,"column_start":2,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2284},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":238592,"byte_end":238603,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"BitPtrRange","qualname":"::ptr::range::BitPtrRange","value":"BitPtrRange { start, end }","parent":null,"children":[{"krate":0,"index":2288},{"krate":0,"index":2289}],"decl_id":null,"docs":"# Bit-Pointer Range","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":238516,"byte_end":238526,"line_start":39,"line_end":39,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2288},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":238794,"byte_end":238799,"line_start":49,"line_end":49,"column_start":6,"column_end":11},"name":"start","qualname":"::ptr::range::BitPtrRange::start","value":"ptr::single::BitPtr<M, T, O>","parent":{"krate":0,"index":2284},"children":[],"decl_id":null,"docs":" The lower, inclusive, bound of the range. The bit to which this points\n is considered live.\n","sig":null,"attributes":[{"value":"/ The lower, inclusive, bound of the range. The bit to which this points","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":238689,"byte_end":238763,"line_start":47,"line_end":47,"column_start":2,"column_end":76}},{"value":"/ is considered live.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":238765,"byte_end":238788,"line_start":48,"line_end":48,"column_start":2,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2289},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":239375,"byte_end":239378,"line_start":59,"line_end":59,"column_start":6,"column_end":9},"name":"end","qualname":"::ptr::range::BitPtrRange::end","value":"ptr::single::BitPtr<M, T, O>","parent":{"krate":0,"index":2284},"children":[],"decl_id":null,"docs":" The higher, exclusive, bound of the range. The bit to which this points\n is considered dead, and the pointer may be one bit beyond the bounds of\n an allocation region.","sig":null,"attributes":[{"value":"/ The higher, exclusive, bound of the range. The bit to which this points","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":238819,"byte_end":238894,"line_start":50,"line_end":50,"column_start":2,"column_end":77}},{"value":"/ is considered dead, and the pointer may be one bit beyond the bounds of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":238896,"byte_end":238971,"line_start":51,"line_end":51,"column_start":2,"column_end":77}},{"value":"/ an allocation region.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":238973,"byte_end":238998,"line_start":52,"line_end":52,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":239000,"byte_end":239003,"line_start":53,"line_end":53,"column_start":2,"column_end":5}},{"value":"/ Because Rust and LLVM both define the address of `base + (len * width)`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":239005,"byte_end":239080,"line_start":54,"line_end":54,"column_start":2,"column_end":77}},{"value":"/ as being within the provenance of `base`, even though that address may","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":239082,"byte_end":239156,"line_start":55,"line_end":55,"column_start":2,"column_end":76}},{"value":"/ itself be the base address of another region in a different provenance,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":239158,"byte_end":239233,"line_start":56,"line_end":56,"column_start":2,"column_end":77}},{"value":"/ and bit-pointers are always composed of an ordinary memory address and a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":239235,"byte_end":239311,"line_start":57,"line_end":57,"column_start":2,"column_end":78}},{"value":"/ bit-counter, the ending bit-pointer is always valid.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":239313,"byte_end":239369,"line_start":58,"line_end":58,"column_start":2,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":2294},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":239612,"byte_end":239617,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"EMPTY","qualname":"::ptr::range::BitPtrRange::<M, T, O>::EMPTY","value":"Self","parent":{"krate":0,"index":2290},"children":[],"decl_id":null,"docs":" The canonical empty range. All ranges with zero length (equal `.start`\n and `.end`) are equally empty.\n","sig":null,"attributes":[{"value":"/ The canonical empty range. All ranges with zero length (equal `.start`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":239490,"byte_end":239564,"line_start":68,"line_end":68,"column_start":2,"column_end":76}},{"value":"/ and `.end`) are equally empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":239566,"byte_end":239600,"line_start":69,"line_end":69,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":239765,"byte_end":239775,"line_start":76,"line_end":76,"column_start":9,"column_end":19},"name":"from_range","qualname":"<BitPtrRange<M, T, O>>::from_range","value":"pub fn from_range(Range<BitPtr<M, T, O>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Explicitly converts a `Range<BitPtr>` into a `BitPtrRange`.\n","sig":null,"attributes":[{"value":"/ Explicitly converts a `Range<BitPtr>` into a `BitPtrRange`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":239693,"byte_end":239756,"line_start":75,"line_end":75,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":239931,"byte_end":239941,"line_start":81,"line_end":81,"column_start":9,"column_end":19},"name":"into_range","qualname":"<BitPtrRange<M, T, O>>::into_range","value":"pub fn into_range(Self) -> Range<BitPtr<M, T, O>>","parent":null,"children":[],"decl_id":null,"docs":" Explicitly converts a `BitPtrRange` into a `Range<BitPtr>`.\n","sig":null,"attributes":[{"value":"/ Explicitly converts a `BitPtrRange` into a `Range<BitPtr>`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":239859,"byte_end":239922,"line_start":80,"line_end":80,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2297},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240639,"byte_end":240647,"line_start":110,"line_end":110,"column_start":9,"column_end":17},"name":"is_empty","qualname":"<BitPtrRange<M, T, O>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the range is empty (the distance between bit-pointers is `0`).","sig":null,"attributes":[{"value":"/ Tests if the range is empty (the distance between bit-pointers is `0`).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240030,"byte_end":240105,"line_start":86,"line_end":86,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240107,"byte_end":240110,"line_start":87,"line_end":87,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240112,"byte_end":240127,"line_start":88,"line_end":88,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240129,"byte_end":240132,"line_start":89,"line_end":89,"column_start":2,"column_end":5}},{"value":"/ [`Range::is_empty`](core::ops::Range::is_empty)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240134,"byte_end":240185,"line_start":90,"line_end":90,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240187,"byte_end":240190,"line_start":91,"line_end":91,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240192,"byte_end":240207,"line_start":92,"line_end":92,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240209,"byte_end":240212,"line_start":93,"line_end":93,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240214,"byte_end":240225,"line_start":94,"line_end":94,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240227,"byte_end":240254,"line_start":95,"line_end":95,"column_start":2,"column_end":29}},{"value":"/ use bitvec::ptr::BitPtrRange;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240256,"byte_end":240289,"line_start":96,"line_end":96,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240291,"byte_end":240294,"line_start":97,"line_end":97,"column_start":2,"column_end":5}},{"value":"/ let data = 0u8;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240296,"byte_end":240315,"line_start":98,"line_end":98,"column_start":2,"column_end":21}},{"value":"/ let bp = BitPtr::<_, _, Lsb0>::from_ref(&data);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240317,"byte_end":240368,"line_start":99,"line_end":99,"column_start":2,"column_end":53}},{"value":"/ let mut range = BitPtrRange::from_range(bp .. bp.wrapping_add(1));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240370,"byte_end":240440,"line_start":100,"line_end":100,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240442,"byte_end":240445,"line_start":101,"line_end":101,"column_start":2,"column_end":5}},{"value":"/ assert!(!range.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240447,"byte_end":240478,"line_start":102,"line_end":102,"column_start":2,"column_end":33}},{"value":"/ assert_ne!(range.start, range.end);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240480,"byte_end":240519,"line_start":103,"line_end":103,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240521,"byte_end":240524,"line_start":104,"line_end":104,"column_start":2,"column_end":5}},{"value":"/ range.next();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240526,"byte_end":240543,"line_start":105,"line_end":105,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240545,"byte_end":240548,"line_start":106,"line_end":106,"column_start":2,"column_end":5}},{"value":"/ assert!(range.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240550,"byte_end":240580,"line_start":107,"line_end":107,"column_start":2,"column_end":32}},{"value":"/ assert_eq!(range.start, range.end);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240582,"byte_end":240621,"line_start":108,"line_end":108,"column_start":2,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240623,"byte_end":240630,"line_start":109,"line_end":109,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241942,"byte_end":241950,"line_start":152,"line_end":152,"column_start":9,"column_end":17},"name":"contains","qualname":"<BitPtrRange<M, T, O>>::contains","value":"pub fn contains<M2, T2>(&Self, &BitPtr<M2, T2, O>) -> bool where\nM2: Mutability, T2: BitStore","parent":null,"children":[],"decl_id":null,"docs":" Tests if a given bit-pointer is contained within the range.","sig":null,"attributes":[{"value":"/ Tests if a given bit-pointer is contained within the range.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240695,"byte_end":240758,"line_start":114,"line_end":114,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240760,"byte_end":240763,"line_start":115,"line_end":115,"column_start":2,"column_end":5}},{"value":"/ Bit-pointer ordering is defined when the types have the same exact","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240765,"byte_end":240835,"line_start":116,"line_end":116,"column_start":2,"column_end":72}},{"value":"/ `BitOrder` type parameter and the same `BitStore::Mem` associated type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240837,"byte_end":240911,"line_start":117,"line_end":117,"column_start":2,"column_end":76}},{"value":"/ (but are free to differ in alias condition!). Inclusion in a range","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240913,"byte_end":240983,"line_start":118,"line_end":118,"column_start":2,"column_end":72}},{"value":"/ occurs when the bit-pointer is not strictly less than the range start,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":240985,"byte_end":241059,"line_start":119,"line_end":119,"column_start":2,"column_end":76}},{"value":"/ and is strictly less than the range end.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241061,"byte_end":241105,"line_start":120,"line_end":120,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241107,"byte_end":241110,"line_start":121,"line_end":121,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241112,"byte_end":241127,"line_start":122,"line_end":122,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241129,"byte_end":241132,"line_start":123,"line_end":123,"column_start":2,"column_end":5}},{"value":"/ [`Range::contains`](core::ops::Range::contains)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241134,"byte_end":241185,"line_start":124,"line_end":124,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241187,"byte_end":241190,"line_start":125,"line_end":125,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241192,"byte_end":241207,"line_start":126,"line_end":126,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241209,"byte_end":241212,"line_start":127,"line_end":127,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241214,"byte_end":241225,"line_start":128,"line_end":128,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241227,"byte_end":241254,"line_start":129,"line_end":129,"column_start":2,"column_end":29}},{"value":"/ use bitvec::ptr::BitPtrRange;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241256,"byte_end":241289,"line_start":130,"line_end":130,"column_start":2,"column_end":35}},{"value":"/ use core::cell::Cell;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241291,"byte_end":241316,"line_start":131,"line_end":131,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241318,"byte_end":241321,"line_start":132,"line_end":132,"column_start":2,"column_end":5}},{"value":"/ let data = 0u16;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241323,"byte_end":241343,"line_start":133,"line_end":133,"column_start":2,"column_end":22}},{"value":"/ let bp = BitPtr::<_, _, Lsb0>::from_ref(&data);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241345,"byte_end":241396,"line_start":134,"line_end":134,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241398,"byte_end":241401,"line_start":135,"line_end":135,"column_start":2,"column_end":5}},{"value":"/ let mut range = BitPtrRange::from_range(bp .. bp.wrapping_add(16));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241403,"byte_end":241474,"line_start":136,"line_end":136,"column_start":2,"column_end":73}},{"value":"/ range.nth(2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241476,"byte_end":241493,"line_start":137,"line_end":137,"column_start":2,"column_end":19}},{"value":"/ range.nth_back(2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241495,"byte_end":241517,"line_start":138,"line_end":138,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241519,"byte_end":241522,"line_start":139,"line_end":139,"column_start":2,"column_end":5}},{"value":"/ assert!(bp < range.start);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241524,"byte_end":241554,"line_start":140,"line_end":140,"column_start":2,"column_end":32}},{"value":"/ assert!(!range.contains(&bp));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241556,"byte_end":241590,"line_start":141,"line_end":141,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241592,"byte_end":241595,"line_start":142,"line_end":142,"column_start":2,"column_end":5}},{"value":"/ let mid = bp.wrapping_add(8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241597,"byte_end":241630,"line_start":143,"line_end":143,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241632,"byte_end":241635,"line_start":144,"line_end":144,"column_start":2,"column_end":5}},{"value":"/ let same_mem = mid.cast::<Cell<u16>>();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241637,"byte_end":241680,"line_start":145,"line_end":145,"column_start":2,"column_end":45}},{"value":"/ assert!(range.contains(&mid));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241682,"byte_end":241716,"line_start":146,"line_end":146,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241718,"byte_end":241725,"line_start":147,"line_end":147,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241727,"byte_end":241730,"line_start":148,"line_end":148,"column_start":2,"column_end":5}},{"value":"/ Casting to a different `BitStore` type whose `Mem` parameter differs","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241732,"byte_end":241804,"line_start":149,"line_end":149,"column_start":2,"column_end":74}},{"value":"/ from the range always results in a `false` response, even if the pointer","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241806,"byte_end":241882,"line_start":150,"line_end":150,"column_start":2,"column_end":78}},{"value":"/ being tested is numerically within the range.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":241884,"byte_end":241933,"line_start":151,"line_end":151,"column_start":2,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2489},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":247372,"byte_end":247378,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"BitPtr","qualname":"::ptr::single::BitPtr","value":"BitPtr {  }","parent":null,"children":[{"krate":0,"index":2493},{"krate":0,"index":2494},{"krate":0,"index":2495}],"decl_id":null,"docs":"# Single-Bit Pointer","sig":null,"attributes":[{"value":"repr(C, packed)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":247293,"byte_end":247311,"line_start":59,"line_end":59,"column_start":1,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":2500},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":248076,"byte_end":248084,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"DANGLING","qualname":"::ptr::single::BitPtr::<M, T, O>::DANGLING","value":"Self","parent":{"krate":0,"index":2496},"children":[],"decl_id":null,"docs":" The canonical dangling pointer. This selects the starting bit of the\n canonical dangling pointer for `T`.\n","sig":null,"attributes":[{"value":"/ The canonical dangling pointer. This selects the starting bit of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":247951,"byte_end":248023,"line_start":85,"line_end":85,"column_start":2,"column_end":74}},{"value":"/ canonical dangling pointer for `T`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":248025,"byte_end":248064,"line_start":86,"line_end":86,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249592,"byte_end":249595,"line_start":126,"line_end":126,"column_start":9,"column_end":12},"name":"new","qualname":"<BitPtr<M, T, O>>::new","value":"pub fn new(Address<M, T>, BitIdx<T::Mem>) -> Result<Self, MisalignError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to construct a `BitPtr` from a memory location and a bit index.","sig":null,"attributes":[{"value":"/ Tries to construct a `BitPtr` from a memory location and a bit index.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":248488,"byte_end":248561,"line_start":101,"line_end":101,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":248563,"byte_end":248566,"line_start":102,"line_end":102,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":248568,"byte_end":248585,"line_start":103,"line_end":103,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":248587,"byte_end":248590,"line_start":104,"line_end":104,"column_start":2,"column_end":5}},{"value":"/ - `ptr`: The address of a memory element. `Address` wraps raw pointers","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":248592,"byte_end":248666,"line_start":105,"line_end":105,"column_start":2,"column_end":76}},{"value":"/   or references, and enforces that they are not null. `BitPtr`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":248668,"byte_end":248734,"line_start":106,"line_end":106,"column_start":2,"column_end":68}},{"value":"/   additionally requires that the address be well-aligned to its type;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":248736,"byte_end":248809,"line_start":107,"line_end":107,"column_start":2,"column_end":75}},{"value":"/   misaligned addresses cause this to return an error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":248811,"byte_end":248868,"line_start":108,"line_end":108,"column_start":2,"column_end":59}},{"value":"/ - `bit`: The index of the selected bit within `*ptr`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":248870,"byte_end":248927,"line_start":109,"line_end":109,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":248929,"byte_end":248932,"line_start":110,"line_end":110,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":248934,"byte_end":248948,"line_start":111,"line_end":111,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":248950,"byte_end":248953,"line_start":112,"line_end":112,"column_start":2,"column_end":5}},{"value":"/ This returns an error if `ptr` is not aligned to `T`; otherwise, it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":248955,"byte_end":249026,"line_start":113,"line_end":113,"column_start":2,"column_end":73}},{"value":"/ returns a new bit-pointer structure to the given element and bit.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249028,"byte_end":249097,"line_start":114,"line_end":114,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249099,"byte_end":249102,"line_start":115,"line_end":115,"column_start":2,"column_end":5}},{"value":"/ You should typically prefer to use constructors that take directly from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249104,"byte_end":249179,"line_start":116,"line_end":116,"column_start":2,"column_end":77}},{"value":"/ a memory reference or pointer, such as the `TryFrom<*T>`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249181,"byte_end":249241,"line_start":117,"line_end":117,"column_start":2,"column_end":62}},{"value":"/ implementations, the `From<&/mut T>` implementations, or the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249243,"byte_end":249307,"line_start":118,"line_end":118,"column_start":2,"column_end":66}},{"value":"/ [`::from_ref()`], [`::from_mut()`], [`::from_slice()`], or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249309,"byte_end":249371,"line_start":119,"line_end":119,"column_start":2,"column_end":64}},{"value":"/ [`::from_slice_mut()`] functions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249373,"byte_end":249410,"line_start":120,"line_end":120,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249412,"byte_end":249415,"line_start":121,"line_end":121,"column_start":2,"column_end":5}},{"value":"/ [`::from_mut()`]: Self::from_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249417,"byte_end":249453,"line_start":122,"line_end":122,"column_start":2,"column_end":38}},{"value":"/ [`::from_ref()`]: Self::from_ref","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249455,"byte_end":249491,"line_start":123,"line_end":123,"column_start":2,"column_end":38}},{"value":"/ [`::from_slice()`]: Self::from_slice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249493,"byte_end":249533,"line_start":124,"line_end":124,"column_start":2,"column_end":42}},{"value":"/ [`::from_slice_mut()`]: Self::from_slice_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249535,"byte_end":249583,"line_start":125,"line_end":125,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250593,"byte_end":250606,"line_start":160,"line_end":160,"column_start":16,"column_end":29},"name":"new_unchecked","qualname":"<BitPtr<M, T, O>>::new_unchecked","value":"pub unsafe fn new_unchecked(Address<M, T>, BitIdx<T::Mem>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `BitPtr` from an address and head index, without checking\n the address for validity.","sig":null,"attributes":[{"value":"/ Constructs a `BitPtr` from an address and head index, without checking","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249762,"byte_end":249836,"line_start":137,"line_end":137,"column_start":2,"column_end":76}},{"value":"/ the address for validity.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249838,"byte_end":249867,"line_start":138,"line_end":138,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249869,"byte_end":249872,"line_start":139,"line_end":139,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249874,"byte_end":249891,"line_start":140,"line_end":140,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249893,"byte_end":249896,"line_start":141,"line_end":141,"column_start":2,"column_end":5}},{"value":"/ - `addr`: The memory address to use in the bit-pointer. See the Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249898,"byte_end":249972,"line_start":142,"line_end":142,"column_start":2,"column_end":76}},{"value":"/   section.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249974,"byte_end":249988,"line_start":143,"line_end":143,"column_start":2,"column_end":16}},{"value":"/ - `head`: The index of the bit in `*addr` that this bit-pointer selects.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":249990,"byte_end":250066,"line_start":144,"line_end":144,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250068,"byte_end":250071,"line_start":145,"line_end":145,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250073,"byte_end":250087,"line_start":146,"line_end":146,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250089,"byte_end":250092,"line_start":147,"line_end":147,"column_start":2,"column_end":5}},{"value":"/ A new bit-pointer composed of the parameters. No validity checking is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250094,"byte_end":250167,"line_start":148,"line_end":148,"column_start":2,"column_end":75}},{"value":"/ performed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250169,"byte_end":250183,"line_start":149,"line_end":149,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250185,"byte_end":250188,"line_start":150,"line_end":150,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250190,"byte_end":250203,"line_start":151,"line_end":151,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250205,"byte_end":250208,"line_start":152,"line_end":152,"column_start":2,"column_end":5}},{"value":"/ The `Address` type imposes a non-null requirement. `BitPtr` additionally","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250210,"byte_end":250286,"line_start":153,"line_end":153,"column_start":2,"column_end":78}},{"value":"/ requires that `addr` is well-aligned for `T`, and presumes that the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250288,"byte_end":250359,"line_start":154,"line_end":154,"column_start":2,"column_end":73}},{"value":"/ caller has ensured this with [`bv_ptr::check_alignment`][0]. If this is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250361,"byte_end":250436,"line_start":155,"line_end":155,"column_start":2,"column_end":77}},{"value":"/ not the case, then the program is incorrect, and subsequent behavior is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250438,"byte_end":250513,"line_start":156,"line_end":156,"column_start":2,"column_end":77}},{"value":"/ not specified.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250515,"byte_end":250533,"line_start":157,"line_end":157,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250535,"byte_end":250538,"line_start":158,"line_end":158,"column_start":2,"column_end":5}},{"value":"/ [0]: crate::ptr::check_alignment.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250540,"byte_end":250577,"line_start":159,"line_end":159,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250862,"byte_end":250869,"line_start":177,"line_end":177,"column_start":9,"column_end":16},"name":"address","qualname":"<BitPtr<M, T, O>>::address","value":"pub fn address(Self) -> Address<M, T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the address of the base storage element.\n","sig":null,"attributes":[{"value":"/ Gets the address of the base storage element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250804,"byte_end":250853,"line_start":176,"line_end":176,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250996,"byte_end":250999,"line_start":182,"line_end":182,"column_start":9,"column_end":12},"name":"bit","qualname":"<BitPtr<M, T, O>>::bit","value":"pub fn bit(Self) -> BitIdx<T::Mem>","parent":null,"children":[],"decl_id":null,"docs":" Gets the `BitIdx` that selects the bit within the memory element.\n","sig":null,"attributes":[{"value":"/ Gets the `BitIdx` that selects the bit within the memory element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":250918,"byte_end":250987,"line_start":181,"line_end":181,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":251354,"byte_end":251363,"line_start":197,"line_end":197,"column_start":9,"column_end":18},"name":"raw_parts","qualname":"<BitPtr<M, T, O>>::raw_parts","value":"pub fn raw_parts(Self) -> (Address<M, T>, BitIdx<T::Mem>)","parent":null,"children":[],"decl_id":null,"docs":" Decomposes a bit-pointer into its element address and bit index.","sig":null,"attributes":[{"value":"/ Decomposes a bit-pointer into its element address and bit index.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":251042,"byte_end":251110,"line_start":186,"line_end":186,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":251112,"byte_end":251115,"line_start":187,"line_end":187,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":251117,"byte_end":251134,"line_start":188,"line_end":188,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":251136,"byte_end":251139,"line_start":189,"line_end":189,"column_start":2,"column_end":5}},{"value":"/ - `self`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":251141,"byte_end":251153,"line_start":190,"line_end":190,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":251155,"byte_end":251158,"line_start":191,"line_end":191,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":251160,"byte_end":251174,"line_start":192,"line_end":192,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":251176,"byte_end":251179,"line_start":193,"line_end":193,"column_start":2,"column_end":5}},{"value":"/ - `.0`: The memory address in which the referent bit is located.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":251181,"byte_end":251249,"line_start":194,"line_end":194,"column_start":2,"column_end":70}},{"value":"/ - `.1`: The index of the referent bit in `*.0` according to the `O` type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":251251,"byte_end":251327,"line_start":195,"line_end":195,"column_start":2,"column_end":78}},{"value":"/   parameter.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":251329,"byte_end":251345,"line_start":196,"line_end":196,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":253426,"byte_end":253434,"line_start":259,"line_end":259,"column_start":9,"column_end":17},"name":"to_const","qualname":"<BitPtr<M, T, O>>::to_const","value":"pub fn to_const(Self) -> BitPtr<Const, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Removes write permissions from a bit-pointer.\n","sig":null,"attributes":[{"value":"/ Removes write permissions from a bit-pointer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":253368,"byte_end":253417,"line_start":258,"line_end":258,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":253752,"byte_end":253758,"line_start":277,"line_end":277,"column_start":16,"column_end":22},"name":"to_mut","qualname":"<BitPtr<M, T, O>>::to_mut","value":"pub unsafe fn to_mut(Self) -> BitPtr<Mut, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Adds write permissions to a bit-pointer.","sig":null,"attributes":[{"value":"/ Adds write permissions to a bit-pointer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":253603,"byte_end":253647,"line_start":272,"line_end":272,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":253649,"byte_end":253652,"line_start":273,"line_end":273,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":253654,"byte_end":253667,"line_start":274,"line_end":274,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":253669,"byte_end":253672,"line_start":275,"line_end":275,"column_start":2,"column_end":5}},{"value":"/ This pointer must have been derived from a `*mut` pointer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":253674,"byte_end":253736,"line_start":276,"line_end":276,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2516},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":254506,"byte_end":254514,"line_start":315,"line_end":315,"column_start":9,"column_end":17},"name":"from_ref","qualname":"<BitPtr<Const, T, O>>::from_ref","value":"pub fn from_ref(&T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `BitPtr` to the zeroth bit in a single element.\n","sig":null,"attributes":[{"value":"/ Constructs a `BitPtr` to the zeroth bit in a single element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":254433,"byte_end":254497,"line_start":314,"line_end":314,"column_start":2,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":254995,"byte_end":255005,"line_start":326,"line_end":326,"column_start":9,"column_end":19},"name":"from_slice","qualname":"<BitPtr<Const, T, O>>::from_slice","value":"pub fn from_slice(&[T]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `BitPtr` to the zeroth bit in the zeroth element of a\n slice.","sig":null,"attributes":[{"value":"/ Constructs a `BitPtr` to the zeroth bit in the zeroth element of a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":254599,"byte_end":254669,"line_start":319,"line_end":319,"column_start":2,"column_end":72}},{"value":"/ slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":254671,"byte_end":254681,"line_start":320,"line_end":320,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":254683,"byte_end":254686,"line_start":321,"line_end":321,"column_start":2,"column_end":5}},{"value":"/ This method is distinct from `Self::from_ref(&elem[0])`, because it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":254688,"byte_end":254759,"line_start":322,"line_end":322,"column_start":2,"column_end":73}},{"value":"/ ensures that the returned bit-pointer has provenance over the entire","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":254761,"byte_end":254833,"line_start":323,"line_end":323,"column_start":2,"column_end":74}},{"value":"/ slice. Indexing within a slice narrows the provenance range, and makes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":254835,"byte_end":254909,"line_start":324,"line_end":324,"column_start":2,"column_end":76}},{"value":"/ departure from the subslice, *even within the original slice*, illegal.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":254911,"byte_end":254986,"line_start":325,"line_end":325,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2518},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":255230,"byte_end":255237,"line_start":334,"line_end":334,"column_start":9,"column_end":16},"name":"pointer","qualname":"<BitPtr<Const, T, O>>::pointer","value":"pub fn pointer(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Gets a raw pointer to the memory element containing the selected bit.\n","sig":null,"attributes":[{"value":"/ Gets a raw pointer to the memory element containing the selected bit.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":255116,"byte_end":255189,"line_start":332,"line_end":332,"column_start":2,"column_end":75}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":255191,"byte_end":255221,"line_start":333,"line_end":333,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2522},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":255441,"byte_end":255449,"line_start":345,"line_end":345,"column_start":9,"column_end":17},"name":"from_mut","qualname":"<BitPtr<Mut, T, O>>::from_mut","value":"pub fn from_mut(&mut T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable `BitPtr` to the zeroth bit in a single element.\n","sig":null,"attributes":[{"value":"/ Constructs a mutable `BitPtr` to the zeroth bit in a single element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":255360,"byte_end":255432,"line_start":344,"line_end":344,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":255946,"byte_end":255960,"line_start":356,"line_end":356,"column_start":9,"column_end":23},"name":"from_mut_slice","qualname":"<BitPtr<Mut, T, O>>::from_mut_slice","value":"pub fn from_mut_slice(&mut [T]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `BitPtr` to the zeroth bit in the zeroth element of a\n mutable slice.","sig":null,"attributes":[{"value":"/ Constructs a `BitPtr` to the zeroth bit in the zeroth element of a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":255538,"byte_end":255608,"line_start":349,"line_end":349,"column_start":2,"column_end":72}},{"value":"/ mutable slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":255610,"byte_end":255628,"line_start":350,"line_end":350,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":255630,"byte_end":255633,"line_start":351,"line_end":351,"column_start":2,"column_end":5}},{"value":"/ This method is distinct from `Self::from_mut(&mut elem[0])`, because it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":255635,"byte_end":255710,"line_start":352,"line_end":352,"column_start":2,"column_end":77}},{"value":"/ ensures that the returned bit-pointer has provenance over the entire","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":255712,"byte_end":255784,"line_start":353,"line_end":353,"column_start":2,"column_end":74}},{"value":"/ slice. Indexing within a slice narrows the provenance range, and makes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":255786,"byte_end":255860,"line_start":354,"line_end":354,"column_start":2,"column_end":76}},{"value":"/ departure from the subslice, *even within the original slice*, illegal.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":255862,"byte_end":255937,"line_start":355,"line_end":355,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":256487,"byte_end":256501,"line_start":369,"line_end":369,"column_start":9,"column_end":23},"name":"from_slice_mut","qualname":"<BitPtr<Mut, T, O>>::from_slice_mut","value":"pub fn from_slice_mut(&mut [T]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a mutable `BitPtr` to the zeroth bit in the zeroth element of\n a slice.","sig":null,"attributes":[{"value":"/ Constructs a mutable `BitPtr` to the zeroth bit in the zeroth element of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":256079,"byte_end":256155,"line_start":362,"line_end":362,"column_start":2,"column_end":78}},{"value":"/ a slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":256157,"byte_end":256169,"line_start":363,"line_end":363,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":256171,"byte_end":256174,"line_start":364,"line_end":364,"column_start":2,"column_end":5}},{"value":"/ This method is distinct from `Self::from_mut(&mut elem[0])`, because it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":256176,"byte_end":256251,"line_start":365,"line_end":365,"column_start":2,"column_end":77}},{"value":"/ ensures that the returned bit-pointer has provenance over the entire","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":256253,"byte_end":256325,"line_start":366,"line_end":366,"column_start":2,"column_end":74}},{"value":"/ slice. Indexing within a slice narrows the provenance range, and makes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":256327,"byte_end":256401,"line_start":367,"line_end":367,"column_start":2,"column_end":76}},{"value":"/ departure from the subslice, *even within the original slice*, illegal.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":256403,"byte_end":256478,"line_start":368,"line_end":368,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":256735,"byte_end":256742,"line_start":377,"line_end":377,"column_start":9,"column_end":16},"name":"pointer","qualname":"<BitPtr<Mut, T, O>>::pointer","value":"pub fn pointer(&Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a raw pointer to the memory location containing the selected bit.\n","sig":null,"attributes":[{"value":"/ Gets a raw pointer to the memory location containing the selected bit.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":256620,"byte_end":256694,"line_start":375,"line_end":375,"column_start":2,"column_end":76}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":256696,"byte_end":256726,"line_start":376,"line_end":376,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257278,"byte_end":257285,"line_start":398,"line_end":398,"column_start":9,"column_end":16},"name":"is_null","qualname":"<BitPtr<M, T, O>>::is_null","value":"pub fn is_null(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if a bit-pointer is the null value.","sig":null,"attributes":[{"value":"/ Tests if a bit-pointer is the null value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":256916,"byte_end":256961,"line_start":389,"line_end":389,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":256963,"byte_end":256966,"line_start":390,"line_end":390,"column_start":2,"column_end":5}},{"value":"/ This is always false, as a `BitPtr` is a `NonNull` internally. Use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":256968,"byte_end":257038,"line_start":391,"line_end":391,"column_start":2,"column_end":72}},{"value":"/ `Option<BitPtr>` to express the potential for a null pointer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257040,"byte_end":257105,"line_start":392,"line_end":392,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257107,"byte_end":257110,"line_start":393,"line_end":393,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257112,"byte_end":257127,"line_start":394,"line_end":394,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257129,"byte_end":257132,"line_start":395,"line_end":395,"column_start":2,"column_end":5}},{"value":"/ [`pointer::is_null`](https://doc.rust-lang.org/std/primitive.pointer.html#method.is_null)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257134,"byte_end":257227,"line_start":396,"line_end":396,"column_start":2,"column_end":95}},{"value":"deprecated = \"`BitPtr` is never null\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257229,"byte_end":257269,"line_start":397,"line_end":397,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257882,"byte_end":257886,"line_start":414,"line_end":414,"column_start":9,"column_end":13},"name":"cast","qualname":"<BitPtr<M, T, O>>::cast","value":"pub fn cast<U>(Self) -> BitPtr<M, U, O> where U: BitStore","parent":null,"children":[],"decl_id":null,"docs":" Casts to a `BitPtr` with a different storage parameter.","sig":null,"attributes":[{"value":"/ Casts to a `BitPtr` with a different storage parameter.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257315,"byte_end":257374,"line_start":402,"line_end":402,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257376,"byte_end":257379,"line_start":403,"line_end":403,"column_start":2,"column_end":5}},{"value":"/ This is not free! In order to maintain value integrity, it encodes a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257381,"byte_end":257453,"line_start":404,"line_end":404,"column_start":2,"column_end":74}},{"value":"/ `BitSpan` encoded descriptor with its value, casts that, then decodes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257455,"byte_end":257528,"line_start":405,"line_end":405,"column_start":2,"column_end":75}},{"value":"/ into a `BitPtr` of the target type. If `T` and `U` have different","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257530,"byte_end":257599,"line_start":406,"line_end":406,"column_start":2,"column_end":71}},{"value":"/ `::Mem` associated types, then this may change the selected bit in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257601,"byte_end":257671,"line_start":407,"line_end":407,"column_start":2,"column_end":72}},{"value":"/ memory. This is an unavoidable cost of the addressing and encoding","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257673,"byte_end":257743,"line_start":408,"line_end":408,"column_start":2,"column_end":72}},{"value":"/ schemes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257745,"byte_end":257757,"line_start":409,"line_end":409,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257759,"byte_end":257762,"line_start":410,"line_end":410,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257764,"byte_end":257779,"line_start":411,"line_end":411,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257781,"byte_end":257784,"line_start":412,"line_end":412,"column_start":2,"column_end":5}},{"value":"/ [`pointer::cast`](https://doc.rust-lang.org/std/primitive.pointer.html#method.cast)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":257786,"byte_end":257873,"line_start":413,"line_end":413,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258619,"byte_end":258631,"line_start":435,"line_end":435,"column_start":9,"column_end":21},"name":"to_raw_parts","qualname":"<BitPtr<M, T, O>>::to_raw_parts","value":"pub fn to_raw_parts(Self) -> (Address<M, T>, BitIdx<T::Mem>)","parent":null,"children":[],"decl_id":null,"docs":" Decomposes a bit-pointer into its address and head-index components.","sig":null,"attributes":[{"value":"/ Decomposes a bit-pointer into its address and head-index components.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258074,"byte_end":258146,"line_start":421,"line_end":421,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258148,"byte_end":258151,"line_start":422,"line_end":422,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258153,"byte_end":258168,"line_start":423,"line_end":423,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258170,"byte_end":258173,"line_start":424,"line_end":424,"column_start":2,"column_end":5}},{"value":"/ [`pointer::to_raw_parts`](https://doc.rust-lang.org/std/primitive.pointer.html#method.to_raw_parts)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258175,"byte_end":258278,"line_start":425,"line_end":425,"column_start":2,"column_end":105}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258280,"byte_end":258283,"line_start":426,"line_end":426,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258285,"byte_end":258307,"line_start":427,"line_end":427,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258309,"byte_end":258312,"line_start":428,"line_end":428,"column_start":2,"column_end":5}},{"value":"/ The original method is unstable as of 1.54.0; however, because `BitPtr`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258314,"byte_end":258389,"line_start":429,"line_end":429,"column_start":2,"column_end":77}},{"value":"/ already has a similar API, the name is optimistically stabilized here.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258391,"byte_end":258465,"line_start":430,"line_end":430,"column_start":2,"column_end":76}},{"value":"/ Prefer [`.raw_parts()`] until the original inherent stabilizes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258467,"byte_end":258534,"line_start":431,"line_end":431,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258536,"byte_end":258539,"line_start":432,"line_end":432,"column_start":2,"column_end":5}},{"value":"/ [`.raw_parts()`]: Self::raw_parts","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258541,"byte_end":258578,"line_start":433,"line_end":433,"column_start":2,"column_end":39}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258580,"byte_end":258610,"line_start":434,"line_end":434,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2534},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260107,"byte_end":260113,"line_start":477,"line_end":477,"column_start":16,"column_end":22},"name":"as_ref","qualname":"<BitPtr<M, T, O>>::as_ref","value":"pub unsafe fn as_ref<'a>(Self) -> Option<BitRef>","parent":null,"children":[],"decl_id":null,"docs":" Produces a proxy reference to the referent bit.","sig":null,"attributes":[{"value":"/ Produces a proxy reference to the referent bit.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258699,"byte_end":258750,"line_start":439,"line_end":439,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258752,"byte_end":258755,"line_start":440,"line_end":440,"column_start":2,"column_end":5}},{"value":"/ Because `BitPtr` guarantees that it is non-null and well-aligned, this","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258757,"byte_end":258831,"line_start":441,"line_end":441,"column_start":2,"column_end":76}},{"value":"/ never returns `None`. However, this is still unsafe to call on any","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258833,"byte_end":258903,"line_start":442,"line_end":442,"column_start":2,"column_end":72}},{"value":"/ bit-pointers created from conjured values rather than known references.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258905,"byte_end":258980,"line_start":443,"line_end":443,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258982,"byte_end":258985,"line_start":444,"line_end":444,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":258987,"byte_end":259002,"line_start":445,"line_end":445,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259004,"byte_end":259007,"line_start":446,"line_end":446,"column_start":2,"column_end":5}},{"value":"/ [`pointer::as_ref`](https://doc.rust-lang.org/std/primitive.pointer.html#method.as_ref)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259009,"byte_end":259100,"line_start":447,"line_end":447,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259102,"byte_end":259105,"line_start":448,"line_end":448,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259107,"byte_end":259129,"line_start":449,"line_end":449,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259131,"byte_end":259134,"line_start":450,"line_end":450,"column_start":2,"column_end":5}},{"value":"/ This produces a proxy type rather than a true reference. The proxy","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259136,"byte_end":259206,"line_start":451,"line_end":451,"column_start":2,"column_end":72}},{"value":"/ implements `Deref<Target = bool>`, and can be converted to `&bool` with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259208,"byte_end":259283,"line_start":452,"line_end":452,"column_start":2,"column_end":77}},{"value":"/ a reborrow `&*`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259285,"byte_end":259305,"line_start":453,"line_end":453,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259307,"byte_end":259310,"line_start":454,"line_end":454,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259312,"byte_end":259325,"line_start":455,"line_end":455,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259327,"byte_end":259330,"line_start":456,"line_end":456,"column_start":2,"column_end":5}},{"value":"/ Since `BitPtr` does not permit null or misaligned pointers, this method","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259332,"byte_end":259407,"line_start":457,"line_end":457,"column_start":2,"column_end":77}},{"value":"/ will always dereference the pointer in order to create the proxy. As","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259409,"byte_end":259481,"line_start":458,"line_end":458,"column_start":2,"column_end":74}},{"value":"/ such, you must ensure the following conditions are met:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259483,"byte_end":259542,"line_start":459,"line_end":459,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259544,"byte_end":259547,"line_start":460,"line_end":460,"column_start":2,"column_end":5}},{"value":"/ - the pointer must be dereferenceable as defined in the standard library","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259549,"byte_end":259625,"line_start":461,"line_end":461,"column_start":2,"column_end":78}},{"value":"/   documentation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259627,"byte_end":259646,"line_start":462,"line_end":462,"column_start":2,"column_end":21}},{"value":"/ - the pointer must point to an initialized instance of `T`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259648,"byte_end":259710,"line_start":463,"line_end":463,"column_start":2,"column_end":64}},{"value":"/ - you must ensure that no other pointer will race to modify the referent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259712,"byte_end":259788,"line_start":464,"line_end":464,"column_start":2,"column_end":78}},{"value":"/   location while this call is reading from memory to produce the proxy","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259790,"byte_end":259864,"line_start":465,"line_end":465,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259866,"byte_end":259869,"line_start":466,"line_end":466,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259871,"byte_end":259886,"line_start":467,"line_end":467,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259888,"byte_end":259891,"line_start":468,"line_end":468,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259893,"byte_end":259904,"line_start":469,"line_end":469,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259906,"byte_end":259933,"line_start":470,"line_end":470,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259935,"byte_end":259938,"line_start":471,"line_end":471,"column_start":2,"column_end":5}},{"value":"/ let data = 1u8;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259940,"byte_end":259959,"line_start":472,"line_end":472,"column_start":2,"column_end":21}},{"value":"/ let ptr = BitPtr::<_, _, Lsb0>::from_ref(&data);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":259961,"byte_end":260013,"line_start":473,"line_end":473,"column_start":2,"column_end":54}},{"value":"/ let val = unsafe { ptr.as_ref() }.unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260015,"byte_end":260062,"line_start":474,"line_end":474,"column_start":2,"column_end":49}},{"value":"/ assert!(*val);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260064,"byte_end":260082,"line_start":475,"line_end":475,"column_start":2,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260084,"byte_end":260091,"line_start":476,"line_end":476,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261960,"byte_end":261966,"line_start":525,"line_end":525,"column_start":16,"column_end":22},"name":"offset","qualname":"<BitPtr<M, T, O>>::offset","value":"pub unsafe fn offset(Self, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new bit-pointer at a specified offset from the original.","sig":null,"attributes":[{"value":"/ Creates a new bit-pointer at a specified offset from the original.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260211,"byte_end":260281,"line_start":481,"line_end":481,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260283,"byte_end":260286,"line_start":482,"line_end":482,"column_start":2,"column_end":5}},{"value":"/ `count` is in units of bits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260288,"byte_end":260320,"line_start":483,"line_end":483,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260322,"byte_end":260325,"line_start":484,"line_end":484,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260327,"byte_end":260342,"line_start":485,"line_end":485,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260344,"byte_end":260347,"line_start":486,"line_end":486,"column_start":2,"column_end":5}},{"value":"/ [`pointer::offset`](https://doc.rust-lang.org/std/primitive.pointer.html#method.offset)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260349,"byte_end":260440,"line_start":487,"line_end":487,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260442,"byte_end":260445,"line_start":488,"line_end":488,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260447,"byte_end":260460,"line_start":489,"line_end":489,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260462,"byte_end":260465,"line_start":490,"line_end":490,"column_start":2,"column_end":5}},{"value":"/ `BitPtr` is implemented with Rust raw pointers internally, and is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260467,"byte_end":260536,"line_start":491,"line_end":491,"column_start":2,"column_end":71}},{"value":"/ subject to all of Rust’s rules about provenance and permission tracking.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260538,"byte_end":260616,"line_start":492,"line_end":492,"column_start":2,"column_end":78}},{"value":"/ You must abide by the safety rules established in the original method,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260618,"byte_end":260692,"line_start":493,"line_end":493,"column_start":2,"column_end":76}},{"value":"/ to which this internally delegates.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260694,"byte_end":260733,"line_start":494,"line_end":494,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260735,"byte_end":260738,"line_start":495,"line_end":495,"column_start":2,"column_end":5}},{"value":"/ Additionally, `bitvec` imposes its own rules: while Rust cannot observe","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260740,"byte_end":260815,"line_start":496,"line_end":496,"column_start":2,"column_end":77}},{"value":"/ provenance beyond an element or byte level, `bitvec` demands that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260817,"byte_end":260886,"line_start":497,"line_end":497,"column_start":2,"column_end":71}},{"value":"/ `&mut BitSlice` have exclusive view over all bits it observes. You must","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260888,"byte_end":260963,"line_start":498,"line_end":498,"column_start":2,"column_end":77}},{"value":"/ not produce a bit-pointer that departs a `BitSlice` region and intrudes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":260965,"byte_end":261040,"line_start":499,"line_end":499,"column_start":2,"column_end":77}},{"value":"/ on any `&mut BitSlice`’s handle, and you must not produce a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261042,"byte_end":261107,"line_start":500,"line_end":500,"column_start":2,"column_end":65}},{"value":"/ write-capable bit-pointer that intrudes on a `&BitSlice` handle that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261109,"byte_end":261181,"line_start":501,"line_end":501,"column_start":2,"column_end":74}},{"value":"/ expects its contents to be immutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261183,"byte_end":261224,"line_start":502,"line_end":502,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261226,"byte_end":261229,"line_start":503,"line_end":503,"column_start":2,"column_end":5}},{"value":"/ Note that it is illegal to *construct* a bit-pointer that invalidates","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261231,"byte_end":261304,"line_start":504,"line_end":504,"column_start":2,"column_end":75}},{"value":"/ any of these rules. If you wish to defer safety-checking to the point of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261306,"byte_end":261382,"line_start":505,"line_end":505,"column_start":2,"column_end":78}},{"value":"/ dereferencing, and allow the temporary construction *but not*","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261384,"byte_end":261449,"line_start":506,"line_end":506,"column_start":2,"column_end":67}},{"value":"/ *dereference* of illegal `BitPtr`s, use [`.wrapping_offset()`] instead.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261451,"byte_end":261526,"line_start":507,"line_end":507,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261528,"byte_end":261531,"line_start":508,"line_end":508,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261533,"byte_end":261548,"line_start":509,"line_end":509,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261550,"byte_end":261553,"line_start":510,"line_end":510,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261555,"byte_end":261566,"line_start":511,"line_end":511,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261568,"byte_end":261595,"line_start":512,"line_end":512,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261597,"byte_end":261600,"line_start":513,"line_end":513,"column_start":2,"column_end":5}},{"value":"/ let data = 5u8;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261602,"byte_end":261621,"line_start":514,"line_end":514,"column_start":2,"column_end":21}},{"value":"/ let ptr = BitPtr::<_, _, Lsb0>::from_ref(&data);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261623,"byte_end":261675,"line_start":515,"line_end":515,"column_start":2,"column_end":54}},{"value":"/ unsafe {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261677,"byte_end":261689,"line_start":516,"line_end":516,"column_start":2,"column_end":14}},{"value":"/   assert!(ptr.read());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261691,"byte_end":261717,"line_start":517,"line_end":517,"column_start":2,"column_end":28}},{"value":"/   assert!(!ptr.offset(1).read());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261719,"byte_end":261756,"line_start":518,"line_end":518,"column_start":2,"column_end":39}},{"value":"/   assert!(ptr.offset(2).read());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261758,"byte_end":261794,"line_start":519,"line_end":519,"column_start":2,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261796,"byte_end":261801,"line_start":520,"line_end":520,"column_start":2,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261803,"byte_end":261810,"line_start":521,"line_end":521,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261812,"byte_end":261815,"line_start":522,"line_end":522,"column_start":2,"column_end":5}},{"value":"/ [`.wrapping_offset()`]: Self::wrapping_offset","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261817,"byte_end":261866,"line_start":523,"line_end":523,"column_start":2,"column_end":51}},{"value":"must_use = \"returns a new bit-pointer rather than modifying its argument\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":261868,"byte_end":261944,"line_start":524,"line_end":524,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264189,"byte_end":264204,"line_start":584,"line_end":584,"column_start":9,"column_end":24},"name":"wrapping_offset","qualname":"<BitPtr<M, T, O>>::wrapping_offset","value":"pub fn wrapping_offset(Self, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new bit-pointer at a specified offset from the original.","sig":null,"attributes":[{"value":"/ Creates a new bit-pointer at a specified offset from the original.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262098,"byte_end":262168,"line_start":530,"line_end":530,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262170,"byte_end":262173,"line_start":531,"line_end":531,"column_start":2,"column_end":5}},{"value":"/ `count` is in units of bits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262175,"byte_end":262207,"line_start":532,"line_end":532,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262209,"byte_end":262212,"line_start":533,"line_end":533,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262214,"byte_end":262229,"line_start":534,"line_end":534,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262231,"byte_end":262234,"line_start":535,"line_end":535,"column_start":2,"column_end":5}},{"value":"/ [`pointer::wrapping_offset`](https://doc.rust-lang.org/std/primitive.pointer.html#method.wrapping_offset)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262236,"byte_end":262345,"line_start":536,"line_end":536,"column_start":2,"column_end":111}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262347,"byte_end":262350,"line_start":537,"line_end":537,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262352,"byte_end":262374,"line_start":538,"line_end":538,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262376,"byte_end":262379,"line_start":539,"line_end":539,"column_start":2,"column_end":5}},{"value":"/ `bitvec` makes it explicitly illegal to wrap a pointer around the high","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262381,"byte_end":262455,"line_start":540,"line_end":540,"column_start":2,"column_end":76}},{"value":"/ end of the address space, because it is incapable of representing a null","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262457,"byte_end":262533,"line_start":541,"line_end":541,"column_start":2,"column_end":78}},{"value":"/ pointer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262535,"byte_end":262547,"line_start":542,"line_end":542,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262549,"byte_end":262552,"line_start":543,"line_end":543,"column_start":2,"column_end":5}},{"value":"/ However, `<*T>::wrapping_offset` has additional properties as a result","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262554,"byte_end":262628,"line_start":544,"line_end":544,"column_start":2,"column_end":76}},{"value":"/ of its tolerance for wrapping the address space: it tolerates departing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262630,"byte_end":262705,"line_start":545,"line_end":545,"column_start":2,"column_end":77}},{"value":"/ a provenance region, and is not unsafe to use to *create* a bit-pointer","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262707,"byte_end":262782,"line_start":546,"line_end":546,"column_start":2,"column_end":77}},{"value":"/ that is outside the bounds of its original provenance.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262784,"byte_end":262842,"line_start":547,"line_end":547,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262844,"byte_end":262847,"line_start":548,"line_end":548,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262849,"byte_end":262862,"line_start":549,"line_end":549,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262864,"byte_end":262867,"line_start":550,"line_end":550,"column_start":2,"column_end":5}},{"value":"/ This function is safe to use because the bit-pointers it creates defer","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262869,"byte_end":262943,"line_start":551,"line_end":551,"column_start":2,"column_end":76}},{"value":"/ their provenance checks until the point of dereference. As such, you","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":262945,"byte_end":263017,"line_start":552,"line_end":552,"column_start":2,"column_end":74}},{"value":"/ can safely use this to perform arbitrary pointer arithmetic that Rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263019,"byte_end":263092,"line_start":553,"line_end":553,"column_start":2,"column_end":75}},{"value":"/ considers illegal in ordinary arithmetic, as long as you do not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263094,"byte_end":263161,"line_start":554,"line_end":554,"column_start":2,"column_end":69}},{"value":"/ dereference the bit-pointer until it has been brought in bounds of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263163,"byte_end":263237,"line_start":555,"line_end":555,"column_start":2,"column_end":76}},{"value":"/ originating provenance region.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263239,"byte_end":263273,"line_start":556,"line_end":556,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263275,"byte_end":263278,"line_start":557,"line_end":557,"column_start":2,"column_end":5}},{"value":"/ This means that, to the Rust rule engine,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263280,"byte_end":263325,"line_start":558,"line_end":558,"column_start":2,"column_end":47}},{"value":"/ `let z = x.wrapping_add(y as usize).wrapping_sub(x as usize);` is not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263327,"byte_end":263400,"line_start":559,"line_end":559,"column_start":2,"column_end":75}},{"value":"/ equivalent to `y`, but `z` is safe to construct, and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263402,"byte_end":263458,"line_start":560,"line_end":560,"column_start":2,"column_end":58}},{"value":"/ `z.wrapping_add(x as usize).wrapping_sub(y as usize)` produces a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263460,"byte_end":263528,"line_start":561,"line_end":561,"column_start":2,"column_end":70}},{"value":"/ bit-pointer that *is* equivalent to `x`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263530,"byte_end":263574,"line_start":562,"line_end":562,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263576,"byte_end":263579,"line_start":563,"line_end":563,"column_start":2,"column_end":5}},{"value":"/ See the documentation of the original method for more details about","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263581,"byte_end":263652,"line_start":564,"line_end":564,"column_start":2,"column_end":73}},{"value":"/ provenance regions, and the distinctions that the optimizer makes about","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263654,"byte_end":263729,"line_start":565,"line_end":565,"column_start":2,"column_end":77}},{"value":"/ them.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263731,"byte_end":263740,"line_start":566,"line_end":566,"column_start":2,"column_end":11}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263742,"byte_end":263745,"line_start":567,"line_end":567,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263747,"byte_end":263762,"line_start":568,"line_end":568,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263764,"byte_end":263767,"line_start":569,"line_end":569,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263769,"byte_end":263780,"line_start":570,"line_end":570,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263782,"byte_end":263809,"line_start":571,"line_end":571,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263811,"byte_end":263814,"line_start":572,"line_end":572,"column_start":2,"column_end":5}},{"value":"/ let data = 0u32;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263816,"byte_end":263836,"line_start":573,"line_end":573,"column_start":2,"column_end":22}},{"value":"/ let mut ptr = BitPtr::<_, _, Lsb0>::from_ref(&data);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263838,"byte_end":263894,"line_start":574,"line_end":574,"column_start":2,"column_end":58}},{"value":"/ let end = ptr.wrapping_offset(32);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263896,"byte_end":263934,"line_start":575,"line_end":575,"column_start":2,"column_end":40}},{"value":"/ while ptr < end {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263936,"byte_end":263957,"line_start":576,"line_end":576,"column_start":2,"column_end":23}},{"value":"/   # #[cfg(feature = \"std\")] {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263959,"byte_end":263992,"line_start":577,"line_end":577,"column_start":2,"column_end":35}},{"value":"/   println!(\"{}\", unsafe { ptr.read() });","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":263994,"byte_end":264038,"line_start":578,"line_end":578,"column_start":2,"column_end":46}},{"value":"/   # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264040,"byte_end":264049,"line_start":579,"line_end":579,"column_start":2,"column_end":11}},{"value":"/   ptr = ptr.wrapping_offset(3);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264051,"byte_end":264086,"line_start":580,"line_end":580,"column_start":2,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264088,"byte_end":264093,"line_start":581,"line_end":581,"column_start":2,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264095,"byte_end":264102,"line_start":582,"line_end":582,"column_start":2,"column_end":9}},{"value":"must_use = \"returns a new bit-pointer rather than modifying its argument\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264104,"byte_end":264180,"line_start":583,"line_end":583,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266842,"byte_end":266853,"line_start":660,"line_end":660,"column_start":16,"column_end":27},"name":"offset_from","qualname":"<BitPtr<M, T, O>>::offset_from","value":"pub unsafe fn offset_from<U>(Self, BitPtr<M, U, O>) -> isize where\nU: BitStore<Mem = T::Mem>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the distance (in bits) between two bit-pointers.","sig":null,"attributes":[{"value":"/ Calculates the distance (in bits) between two bit-pointers.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264356,"byte_end":264419,"line_start":589,"line_end":589,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264421,"byte_end":264424,"line_start":590,"line_end":590,"column_start":2,"column_end":5}},{"value":"/ This method is the inverse of [`.offset()`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264426,"byte_end":264474,"line_start":591,"line_end":591,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264476,"byte_end":264479,"line_start":592,"line_end":592,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264481,"byte_end":264496,"line_start":593,"line_end":593,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264498,"byte_end":264501,"line_start":594,"line_end":594,"column_start":2,"column_end":5}},{"value":"/ [`pointer::offset_from`](https://doc.rust-lang.org/std/primitive.pointer.html#method.offset_from)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264503,"byte_end":264604,"line_start":595,"line_end":595,"column_start":2,"column_end":103}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264606,"byte_end":264609,"line_start":596,"line_end":596,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264611,"byte_end":264633,"line_start":597,"line_end":597,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264635,"byte_end":264638,"line_start":598,"line_end":598,"column_start":2,"column_end":5}},{"value":"/ The base pointer may have a different `BitStore` type parameter, as long","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264640,"byte_end":264716,"line_start":599,"line_end":599,"column_start":2,"column_end":78}},{"value":"/ as they share an underlying memory type. This is necessary in order to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264718,"byte_end":264792,"line_start":600,"line_end":600,"column_start":2,"column_end":76}},{"value":"/ accommodate aliasing markers introduced between when an origin pointer","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264794,"byte_end":264868,"line_start":601,"line_end":601,"column_start":2,"column_end":76}},{"value":"/ was taken and when `self` compared against it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264870,"byte_end":264920,"line_start":602,"line_end":602,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264922,"byte_end":264925,"line_start":603,"line_end":603,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264927,"byte_end":264940,"line_start":604,"line_end":604,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264942,"byte_end":264945,"line_start":605,"line_end":605,"column_start":2,"column_end":5}},{"value":"/ Both `self` and `origin` **must** be drawn from the same provenance","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":264947,"byte_end":265018,"line_start":606,"line_end":606,"column_start":2,"column_end":73}},{"value":"/ region. This means that they must be created from the same Rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265020,"byte_end":265087,"line_start":607,"line_end":607,"column_start":2,"column_end":69}},{"value":"/ allocation, whether with `let` or the allocator API, and must be in the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265089,"byte_end":265164,"line_start":608,"line_end":608,"column_start":2,"column_end":77}},{"value":"/ (inclusive) range `base ..= base + len`. The first bit past the end of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265166,"byte_end":265240,"line_start":609,"line_end":609,"column_start":2,"column_end":76}},{"value":"/ a region can be addressed, just not dereferenced.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265242,"byte_end":265295,"line_start":610,"line_end":610,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265297,"byte_end":265300,"line_start":611,"line_end":611,"column_start":2,"column_end":5}},{"value":"/ See the original `<*T>::offset_from` for more details on region safety.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265302,"byte_end":265377,"line_start":612,"line_end":612,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265379,"byte_end":265382,"line_start":613,"line_end":613,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265384,"byte_end":265399,"line_start":614,"line_end":614,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265401,"byte_end":265404,"line_start":615,"line_end":615,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265406,"byte_end":265417,"line_start":616,"line_end":616,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265419,"byte_end":265446,"line_start":617,"line_end":617,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265448,"byte_end":265451,"line_start":618,"line_end":618,"column_start":2,"column_end":5}},{"value":"/ let data = 0u32;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265453,"byte_end":265473,"line_start":619,"line_end":619,"column_start":2,"column_end":22}},{"value":"/ let base = BitPtr::<_, _, Lsb0>::from_ref(&data);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265475,"byte_end":265528,"line_start":620,"line_end":620,"column_start":2,"column_end":55}},{"value":"/ let low = unsafe { base.add(10) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265530,"byte_end":265568,"line_start":621,"line_end":621,"column_start":2,"column_end":40}},{"value":"/ let high = unsafe { low.add(15) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265570,"byte_end":265608,"line_start":622,"line_end":622,"column_start":2,"column_end":40}},{"value":"/ unsafe {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265610,"byte_end":265622,"line_start":623,"line_end":623,"column_start":2,"column_end":14}},{"value":"/   assert_eq!(high.offset_from(low), 15);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265624,"byte_end":265668,"line_start":624,"line_end":624,"column_start":2,"column_end":46}},{"value":"/   assert_eq!(low.offset_from(high), -15);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265670,"byte_end":265715,"line_start":625,"line_end":625,"column_start":2,"column_end":47}},{"value":"/   assert_eq!(low.offset(15), high);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265717,"byte_end":265756,"line_start":626,"line_end":626,"column_start":2,"column_end":41}},{"value":"/   assert_eq!(high.offset(-15), low);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265758,"byte_end":265798,"line_start":627,"line_end":627,"column_start":2,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265800,"byte_end":265805,"line_start":628,"line_end":628,"column_start":2,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265807,"byte_end":265814,"line_start":629,"line_end":629,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265816,"byte_end":265819,"line_start":630,"line_end":630,"column_start":2,"column_end":5}},{"value":"/ While this method is safe to *construct* bit-pointers that depart a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265821,"byte_end":265892,"line_start":631,"line_end":631,"column_start":2,"column_end":73}},{"value":"/ provenance region, it remains illegal to *dereference* those pointers!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265894,"byte_end":265968,"line_start":632,"line_end":632,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265970,"byte_end":265973,"line_start":633,"line_end":633,"column_start":2,"column_end":5}},{"value":"/ This usage is incorrect, and a program that contains it is not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":265975,"byte_end":266041,"line_start":634,"line_end":634,"column_start":2,"column_end":68}},{"value":"/ well-formed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266043,"byte_end":266059,"line_start":635,"line_end":635,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266061,"byte_end":266064,"line_start":636,"line_end":636,"column_start":2,"column_end":5}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266066,"byte_end":266084,"line_start":637,"line_end":637,"column_start":2,"column_end":20}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266086,"byte_end":266113,"line_start":638,"line_end":638,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266115,"byte_end":266118,"line_start":639,"line_end":639,"column_start":2,"column_end":5}},{"value":"/ let a = 0u8;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266120,"byte_end":266136,"line_start":640,"line_end":640,"column_start":2,"column_end":18}},{"value":"/ let b = !0u8;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266138,"byte_end":266155,"line_start":641,"line_end":641,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266157,"byte_end":266160,"line_start":642,"line_end":642,"column_start":2,"column_end":5}},{"value":"/ let a_ptr = BitPtr::<_, _, Lsb0>::from_ref(&a);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266162,"byte_end":266213,"line_start":643,"line_end":643,"column_start":2,"column_end":53}},{"value":"/ let b_ptr = BitPtr::<_, _, Lsb0>::from_ref(&b);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266215,"byte_end":266266,"line_start":644,"line_end":644,"column_start":2,"column_end":53}},{"value":"/ let diff = (b_ptr.pointer() as isize)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266268,"byte_end":266309,"line_start":645,"line_end":645,"column_start":2,"column_end":43}},{"value":"/   .wrapping_mul(a_ptr.pointer() as isize)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266311,"byte_end":266356,"line_start":646,"line_end":646,"column_start":2,"column_end":47}},{"value":"/   // Remember: raw pointers are byte-stepped,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266358,"byte_end":266407,"line_start":647,"line_end":647,"column_start":2,"column_end":51}},{"value":"/   // but bit-pointers are bit-stepped.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266409,"byte_end":266451,"line_start":648,"line_end":648,"column_start":2,"column_end":44}},{"value":"/   .wrapping_mul(8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266453,"byte_end":266476,"line_start":649,"line_end":649,"column_start":2,"column_end":25}},{"value":"/ // This pointer to `b` has `a`’s provenance:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266478,"byte_end":266528,"line_start":650,"line_end":650,"column_start":2,"column_end":50}},{"value":"/ let b_ptr_2 = a_ptr.wrapping_offset(diff);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266530,"byte_end":266576,"line_start":651,"line_end":651,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266578,"byte_end":266581,"line_start":652,"line_end":652,"column_start":2,"column_end":5}},{"value":"/ // They are *arithmetically* equal:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266583,"byte_end":266622,"line_start":653,"line_end":653,"column_start":2,"column_end":41}},{"value":"/ assert_eq!(b_ptr, b_ptr_2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266624,"byte_end":266655,"line_start":654,"line_end":654,"column_start":2,"column_end":33}},{"value":"/ // But it is still undefined behavior to cross provenances!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266657,"byte_end":266720,"line_start":655,"line_end":655,"column_start":2,"column_end":65}},{"value":"/ assert_eq!(0, unsafe { b_ptr_2.offset_from(b_ptr) });","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266722,"byte_end":266779,"line_start":656,"line_end":656,"column_start":2,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266781,"byte_end":266788,"line_start":657,"line_end":657,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266790,"byte_end":266793,"line_start":658,"line_end":658,"column_start":2,"column_end":5}},{"value":"/ [`.offset()`]: Self::offset","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":266795,"byte_end":266826,"line_start":659,"line_end":659,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2540},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267588,"byte_end":267591,"line_start":683,"line_end":683,"column_start":16,"column_end":19},"name":"add","qualname":"<BitPtr<M, T, O>>::add","value":"pub unsafe fn add(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adjusts a bit-pointer upwards in memory. This is equivalent to\n `.offset(count as isize)`.","sig":null,"attributes":[{"value":"/ Adjusts a bit-pointer upwards in memory. This is equivalent to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267180,"byte_end":267246,"line_start":670,"line_end":670,"column_start":2,"column_end":68}},{"value":"/ `.offset(count as isize)`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267248,"byte_end":267278,"line_start":671,"line_end":671,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267280,"byte_end":267283,"line_start":672,"line_end":672,"column_start":2,"column_end":5}},{"value":"/ `count` is in units of bits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267285,"byte_end":267317,"line_start":673,"line_end":673,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267319,"byte_end":267322,"line_start":674,"line_end":674,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267324,"byte_end":267339,"line_start":675,"line_end":675,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267341,"byte_end":267344,"line_start":676,"line_end":676,"column_start":2,"column_end":5}},{"value":"/ [`pointer::add`](https://doc.rust-lang.org/std/primitive.pointer.html#method.add)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267346,"byte_end":267431,"line_start":677,"line_end":677,"column_start":2,"column_end":87}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267433,"byte_end":267436,"line_start":678,"line_end":678,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267438,"byte_end":267451,"line_start":679,"line_end":679,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267453,"byte_end":267456,"line_start":680,"line_end":680,"column_start":2,"column_end":5}},{"value":"/ See [`.offset()`](Self::offset).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267458,"byte_end":267494,"line_start":681,"line_end":681,"column_start":2,"column_end":38}},{"value":"must_use = \"returns a new bit-pointer rather than modifying its argument\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267496,"byte_end":267572,"line_start":682,"line_end":682,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268084,"byte_end":268087,"line_start":700,"line_end":700,"column_start":16,"column_end":19},"name":"sub","qualname":"<BitPtr<M, T, O>>::sub","value":"pub unsafe fn sub(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adjusts a bit-pointer downwards in memory. This is equivalent to\n `.offset((count as isize).wrapping_neg())`.","sig":null,"attributes":[{"value":"/ Adjusts a bit-pointer downwards in memory. This is equivalent to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267657,"byte_end":267725,"line_start":687,"line_end":687,"column_start":2,"column_end":70}},{"value":"/ `.offset((count as isize).wrapping_neg())`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267727,"byte_end":267774,"line_start":688,"line_end":688,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267776,"byte_end":267779,"line_start":689,"line_end":689,"column_start":2,"column_end":5}},{"value":"/ `count` is in units of bits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267781,"byte_end":267813,"line_start":690,"line_end":690,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267815,"byte_end":267818,"line_start":691,"line_end":691,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267820,"byte_end":267835,"line_start":692,"line_end":692,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267837,"byte_end":267840,"line_start":693,"line_end":693,"column_start":2,"column_end":5}},{"value":"/ [`pointer::sub`](https://doc.rust-lang.org/std/primitive.pointer.html#method.sub)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267842,"byte_end":267927,"line_start":694,"line_end":694,"column_start":2,"column_end":87}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267929,"byte_end":267932,"line_start":695,"line_end":695,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267934,"byte_end":267947,"line_start":696,"line_end":696,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267949,"byte_end":267952,"line_start":697,"line_end":697,"column_start":2,"column_end":5}},{"value":"/ See [`.offset()`](Self::offset).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267954,"byte_end":267990,"line_start":698,"line_end":698,"column_start":2,"column_end":38}},{"value":"must_use = \"returns a new bit-pointer rather than modifying its argument\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":267992,"byte_end":268068,"line_start":699,"line_end":699,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268642,"byte_end":268654,"line_start":717,"line_end":717,"column_start":9,"column_end":21},"name":"wrapping_add","qualname":"<BitPtr<M, T, O>>::wrapping_add","value":"pub fn wrapping_add(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adjusts a bit-pointer upwards in memory, using wrapping semantics. This\n is equivalent to `.wrapping_offset(count as isize)`.","sig":null,"attributes":[{"value":"/ Adjusts a bit-pointer upwards in memory, using wrapping semantics. This","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268170,"byte_end":268245,"line_start":704,"line_end":704,"column_start":2,"column_end":77}},{"value":"/ is equivalent to `.wrapping_offset(count as isize)`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268247,"byte_end":268303,"line_start":705,"line_end":705,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268305,"byte_end":268308,"line_start":706,"line_end":706,"column_start":2,"column_end":5}},{"value":"/ `count` is in units of bits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268310,"byte_end":268342,"line_start":707,"line_end":707,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268344,"byte_end":268347,"line_start":708,"line_end":708,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268349,"byte_end":268364,"line_start":709,"line_end":709,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268366,"byte_end":268369,"line_start":710,"line_end":710,"column_start":2,"column_end":5}},{"value":"/ [`pointer::wrapping_add`](https://doc.rust-lang.org/std/primitive.pointer.html#method.wrapping_add)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268371,"byte_end":268474,"line_start":711,"line_end":711,"column_start":2,"column_end":105}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268476,"byte_end":268479,"line_start":712,"line_end":712,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268481,"byte_end":268494,"line_start":713,"line_end":713,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268496,"byte_end":268499,"line_start":714,"line_end":714,"column_start":2,"column_end":5}},{"value":"/ See [`.wrapping_offset()`](Self::wrapping_offset).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268501,"byte_end":268555,"line_start":715,"line_end":715,"column_start":2,"column_end":56}},{"value":"must_use = \"returns a new bit-pointer rather than modifying its argument\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268557,"byte_end":268633,"line_start":716,"line_end":716,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269225,"byte_end":269237,"line_start":735,"line_end":735,"column_start":9,"column_end":21},"name":"wrapping_sub","qualname":"<BitPtr<M, T, O>>::wrapping_sub","value":"pub fn wrapping_sub(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adjusts a bit-pointer downwards in memory, using wrapping semantics.\n This is equivalent to\n `.wrapping_offset((count as isize).wrapping_neg())`.","sig":null,"attributes":[{"value":"/ Adjusts a bit-pointer downwards in memory, using wrapping semantics.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268729,"byte_end":268801,"line_start":721,"line_end":721,"column_start":2,"column_end":74}},{"value":"/ This is equivalent to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268803,"byte_end":268828,"line_start":722,"line_end":722,"column_start":2,"column_end":27}},{"value":"/ `.wrapping_offset((count as isize).wrapping_neg())`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268830,"byte_end":268886,"line_start":723,"line_end":723,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268888,"byte_end":268891,"line_start":724,"line_end":724,"column_start":2,"column_end":5}},{"value":"/ `count` is in units of bits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268893,"byte_end":268925,"line_start":725,"line_end":725,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268927,"byte_end":268930,"line_start":726,"line_end":726,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268932,"byte_end":268947,"line_start":727,"line_end":727,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268949,"byte_end":268952,"line_start":728,"line_end":728,"column_start":2,"column_end":5}},{"value":"/ [`pointer::wrapping_add`](https://doc.rust-lang.org/std/primitive.pointer.html#method.wrapping_add)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":268954,"byte_end":269057,"line_start":729,"line_end":729,"column_start":2,"column_end":105}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269059,"byte_end":269062,"line_start":730,"line_end":730,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269064,"byte_end":269077,"line_start":731,"line_end":731,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269079,"byte_end":269082,"line_start":732,"line_end":732,"column_start":2,"column_end":5}},{"value":"/ See [`.wrapping_offset()`](Self::wrapping_offset).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269084,"byte_end":269138,"line_start":733,"line_end":733,"column_start":2,"column_end":56}},{"value":"must_use = \"returns a new bit-pointer rather than modifying its argument\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269140,"byte_end":269216,"line_start":734,"line_end":734,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2544},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269559,"byte_end":269563,"line_start":748,"line_end":748,"column_start":16,"column_end":20},"name":"read","qualname":"<BitPtr<M, T, O>>::read","value":"pub unsafe fn read(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Reads the bit from `*self`.","sig":null,"attributes":[{"value":"/ Reads the bit from `*self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269329,"byte_end":269360,"line_start":739,"line_end":739,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269362,"byte_end":269365,"line_start":740,"line_end":740,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269367,"byte_end":269382,"line_start":741,"line_end":741,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269384,"byte_end":269387,"line_start":742,"line_end":742,"column_start":2,"column_end":5}},{"value":"/ [`pointer::read`](https://doc.rust-lang.org/std/primitive.pointer.html#method.read)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269389,"byte_end":269476,"line_start":743,"line_end":743,"column_start":2,"column_end":89}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269478,"byte_end":269481,"line_start":744,"line_end":744,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269483,"byte_end":269496,"line_start":745,"line_end":745,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269498,"byte_end":269501,"line_start":746,"line_end":746,"column_start":2,"column_end":5}},{"value":"/ See [`ptr::read`](crate::ptr::read).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269503,"byte_end":269543,"line_start":747,"line_end":747,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270224,"byte_end":270237,"line_start":767,"line_end":767,"column_start":16,"column_end":29},"name":"read_volatile","qualname":"<BitPtr<M, T, O>>::read_volatile","value":"pub unsafe fn read_volatile(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Reads the bit from `*self` using a volatile load.","sig":null,"attributes":[{"value":"/ Reads the bit from `*self` using a volatile load.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269647,"byte_end":269700,"line_start":752,"line_end":752,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269702,"byte_end":269705,"line_start":753,"line_end":753,"column_start":2,"column_end":5}},{"value":"/ Prefer using a crate such as [`voladdress`][0] to manage volatile I/O","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269707,"byte_end":269780,"line_start":754,"line_end":754,"column_start":2,"column_end":75}},{"value":"/ and use `bitvec` only on the local objects it provides. Individual I/O","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269782,"byte_end":269856,"line_start":755,"line_end":755,"column_start":2,"column_end":76}},{"value":"/ operations for individual bits are likely not the behavior you want.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269858,"byte_end":269930,"line_start":756,"line_end":756,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269932,"byte_end":269935,"line_start":757,"line_end":757,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269937,"byte_end":269952,"line_start":758,"line_end":758,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269954,"byte_end":269957,"line_start":759,"line_end":759,"column_start":2,"column_end":5}},{"value":"/ [`pointer::read_volatile`](https://doc.rust-lang.org/std/primitive.pointer.html#method.read_volatile)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":269959,"byte_end":270064,"line_start":760,"line_end":760,"column_start":2,"column_end":107}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270066,"byte_end":270069,"line_start":761,"line_end":761,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270071,"byte_end":270084,"line_start":762,"line_end":762,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270086,"byte_end":270089,"line_start":763,"line_end":763,"column_start":2,"column_end":5}},{"value":"/ See [`ptr::read_volatile`](crate::ptr::read_volatile).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270091,"byte_end":270149,"line_start":764,"line_end":764,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270151,"byte_end":270154,"line_start":765,"line_end":765,"column_start":2,"column_end":5}},{"value":"/ [0]: https://docs.rs/voladdress/later/voladdress","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270156,"byte_end":270208,"line_start":766,"line_end":766,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2546},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270930,"byte_end":270944,"line_start":786,"line_end":786,"column_start":16,"column_end":30},"name":"read_unaligned","qualname":"<BitPtr<M, T, O>>::read_unaligned","value":"pub unsafe fn read_unaligned(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Reads the bit from `*self` using an unaligned memory access.","sig":null,"attributes":[{"value":"/ Reads the bit from `*self` using an unaligned memory access.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270320,"byte_end":270384,"line_start":771,"line_end":771,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270386,"byte_end":270389,"line_start":772,"line_end":772,"column_start":2,"column_end":5}},{"value":"/ `BitPtr` forbids unaligned addresses. If you have such an address, you","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270391,"byte_end":270465,"line_start":773,"line_end":773,"column_start":2,"column_end":76}},{"value":"/ must perform your memory accesses on the raw element, and only use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270467,"byte_end":270537,"line_start":774,"line_end":774,"column_start":2,"column_end":72}},{"value":"/ `bitvec` on a well-aligned stack temporary. This method should never be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270539,"byte_end":270614,"line_start":775,"line_end":775,"column_start":2,"column_end":77}},{"value":"/ necessary.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270616,"byte_end":270630,"line_start":776,"line_end":776,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270632,"byte_end":270635,"line_start":777,"line_end":777,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270637,"byte_end":270652,"line_start":778,"line_end":778,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270654,"byte_end":270657,"line_start":779,"line_end":779,"column_start":2,"column_end":5}},{"value":"/ [`pointer::read_unaligned`](https://doc.rust-lang.org/std/primitive.pointer.html#method.read_unaligned)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270659,"byte_end":270766,"line_start":780,"line_end":780,"column_start":2,"column_end":109}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270768,"byte_end":270771,"line_start":781,"line_end":781,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270773,"byte_end":270786,"line_start":782,"line_end":782,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270788,"byte_end":270791,"line_start":783,"line_end":783,"column_start":2,"column_end":5}},{"value":"/ See [`ptr::read_unaligned`](crate::ptr::read_unaligned)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270793,"byte_end":270852,"line_start":784,"line_end":784,"column_start":2,"column_end":61}},{"value":"deprecated = \"`BitPtr` does not have unaligned addresses\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":270854,"byte_end":270914,"line_start":785,"line_end":785,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2547},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271555,"byte_end":271562,"line_start":805,"line_end":805,"column_start":16,"column_end":23},"name":"copy_to","qualname":"<BitPtr<M, T, O>>::copy_to","value":"pub unsafe fn copy_to<T2, O2>(Self, BitPtr<Mut, T2, O2>, usize) where\nT2: BitStore, O2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Copies `count` bits from `self` to `dest`. The source and destination\n may overlap.","sig":null,"attributes":[{"value":"/ Copies `count` bits from `self` to `dest`. The source and destination","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271028,"byte_end":271101,"line_start":790,"line_end":790,"column_start":2,"column_end":75}},{"value":"/ may overlap.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271103,"byte_end":271119,"line_start":791,"line_end":791,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271121,"byte_end":271124,"line_start":792,"line_end":792,"column_start":2,"column_end":5}},{"value":"/ Note that overlap is only defined when `O` and `O2` are the same type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271126,"byte_end":271200,"line_start":793,"line_end":793,"column_start":2,"column_end":76}},{"value":"/ If they differ, then `bitvec` does not define overlap, and assumes that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271202,"byte_end":271277,"line_start":794,"line_end":794,"column_start":2,"column_end":77}},{"value":"/ they are wholly discrete in memory.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271279,"byte_end":271318,"line_start":795,"line_end":795,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271320,"byte_end":271323,"line_start":796,"line_end":796,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271325,"byte_end":271340,"line_start":797,"line_end":797,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271342,"byte_end":271345,"line_start":798,"line_end":798,"column_start":2,"column_end":5}},{"value":"/ [`pointer::copy_to`](https://doc.rust-lang.org/std/primitive.pointer.html#method.copy_to)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271347,"byte_end":271440,"line_start":799,"line_end":799,"column_start":2,"column_end":95}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271442,"byte_end":271445,"line_start":800,"line_end":800,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271447,"byte_end":271460,"line_start":801,"line_end":801,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271462,"byte_end":271465,"line_start":802,"line_end":802,"column_start":2,"column_end":5}},{"value":"/ See [`ptr::copy`](crate::ptr::copy).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271467,"byte_end":271507,"line_start":803,"line_end":803,"column_start":2,"column_end":42}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271509,"byte_end":271539,"line_start":804,"line_end":804,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2550},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272104,"byte_end":272126,"line_start":824,"line_end":824,"column_start":16,"column_end":38},"name":"copy_to_nonoverlapping","qualname":"<BitPtr<M, T, O>>::copy_to_nonoverlapping","value":"pub unsafe fn copy_to_nonoverlapping<T2, O2>(Self, BitPtr<Mut, T2, O2>, usize)\nwhere T2: BitStore, O2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Copies `count` bits from `self` to `dest`. The source and destination\n may *not* overlap.","sig":null,"attributes":[{"value":"/ Copies `count` bits from `self` to `dest`. The source and destination","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271710,"byte_end":271783,"line_start":813,"line_end":813,"column_start":2,"column_end":75}},{"value":"/ may *not* overlap.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271785,"byte_end":271807,"line_start":814,"line_end":814,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271809,"byte_end":271812,"line_start":815,"line_end":815,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271814,"byte_end":271829,"line_start":816,"line_end":816,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271831,"byte_end":271834,"line_start":817,"line_end":817,"column_start":2,"column_end":5}},{"value":"/ [`pointer::copy_to_nonoverlapping`](https://doc.rust-lang.org/std/primitive.pointer.html#method.copy_to_nonoverlapping)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271836,"byte_end":271959,"line_start":818,"line_end":818,"column_start":2,"column_end":125}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271961,"byte_end":271964,"line_start":819,"line_end":819,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271966,"byte_end":271979,"line_start":820,"line_end":820,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271981,"byte_end":271984,"line_start":821,"line_end":821,"column_start":2,"column_end":5}},{"value":"/ See [`ptr::copy_nonoverlapping`](crate::ptr::copy_nonoverlapping).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":271986,"byte_end":272056,"line_start":822,"line_end":822,"column_start":2,"column_end":72}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272058,"byte_end":272088,"line_start":823,"line_end":823,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274449,"byte_end":274461,"line_start":892,"line_end":892,"column_start":9,"column_end":21},"name":"align_offset","qualname":"<BitPtr<M, T, O>>::align_offset","value":"pub fn align_offset(Self, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the offset (in bits) that needs to be applied to the\n bit-pointer in order to make it aligned to the given *byte* alignment.","sig":null,"attributes":[{"value":"/ Computes the offset (in bits) that needs to be applied to the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272298,"byte_end":272363,"line_start":835,"line_end":835,"column_start":2,"column_end":67}},{"value":"/ bit-pointer in order to make it aligned to the given *byte* alignment.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272365,"byte_end":272439,"line_start":836,"line_end":836,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272441,"byte_end":272444,"line_start":837,"line_end":837,"column_start":2,"column_end":5}},{"value":"/ “Alignment” here means that the bit-pointer selects the starting bit of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272446,"byte_end":272525,"line_start":838,"line_end":838,"column_start":2,"column_end":77}},{"value":"/ a memory location whose address satisfies the requested alignment.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272527,"byte_end":272597,"line_start":839,"line_end":839,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272599,"byte_end":272602,"line_start":840,"line_end":840,"column_start":2,"column_end":5}},{"value":"/ `align` is measured in **bytes**. If you wish to align your bit-pointer","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272604,"byte_end":272679,"line_start":841,"line_end":841,"column_start":2,"column_end":77}},{"value":"/ to a specific fraction (½, ¼, or ⅛ of one byte), please file an issue","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272681,"byte_end":272758,"line_start":842,"line_end":842,"column_start":2,"column_end":75}},{"value":"/ and I will work on adding this functionality.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272760,"byte_end":272809,"line_start":843,"line_end":843,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272811,"byte_end":272814,"line_start":844,"line_end":844,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272816,"byte_end":272831,"line_start":845,"line_end":845,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272833,"byte_end":272836,"line_start":846,"line_end":846,"column_start":2,"column_end":5}},{"value":"/ [`pointer::align_offset`](https://doc.rust-lang.org/std/primitive.pointer.html#method.align_offset)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272838,"byte_end":272941,"line_start":847,"line_end":847,"column_start":2,"column_end":105}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272943,"byte_end":272946,"line_start":848,"line_end":848,"column_start":2,"column_end":5}},{"value":"/ ## Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272948,"byte_end":272960,"line_start":849,"line_end":849,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272962,"byte_end":272965,"line_start":850,"line_end":850,"column_start":2,"column_end":5}},{"value":"/ If the base-element address of the bit-pointer is already aligned to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":272967,"byte_end":273039,"line_start":851,"line_end":851,"column_start":2,"column_end":74}},{"value":"/ `align`, then this will return the bit-offset required to select the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273041,"byte_end":273113,"line_start":852,"line_end":852,"column_start":2,"column_end":74}},{"value":"/ first bit of the successor element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273115,"byte_end":273154,"line_start":853,"line_end":853,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273156,"byte_end":273159,"line_start":854,"line_end":854,"column_start":2,"column_end":5}},{"value":"/ If it is not possible to align the bit-pointer, then the implementation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273161,"byte_end":273236,"line_start":855,"line_end":855,"column_start":2,"column_end":77}},{"value":"/ returns `usize::MAX`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273238,"byte_end":273263,"line_start":856,"line_end":856,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273265,"byte_end":273268,"line_start":857,"line_end":857,"column_start":2,"column_end":5}},{"value":"/ The return value is measured in bits, not `T` elements or bytes. The","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273270,"byte_end":273342,"line_start":858,"line_end":858,"column_start":2,"column_end":74}},{"value":"/ only thing you can do with it is pass it into [`.add()`] or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273344,"byte_end":273407,"line_start":859,"line_end":859,"column_start":2,"column_end":65}},{"value":"/ [`.wrapping_add()`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273409,"byte_end":273433,"line_start":860,"line_end":860,"column_start":2,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273435,"byte_end":273438,"line_start":861,"line_end":861,"column_start":2,"column_end":5}},{"value":"/ Note from the standard library: It is permissible for the implementation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273440,"byte_end":273516,"line_start":862,"line_end":862,"column_start":2,"column_end":78}},{"value":"/ to *always* return `usize::MAX`. Only your algorithm’s performance can","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273518,"byte_end":273594,"line_start":863,"line_end":863,"column_start":2,"column_end":76}},{"value":"/ depend on getting a usable offset here; it must be correct independently","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273596,"byte_end":273672,"line_start":864,"line_end":864,"column_start":2,"column_end":78}},{"value":"/ of this function providing a useful value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273674,"byte_end":273720,"line_start":865,"line_end":865,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273722,"byte_end":273725,"line_start":866,"line_end":866,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273727,"byte_end":273740,"line_start":867,"line_end":867,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273742,"byte_end":273745,"line_start":868,"line_end":868,"column_start":2,"column_end":5}},{"value":"/ There are no guarantees whatsoëver that offsetting the bit-pointer will","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273747,"byte_end":273823,"line_start":869,"line_end":869,"column_start":2,"column_end":77}},{"value":"/ not overflow or go beyond the allocation that the bit-pointer selects.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273825,"byte_end":273899,"line_start":870,"line_end":870,"column_start":2,"column_end":76}},{"value":"/ It is up to the caller to ensure that the returned offset is correct in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273901,"byte_end":273976,"line_start":871,"line_end":871,"column_start":2,"column_end":77}},{"value":"/ all terms other than alignment.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":273978,"byte_end":274013,"line_start":872,"line_end":872,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274015,"byte_end":274018,"line_start":873,"line_end":873,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274020,"byte_end":274033,"line_start":874,"line_end":874,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274035,"byte_end":274038,"line_start":875,"line_end":875,"column_start":2,"column_end":5}},{"value":"/ This method panics if `align` is not a power of two.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274040,"byte_end":274096,"line_start":876,"line_end":876,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274098,"byte_end":274101,"line_start":877,"line_end":877,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274103,"byte_end":274118,"line_start":878,"line_end":878,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274120,"byte_end":274123,"line_start":879,"line_end":879,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274125,"byte_end":274136,"line_start":880,"line_end":880,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274138,"byte_end":274165,"line_start":881,"line_end":881,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274167,"byte_end":274170,"line_start":882,"line_end":882,"column_start":2,"column_end":5}},{"value":"/ let data = [0u8; 3];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274172,"byte_end":274196,"line_start":883,"line_end":883,"column_start":2,"column_end":26}},{"value":"/ let ptr = BitPtr::<_, _, Lsb0>::from_slice(&data);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274198,"byte_end":274252,"line_start":884,"line_end":884,"column_start":2,"column_end":56}},{"value":"/ let ptr = unsafe { ptr.add(2) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274254,"byte_end":274290,"line_start":885,"line_end":885,"column_start":2,"column_end":38}},{"value":"/ let count = ptr.align_offset(2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274292,"byte_end":274328,"line_start":886,"line_end":886,"column_start":2,"column_end":38}},{"value":"/ assert!(count >= 6);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274330,"byte_end":274354,"line_start":887,"line_end":887,"column_start":2,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274356,"byte_end":274363,"line_start":888,"line_end":888,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274365,"byte_end":274368,"line_start":889,"line_end":889,"column_start":2,"column_end":5}},{"value":"/ [`.add()`]: Self::add","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274370,"byte_end":274395,"line_start":890,"line_end":890,"column_start":2,"column_end":27}},{"value":"/ [`.wrapping_add()`]: Self::wrapping_add","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274397,"byte_end":274440,"line_start":891,"line_end":891,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2557},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276671,"byte_end":276677,"line_start":958,"line_end":958,"column_start":16,"column_end":22},"name":"as_mut","qualname":"<BitPtr<Mut, T, O>>::as_mut","value":"pub unsafe fn as_mut<'a>(Self) -> Option<BitRef>","parent":null,"children":[],"decl_id":null,"docs":" Produces a proxy reference to the referent bit.","sig":null,"attributes":[{"value":"/ Produces a proxy reference to the referent bit.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274913,"byte_end":274964,"line_start":912,"line_end":912,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274966,"byte_end":274969,"line_start":913,"line_end":913,"column_start":2,"column_end":5}},{"value":"/ Because `BitPtr` guarantees that it is non-null and well-aligned, this","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274971,"byte_end":275045,"line_start":914,"line_end":914,"column_start":2,"column_end":76}},{"value":"/ never returns `None`. However, this is still unsafe to call on any","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275047,"byte_end":275117,"line_start":915,"line_end":915,"column_start":2,"column_end":72}},{"value":"/ bit-pointers created from conjured values rather than known references.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275119,"byte_end":275194,"line_start":916,"line_end":916,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275196,"byte_end":275199,"line_start":917,"line_end":917,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275201,"byte_end":275216,"line_start":918,"line_end":918,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275218,"byte_end":275221,"line_start":919,"line_end":919,"column_start":2,"column_end":5}},{"value":"/ [`pointer::as_mut`](https://doc.rust-lang.org/std/primitive.pointer.html#method.as_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275223,"byte_end":275314,"line_start":920,"line_end":920,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275316,"byte_end":275319,"line_start":921,"line_end":921,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275321,"byte_end":275343,"line_start":922,"line_end":922,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275345,"byte_end":275348,"line_start":923,"line_end":923,"column_start":2,"column_end":5}},{"value":"/ This produces a proxy type rather than a true reference. The proxy","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275350,"byte_end":275420,"line_start":924,"line_end":924,"column_start":2,"column_end":72}},{"value":"/ implements `DerefMut<Target = bool>`, and can be converted to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275422,"byte_end":275487,"line_start":925,"line_end":925,"column_start":2,"column_end":67}},{"value":"/ `&mut bool` with a reborrow `&mut *`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275489,"byte_end":275530,"line_start":926,"line_end":926,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275532,"byte_end":275535,"line_start":927,"line_end":927,"column_start":2,"column_end":5}},{"value":"/ Writes to the proxy are not reflected in the proxied location until the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275537,"byte_end":275612,"line_start":928,"line_end":928,"column_start":2,"column_end":77}},{"value":"/ proxy is destroyed, either through `Drop` or its [`.commit()`] method.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275614,"byte_end":275688,"line_start":929,"line_end":929,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275690,"byte_end":275693,"line_start":930,"line_end":930,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275695,"byte_end":275708,"line_start":931,"line_end":931,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275710,"byte_end":275713,"line_start":932,"line_end":932,"column_start":2,"column_end":5}},{"value":"/ Since `BitPtr` does not permit null or misaligned pointers, this method","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275715,"byte_end":275790,"line_start":933,"line_end":933,"column_start":2,"column_end":77}},{"value":"/ will always dereference the pointer in order to create the proxy. As","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275792,"byte_end":275864,"line_start":934,"line_end":934,"column_start":2,"column_end":74}},{"value":"/ such, you must ensure the following conditions are met:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275866,"byte_end":275925,"line_start":935,"line_end":935,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275927,"byte_end":275930,"line_start":936,"line_end":936,"column_start":2,"column_end":5}},{"value":"/ - the pointer must be dereferenceable as defined in the standard library","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":275932,"byte_end":276008,"line_start":937,"line_end":937,"column_start":2,"column_end":78}},{"value":"/   documentation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276010,"byte_end":276029,"line_start":938,"line_end":938,"column_start":2,"column_end":21}},{"value":"/ - the pointer must point to an initialized instance of `T`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276031,"byte_end":276093,"line_start":939,"line_end":939,"column_start":2,"column_end":64}},{"value":"/ - you must ensure that no other pointer will race to modify the referent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276095,"byte_end":276171,"line_start":940,"line_end":940,"column_start":2,"column_end":78}},{"value":"/   location while this call is reading from memory to produce the proxy","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276173,"byte_end":276247,"line_start":941,"line_end":941,"column_start":2,"column_end":76}},{"value":"/ - you must ensure that no other `bitvec` handle targets the referent bit","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276249,"byte_end":276325,"line_start":942,"line_end":942,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276327,"byte_end":276330,"line_start":943,"line_end":943,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276332,"byte_end":276347,"line_start":944,"line_end":944,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276349,"byte_end":276352,"line_start":945,"line_end":945,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276354,"byte_end":276365,"line_start":946,"line_end":946,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276367,"byte_end":276394,"line_start":947,"line_end":947,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276396,"byte_end":276399,"line_start":948,"line_end":948,"column_start":2,"column_end":5}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276401,"byte_end":276424,"line_start":949,"line_end":949,"column_start":2,"column_end":25}},{"value":"/ let ptr = BitPtr::<_, _, Lsb0>::from_mut(&mut data);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276426,"byte_end":276482,"line_start":950,"line_end":950,"column_start":2,"column_end":58}},{"value":"/ let mut val = unsafe { ptr.as_mut() }.unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276484,"byte_end":276535,"line_start":951,"line_end":951,"column_start":2,"column_end":53}},{"value":"/ assert!(!*val);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276537,"byte_end":276556,"line_start":952,"line_end":952,"column_start":2,"column_end":21}},{"value":"/ *val = true;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276558,"byte_end":276574,"line_start":953,"line_end":953,"column_start":2,"column_end":18}},{"value":"/ assert!(*val);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276576,"byte_end":276594,"line_start":954,"line_end":954,"column_start":2,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276596,"byte_end":276603,"line_start":955,"line_end":955,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276605,"byte_end":276608,"line_start":956,"line_end":956,"column_start":2,"column_end":5}},{"value":"/ [`.commit()`]: crate::ptr::BitRef::commit","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276610,"byte_end":276655,"line_start":957,"line_end":957,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277357,"byte_end":277366,"line_start":981,"line_end":981,"column_start":16,"column_end":25},"name":"copy_from","qualname":"<BitPtr<Mut, T, O>>::copy_from","value":"pub unsafe fn copy_from<T2, O2>(Self, BitPtr<Const, T2, O2>, usize) where\nT2: BitStore, O2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Copies `count` bits from the region starting at `src` to the region\n starting at `self`.","sig":null,"attributes":[{"value":"/ Copies `count` bits from the region starting at `src` to the region","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276762,"byte_end":276833,"line_start":962,"line_end":962,"column_start":2,"column_end":73}},{"value":"/ starting at `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276835,"byte_end":276858,"line_start":963,"line_end":963,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276860,"byte_end":276863,"line_start":964,"line_end":964,"column_start":2,"column_end":5}},{"value":"/ The regions are free to overlap; the implementation will detect overlap","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276865,"byte_end":276940,"line_start":965,"line_end":965,"column_start":2,"column_end":77}},{"value":"/ and correctly avoid it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276942,"byte_end":276969,"line_start":966,"line_end":966,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276971,"byte_end":276974,"line_start":967,"line_end":967,"column_start":2,"column_end":5}},{"value":"/ Note: this has the *opposite* argument order from [`ptr::copy`]: `self`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":276976,"byte_end":277051,"line_start":968,"line_end":968,"column_start":2,"column_end":77}},{"value":"/ is the destination, not the source.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277053,"byte_end":277092,"line_start":969,"line_end":969,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277094,"byte_end":277097,"line_start":970,"line_end":970,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277099,"byte_end":277114,"line_start":971,"line_end":971,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277116,"byte_end":277119,"line_start":972,"line_end":972,"column_start":2,"column_end":5}},{"value":"/ [`pointer::copy_from`](https://doc.rust-lang.org/std/primitive.pointer.html#method.copy_from)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277121,"byte_end":277218,"line_start":973,"line_end":973,"column_start":2,"column_end":99}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277220,"byte_end":277223,"line_start":974,"line_end":974,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277225,"byte_end":277238,"line_start":975,"line_end":975,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277240,"byte_end":277243,"line_start":976,"line_end":976,"column_start":2,"column_end":5}},{"value":"/ See [`ptr::copy`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277245,"byte_end":277267,"line_start":977,"line_end":977,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277269,"byte_end":277272,"line_start":978,"line_end":978,"column_start":2,"column_end":5}},{"value":"/ [`ptr::copy`]: crate::ptr::copy","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277274,"byte_end":277309,"line_start":979,"line_end":979,"column_start":2,"column_end":37}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277311,"byte_end":277341,"line_start":980,"line_end":980,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278267,"byte_end":278291,"line_start":1012,"line_end":1012,"column_start":16,"column_end":40},"name":"copy_from_nonoverlapping","qualname":"<BitPtr<Mut, T, O>>::copy_from_nonoverlapping","value":"pub unsafe fn copy_from_nonoverlapping<T2,\nO2>(Self, BitPtr<Const, T2, O2>, usize) where T2: BitStore, O2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Copies `count` bits from the region starting at `src` to the region\n starting at `self`.","sig":null,"attributes":[{"value":"/ Copies `count` bits from the region starting at `src` to the region","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277507,"byte_end":277578,"line_start":992,"line_end":992,"column_start":2,"column_end":73}},{"value":"/ starting at `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277580,"byte_end":277603,"line_start":993,"line_end":993,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277605,"byte_end":277608,"line_start":994,"line_end":994,"column_start":2,"column_end":5}},{"value":"/ Unlike [`.copy_from()`], the two regions may *not* overlap; this method","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277610,"byte_end":277685,"line_start":995,"line_end":995,"column_start":2,"column_end":77}},{"value":"/ does not attempt to detect overlap and thus may have a slight","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277687,"byte_end":277752,"line_start":996,"line_end":996,"column_start":2,"column_end":67}},{"value":"/ performance boost over the overlap-handling `.copy_from()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277754,"byte_end":277817,"line_start":997,"line_end":997,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277819,"byte_end":277822,"line_start":998,"line_end":998,"column_start":2,"column_end":5}},{"value":"/ Note: this has the *opposite* argument order from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277824,"byte_end":277877,"line_start":999,"line_end":999,"column_start":2,"column_end":55}},{"value":"/ [`ptr::copy_nonoverlapping`]: `self` is the destination, not the source.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277879,"byte_end":277955,"line_start":1000,"line_end":1000,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277957,"byte_end":277960,"line_start":1001,"line_end":1001,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277962,"byte_end":277977,"line_start":1002,"line_end":1002,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277979,"byte_end":277982,"line_start":1003,"line_end":1003,"column_start":2,"column_end":5}},{"value":"/ [`pointer::copy_from_nonoverlapping`](https://doc.rust-lang.org/std/primitive.pointer.html#method.copy_from_nonoverlapping)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":277984,"byte_end":278111,"line_start":1004,"line_end":1004,"column_start":2,"column_end":129}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278113,"byte_end":278116,"line_start":1005,"line_end":1005,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278118,"byte_end":278131,"line_start":1006,"line_end":1006,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278133,"byte_end":278136,"line_start":1007,"line_end":1007,"column_start":2,"column_end":5}},{"value":"/ See [`ptr::copy_nonoverlapping`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278138,"byte_end":278175,"line_start":1008,"line_end":1008,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278177,"byte_end":278180,"line_start":1009,"line_end":1009,"column_start":2,"column_end":5}},{"value":"/ [`.copy_from()`]: Self::copy_from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278182,"byte_end":278219,"line_start":1010,"line_end":1010,"column_start":2,"column_end":39}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278221,"byte_end":278251,"line_start":1011,"line_end":1011,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278882,"byte_end":278895,"line_start":1037,"line_end":1037,"column_start":9,"column_end":22},"name":"drop_in_place","qualname":"<BitPtr<Mut, T, O>>::drop_in_place","value":"pub fn drop_in_place(Self)","parent":null,"children":[],"decl_id":null,"docs":" Runs the destructor of the referent value.","sig":null,"attributes":[{"value":"/ Runs the destructor of the referent value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278447,"byte_end":278493,"line_start":1023,"line_end":1023,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278495,"byte_end":278498,"line_start":1024,"line_end":1024,"column_start":2,"column_end":5}},{"value":"/ `bool` has no destructor; this function does nothing.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278500,"byte_end":278557,"line_start":1025,"line_end":1025,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278559,"byte_end":278562,"line_start":1026,"line_end":1026,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278564,"byte_end":278579,"line_start":1027,"line_end":1027,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278581,"byte_end":278584,"line_start":1028,"line_end":1028,"column_start":2,"column_end":5}},{"value":"/ [`pointer::drop_in_place`](https://doc.rust-lang.org/std/primitive.pointer.html#method.drop_in_place)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278586,"byte_end":278691,"line_start":1029,"line_end":1029,"column_start":2,"column_end":107}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278693,"byte_end":278696,"line_start":1030,"line_end":1030,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278698,"byte_end":278711,"line_start":1031,"line_end":1031,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278713,"byte_end":278716,"line_start":1032,"line_end":1032,"column_start":2,"column_end":5}},{"value":"/ See [`ptr::drop_in_place`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278718,"byte_end":278749,"line_start":1033,"line_end":1033,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278751,"byte_end":278754,"line_start":1034,"line_end":1034,"column_start":2,"column_end":5}},{"value":"/ [`ptr::drop_in_place`]: crate::ptr::drop_in_place","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278756,"byte_end":278809,"line_start":1035,"line_end":1035,"column_start":2,"column_end":55}},{"value":"deprecated = \"this has no effect, and should not be called\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278811,"byte_end":278873,"line_start":1036,"line_end":1036,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279180,"byte_end":279185,"line_start":1050,"line_end":1050,"column_start":16,"column_end":21},"name":"write","qualname":"<BitPtr<Mut, T, O>>::write","value":"pub unsafe fn write(Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Writes a new bit into the given location.","sig":null,"attributes":[{"value":"/ Writes a new bit into the given location.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278907,"byte_end":278952,"line_start":1039,"line_end":1039,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278954,"byte_end":278957,"line_start":1040,"line_end":1040,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278959,"byte_end":278974,"line_start":1041,"line_end":1041,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278976,"byte_end":278979,"line_start":1042,"line_end":1042,"column_start":2,"column_end":5}},{"value":"/ [`pointer::write`](https://doc.rust-lang.org/std/primitive.pointer.html#method.write)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":278981,"byte_end":279070,"line_start":1043,"line_end":1043,"column_start":2,"column_end":91}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279072,"byte_end":279075,"line_start":1044,"line_end":1044,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279077,"byte_end":279090,"line_start":1045,"line_end":1045,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279092,"byte_end":279095,"line_start":1046,"line_end":1046,"column_start":2,"column_end":5}},{"value":"/ See [`ptr::write`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279097,"byte_end":279120,"line_start":1047,"line_end":1047,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279122,"byte_end":279125,"line_start":1048,"line_end":1048,"column_start":2,"column_end":5}},{"value":"/ [`ptr::write`]: crate::ptr::write","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279127,"byte_end":279164,"line_start":1049,"line_end":1049,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280461,"byte_end":280475,"line_start":1082,"line_end":1082,"column_start":16,"column_end":30},"name":"write_volatile","qualname":"<BitPtr<Mut, T, O>>::write_volatile","value":"pub unsafe fn write_volatile(Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Writes a new bit using volatile I/O operations.","sig":null,"attributes":[{"value":"/ Writes a new bit using volatile I/O operations.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279235,"byte_end":279286,"line_start":1054,"line_end":1054,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279288,"byte_end":279291,"line_start":1055,"line_end":1055,"column_start":2,"column_end":5}},{"value":"/ Because processors do not generally have single-bit read or write","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279293,"byte_end":279362,"line_start":1056,"line_end":1056,"column_start":2,"column_end":71}},{"value":"/ instructions, this must perform a volatile read of the entire memory","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279364,"byte_end":279436,"line_start":1057,"line_end":1057,"column_start":2,"column_end":74}},{"value":"/ location, perform the write locally, then perform another volatile write","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279438,"byte_end":279514,"line_start":1058,"line_end":1058,"column_start":2,"column_end":78}},{"value":"/ to the entire location. These three steps are guaranteed to be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279516,"byte_end":279582,"line_start":1059,"line_end":1059,"column_start":2,"column_end":68}},{"value":"/ sequential with respect to each other, but are not guaranteed to be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279584,"byte_end":279655,"line_start":1060,"line_end":1060,"column_start":2,"column_end":73}},{"value":"/ atomic.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279657,"byte_end":279668,"line_start":1061,"line_end":1061,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279670,"byte_end":279673,"line_start":1062,"line_end":1062,"column_start":2,"column_end":5}},{"value":"/ Volatile operations are intended to act on I/O memory, and are *only*","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279675,"byte_end":279748,"line_start":1063,"line_end":1063,"column_start":2,"column_end":75}},{"value":"/ guaranteed not to be elided or reördered by the compiler across other","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279750,"byte_end":279824,"line_start":1064,"line_end":1064,"column_start":2,"column_end":75}},{"value":"/ I/O operations.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279826,"byte_end":279845,"line_start":1065,"line_end":1065,"column_start":2,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279847,"byte_end":279850,"line_start":1066,"line_end":1066,"column_start":2,"column_end":5}},{"value":"/ You should not use `bitvec` to act on volatile memory. You should use a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279852,"byte_end":279927,"line_start":1067,"line_end":1067,"column_start":2,"column_end":77}},{"value":"/ crate specialized for volatile I/O work, such as [`voladdr`], and use it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":279929,"byte_end":280005,"line_start":1068,"line_end":1068,"column_start":2,"column_end":78}},{"value":"/ to explicitly manage the I/O and ask it to perform `bitvec` work only on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280007,"byte_end":280083,"line_start":1069,"line_end":1069,"column_start":2,"column_end":78}},{"value":"/ the local snapshot of a volatile location.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280085,"byte_end":280131,"line_start":1070,"line_end":1070,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280133,"byte_end":280136,"line_start":1071,"line_end":1071,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280138,"byte_end":280153,"line_start":1072,"line_end":1072,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280155,"byte_end":280158,"line_start":1073,"line_end":1073,"column_start":2,"column_end":5}},{"value":"/ [`pointer::write_volatile`](https://doc.rust-lang.org/std/primitive.pointer.html#method.write_volatile)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280160,"byte_end":280267,"line_start":1074,"line_end":1074,"column_start":2,"column_end":109}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280269,"byte_end":280272,"line_start":1075,"line_end":1075,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280274,"byte_end":280287,"line_start":1076,"line_end":1076,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280289,"byte_end":280292,"line_start":1077,"line_end":1077,"column_start":2,"column_end":5}},{"value":"/ See [`ptr::write_volatile`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280294,"byte_end":280326,"line_start":1078,"line_end":1078,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280328,"byte_end":280331,"line_start":1079,"line_end":1079,"column_start":2,"column_end":5}},{"value":"/ [`ptr::write_volatile`]: crate::ptr::write_volatile","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280333,"byte_end":280388,"line_start":1080,"line_end":1080,"column_start":2,"column_end":57}},{"value":"/ [`voladdr`]: https://docs.rs/voladdr/latest/voladdr","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280390,"byte_end":280445,"line_start":1081,"line_end":1081,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281282,"byte_end":281297,"line_start":1105,"line_end":1105,"column_start":16,"column_end":31},"name":"write_unaligned","qualname":"<BitPtr<Mut, T, O>>::write_unaligned","value":"pub unsafe fn write_unaligned(Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Writes a bit into memory, tolerating unaligned addresses.","sig":null,"attributes":[{"value":"/ Writes a bit into memory, tolerating unaligned addresses.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280662,"byte_end":280723,"line_start":1089,"line_end":1089,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280725,"byte_end":280728,"line_start":1090,"line_end":1090,"column_start":2,"column_end":5}},{"value":"/ `BitPtr` does not have unaligned addresses. `BitPtr` itself is capable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280730,"byte_end":280804,"line_start":1091,"line_end":1091,"column_start":2,"column_end":76}},{"value":"/ of operating on misaligned addresses, but elects to disallow use of them","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280806,"byte_end":280882,"line_start":1092,"line_end":1092,"column_start":2,"column_end":78}},{"value":"/ in keeping with the rest of `bitvec`’s requirements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280884,"byte_end":280942,"line_start":1093,"line_end":1093,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280944,"byte_end":280947,"line_start":1094,"line_end":1094,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280949,"byte_end":280964,"line_start":1095,"line_end":1095,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280966,"byte_end":280969,"line_start":1096,"line_end":1096,"column_start":2,"column_end":5}},{"value":"/ [`pointer::write_unaligned`](https://doc.rust-lang.org/std/primitive.pointer.html#method.write_unaligned)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":280971,"byte_end":281080,"line_start":1097,"line_end":1097,"column_start":2,"column_end":111}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281082,"byte_end":281085,"line_start":1098,"line_end":1098,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281087,"byte_end":281100,"line_start":1099,"line_end":1099,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281102,"byte_end":281105,"line_start":1100,"line_end":1100,"column_start":2,"column_end":5}},{"value":"/ See [`ptr::write_unaligned`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281107,"byte_end":281140,"line_start":1101,"line_end":1101,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281142,"byte_end":281145,"line_start":1102,"line_end":1102,"column_start":2,"column_end":5}},{"value":"/ [`ptr::write_unaligned`]: crate::ptr::write_unaligned","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281147,"byte_end":281204,"line_start":1103,"line_end":1103,"column_start":2,"column_end":59}},{"value":"deprecated = \"`BitPtr` does not have unaligned addresses\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281206,"byte_end":281266,"line_start":1104,"line_end":1104,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281808,"byte_end":281815,"line_start":1124,"line_end":1124,"column_start":16,"column_end":23},"name":"replace","qualname":"<BitPtr<Mut, T, O>>::replace","value":"pub unsafe fn replace(Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Replaces the bit at `*self` with a new value, returning the previous\n value.","sig":null,"attributes":[{"value":"/ Replaces the bit at `*self` with a new value, returning the previous","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281486,"byte_end":281558,"line_start":1112,"line_end":1112,"column_start":2,"column_end":74}},{"value":"/ value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281560,"byte_end":281570,"line_start":1113,"line_end":1113,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281572,"byte_end":281575,"line_start":1114,"line_end":1114,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281577,"byte_end":281592,"line_start":1115,"line_end":1115,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281594,"byte_end":281597,"line_start":1116,"line_end":1116,"column_start":2,"column_end":5}},{"value":"/ [`pointer::replace`](https://doc.rust-lang.org/std/primitive.pointer.html#method.replace)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281599,"byte_end":281692,"line_start":1117,"line_end":1117,"column_start":2,"column_end":95}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281694,"byte_end":281697,"line_start":1118,"line_end":1118,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281699,"byte_end":281712,"line_start":1119,"line_end":1119,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281714,"byte_end":281717,"line_start":1120,"line_end":1120,"column_start":2,"column_end":5}},{"value":"/ See [`ptr::replace`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281719,"byte_end":281744,"line_start":1121,"line_end":1121,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281746,"byte_end":281749,"line_start":1122,"line_end":1122,"column_start":2,"column_end":5}},{"value":"/ [`ptr::replace`]: crate::ptr::replace","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281751,"byte_end":281792,"line_start":1123,"line_end":1123,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2570},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":282157,"byte_end":282161,"line_start":1139,"line_end":1139,"column_start":16,"column_end":20},"name":"swap","qualname":"<BitPtr<Mut, T, O>>::swap","value":"pub unsafe fn swap<T2, O2>(Self, BitPtr<Mut, T2, O2>) where T2: BitStore,\nO2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Swaps the bits at two mutable locations.","sig":null,"attributes":[{"value":"/ Swaps the bits at two mutable locations.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281890,"byte_end":281934,"line_start":1128,"line_end":1128,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281936,"byte_end":281939,"line_start":1129,"line_end":1129,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281941,"byte_end":281956,"line_start":1130,"line_end":1130,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281958,"byte_end":281961,"line_start":1131,"line_end":1131,"column_start":2,"column_end":5}},{"value":"/ [`pointer::swap`](https://doc.rust-lang.org/std/primitive.pointer.html#method.swap)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":281963,"byte_end":282050,"line_start":1132,"line_end":1132,"column_start":2,"column_end":89}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":282052,"byte_end":282055,"line_start":1133,"line_end":1133,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":282057,"byte_end":282070,"line_start":1134,"line_end":1134,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":282072,"byte_end":282075,"line_start":1135,"line_end":1135,"column_start":2,"column_end":5}},{"value":"/ See [`ptr::swap`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":282077,"byte_end":282099,"line_start":1136,"line_end":1136,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":282101,"byte_end":282104,"line_start":1137,"line_end":1137,"column_start":2,"column_end":5}},{"value":"/ [`ptr::swap`]: crate::ptr::swap","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":282106,"byte_end":282141,"line_start":1138,"line_end":1138,"column_start":2,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5884},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":286305,"byte_end":286309,"line_start":1353,"line_end":1353,"column_start":2,"column_end":6},"name":"Null","qualname":"::ptr::single::BitPtrError::Null","value":"BitPtrError::Null(NullPtrError)","parent":{"krate":0,"index":5882},"children":[],"decl_id":null,"docs":" Attempted to construct a bit-pointer with the null element address.\n","sig":null,"attributes":[{"value":"/ Attempted to construct a bit-pointer with the null element address.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":286232,"byte_end":286303,"line_start":1352,"line_end":1352,"column_start":2,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5887},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":286423,"byte_end":286433,"line_start":1356,"line_end":1356,"column_start":2,"column_end":12},"name":"Misaligned","qualname":"::ptr::single::BitPtrError::Misaligned","value":"BitPtrError::Misaligned(MisalignError<T>)","parent":{"krate":0,"index":5882},"children":[],"decl_id":null,"docs":" Attempted to construct a bit-pointer with an address not aligned for the\n element type.\n","sig":null,"attributes":[{"value":"/ Attempted to construct a bit-pointer with an address not aligned for the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":286326,"byte_end":286402,"line_start":1354,"line_end":1354,"column_start":2,"column_end":78}},{"value":"/ element type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":286404,"byte_end":286421,"line_start":1355,"line_end":1355,"column_start":2,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":5882},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":286196,"byte_end":286207,"line_start":1349,"line_end":1349,"column_start":10,"column_end":21},"name":"BitPtrError","qualname":"::ptr::single::BitPtrError","value":"pub enum BitPtrError<T> where T: BitStore {\n    Null(NullPtrError),\n    Misaligned(MisalignError<T>),\n}","parent":null,"children":[{"krate":0,"index":5884},{"krate":0,"index":5887}],"decl_id":null,"docs":" Errors produced by invalid bit-pointer components.\n","sig":null,"attributes":[{"value":"/ Errors produced by invalid bit-pointer components.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":286064,"byte_end":286118,"line_start":1347,"line_end":1347,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5921},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":308266,"byte_end":308270,"line_start":788,"line_end":788,"column_start":2,"column_end":6},"name":"Null","qualname":"::ptr::span::BitSpanError::Null","value":"BitSpanError::Null(NullPtrError)","parent":{"krate":0,"index":5919},"children":[],"decl_id":null,"docs":" A null pointer was provided.\n","sig":null,"attributes":[{"value":"/ A null pointer was provided.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":308232,"byte_end":308264,"line_start":787,"line_end":787,"column_start":2,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5924},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":308333,"byte_end":308343,"line_start":790,"line_end":790,"column_start":2,"column_end":12},"name":"Misaligned","qualname":"::ptr::span::BitSpanError::Misaligned","value":"BitSpanError::Misaligned(MisalignError<T>)","parent":{"krate":0,"index":5919},"children":[],"decl_id":null,"docs":" The base element pointer is not aligned.\n","sig":null,"attributes":[{"value":"/ The base element pointer is not aligned.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":308287,"byte_end":308331,"line_start":789,"line_end":789,"column_start":2,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5927},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":308428,"byte_end":308435,"line_start":792,"line_end":792,"column_start":2,"column_end":9},"name":"TooLong","qualname":"::ptr::span::BitSpanError::TooLong","value":"BitSpanError::TooLong(usize)","parent":{"krate":0,"index":5919},"children":[],"decl_id":null,"docs":" The requested length exceeds the `BitSpan` length ceiling.\n","sig":null,"attributes":[{"value":"/ The requested length exceeds the `BitSpan` length ceiling.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":308364,"byte_end":308426,"line_start":791,"line_end":791,"column_start":2,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5930},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":308504,"byte_end":308511,"line_start":794,"line_end":794,"column_start":2,"column_end":9},"name":"TooHigh","qualname":"::ptr::span::BitSpanError::TooHigh","value":"BitSpanError::TooHigh(*const T)","parent":{"krate":0,"index":5919},"children":[],"decl_id":null,"docs":" The requested address is too high, and wraps to zero.\n","sig":null,"attributes":[{"value":"/ The requested address is too high, and wraps to zero.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":308445,"byte_end":308502,"line_start":793,"line_end":793,"column_start":2,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":5919},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":308195,"byte_end":308207,"line_start":784,"line_end":784,"column_start":10,"column_end":22},"name":"BitSpanError","qualname":"::ptr::span::BitSpanError","value":"pub enum BitSpanError<T> where T: BitStore {\n    Null(NullPtrError),\n    Misaligned(MisalignError<T>),\n    TooLong(usize),\n    TooHigh(*const T),\n}","parent":null,"children":[{"krate":0,"index":5921},{"krate":0,"index":5924},{"krate":0,"index":5927},{"krate":0,"index":5930}],"decl_id":null,"docs":" An error produced when creating `BitSpan` encoded references.\n","sig":null,"attributes":[{"value":"/ An error produced when creating `BitSpan` encoded references.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":308059,"byte_end":308124,"line_start":782,"line_end":782,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":2944},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":219704,"byte_end":219708,"line_start":49,"line_end":49,"column_start":15,"column_end":19},"name":"copy","qualname":"::ptr::copy","value":"pub unsafe fn copy<T1, T2, O1,\nO2>(BitPtr<Const, T1, O1>, BitPtr<Mut, T2, O2>, usize) where O1: BitOrder,\nO2: BitOrder, T1: BitStore, T2: BitStore","parent":null,"children":[],"decl_id":null,"docs":"# Bit-wise `memcpy`","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2949},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":220359,"byte_end":220378,"line_start":76,"line_end":76,"column_start":15,"column_end":34},"name":"copy_nonoverlapping","qualname":"::ptr::copy_nonoverlapping","value":"pub unsafe fn copy_nonoverlapping<T1, T2, O1,\nO2>(BitPtr<Const, T1, O1>, BitPtr<Mut, T2, O2>, usize) where O1: BitOrder,\nO2: BitOrder, T1: BitStore, T2: BitStore","parent":null,"children":[],"decl_id":null,"docs":"# Bit-wise `memcpy`","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2954},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":220758,"byte_end":220771,"line_start":93,"line_end":93,"column_start":15,"column_end":28},"name":"drop_in_place","qualname":"::ptr::drop_in_place","value":"pub unsafe fn drop_in_place<T, O>(BitPtr<Mut, T, O>) where T: BitStore,\nO: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Remote Destructor","sig":null,"attributes":[{"value":"deprecated = \"this has no effect, and should not be called\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":220681,"byte_end":220743,"line_start":92,"line_end":92,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":2957},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":220888,"byte_end":220890,"line_start":101,"line_end":101,"column_start":8,"column_end":10},"name":"eq","qualname":"::ptr::eq","value":"pub fn eq<T1, T2, O>(BitPtr<Const, T1, O>, BitPtr<Const, T2, O>) -> bool where\nT1: BitStore, T2: BitStore, O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Bit-Pointer Equality","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2961},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":221122,"byte_end":221126,"line_start":115,"line_end":115,"column_start":8,"column_end":12},"name":"hash","qualname":"::ptr::hash","value":"pub fn hash<T, O, S>(BitPtr<Const, T, O>, &mut S) where T: BitStore,\nO: BitOrder, S: Hasher","parent":null,"children":[],"decl_id":null,"docs":"# Bit-Pointer Hashing","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":221040,"byte_end":221070,"line_start":113,"line_end":113,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":2965},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":221326,"byte_end":221330,"line_start":126,"line_end":126,"column_start":8,"column_end":12},"name":"null","qualname":"::ptr::null","value":"pub fn null<T, O>() -> BitPtr<Const, T, O> where T: BitStore, O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Bit-Pointer Sentinel Value","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":221244,"byte_end":221274,"line_start":124,"line_end":124,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":2968},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":221505,"byte_end":221513,"line_start":136,"line_end":136,"column_start":8,"column_end":16},"name":"null_mut","qualname":"::ptr::null_mut","value":"pub fn null_mut<T, O>() -> BitPtr<Mut, T, O> where T: BitStore, O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Bit-Pointer Sentinel Value","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":221419,"byte_end":221449,"line_start":134,"line_end":134,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":2971},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":221689,"byte_end":221693,"line_start":146,"line_end":146,"column_start":15,"column_end":19},"name":"read","qualname":"::ptr::read","value":"pub unsafe fn read<T, O>(BitPtr<Const, T, O>) -> bool where T: BitStore,\nO: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Single-Bit Read","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":221600,"byte_end":221630,"line_start":144,"line_end":144,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":2974},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":221966,"byte_end":221980,"line_start":158,"line_end":158,"column_start":15,"column_end":29},"name":"read_unaligned","qualname":"::ptr::read_unaligned","value":"pub unsafe fn read_unaligned<T, O>(BitPtr<Const, T, O>) -> bool where\nT: BitStore, O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Single-Bit Unaligned Read","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":221785,"byte_end":221805,"line_start":154,"line_end":154,"column_start":1,"column_end":21}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":221806,"byte_end":221836,"line_start":155,"line_end":155,"column_start":1,"column_end":31}},{"value":"deprecated = \"`BitPtr` does not have unaligned addresses\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":221891,"byte_end":221951,"line_start":157,"line_end":157,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":2977},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":222180,"byte_end":222193,"line_start":168,"line_end":168,"column_start":15,"column_end":28},"name":"read_volatile","qualname":"::ptr::read_volatile","value":"pub unsafe fn read_volatile<T, O>(BitPtr<Const, T, O>) -> bool where\nT: BitStore, O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Single-Bit Volatile Read","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":222082,"byte_end":222112,"line_start":166,"line_end":166,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":2980},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":222386,"byte_end":222393,"line_start":178,"line_end":178,"column_start":15,"column_end":22},"name":"replace","qualname":"::ptr::replace","value":"pub unsafe fn replace<T, O>(BitPtr<Mut, T, O>, bool) -> bool where\nT: BitStore, O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Single-Bit Replacement","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":222294,"byte_end":222324,"line_start":176,"line_end":176,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":2983},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":222598,"byte_end":222618,"line_start":188,"line_end":188,"column_start":8,"column_end":28},"name":"slice_from_raw_parts","qualname":"::ptr::slice_from_raw_parts","value":"pub fn slice_from_raw_parts<T, O>(BitPtr<Const, T, O>, usize)\n-> *const BitSlice<T, O> where T: BitStore, O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Raw Bit-Slice Pointer Construction","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":222500,"byte_end":222530,"line_start":186,"line_end":186,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":2986},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":222869,"byte_end":222893,"line_start":201,"line_end":201,"column_start":8,"column_end":32},"name":"slice_from_raw_parts_mut","qualname":"::ptr::slice_from_raw_parts_mut","value":"pub fn slice_from_raw_parts_mut<T, O>(BitPtr<Mut, T, O>, usize)\n-> *mut BitSlice<T, O> where T: BitStore, O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Raw Bit-Slice Pointer Construction","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":222767,"byte_end":222797,"line_start":199,"line_end":199,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":2989},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":223100,"byte_end":223104,"line_start":213,"line_end":213,"column_start":15,"column_end":19},"name":"swap","qualname":"::ptr::swap","value":"pub unsafe fn swap<T1, T2, O1, O2>(BitPtr<Mut, T1, O1>, BitPtr<Mut, T2, O2>)\nwhere T1: BitStore, T2: BitStore, O1: BitOrder, O2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Bit Swap","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2994},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":223359,"byte_end":223378,"line_start":226,"line_end":226,"column_start":15,"column_end":34},"name":"swap_nonoverlapping","qualname":"::ptr::swap_nonoverlapping","value":"pub unsafe fn swap_nonoverlapping<T1, T2, O1,\nO2>(BitPtr<Mut, T1, O1>, BitPtr<Mut, T2, O2>, usize) where O1: BitOrder,\nO2: BitOrder, T1: BitStore, T2: BitStore","parent":null,"children":[],"decl_id":null,"docs":"# Many-Bit Swap","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2999},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":223794,"byte_end":223799,"line_start":246,"line_end":246,"column_start":15,"column_end":20},"name":"write","qualname":"::ptr::write","value":"pub unsafe fn write<T, O>(BitPtr<Mut, T, O>, bool) where T: BitStore,\nO: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Single-Bit Write","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":223704,"byte_end":223734,"line_start":244,"line_end":244,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":3002},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":224042,"byte_end":224053,"line_start":257,"line_end":257,"column_start":15,"column_end":26},"name":"write_bytes","qualname":"::ptr::write_bytes","value":"pub unsafe fn write_bytes<T, O>(BitPtr<Mut, T, O>, bool, usize) where\nT: BitStore, O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Bit-wise `memset`","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":223901,"byte_end":223931,"line_start":254,"line_end":254,"column_start":1,"column_end":31}},{"value":"deprecated = \"use `write_bits()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":223932,"byte_end":223976,"line_start":255,"line_end":255,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":3005},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":224369,"byte_end":224384,"line_start":272,"line_end":272,"column_start":15,"column_end":30},"name":"write_unaligned","qualname":"::ptr::write_unaligned","value":"pub unsafe fn write_unaligned<T, O>(BitPtr<Mut, T, O>, bool) where\nT: BitStore, O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Single-Bit Unaligned Write","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":224187,"byte_end":224207,"line_start":268,"line_end":268,"column_start":1,"column_end":21}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":224208,"byte_end":224238,"line_start":269,"line_end":269,"column_start":1,"column_end":31}},{"value":"deprecated = \"`BitPtr` does not have unaligned addresses\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":224294,"byte_end":224354,"line_start":271,"line_end":271,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":3008},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":224595,"byte_end":224609,"line_start":282,"line_end":282,"column_start":15,"column_end":29},"name":"write_volatile","qualname":"::ptr::write_volatile","value":"pub unsafe fn write_volatile<T, O>(BitPtr<Mut, T, O>, bool) where T: BitStore,\nO: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Single-Bit Volatile Write","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":224496,"byte_end":224526,"line_start":280,"line_end":280,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":3011},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":224844,"byte_end":224867,"line_start":294,"line_end":294,"column_start":8,"column_end":31},"name":"bitslice_from_raw_parts","qualname":"::ptr::bitslice_from_raw_parts","value":"pub fn bitslice_from_raw_parts<T, O>(BitPtr<Const, T, O>, usize)\n-> *const BitSlice<T, O> where T: BitStore, O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Bit-Slice Pointer Construction","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":224743,"byte_end":224773,"line_start":292,"line_end":292,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":3014},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":225130,"byte_end":225157,"line_start":307,"line_end":307,"column_start":8,"column_end":35},"name":"bitslice_from_raw_parts_mut","qualname":"::ptr::bitslice_from_raw_parts_mut","value":"pub fn bitslice_from_raw_parts_mut<T, O>(BitPtr<Mut, T, O>, usize)\n-> *mut BitSlice<T, O> where T: BitStore, O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Bit-Slice Pointer Construction","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":225025,"byte_end":225055,"line_start":305,"line_end":305,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":3017},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr.rs","byte_start":225379,"byte_end":225389,"line_start":319,"line_end":319,"column_start":15,"column_end":25},"name":"write_bits","qualname":"::ptr::write_bits","value":"pub unsafe fn write_bits<T, O>(BitPtr<Mut, T, O>, bool, usize) where\nT: BitStore, O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"# Bit-wise `memset`","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3020},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"slice","qualname":"::slice","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","parent":null,"children":[{"krate":0,"index":3021},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3028},{"krate":0,"index":3031},{"krate":0,"index":3034},{"krate":0,"index":3037},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3046},{"krate":0,"index":3048},{"krate":0,"index":3049},{"krate":0,"index":3051},{"krate":0,"index":3054},{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3062},{"krate":0,"index":3065},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3075},{"krate":0,"index":3076},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3082},{"krate":0,"index":3085},{"krate":0,"index":3088},{"krate":0,"index":3091},{"krate":0,"index":3094},{"krate":0,"index":3097},{"krate":0,"index":3388},{"krate":0,"index":3655},{"krate":0,"index":3756},{"krate":0,"index":3907},{"krate":0,"index":4139},{"krate":0,"index":4140},{"krate":0,"index":4141},{"krate":0,"index":4142},{"krate":0,"index":4148},{"krate":0,"index":4163},{"krate":0,"index":4178},{"krate":0,"index":4192},{"krate":0,"index":4199},{"krate":0,"index":4229},{"krate":0,"index":4234},{"krate":0,"index":4244},{"krate":0,"index":4249},{"krate":0,"index":4254},{"krate":0,"index":4259},{"krate":0,"index":4263}],"decl_id":null,"docs":"# Bit-Addressable Memory Regions","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3231},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365928,"byte_end":365931,"line_start":82,"line_end":82,"column_start":9,"column_end":12},"name":"len","qualname":"<BitSlice<T, O>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of bits in the bit-slice.","sig":null,"attributes":[{"value":"/ Gets the number of bits in the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365605,"byte_end":365650,"line_start":68,"line_end":68,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365652,"byte_end":365655,"line_start":69,"line_end":69,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365657,"byte_end":365672,"line_start":70,"line_end":70,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365674,"byte_end":365677,"line_start":71,"line_end":71,"column_start":2,"column_end":5}},{"value":"/ [`slice::len`](https://doc.rust-lang.org/std/primitive.slice.html#method.len)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365679,"byte_end":365760,"line_start":72,"line_end":72,"column_start":2,"column_end":83}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365762,"byte_end":365765,"line_start":73,"line_end":73,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365767,"byte_end":365782,"line_start":74,"line_end":74,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365784,"byte_end":365787,"line_start":75,"line_end":75,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365789,"byte_end":365800,"line_start":76,"line_end":76,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365802,"byte_end":365829,"line_start":77,"line_end":77,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365831,"byte_end":365834,"line_start":78,"line_end":78,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(bits![].len(), 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365836,"byte_end":365869,"line_start":79,"line_end":79,"column_start":2,"column_end":35}},{"value":"/ assert_eq!(bits![0; 10].len(), 10);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365871,"byte_end":365910,"line_start":80,"line_end":80,"column_start":2,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365912,"byte_end":365919,"line_start":81,"line_end":81,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3232},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366317,"byte_end":366325,"line_start":100,"line_end":100,"column_start":9,"column_end":17},"name":"is_empty","qualname":"<BitSlice<T, O>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the bit-slice is empty (length zero).","sig":null,"attributes":[{"value":"/ Tests if the bit-slice is empty (length zero).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365981,"byte_end":366031,"line_start":86,"line_end":86,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366033,"byte_end":366036,"line_start":87,"line_end":87,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366038,"byte_end":366053,"line_start":88,"line_end":88,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366055,"byte_end":366058,"line_start":89,"line_end":89,"column_start":2,"column_end":5}},{"value":"/ [`slice::is_empty`](https://doc.rust-lang.org/std/primitive.slice.html#method.is_empty)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366060,"byte_end":366151,"line_start":90,"line_end":90,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366153,"byte_end":366156,"line_start":91,"line_end":91,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366158,"byte_end":366173,"line_start":92,"line_end":92,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366175,"byte_end":366178,"line_start":93,"line_end":93,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366180,"byte_end":366191,"line_start":94,"line_end":94,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366193,"byte_end":366220,"line_start":95,"line_end":95,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366222,"byte_end":366225,"line_start":96,"line_end":96,"column_start":2,"column_end":5}},{"value":"/ assert!(bits![].is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366227,"byte_end":366259,"line_start":97,"line_end":97,"column_start":2,"column_end":34}},{"value":"/ assert!(!bits![0; 10].is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366261,"byte_end":366299,"line_start":98,"line_end":98,"column_start":2,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366301,"byte_end":366308,"line_start":99,"line_end":99,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3233},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366921,"byte_end":366926,"line_start":126,"line_end":126,"column_start":9,"column_end":14},"name":"first","qualname":"<BitSlice<T, O>>::first","value":"pub fn first(&Self) -> Option<BitRef<, Const, T, O>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the first bit of the bit-slice, or `None` if it is\n empty.","sig":null,"attributes":[{"value":"/ Gets a reference to the first bit of the bit-slice, or `None` if it is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366366,"byte_end":366440,"line_start":104,"line_end":104,"column_start":2,"column_end":76}},{"value":"/ empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366442,"byte_end":366452,"line_start":105,"line_end":105,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366454,"byte_end":366457,"line_start":106,"line_end":106,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366459,"byte_end":366474,"line_start":107,"line_end":107,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366476,"byte_end":366479,"line_start":108,"line_end":108,"column_start":2,"column_end":5}},{"value":"/ [`slice::first`](https://doc.rust-lang.org/std/primitive.slice.html#method.first)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366481,"byte_end":366566,"line_start":109,"line_end":109,"column_start":2,"column_end":87}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366568,"byte_end":366571,"line_start":110,"line_end":110,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366573,"byte_end":366595,"line_start":111,"line_end":111,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366597,"byte_end":366600,"line_start":112,"line_end":112,"column_start":2,"column_end":5}},{"value":"/ `bitvec` uses a custom structure for both read-only and mutable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366602,"byte_end":366669,"line_start":113,"line_end":113,"column_start":2,"column_end":69}},{"value":"/ references to `bool`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366671,"byte_end":366696,"line_start":114,"line_end":114,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366698,"byte_end":366701,"line_start":115,"line_end":115,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366703,"byte_end":366718,"line_start":116,"line_end":116,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366720,"byte_end":366723,"line_start":117,"line_end":117,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366725,"byte_end":366736,"line_start":118,"line_end":118,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366738,"byte_end":366765,"line_start":119,"line_end":119,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366767,"byte_end":366770,"line_start":120,"line_end":120,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![1, 0, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366772,"byte_end":366802,"line_start":121,"line_end":121,"column_start":2,"column_end":32}},{"value":"/ assert_eq!(bits.first().as_deref(), Some(&true));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366804,"byte_end":366857,"line_start":122,"line_end":122,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366859,"byte_end":366862,"line_start":123,"line_end":123,"column_start":2,"column_end":5}},{"value":"/ assert!(bits![].first().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366864,"byte_end":366903,"line_start":124,"line_end":124,"column_start":2,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366905,"byte_end":366912,"line_start":125,"line_end":125,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3234},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367690,"byte_end":367699,"line_start":156,"line_end":156,"column_start":9,"column_end":18},"name":"first_mut","qualname":"<BitSlice<T, O>>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<BitRef<, Mut, T, O>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the first bit of the bit-slice, or `None` if\n it is empty.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the first bit of the bit-slice, or `None` if","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":366986,"byte_end":367062,"line_start":130,"line_end":130,"column_start":2,"column_end":78}},{"value":"/ it is empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367064,"byte_end":367080,"line_start":131,"line_end":131,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367082,"byte_end":367085,"line_start":132,"line_end":132,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367087,"byte_end":367102,"line_start":133,"line_end":133,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367104,"byte_end":367107,"line_start":134,"line_end":134,"column_start":2,"column_end":5}},{"value":"/ [`slice::first_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.first_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367109,"byte_end":367202,"line_start":135,"line_end":135,"column_start":2,"column_end":95}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367204,"byte_end":367207,"line_start":136,"line_end":136,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367209,"byte_end":367231,"line_start":137,"line_end":137,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367233,"byte_end":367236,"line_start":138,"line_end":138,"column_start":2,"column_end":5}},{"value":"/ `bitvec` uses a custom structure for both read-only and mutable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367238,"byte_end":367305,"line_start":139,"line_end":139,"column_start":2,"column_end":69}},{"value":"/ references to `bool`. This must be bound as `mut` in order to write","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367307,"byte_end":367378,"line_start":140,"line_end":140,"column_start":2,"column_end":73}},{"value":"/ through it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367380,"byte_end":367395,"line_start":141,"line_end":141,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367397,"byte_end":367400,"line_start":142,"line_end":142,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367402,"byte_end":367417,"line_start":143,"line_end":143,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367419,"byte_end":367422,"line_start":144,"line_end":144,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367424,"byte_end":367435,"line_start":145,"line_end":145,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367437,"byte_end":367464,"line_start":146,"line_end":146,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367466,"byte_end":367469,"line_start":147,"line_end":147,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0; 3];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367471,"byte_end":367502,"line_start":148,"line_end":148,"column_start":2,"column_end":33}},{"value":"/ if let Some(mut first) = bits.first_mut() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367504,"byte_end":367551,"line_start":149,"line_end":149,"column_start":2,"column_end":49}},{"value":"/   *first = true;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367553,"byte_end":367573,"line_start":150,"line_end":150,"column_start":2,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367575,"byte_end":367580,"line_start":151,"line_end":151,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(bits, bits![1, 0, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367582,"byte_end":367619,"line_start":152,"line_end":152,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367621,"byte_end":367624,"line_start":153,"line_end":153,"column_start":2,"column_end":5}},{"value":"/ assert!(bits![mut].first_mut().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367626,"byte_end":367672,"line_start":154,"line_end":154,"column_start":2,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367674,"byte_end":367681,"line_start":155,"line_end":155,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3235},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368388,"byte_end":368399,"line_start":182,"line_end":182,"column_start":9,"column_end":20},"name":"split_first","qualname":"<BitSlice<T, O>>::split_first","value":"pub fn split_first(&Self) -> Option<(BitRef<, Const, T, O>, &Self)>","parent":null,"children":[],"decl_id":null,"docs":" Splits the bit-slice into a reference to its first bit, and the rest of\n the bit-slice. Returns `None` when empty.","sig":null,"attributes":[{"value":"/ Splits the bit-slice into a reference to its first bit, and the rest of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367765,"byte_end":367840,"line_start":160,"line_end":160,"column_start":2,"column_end":77}},{"value":"/ the bit-slice. Returns `None` when empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367842,"byte_end":367887,"line_start":161,"line_end":161,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367889,"byte_end":367892,"line_start":162,"line_end":162,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367894,"byte_end":367909,"line_start":163,"line_end":163,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367911,"byte_end":367914,"line_start":164,"line_end":164,"column_start":2,"column_end":5}},{"value":"/ [`slice::split_first`](https://doc.rust-lang.org/std/primitive.slice.html#method.split_first)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":367916,"byte_end":368013,"line_start":165,"line_end":165,"column_start":2,"column_end":99}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368015,"byte_end":368018,"line_start":166,"line_end":166,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368020,"byte_end":368042,"line_start":167,"line_end":167,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368044,"byte_end":368047,"line_start":168,"line_end":168,"column_start":2,"column_end":5}},{"value":"/ `bitvec` uses a custom structure for both read-only and mutable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368049,"byte_end":368116,"line_start":169,"line_end":169,"column_start":2,"column_end":69}},{"value":"/ references to `bool`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368118,"byte_end":368143,"line_start":170,"line_end":170,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368145,"byte_end":368148,"line_start":171,"line_end":171,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368150,"byte_end":368165,"line_start":172,"line_end":172,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368167,"byte_end":368170,"line_start":173,"line_end":173,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368172,"byte_end":368183,"line_start":174,"line_end":174,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368185,"byte_end":368212,"line_start":175,"line_end":175,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368214,"byte_end":368217,"line_start":176,"line_end":176,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![1, 0, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368219,"byte_end":368249,"line_start":177,"line_end":177,"column_start":2,"column_end":32}},{"value":"/ let (first, rest) = bits.split_first().unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368251,"byte_end":368303,"line_start":178,"line_end":178,"column_start":2,"column_end":54}},{"value":"/ assert_eq!(first, &true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368305,"byte_end":368334,"line_start":179,"line_end":179,"column_start":2,"column_end":31}},{"value":"/ assert_eq!(rest, bits![0; 2]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368336,"byte_end":368370,"line_start":180,"line_end":180,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368372,"byte_end":368379,"line_start":181,"line_end":181,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3236},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369357,"byte_end":369372,"line_start":217,"line_end":217,"column_start":9,"column_end":24},"name":"split_first_mut","qualname":"<BitSlice<T, O>>::split_first_mut","value":"pub fn split_first_mut(&mut Self)\n-> Option<(BitRef<, Mut, T::Alias, O>, &mut BitSlice<T::Alias, O>)>","parent":null,"children":[],"decl_id":null,"docs":" Splits the bit-slice into mutable references of its first bit, and the\n rest of the bit-slice. Returns `None` when empty.","sig":null,"attributes":[{"value":"/ Splits the bit-slice into mutable references of its first bit, and the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368607,"byte_end":368681,"line_start":192,"line_end":192,"column_start":2,"column_end":76}},{"value":"/ rest of the bit-slice. Returns `None` when empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368683,"byte_end":368736,"line_start":193,"line_end":193,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368738,"byte_end":368741,"line_start":194,"line_end":194,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368743,"byte_end":368758,"line_start":195,"line_end":195,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368760,"byte_end":368763,"line_start":196,"line_end":196,"column_start":2,"column_end":5}},{"value":"/ [`slice::split_first_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.split_first_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368765,"byte_end":368870,"line_start":197,"line_end":197,"column_start":2,"column_end":107}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368872,"byte_end":368875,"line_start":198,"line_end":198,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368877,"byte_end":368899,"line_start":199,"line_end":199,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368901,"byte_end":368904,"line_start":200,"line_end":200,"column_start":2,"column_end":5}},{"value":"/ `bitvec` uses a custom structure for both read-only and mutable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368906,"byte_end":368973,"line_start":201,"line_end":201,"column_start":2,"column_end":69}},{"value":"/ references to `bool`. This must be bound as `mut` in order to write","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":368975,"byte_end":369046,"line_start":202,"line_end":202,"column_start":2,"column_end":73}},{"value":"/ through it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369048,"byte_end":369063,"line_start":203,"line_end":203,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369065,"byte_end":369068,"line_start":204,"line_end":204,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369070,"byte_end":369085,"line_start":205,"line_end":205,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369087,"byte_end":369090,"line_start":206,"line_end":206,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369092,"byte_end":369103,"line_start":207,"line_end":207,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369105,"byte_end":369132,"line_start":208,"line_end":208,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369134,"byte_end":369137,"line_start":209,"line_end":209,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0; 3];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369139,"byte_end":369170,"line_start":210,"line_end":210,"column_start":2,"column_end":33}},{"value":"/ if let Some((mut first, rest)) = bits.split_first_mut() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369172,"byte_end":369233,"line_start":211,"line_end":211,"column_start":2,"column_end":63}},{"value":"/   *first = true;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369235,"byte_end":369255,"line_start":212,"line_end":212,"column_start":2,"column_end":22}},{"value":"/   assert_eq!(rest, bits![0; 2]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369257,"byte_end":369293,"line_start":213,"line_end":213,"column_start":2,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369295,"byte_end":369300,"line_start":214,"line_end":214,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(bits, bits![1, 0, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369302,"byte_end":369339,"line_start":215,"line_end":215,"column_start":2,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369341,"byte_end":369348,"line_start":216,"line_end":216,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3237},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370241,"byte_end":370251,"line_start":251,"line_end":251,"column_start":9,"column_end":19},"name":"split_last","qualname":"<BitSlice<T, O>>::split_last","value":"pub fn split_last(&Self) -> Option<(BitRef<, Const, T, O>, &Self)>","parent":null,"children":[],"decl_id":null,"docs":" Splits the bit-slice into a reference to its last bit, and the rest of\n the bit-slice. Returns `None` when empty.","sig":null,"attributes":[{"value":"/ Splits the bit-slice into a reference to its last bit, and the rest of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369624,"byte_end":369698,"line_start":229,"line_end":229,"column_start":2,"column_end":76}},{"value":"/ the bit-slice. Returns `None` when empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369700,"byte_end":369745,"line_start":230,"line_end":230,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369747,"byte_end":369750,"line_start":231,"line_end":231,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369752,"byte_end":369767,"line_start":232,"line_end":232,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369769,"byte_end":369772,"line_start":233,"line_end":233,"column_start":2,"column_end":5}},{"value":"/ [`slice::split_last`](https://doc.rust-lang.org/std/primitive.slice.html#method.split_last)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369774,"byte_end":369869,"line_start":234,"line_end":234,"column_start":2,"column_end":97}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369871,"byte_end":369874,"line_start":235,"line_end":235,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369876,"byte_end":369898,"line_start":236,"line_end":236,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369900,"byte_end":369903,"line_start":237,"line_end":237,"column_start":2,"column_end":5}},{"value":"/ `bitvec` uses a custom structure for both read-only and mutable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369905,"byte_end":369972,"line_start":238,"line_end":238,"column_start":2,"column_end":69}},{"value":"/ references to `bool`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":369974,"byte_end":369999,"line_start":239,"line_end":239,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370001,"byte_end":370004,"line_start":240,"line_end":240,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370006,"byte_end":370021,"line_start":241,"line_end":241,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370023,"byte_end":370026,"line_start":242,"line_end":242,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370028,"byte_end":370039,"line_start":243,"line_end":243,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370041,"byte_end":370068,"line_start":244,"line_end":244,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370070,"byte_end":370073,"line_start":245,"line_end":245,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370075,"byte_end":370105,"line_start":246,"line_end":246,"column_start":2,"column_end":32}},{"value":"/ let (last, rest) = bits.split_last().unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370107,"byte_end":370157,"line_start":247,"line_end":247,"column_start":2,"column_end":52}},{"value":"/ assert_eq!(last, &true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370159,"byte_end":370187,"line_start":248,"line_end":248,"column_start":2,"column_end":30}},{"value":"/ assert_eq!(rest, bits![0; 2]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370189,"byte_end":370223,"line_start":249,"line_end":249,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370225,"byte_end":370232,"line_start":250,"line_end":250,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3238},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371207,"byte_end":371221,"line_start":286,"line_end":286,"column_start":9,"column_end":23},"name":"split_last_mut","qualname":"<BitSlice<T, O>>::split_last_mut","value":"pub fn split_last_mut(&mut Self)\n-> Option<(BitRef<, Mut, T::Alias, O>, &mut BitSlice<T::Alias, O>)>","parent":null,"children":[],"decl_id":null,"docs":" Splits the bit-slice into mutable references to its last bit, and the\n rest of the bit-slice. Returns `None` when empty.","sig":null,"attributes":[{"value":"/ Splits the bit-slice into mutable references to its last bit, and the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370463,"byte_end":370536,"line_start":261,"line_end":261,"column_start":2,"column_end":75}},{"value":"/ rest of the bit-slice. Returns `None` when empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370538,"byte_end":370591,"line_start":262,"line_end":262,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370593,"byte_end":370596,"line_start":263,"line_end":263,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370598,"byte_end":370613,"line_start":264,"line_end":264,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370615,"byte_end":370618,"line_start":265,"line_end":265,"column_start":2,"column_end":5}},{"value":"/ [`slice::split_last_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.split_last_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370620,"byte_end":370723,"line_start":266,"line_end":266,"column_start":2,"column_end":105}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370725,"byte_end":370728,"line_start":267,"line_end":267,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370730,"byte_end":370752,"line_start":268,"line_end":268,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370754,"byte_end":370757,"line_start":269,"line_end":269,"column_start":2,"column_end":5}},{"value":"/ `bitvec` uses a custom structure for both read-only and mutable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370759,"byte_end":370826,"line_start":270,"line_end":270,"column_start":2,"column_end":69}},{"value":"/ references to `bool`. This must be bound as `mut` in order to write","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370828,"byte_end":370899,"line_start":271,"line_end":271,"column_start":2,"column_end":73}},{"value":"/ through it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370901,"byte_end":370916,"line_start":272,"line_end":272,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370918,"byte_end":370921,"line_start":273,"line_end":273,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370923,"byte_end":370938,"line_start":274,"line_end":274,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370940,"byte_end":370943,"line_start":275,"line_end":275,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370945,"byte_end":370956,"line_start":276,"line_end":276,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370958,"byte_end":370985,"line_start":277,"line_end":277,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370987,"byte_end":370990,"line_start":278,"line_end":278,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0; 3];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":370992,"byte_end":371023,"line_start":279,"line_end":279,"column_start":2,"column_end":33}},{"value":"/ if let Some((mut last, rest)) = bits.split_last_mut() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371025,"byte_end":371084,"line_start":280,"line_end":280,"column_start":2,"column_end":61}},{"value":"/   *last = true;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371086,"byte_end":371105,"line_start":281,"line_end":281,"column_start":2,"column_end":21}},{"value":"/   assert_eq!(rest, bits![0; 2]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371107,"byte_end":371143,"line_start":282,"line_end":282,"column_start":2,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371145,"byte_end":371150,"line_start":283,"line_end":283,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(bits, bits![0, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371152,"byte_end":371189,"line_start":284,"line_end":284,"column_start":2,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371191,"byte_end":371198,"line_start":285,"line_end":285,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3239},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372027,"byte_end":372031,"line_start":320,"line_end":320,"column_start":9,"column_end":13},"name":"last","qualname":"<BitSlice<T, O>>::last","value":"pub fn last(&Self) -> Option<BitRef<, Const, T, O>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the last bit of the bit-slice, or `None` if it is\n empty.","sig":null,"attributes":[{"value":"/ Gets a reference to the last bit of the bit-slice, or `None` if it is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371477,"byte_end":371550,"line_start":298,"line_end":298,"column_start":2,"column_end":75}},{"value":"/ empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371552,"byte_end":371562,"line_start":299,"line_end":299,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371564,"byte_end":371567,"line_start":300,"line_end":300,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371569,"byte_end":371584,"line_start":301,"line_end":301,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371586,"byte_end":371589,"line_start":302,"line_end":302,"column_start":2,"column_end":5}},{"value":"/ [`slice::last`](https://doc.rust-lang.org/std/primitive.slice.html#method.last)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371591,"byte_end":371674,"line_start":303,"line_end":303,"column_start":2,"column_end":85}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371676,"byte_end":371679,"line_start":304,"line_end":304,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371681,"byte_end":371703,"line_start":305,"line_end":305,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371705,"byte_end":371708,"line_start":306,"line_end":306,"column_start":2,"column_end":5}},{"value":"/ `bitvec` uses a custom structure for both read-only and mutable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371710,"byte_end":371777,"line_start":307,"line_end":307,"column_start":2,"column_end":69}},{"value":"/ references to `bool`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371779,"byte_end":371804,"line_start":308,"line_end":308,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371806,"byte_end":371809,"line_start":309,"line_end":309,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371811,"byte_end":371826,"line_start":310,"line_end":310,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371828,"byte_end":371831,"line_start":311,"line_end":311,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371833,"byte_end":371844,"line_start":312,"line_end":312,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371846,"byte_end":371873,"line_start":313,"line_end":313,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371875,"byte_end":371878,"line_start":314,"line_end":314,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371880,"byte_end":371910,"line_start":315,"line_end":315,"column_start":2,"column_end":32}},{"value":"/ assert_eq!(bits.last().as_deref(), Some(&true));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371912,"byte_end":371964,"line_start":316,"line_end":316,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371966,"byte_end":371969,"line_start":317,"line_end":317,"column_start":2,"column_end":5}},{"value":"/ assert!(bits![].last().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":371971,"byte_end":372009,"line_start":318,"line_end":318,"column_start":2,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372011,"byte_end":372018,"line_start":319,"line_end":319,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3240},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372865,"byte_end":372873,"line_start":353,"line_end":353,"column_start":9,"column_end":17},"name":"last_mut","qualname":"<BitSlice<T, O>>::last_mut","value":"pub fn last_mut(&mut Self) -> Option<BitRef<, Mut, T, O>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the last bit of the bit-slice, or `None` if\n it is empty.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the last bit of the bit-slice, or `None` if","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372168,"byte_end":372243,"line_start":327,"line_end":327,"column_start":2,"column_end":77}},{"value":"/ it is empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372245,"byte_end":372261,"line_start":328,"line_end":328,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372263,"byte_end":372266,"line_start":329,"line_end":329,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372268,"byte_end":372283,"line_start":330,"line_end":330,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372285,"byte_end":372288,"line_start":331,"line_end":331,"column_start":2,"column_end":5}},{"value":"/ [`slice::last_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.last_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372290,"byte_end":372381,"line_start":332,"line_end":332,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372383,"byte_end":372386,"line_start":333,"line_end":333,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372388,"byte_end":372410,"line_start":334,"line_end":334,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372412,"byte_end":372415,"line_start":335,"line_end":335,"column_start":2,"column_end":5}},{"value":"/ `bitvec` uses a custom structure for both read-only and mutable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372417,"byte_end":372484,"line_start":336,"line_end":336,"column_start":2,"column_end":69}},{"value":"/ references to `bool`. This must be bound as `mut` in order to write","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372486,"byte_end":372557,"line_start":337,"line_end":337,"column_start":2,"column_end":73}},{"value":"/ through it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372559,"byte_end":372574,"line_start":338,"line_end":338,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372576,"byte_end":372579,"line_start":339,"line_end":339,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372581,"byte_end":372596,"line_start":340,"line_end":340,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372598,"byte_end":372601,"line_start":341,"line_end":341,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372603,"byte_end":372614,"line_start":342,"line_end":342,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372616,"byte_end":372643,"line_start":343,"line_end":343,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372645,"byte_end":372648,"line_start":344,"line_end":344,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0; 3];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372650,"byte_end":372681,"line_start":345,"line_end":345,"column_start":2,"column_end":33}},{"value":"/ if let Some(mut last) = bits.last_mut() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372683,"byte_end":372728,"line_start":346,"line_end":346,"column_start":2,"column_end":47}},{"value":"/   *last = true;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372730,"byte_end":372749,"line_start":347,"line_end":347,"column_start":2,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372751,"byte_end":372756,"line_start":348,"line_end":348,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(bits, bits![0, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372758,"byte_end":372795,"line_start":349,"line_end":349,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372797,"byte_end":372800,"line_start":350,"line_end":350,"column_start":2,"column_end":5}},{"value":"/ assert!(bits![mut].last_mut().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372802,"byte_end":372847,"line_start":351,"line_end":351,"column_start":2,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":372849,"byte_end":372856,"line_start":352,"line_end":352,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373951,"byte_end":373954,"line_start":389,"line_end":389,"column_start":9,"column_end":12},"name":"get","qualname":"<BitSlice<T, O>>::get","value":"pub fn get<'a, I>(&'a Self, I) -> Option<I::Immut> where I: BitSliceIndex","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to a single bit or a subsection of the bit-slice,\n depending on the type of `index`.","sig":null,"attributes":[{"value":"/ Gets a reference to a single bit or a subsection of the bit-slice,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373016,"byte_end":373086,"line_start":360,"line_end":360,"column_start":2,"column_end":72}},{"value":"/ depending on the type of `index`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373088,"byte_end":373125,"line_start":361,"line_end":361,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373127,"byte_end":373130,"line_start":362,"line_end":362,"column_start":2,"column_end":5}},{"value":"/ - If given a `usize`, this produces a reference structure to the `bool`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373132,"byte_end":373207,"line_start":363,"line_end":363,"column_start":2,"column_end":77}},{"value":"/   at the position.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373209,"byte_end":373231,"line_start":364,"line_end":364,"column_start":2,"column_end":24}},{"value":"/ - If given any form of range, this produces a smaller bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373233,"byte_end":373301,"line_start":365,"line_end":365,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373303,"byte_end":373306,"line_start":366,"line_end":366,"column_start":2,"column_end":5}},{"value":"/ This returns `None` if the `index` departs the bounds of `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373308,"byte_end":373376,"line_start":367,"line_end":367,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373378,"byte_end":373381,"line_start":368,"line_end":368,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373383,"byte_end":373398,"line_start":369,"line_end":369,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373400,"byte_end":373403,"line_start":370,"line_end":370,"column_start":2,"column_end":5}},{"value":"/ [`slice::get`](https://doc.rust-lang.org/std/primitive.slice.html#method.get)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373405,"byte_end":373486,"line_start":371,"line_end":371,"column_start":2,"column_end":83}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373488,"byte_end":373491,"line_start":372,"line_end":372,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373493,"byte_end":373515,"line_start":373,"line_end":373,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373517,"byte_end":373520,"line_start":374,"line_end":374,"column_start":2,"column_end":5}},{"value":"/ `BitSliceIndex` uses discrete types for immutable and mutable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373522,"byte_end":373587,"line_start":375,"line_end":375,"column_start":2,"column_end":67}},{"value":"/ references, rather than a single referent type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373589,"byte_end":373640,"line_start":376,"line_end":376,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373642,"byte_end":373645,"line_start":377,"line_end":377,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373647,"byte_end":373662,"line_start":378,"line_end":378,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373664,"byte_end":373667,"line_start":379,"line_end":379,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373669,"byte_end":373680,"line_start":380,"line_end":380,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373682,"byte_end":373709,"line_start":381,"line_end":381,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373711,"byte_end":373714,"line_start":382,"line_end":382,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373716,"byte_end":373746,"line_start":383,"line_end":383,"column_start":2,"column_end":32}},{"value":"/ assert_eq!(bits.get(1).as_deref(), Some(&true));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373748,"byte_end":373800,"line_start":384,"line_end":384,"column_start":2,"column_end":54}},{"value":"/ assert_eq!(bits.get(0 .. 2), Some(bits![0, 1]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373802,"byte_end":373854,"line_start":385,"line_end":385,"column_start":2,"column_end":54}},{"value":"/ assert!(bits.get(3).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373856,"byte_end":373891,"line_start":386,"line_end":386,"column_start":2,"column_end":37}},{"value":"/ assert!(bits.get(0 .. 4).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373893,"byte_end":373933,"line_start":387,"line_end":387,"column_start":2,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":373935,"byte_end":373942,"line_start":388,"line_end":388,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3244},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374951,"byte_end":374958,"line_start":423,"line_end":423,"column_start":9,"column_end":16},"name":"get_mut","qualname":"<BitSlice<T, O>>::get_mut","value":"pub fn get_mut<'a, I>(&'a mut Self, I) -> Option<I::Mut> where\nI: BitSliceIndex","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to a single bit or a subsection of the\n bit-slice, depending on the type of `index`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to a single bit or a subsection of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374061,"byte_end":374128,"line_start":394,"line_end":394,"column_start":2,"column_end":69}},{"value":"/ bit-slice, depending on the type of `index`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374130,"byte_end":374178,"line_start":395,"line_end":395,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374180,"byte_end":374183,"line_start":396,"line_end":396,"column_start":2,"column_end":5}},{"value":"/ - If given a `usize`, this produces a reference structure to the `bool`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374185,"byte_end":374260,"line_start":397,"line_end":397,"column_start":2,"column_end":77}},{"value":"/   at the position.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374262,"byte_end":374284,"line_start":398,"line_end":398,"column_start":2,"column_end":24}},{"value":"/ - If given any form of range, this produces a smaller bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374286,"byte_end":374354,"line_start":399,"line_end":399,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374356,"byte_end":374359,"line_start":400,"line_end":400,"column_start":2,"column_end":5}},{"value":"/ This returns `None` if the `index` departs the bounds of `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374361,"byte_end":374429,"line_start":401,"line_end":401,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374431,"byte_end":374434,"line_start":402,"line_end":402,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374436,"byte_end":374451,"line_start":403,"line_end":403,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374453,"byte_end":374456,"line_start":404,"line_end":404,"column_start":2,"column_end":5}},{"value":"/ [`slice::get_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.get_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374458,"byte_end":374547,"line_start":405,"line_end":405,"column_start":2,"column_end":91}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374549,"byte_end":374552,"line_start":406,"line_end":406,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374554,"byte_end":374576,"line_start":407,"line_end":407,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374578,"byte_end":374581,"line_start":408,"line_end":408,"column_start":2,"column_end":5}},{"value":"/ `BitSliceIndex` uses discrete types for immutable and mutable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374583,"byte_end":374648,"line_start":409,"line_end":409,"column_start":2,"column_end":67}},{"value":"/ references, rather than a single referent type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374650,"byte_end":374701,"line_start":410,"line_end":410,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374703,"byte_end":374706,"line_start":411,"line_end":411,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374708,"byte_end":374723,"line_start":412,"line_end":412,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374725,"byte_end":374728,"line_start":413,"line_end":413,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374730,"byte_end":374741,"line_start":414,"line_end":414,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374743,"byte_end":374770,"line_start":415,"line_end":415,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374772,"byte_end":374775,"line_start":416,"line_end":416,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0; 3];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374777,"byte_end":374808,"line_start":417,"line_end":417,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374810,"byte_end":374813,"line_start":418,"line_end":418,"column_start":2,"column_end":5}},{"value":"/ *bits.get_mut(0).unwrap() = true;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374815,"byte_end":374852,"line_start":419,"line_end":419,"column_start":2,"column_end":39}},{"value":"/ bits.get_mut(1 ..).unwrap().fill(true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374854,"byte_end":374897,"line_start":420,"line_end":420,"column_start":2,"column_end":45}},{"value":"/ assert_eq!(bits, bits![1; 3]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374899,"byte_end":374933,"line_start":421,"line_end":421,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":374935,"byte_end":374942,"line_start":422,"line_end":422,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3247},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376141,"byte_end":376154,"line_start":463,"line_end":463,"column_start":16,"column_end":29},"name":"get_unchecked","qualname":"<BitSlice<T, O>>::get_unchecked","value":"pub unsafe fn get_unchecked<'a, I>(&'a Self, I) -> I::Immut where\nI: BitSliceIndex","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to a single bit or to a subsection of the bit-slice,\n without bounds checking.","sig":null,"attributes":[{"value":"/ Gets a reference to a single bit or to a subsection of the bit-slice,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375071,"byte_end":375144,"line_start":428,"line_end":428,"column_start":2,"column_end":75}},{"value":"/ without bounds checking.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375146,"byte_end":375174,"line_start":429,"line_end":429,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375176,"byte_end":375179,"line_start":430,"line_end":430,"column_start":2,"column_end":5}},{"value":"/ This has the same arguments and behavior as [`.get()`], except that it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375181,"byte_end":375255,"line_start":431,"line_end":431,"column_start":2,"column_end":76}},{"value":"/ does not check that `index` is in bounds.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375257,"byte_end":375302,"line_start":432,"line_end":432,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375304,"byte_end":375307,"line_start":433,"line_end":433,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375309,"byte_end":375324,"line_start":434,"line_end":434,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375326,"byte_end":375329,"line_start":435,"line_end":435,"column_start":2,"column_end":5}},{"value":"/ [`slice::get_unchecked`](https://doc.rust-lang.org/std/primitive.slice.html#method.get_unchecked)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375331,"byte_end":375432,"line_start":436,"line_end":436,"column_start":2,"column_end":103}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375434,"byte_end":375437,"line_start":437,"line_end":437,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375439,"byte_end":375452,"line_start":438,"line_end":438,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375454,"byte_end":375457,"line_start":439,"line_end":439,"column_start":2,"column_end":5}},{"value":"/ You must ensure that `index` is within bounds (within the range `0 ..","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375459,"byte_end":375532,"line_start":440,"line_end":440,"column_start":2,"column_end":75}},{"value":"/ self.len()`), or this method will introduce memory safety and/or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375534,"byte_end":375602,"line_start":441,"line_end":441,"column_start":2,"column_end":70}},{"value":"/ undefined behavior.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375604,"byte_end":375627,"line_start":442,"line_end":442,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375629,"byte_end":375632,"line_start":443,"line_end":443,"column_start":2,"column_end":5}},{"value":"/ It is library-level undefined behavior to index beyond the length of any","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375634,"byte_end":375710,"line_start":444,"line_end":444,"column_start":2,"column_end":78}},{"value":"/ bit-slice, even if you **know** that the offset remains within an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375712,"byte_end":375781,"line_start":445,"line_end":445,"column_start":2,"column_end":71}},{"value":"/ allocation as measured by Rust or LLVM.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375783,"byte_end":375826,"line_start":446,"line_end":446,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375828,"byte_end":375831,"line_start":447,"line_end":447,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375833,"byte_end":375848,"line_start":448,"line_end":448,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375850,"byte_end":375853,"line_start":449,"line_end":449,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375855,"byte_end":375866,"line_start":450,"line_end":450,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375868,"byte_end":375895,"line_start":451,"line_end":451,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375897,"byte_end":375900,"line_start":452,"line_end":452,"column_start":2,"column_end":5}},{"value":"/ let data = 0b0001_0010u8;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375902,"byte_end":375931,"line_start":453,"line_end":453,"column_start":2,"column_end":31}},{"value":"/ let bits = &data.view_bits::<Lsb0>()[.. 3];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375933,"byte_end":375980,"line_start":454,"line_end":454,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375982,"byte_end":375985,"line_start":455,"line_end":455,"column_start":2,"column_end":5}},{"value":"/ unsafe {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":375987,"byte_end":375999,"line_start":456,"line_end":456,"column_start":2,"column_end":14}},{"value":"/   assert!(bits.get_unchecked(1));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376001,"byte_end":376038,"line_start":457,"line_end":457,"column_start":2,"column_end":39}},{"value":"/   assert!(bits.get_unchecked(4));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376040,"byte_end":376077,"line_start":458,"line_end":458,"column_start":2,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376079,"byte_end":376084,"line_start":459,"line_end":459,"column_start":2,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376086,"byte_end":376093,"line_start":460,"line_end":460,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376095,"byte_end":376098,"line_start":461,"line_end":461,"column_start":2,"column_end":5}},{"value":"/ [`.get()`]: Self::get","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376100,"byte_end":376125,"line_start":462,"line_end":462,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377424,"byte_end":377441,"line_start":504,"line_end":504,"column_start":16,"column_end":33},"name":"get_unchecked_mut","qualname":"<BitSlice<T, O>>::get_unchecked_mut","value":"pub unsafe fn get_unchecked_mut<'a, I>(&'a mut Self, I) -> I::Mut where\nI: BitSliceIndex","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to a single bit or a subsection of the\n bit-slice, depending on the type of `index`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to a single bit or a subsection of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376263,"byte_end":376330,"line_start":468,"line_end":468,"column_start":2,"column_end":69}},{"value":"/ bit-slice, depending on the type of `index`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376332,"byte_end":376380,"line_start":469,"line_end":469,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376382,"byte_end":376385,"line_start":470,"line_end":470,"column_start":2,"column_end":5}},{"value":"/ This has the same arguments and behavior as [`.get_mut()`], except that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376387,"byte_end":376462,"line_start":471,"line_end":471,"column_start":2,"column_end":77}},{"value":"/ it does not check that `index` is in bounds.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376464,"byte_end":376512,"line_start":472,"line_end":472,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376514,"byte_end":376517,"line_start":473,"line_end":473,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376519,"byte_end":376534,"line_start":474,"line_end":474,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376536,"byte_end":376539,"line_start":475,"line_end":475,"column_start":2,"column_end":5}},{"value":"/ [`slice::get_unchecked_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.get_unchecked_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376541,"byte_end":376650,"line_start":476,"line_end":476,"column_start":2,"column_end":111}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376652,"byte_end":376655,"line_start":477,"line_end":477,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376657,"byte_end":376670,"line_start":478,"line_end":478,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376672,"byte_end":376675,"line_start":479,"line_end":479,"column_start":2,"column_end":5}},{"value":"/ You must ensure that `index` is within bounds (within the range `0 ..","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376677,"byte_end":376750,"line_start":480,"line_end":480,"column_start":2,"column_end":75}},{"value":"/ self.len()`), or this method will introduce memory safety and/or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376752,"byte_end":376820,"line_start":481,"line_end":481,"column_start":2,"column_end":70}},{"value":"/ undefined behavior.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376822,"byte_end":376845,"line_start":482,"line_end":482,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376847,"byte_end":376850,"line_start":483,"line_end":483,"column_start":2,"column_end":5}},{"value":"/ It is library-level undefined behavior to index beyond the length of any","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376852,"byte_end":376928,"line_start":484,"line_end":484,"column_start":2,"column_end":78}},{"value":"/ bit-slice, even if you **know** that the offset remains within an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":376930,"byte_end":376999,"line_start":485,"line_end":485,"column_start":2,"column_end":71}},{"value":"/ allocation as measured by Rust or LLVM.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377001,"byte_end":377044,"line_start":486,"line_end":486,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377046,"byte_end":377049,"line_start":487,"line_end":487,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377051,"byte_end":377066,"line_start":488,"line_end":488,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377068,"byte_end":377071,"line_start":489,"line_end":489,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377073,"byte_end":377084,"line_start":490,"line_end":490,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377086,"byte_end":377113,"line_start":491,"line_end":491,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377115,"byte_end":377118,"line_start":492,"line_end":492,"column_start":2,"column_end":5}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377120,"byte_end":377143,"line_start":493,"line_end":493,"column_start":2,"column_end":25}},{"value":"/ let bits = &mut data.view_bits_mut::<Lsb0>()[.. 3];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377145,"byte_end":377200,"line_start":494,"line_end":494,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377202,"byte_end":377205,"line_start":495,"line_end":495,"column_start":2,"column_end":5}},{"value":"/ unsafe {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377207,"byte_end":377219,"line_start":496,"line_end":496,"column_start":2,"column_end":14}},{"value":"/   bits.get_unchecked_mut(1).commit(true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377221,"byte_end":377266,"line_start":497,"line_end":497,"column_start":2,"column_end":47}},{"value":"/   bits.get_unchecked_mut(4 .. 6).fill(true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377268,"byte_end":377316,"line_start":498,"line_end":498,"column_start":2,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377318,"byte_end":377323,"line_start":499,"line_end":499,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(data, 0b0011_0010);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377325,"byte_end":377359,"line_start":500,"line_end":500,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377361,"byte_end":377368,"line_start":501,"line_end":501,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377370,"byte_end":377373,"line_start":502,"line_end":502,"column_start":2,"column_end":5}},{"value":"/ [`.get_mut()`]: Self::get_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377375,"byte_end":377408,"line_start":503,"line_end":503,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3253},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377704,"byte_end":377710,"line_start":512,"line_end":512,"column_start":9,"column_end":15},"name":"as_ptr","qualname":"<BitSlice<T, O>>::as_ptr","value":"pub fn as_ptr(&Self) -> BitPtr<Const, T, O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377556,"byte_end":377586,"line_start":509,"line_end":509,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.as_bitptr()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377588,"byte_end":377632,"line_start":510,"line_end":510,"column_start":2,"column_end":46}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377634,"byte_end":377695,"line_start":511,"line_end":511,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3254},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377919,"byte_end":377929,"line_start":519,"line_end":519,"column_start":9,"column_end":19},"name":"as_mut_ptr","qualname":"<BitSlice<T, O>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> BitPtr<Mut, T, O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377767,"byte_end":377797,"line_start":516,"line_end":516,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.as_mut_bitptr()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377799,"byte_end":377847,"line_start":517,"line_end":517,"column_start":2,"column_end":50}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377849,"byte_end":377910,"line_start":518,"line_end":518,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3255},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378523,"byte_end":378535,"line_start":536,"line_end":536,"column_start":9,"column_end":21},"name":"as_ptr_range","qualname":"<BitSlice<T, O>>::as_ptr_range","value":"pub fn as_ptr_range(&Self) -> Range<BitPtr<Const, T, O>>","parent":null,"children":[],"decl_id":null,"docs":" Produces a range of bit-pointers to each bit in the bit-slice.","sig":null,"attributes":[{"value":"/ Produces a range of bit-pointers to each bit in the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":377992,"byte_end":378058,"line_start":523,"line_end":523,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378060,"byte_end":378063,"line_start":524,"line_end":524,"column_start":2,"column_end":5}},{"value":"/ This is a standard-library range, which has no real functionality for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378065,"byte_end":378138,"line_start":525,"line_end":525,"column_start":2,"column_end":75}},{"value":"/ pointer types. You should prefer [`.as_bitptr_range()`] instead, as it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378140,"byte_end":378214,"line_start":526,"line_end":526,"column_start":2,"column_end":76}},{"value":"/ produces a custom structure that provides expected ranging","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378216,"byte_end":378278,"line_start":527,"line_end":527,"column_start":2,"column_end":64}},{"value":"/ functionality.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378280,"byte_end":378298,"line_start":528,"line_end":528,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378300,"byte_end":378303,"line_start":529,"line_end":529,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378305,"byte_end":378320,"line_start":530,"line_end":530,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378322,"byte_end":378325,"line_start":531,"line_end":531,"column_start":2,"column_end":5}},{"value":"/ [`slice::as_ptr_range`](https://doc.rust-lang.org/std/primitive.slice.html#method.as_ptr_range)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378327,"byte_end":378426,"line_start":532,"line_end":532,"column_start":2,"column_end":101}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378428,"byte_end":378431,"line_start":533,"line_end":533,"column_start":2,"column_end":5}},{"value":"/ [`.as_bitptr_range()`]: Self::as_bitptr_range","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378433,"byte_end":378482,"line_start":534,"line_end":534,"column_start":2,"column_end":51}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378484,"byte_end":378514,"line_start":535,"line_end":535,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3256},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379177,"byte_end":379193,"line_start":553,"line_end":553,"column_start":9,"column_end":25},"name":"as_mut_ptr_range","qualname":"<BitSlice<T, O>>::as_mut_ptr_range","value":"pub fn as_mut_ptr_range(&mut Self) -> Range<BitPtr<Mut, T, O>>","parent":null,"children":[],"decl_id":null,"docs":" Produces a range of mutable bit-pointers to each bit in the bit-slice.","sig":null,"attributes":[{"value":"/ Produces a range of mutable bit-pointers to each bit in the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378618,"byte_end":378692,"line_start":540,"line_end":540,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378694,"byte_end":378697,"line_start":541,"line_end":541,"column_start":2,"column_end":5}},{"value":"/ This is a standard-library range, which has no real functionality for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378699,"byte_end":378772,"line_start":542,"line_end":542,"column_start":2,"column_end":75}},{"value":"/ pointer types. You should prefer [`.as_mut_bitptr_range()`] instead, as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378774,"byte_end":378849,"line_start":543,"line_end":543,"column_start":2,"column_end":77}},{"value":"/ it produces a custom structure that provides expected ranging","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378851,"byte_end":378916,"line_start":544,"line_end":544,"column_start":2,"column_end":67}},{"value":"/ functionality.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378918,"byte_end":378936,"line_start":545,"line_end":545,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378938,"byte_end":378941,"line_start":546,"line_end":546,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378943,"byte_end":378958,"line_start":547,"line_end":547,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378960,"byte_end":378963,"line_start":548,"line_end":548,"column_start":2,"column_end":5}},{"value":"/ [`slice::as_mut_ptr_range`](https://doc.rust-lang.org/std/primitive.slice.html#method.as_mut_ptr_range)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":378965,"byte_end":379072,"line_start":549,"line_end":549,"column_start":2,"column_end":109}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379074,"byte_end":379077,"line_start":550,"line_end":550,"column_start":2,"column_end":5}},{"value":"/ [`.as_mut_bitptr_range()`]: Self::as_mut_bitptr_range","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379079,"byte_end":379136,"line_start":551,"line_end":551,"column_start":2,"column_end":59}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379138,"byte_end":379168,"line_start":552,"line_end":552,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3257},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379703,"byte_end":379707,"line_start":576,"line_end":576,"column_start":9,"column_end":13},"name":"swap","qualname":"<BitSlice<T, O>>::swap","value":"pub fn swap(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Exchanges the bit values at two indices.","sig":null,"attributes":[{"value":"/ Exchanges the bit values at two indices.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379282,"byte_end":379326,"line_start":557,"line_end":557,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379328,"byte_end":379331,"line_start":558,"line_end":558,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379333,"byte_end":379348,"line_start":559,"line_end":559,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379350,"byte_end":379353,"line_start":560,"line_end":560,"column_start":2,"column_end":5}},{"value":"/ [`slice::swap`](https://doc.rust-lang.org/std/primitive.slice.html#method.swap)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379355,"byte_end":379438,"line_start":561,"line_end":561,"column_start":2,"column_end":85}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379440,"byte_end":379443,"line_start":562,"line_end":562,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379445,"byte_end":379458,"line_start":563,"line_end":563,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379460,"byte_end":379463,"line_start":564,"line_end":564,"column_start":2,"column_end":5}},{"value":"/ This panics if either `a` or `b` are out of bounds.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379465,"byte_end":379520,"line_start":565,"line_end":565,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379522,"byte_end":379525,"line_start":566,"line_end":566,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379527,"byte_end":379542,"line_start":567,"line_end":567,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379544,"byte_end":379547,"line_start":568,"line_end":568,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379549,"byte_end":379560,"line_start":569,"line_end":569,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379562,"byte_end":379589,"line_start":570,"line_end":570,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379591,"byte_end":379594,"line_start":571,"line_end":571,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379596,"byte_end":379627,"line_start":572,"line_end":572,"column_start":2,"column_end":33}},{"value":"/ bits.swap(0, 1);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379629,"byte_end":379649,"line_start":573,"line_end":573,"column_start":2,"column_end":22}},{"value":"/ assert_eq!(bits, bits![1, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379651,"byte_end":379685,"line_start":574,"line_end":574,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379687,"byte_end":379694,"line_start":575,"line_end":575,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380291,"byte_end":380298,"line_start":600,"line_end":600,"column_start":9,"column_end":16},"name":"reverse","qualname":"<BitSlice<T, O>>::reverse","value":"pub fn reverse(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverses the order of bits in a bit-slice.","sig":null,"attributes":[{"value":"/ Reverses the order of bits in a bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379903,"byte_end":379949,"line_start":585,"line_end":585,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379951,"byte_end":379954,"line_start":586,"line_end":586,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379956,"byte_end":379971,"line_start":587,"line_end":587,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379973,"byte_end":379976,"line_start":588,"line_end":588,"column_start":2,"column_end":5}},{"value":"/ [`slice::reverse`](https://doc.rust-lang.org/std/primitive.slice.html#method.reverse)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":379978,"byte_end":380067,"line_start":589,"line_end":589,"column_start":2,"column_end":91}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380069,"byte_end":380072,"line_start":590,"line_end":590,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380074,"byte_end":380089,"line_start":591,"line_end":591,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380091,"byte_end":380094,"line_start":592,"line_end":592,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380096,"byte_end":380107,"line_start":593,"line_end":593,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380109,"byte_end":380136,"line_start":594,"line_end":594,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380138,"byte_end":380141,"line_start":595,"line_end":595,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0, 0, 1, 0, 1, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380143,"byte_end":380195,"line_start":596,"line_end":596,"column_start":2,"column_end":54}},{"value":"/ bits.reverse();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380197,"byte_end":380216,"line_start":597,"line_end":597,"column_start":2,"column_end":21}},{"value":"/ assert_eq!(bits, bits![1, 0, 0, 1, 1, 0, 1, 0, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380218,"byte_end":380273,"line_start":598,"line_end":598,"column_start":2,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380275,"byte_end":380282,"line_start":599,"line_end":599,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3259},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381449,"byte_end":381453,"line_start":641,"line_end":641,"column_start":9,"column_end":13},"name":"iter","qualname":"<BitSlice<T, O>>::iter","value":"pub fn iter(&Self) -> Iter<, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over each bit in the bit-slice.","sig":null,"attributes":[{"value":"/ Produces an iterator over each bit in the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380478,"byte_end":380534,"line_start":609,"line_end":609,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380536,"byte_end":380539,"line_start":610,"line_end":610,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380541,"byte_end":380556,"line_start":611,"line_end":611,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380558,"byte_end":380561,"line_start":612,"line_end":612,"column_start":2,"column_end":5}},{"value":"/ [`slice::iter`](https://doc.rust-lang.org/std/primitive.slice.html#method.iter)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380563,"byte_end":380646,"line_start":613,"line_end":613,"column_start":2,"column_end":85}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380648,"byte_end":380651,"line_start":614,"line_end":614,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380653,"byte_end":380675,"line_start":615,"line_end":615,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380677,"byte_end":380680,"line_start":616,"line_end":616,"column_start":2,"column_end":5}},{"value":"/ This iterator yields proxy-reference structures, not `&bool`. It can be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380682,"byte_end":380757,"line_start":617,"line_end":617,"column_start":2,"column_end":77}},{"value":"/ adapted to yield `&bool` with the [`.by_refs()`] method, or `bool` with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380759,"byte_end":380834,"line_start":618,"line_end":618,"column_start":2,"column_end":77}},{"value":"/ [`.by_vals()`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380836,"byte_end":380855,"line_start":619,"line_end":619,"column_start":2,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380857,"byte_end":380860,"line_start":620,"line_end":620,"column_start":2,"column_end":5}},{"value":"/ This iterator, and its adapters, are fast. Do not try to be more clever","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380862,"byte_end":380937,"line_start":621,"line_end":621,"column_start":2,"column_end":77}},{"value":"/ than them by abusing `.as_bitptr_range()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380939,"byte_end":380985,"line_start":622,"line_end":622,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380987,"byte_end":380990,"line_start":623,"line_end":623,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":380992,"byte_end":381007,"line_start":624,"line_end":624,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381009,"byte_end":381012,"line_start":625,"line_end":625,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381014,"byte_end":381025,"line_start":626,"line_end":626,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381027,"byte_end":381054,"line_start":627,"line_end":627,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381056,"byte_end":381059,"line_start":628,"line_end":628,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381061,"byte_end":381094,"line_start":629,"line_end":629,"column_start":2,"column_end":35}},{"value":"/ let mut iter = bits.iter();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381096,"byte_end":381127,"line_start":630,"line_end":630,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381129,"byte_end":381132,"line_start":631,"line_end":631,"column_start":2,"column_end":5}},{"value":"/ assert!(!iter.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381134,"byte_end":381169,"line_start":632,"line_end":632,"column_start":2,"column_end":37}},{"value":"/ assert!( iter.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381171,"byte_end":381206,"line_start":633,"line_end":633,"column_start":2,"column_end":37}},{"value":"/ assert!( iter.next_back().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381208,"byte_end":381248,"line_start":634,"line_end":634,"column_start":2,"column_end":42}},{"value":"/ assert!(!iter.next_back().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381250,"byte_end":381290,"line_start":635,"line_end":635,"column_start":2,"column_end":42}},{"value":"/ assert!( iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381292,"byte_end":381328,"line_start":636,"line_end":636,"column_start":2,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381330,"byte_end":381337,"line_start":637,"line_end":637,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381339,"byte_end":381342,"line_start":638,"line_end":638,"column_start":2,"column_end":5}},{"value":"/ [`.by_refs()`]: crate::slice::Iter::by_refs","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381344,"byte_end":381391,"line_start":639,"line_end":639,"column_start":2,"column_end":49}},{"value":"/ [`.by_vals()`]: crate::slice::Iter::by_vals","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381393,"byte_end":381440,"line_start":640,"line_end":640,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3260},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382653,"byte_end":382661,"line_start":680,"line_end":680,"column_start":9,"column_end":17},"name":"iter_mut","qualname":"<BitSlice<T, O>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Produces a mutable iterator over each bit in the bit-slice.","sig":null,"attributes":[{"value":"/ Produces a mutable iterator over each bit in the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381500,"byte_end":381563,"line_start":645,"line_end":645,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381565,"byte_end":381568,"line_start":646,"line_end":646,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381570,"byte_end":381585,"line_start":647,"line_end":647,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381587,"byte_end":381590,"line_start":648,"line_end":648,"column_start":2,"column_end":5}},{"value":"/ [`slice::iter_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.iter_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381592,"byte_end":381683,"line_start":649,"line_end":649,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381685,"byte_end":381688,"line_start":650,"line_end":650,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381690,"byte_end":381712,"line_start":651,"line_end":651,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381714,"byte_end":381717,"line_start":652,"line_end":652,"column_start":2,"column_end":5}},{"value":"/ This iterator yields proxy-reference structures, not `&mut bool`. In","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381719,"byte_end":381791,"line_start":653,"line_end":653,"column_start":2,"column_end":74}},{"value":"/ addition, it marks each proxy as alias-tainted.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381793,"byte_end":381844,"line_start":654,"line_end":654,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381846,"byte_end":381849,"line_start":655,"line_end":655,"column_start":2,"column_end":5}},{"value":"/ If you are using this in an ordinary loop and **not** keeping multiple","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381851,"byte_end":381925,"line_start":656,"line_end":656,"column_start":2,"column_end":76}},{"value":"/ yielded proxy-references alive at the same scope, you may use the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381927,"byte_end":381996,"line_start":657,"line_end":657,"column_start":2,"column_end":71}},{"value":"/ [`.remove_alias()`] adapter to undo the alias marking.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":381998,"byte_end":382056,"line_start":658,"line_end":658,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382058,"byte_end":382061,"line_start":659,"line_end":659,"column_start":2,"column_end":5}},{"value":"/ This iterator is fast. Do not try to be more clever than it by abusing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382063,"byte_end":382137,"line_start":660,"line_end":660,"column_start":2,"column_end":76}},{"value":"/ `.as_mut_bitptr_range()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382139,"byte_end":382168,"line_start":661,"line_end":661,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382170,"byte_end":382173,"line_start":662,"line_end":662,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382175,"byte_end":382190,"line_start":663,"line_end":663,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382192,"byte_end":382195,"line_start":664,"line_end":664,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382197,"byte_end":382208,"line_start":665,"line_end":665,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382210,"byte_end":382237,"line_start":666,"line_end":666,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382239,"byte_end":382242,"line_start":667,"line_end":667,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0; 4];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382244,"byte_end":382275,"line_start":668,"line_end":668,"column_start":2,"column_end":33}},{"value":"/ let mut iter = bits.iter_mut();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382277,"byte_end":382312,"line_start":669,"line_end":669,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382314,"byte_end":382317,"line_start":670,"line_end":670,"column_start":2,"column_end":5}},{"value":"/ iter.nth(1).unwrap().commit(true); // index 1","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382319,"byte_end":382368,"line_start":671,"line_end":671,"column_start":2,"column_end":51}},{"value":"/ iter.next_back().unwrap().commit(true); // index 3","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382370,"byte_end":382424,"line_start":672,"line_end":672,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382426,"byte_end":382429,"line_start":673,"line_end":673,"column_start":2,"column_end":5}},{"value":"/ assert!(iter.next().is_some()); // index 2","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382431,"byte_end":382477,"line_start":674,"line_end":674,"column_start":2,"column_end":48}},{"value":"/ assert!(iter.next().is_none()); // complete","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382479,"byte_end":382526,"line_start":675,"line_end":675,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(bits, bits![0, 1, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382528,"byte_end":382568,"line_start":676,"line_end":676,"column_start":2,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382570,"byte_end":382577,"line_start":677,"line_end":677,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382579,"byte_end":382582,"line_start":678,"line_end":678,"column_start":2,"column_end":5}},{"value":"/ [`.remove_alias()`]: crate::slice::IterMut::remove_alias","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382584,"byte_end":382644,"line_start":679,"line_end":679,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3261},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383556,"byte_end":383563,"line_start":711,"line_end":711,"column_start":9,"column_end":16},"name":"windows","qualname":"<BitSlice<T, O>>::windows","value":"pub fn windows(&Self, usize) -> Windows<, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Iterates  over consecutive windowing subslices in a bit-slice.","sig":null,"attributes":[{"value":"/ Iterates  over consecutive windowing subslices in a bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382718,"byte_end":382784,"line_start":684,"line_end":684,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382786,"byte_end":382789,"line_start":685,"line_end":685,"column_start":2,"column_end":5}},{"value":"/ Windows are overlapping views of the bit-slice. Each window advances one","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382791,"byte_end":382867,"line_start":686,"line_end":686,"column_start":2,"column_end":78}},{"value":"/ bit from the previous, so in a bit-slice `[A, B, C, D, E]`, calling","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382869,"byte_end":382940,"line_start":687,"line_end":687,"column_start":2,"column_end":73}},{"value":"/ `.windows(3)` will yield `[A, B, C]`, `[B, C, D]`, and `[C, D, E]`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":382942,"byte_end":383013,"line_start":688,"line_end":688,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383015,"byte_end":383018,"line_start":689,"line_end":689,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383020,"byte_end":383035,"line_start":690,"line_end":690,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383037,"byte_end":383040,"line_start":691,"line_end":691,"column_start":2,"column_end":5}},{"value":"/ [`slice::windows`](https://doc.rust-lang.org/std/primitive.slice.html#method.windows)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383042,"byte_end":383131,"line_start":692,"line_end":692,"column_start":2,"column_end":91}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383133,"byte_end":383136,"line_start":693,"line_end":693,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383138,"byte_end":383151,"line_start":694,"line_end":694,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383153,"byte_end":383156,"line_start":695,"line_end":695,"column_start":2,"column_end":5}},{"value":"/ This panics if `size` is `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383158,"byte_end":383191,"line_start":696,"line_end":696,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383193,"byte_end":383196,"line_start":697,"line_end":697,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383198,"byte_end":383213,"line_start":698,"line_end":698,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383215,"byte_end":383218,"line_start":699,"line_end":699,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383220,"byte_end":383231,"line_start":700,"line_end":700,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383233,"byte_end":383260,"line_start":701,"line_end":701,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383262,"byte_end":383265,"line_start":702,"line_end":702,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383267,"byte_end":383303,"line_start":703,"line_end":703,"column_start":2,"column_end":38}},{"value":"/ let mut iter = bits.windows(3);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383305,"byte_end":383340,"line_start":704,"line_end":704,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383342,"byte_end":383345,"line_start":705,"line_end":705,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.next(), Some(bits![0, 1, 0]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383347,"byte_end":383397,"line_start":706,"line_end":706,"column_start":2,"column_end":52}},{"value":"/ assert_eq!(iter.next(), Some(bits![1, 0, 0]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383399,"byte_end":383449,"line_start":707,"line_end":707,"column_start":2,"column_end":52}},{"value":"/ assert_eq!(iter.next(), Some(bits![0, 0, 1]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383451,"byte_end":383501,"line_start":708,"line_end":708,"column_start":2,"column_end":52}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383503,"byte_end":383538,"line_start":709,"line_end":709,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383540,"byte_end":383547,"line_start":710,"line_end":710,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3262},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384934,"byte_end":384940,"line_start":755,"line_end":755,"column_start":9,"column_end":15},"name":"chunks","qualname":"<BitSlice<T, O>>::chunks","value":"pub fn chunks(&Self, usize) -> Chunks<, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Iterates over non-overlapping subslices of a bit-slice.","sig":null,"attributes":[{"value":"/ Iterates over non-overlapping subslices of a bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383635,"byte_end":383694,"line_start":715,"line_end":715,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383696,"byte_end":383699,"line_start":716,"line_end":716,"column_start":2,"column_end":5}},{"value":"/ Unlike `.windows()`, the subslices this yields do not overlap with each","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383701,"byte_end":383776,"line_start":717,"line_end":717,"column_start":2,"column_end":77}},{"value":"/ other. If `self.len()` is not an even multiple of `chunk_size`, then the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383778,"byte_end":383854,"line_start":718,"line_end":718,"column_start":2,"column_end":78}},{"value":"/ last chunk yielded will be shorter.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383856,"byte_end":383895,"line_start":719,"line_end":719,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383897,"byte_end":383900,"line_start":720,"line_end":720,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383902,"byte_end":383917,"line_start":721,"line_end":721,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383919,"byte_end":383922,"line_start":722,"line_end":722,"column_start":2,"column_end":5}},{"value":"/ [`slice::chunks`](https://doc.rust-lang.org/std/primitive.slice.html#method.chunks)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":383924,"byte_end":384011,"line_start":723,"line_end":723,"column_start":2,"column_end":89}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384013,"byte_end":384016,"line_start":724,"line_end":724,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384018,"byte_end":384040,"line_start":725,"line_end":725,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384042,"byte_end":384045,"line_start":726,"line_end":726,"column_start":2,"column_end":5}},{"value":"/ - [`.chunks_mut()`] has the same division logic, but each yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384047,"byte_end":384116,"line_start":727,"line_end":727,"column_start":2,"column_end":71}},{"value":"/   bit-slice is mutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384118,"byte_end":384145,"line_start":728,"line_end":728,"column_start":2,"column_end":29}},{"value":"/ - [`.chunks_exact()`] does not yield the final chunk if it is shorter","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384147,"byte_end":384220,"line_start":729,"line_end":729,"column_start":2,"column_end":75}},{"value":"/   than `chunk_size`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384222,"byte_end":384246,"line_start":730,"line_end":730,"column_start":2,"column_end":26}},{"value":"/ - [`.rchunks()`] iterates from the back of the bit-slice to the front,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384248,"byte_end":384322,"line_start":731,"line_end":731,"column_start":2,"column_end":76}},{"value":"/   with the final, possibly-shorter, segment at the front edge.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384324,"byte_end":384390,"line_start":732,"line_end":732,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384392,"byte_end":384395,"line_start":733,"line_end":733,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384397,"byte_end":384410,"line_start":734,"line_end":734,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384412,"byte_end":384415,"line_start":735,"line_end":735,"column_start":2,"column_end":5}},{"value":"/ This panics if `chunk_size` is `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384417,"byte_end":384456,"line_start":736,"line_end":736,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384458,"byte_end":384461,"line_start":737,"line_end":737,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384463,"byte_end":384478,"line_start":738,"line_end":738,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384480,"byte_end":384483,"line_start":739,"line_end":739,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384485,"byte_end":384496,"line_start":740,"line_end":740,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384498,"byte_end":384525,"line_start":741,"line_end":741,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384527,"byte_end":384530,"line_start":742,"line_end":742,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384532,"byte_end":384568,"line_start":743,"line_end":743,"column_start":2,"column_end":38}},{"value":"/ let mut iter = bits.chunks(2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384570,"byte_end":384604,"line_start":744,"line_end":744,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384606,"byte_end":384609,"line_start":745,"line_end":745,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.next(), Some(bits![0, 1]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384611,"byte_end":384658,"line_start":746,"line_end":746,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(iter.next(), Some(bits![0, 0]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384660,"byte_end":384707,"line_start":747,"line_end":747,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(iter.next(), Some(bits![1]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384709,"byte_end":384753,"line_start":748,"line_end":748,"column_start":2,"column_end":46}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384755,"byte_end":384790,"line_start":749,"line_end":749,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384792,"byte_end":384799,"line_start":750,"line_end":750,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384801,"byte_end":384804,"line_start":751,"line_end":751,"column_start":2,"column_end":5}},{"value":"/ [`.chunks_exact()`]: Self::chunks_exact","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384806,"byte_end":384849,"line_start":752,"line_end":752,"column_start":2,"column_end":45}},{"value":"/ [`.chunks_mut()`]: Self::chunks_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384851,"byte_end":384890,"line_start":753,"line_end":753,"column_start":2,"column_end":41}},{"value":"/ [`.rchunks()`]: Self::rchunks","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":384892,"byte_end":384925,"line_start":754,"line_end":754,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3263},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386621,"byte_end":386631,"line_start":805,"line_end":805,"column_start":9,"column_end":19},"name":"chunks_mut","qualname":"<BitSlice<T, O>>::chunks_mut","value":"pub fn chunks_mut(&mut Self, usize) -> ChunksMut<, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Iterates over non-overlapping mutable subslices of a bit-slice.","sig":null,"attributes":[{"value":"/ Iterates over non-overlapping mutable subslices of a bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385022,"byte_end":385089,"line_start":759,"line_end":759,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385091,"byte_end":385094,"line_start":760,"line_end":760,"column_start":2,"column_end":5}},{"value":"/ Iterators do not require that each yielded item is destroyed before the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385096,"byte_end":385171,"line_start":761,"line_end":761,"column_start":2,"column_end":77}},{"value":"/ next is produced. This means that each bit-slice yielded must be marked","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385173,"byte_end":385248,"line_start":762,"line_end":762,"column_start":2,"column_end":77}},{"value":"/ as aliased. If you are using this in a loop that does not collect","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385250,"byte_end":385319,"line_start":763,"line_end":763,"column_start":2,"column_end":71}},{"value":"/ multiple yielded subslices for the same scope, then you can remove the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385321,"byte_end":385395,"line_start":764,"line_end":764,"column_start":2,"column_end":76}},{"value":"/ alias marking by calling the (`unsafe`) method [`.remove_alias()`] on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385397,"byte_end":385470,"line_start":765,"line_end":765,"column_start":2,"column_end":75}},{"value":"/ the iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385472,"byte_end":385489,"line_start":766,"line_end":766,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385491,"byte_end":385494,"line_start":767,"line_end":767,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385496,"byte_end":385511,"line_start":768,"line_end":768,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385513,"byte_end":385516,"line_start":769,"line_end":769,"column_start":2,"column_end":5}},{"value":"/ [`slice::chunks_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.chunks_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385518,"byte_end":385613,"line_start":770,"line_end":770,"column_start":2,"column_end":97}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385615,"byte_end":385618,"line_start":771,"line_end":771,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385620,"byte_end":385642,"line_start":772,"line_end":772,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385644,"byte_end":385647,"line_start":773,"line_end":773,"column_start":2,"column_end":5}},{"value":"/ - [`.chunks()`] has the same division logic, but each yielded bit-slice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385649,"byte_end":385724,"line_start":774,"line_end":774,"column_start":2,"column_end":77}},{"value":"/   is immutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385726,"byte_end":385745,"line_start":775,"line_end":775,"column_start":2,"column_end":21}},{"value":"/ - [`.chunks_exact_mut()`] does not yield the final chunk if it is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385747,"byte_end":385816,"line_start":776,"line_end":776,"column_start":2,"column_end":71}},{"value":"/   shorter than `chunk_size`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385818,"byte_end":385850,"line_start":777,"line_end":777,"column_start":2,"column_end":34}},{"value":"/ - [`.rchunks_mut()`] iterates from the back of the bit-slice to the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385852,"byte_end":385923,"line_start":778,"line_end":778,"column_start":2,"column_end":73}},{"value":"/   front, with the final, possibly-shorter, segment at the front edge.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":385925,"byte_end":385998,"line_start":779,"line_end":779,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386000,"byte_end":386003,"line_start":780,"line_end":780,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386005,"byte_end":386018,"line_start":781,"line_end":781,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386020,"byte_end":386023,"line_start":782,"line_end":782,"column_start":2,"column_end":5}},{"value":"/ This panics if `chunk_size` is `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386025,"byte_end":386064,"line_start":783,"line_end":783,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386066,"byte_end":386069,"line_start":784,"line_end":784,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386071,"byte_end":386086,"line_start":785,"line_end":785,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386088,"byte_end":386091,"line_start":786,"line_end":786,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386093,"byte_end":386104,"line_start":787,"line_end":787,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386106,"byte_end":386133,"line_start":788,"line_end":788,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386135,"byte_end":386138,"line_start":789,"line_end":789,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut u8, Msb0; 0; 5];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386140,"byte_end":386181,"line_start":790,"line_end":790,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386183,"byte_end":386186,"line_start":791,"line_end":791,"column_start":2,"column_end":5}},{"value":"/ for (idx, chunk) in unsafe {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386188,"byte_end":386220,"line_start":792,"line_end":792,"column_start":2,"column_end":34}},{"value":"/   bits.chunks_mut(2).remove_alias()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386222,"byte_end":386261,"line_start":793,"line_end":793,"column_start":2,"column_end":41}},{"value":"/ }.enumerate() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386263,"byte_end":386282,"line_start":794,"line_end":794,"column_start":2,"column_end":21}},{"value":"/   chunk.store(idx + 1);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386284,"byte_end":386311,"line_start":795,"line_end":795,"column_start":2,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386313,"byte_end":386318,"line_start":796,"line_end":796,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(bits, bits![0, 1, 1, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386320,"byte_end":386363,"line_start":797,"line_end":797,"column_start":2,"column_end":45}},{"value":"/ //                     ^^^^  ^^^^  ^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386365,"byte_end":386405,"line_start":798,"line_end":798,"column_start":2,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386407,"byte_end":386414,"line_start":799,"line_end":799,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386416,"byte_end":386419,"line_start":800,"line_end":800,"column_start":2,"column_end":5}},{"value":"/ [`.chunks()`]: Self::chunks","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386421,"byte_end":386452,"line_start":801,"line_end":801,"column_start":2,"column_end":33}},{"value":"/ [`.chunks_exact_mut()`]: Self::chunks_exact_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386454,"byte_end":386505,"line_start":802,"line_end":802,"column_start":2,"column_end":53}},{"value":"/ [`.rchunks_mut()`]: Self::rchunks_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386507,"byte_end":386548,"line_start":803,"line_end":803,"column_start":2,"column_end":43}},{"value":"/ [`.remove_alias()`]: crate::slice::ChunksMut::remove_alias","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386550,"byte_end":386612,"line_start":804,"line_end":804,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3264},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388147,"byte_end":388159,"line_start":850,"line_end":850,"column_start":9,"column_end":21},"name":"chunks_exact","qualname":"<BitSlice<T, O>>::chunks_exact","value":"pub fn chunks_exact(&Self, usize) -> ChunksExact<, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Iterates over non-overlapping subslices of a bit-slice.","sig":null,"attributes":[{"value":"/ Iterates over non-overlapping subslices of a bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386723,"byte_end":386782,"line_start":809,"line_end":809,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386784,"byte_end":386787,"line_start":810,"line_end":810,"column_start":2,"column_end":5}},{"value":"/ If `self.len()` is not an even multiple of `chunk_size`, then the last","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386789,"byte_end":386863,"line_start":811,"line_end":811,"column_start":2,"column_end":76}},{"value":"/ few bits are not yielded by the iterator at all. They can be accessed","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386865,"byte_end":386938,"line_start":812,"line_end":812,"column_start":2,"column_end":75}},{"value":"/ with the [`.remainder()`] method if the iterator is bound to a name.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":386940,"byte_end":387012,"line_start":813,"line_end":813,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387014,"byte_end":387017,"line_start":814,"line_end":814,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387019,"byte_end":387034,"line_start":815,"line_end":815,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387036,"byte_end":387039,"line_start":816,"line_end":816,"column_start":2,"column_end":5}},{"value":"/ [`slice::chunks_exact`](https://doc.rust-lang.org/std/primitive.slice.html#method.chunks_exact)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387041,"byte_end":387140,"line_start":817,"line_end":817,"column_start":2,"column_end":101}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387142,"byte_end":387145,"line_start":818,"line_end":818,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387147,"byte_end":387169,"line_start":819,"line_end":819,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387171,"byte_end":387174,"line_start":820,"line_end":820,"column_start":2,"column_end":5}},{"value":"/ - [`.chunks()`] yields any leftover bits at the end as a shorter chunk","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387176,"byte_end":387250,"line_start":821,"line_end":821,"column_start":2,"column_end":76}},{"value":"/   during iteration.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387252,"byte_end":387275,"line_start":822,"line_end":822,"column_start":2,"column_end":25}},{"value":"/ - [`.chunks_exact_mut()`] has the same division logic, but each yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387277,"byte_end":387352,"line_start":823,"line_end":823,"column_start":2,"column_end":77}},{"value":"/   bit-slice is mutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387354,"byte_end":387381,"line_start":824,"line_end":824,"column_start":2,"column_end":29}},{"value":"/ - [`.rchunks_exact()`] iterates from the back of the bit-slice to the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387383,"byte_end":387456,"line_start":825,"line_end":825,"column_start":2,"column_end":75}},{"value":"/   front, with the unyielded remainder segment at the front edge.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387458,"byte_end":387526,"line_start":826,"line_end":826,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387528,"byte_end":387531,"line_start":827,"line_end":827,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387533,"byte_end":387546,"line_start":828,"line_end":828,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387548,"byte_end":387551,"line_start":829,"line_end":829,"column_start":2,"column_end":5}},{"value":"/ This panics if `chunk_size` is `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387553,"byte_end":387592,"line_start":830,"line_end":830,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387594,"byte_end":387597,"line_start":831,"line_end":831,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387599,"byte_end":387614,"line_start":832,"line_end":832,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387616,"byte_end":387619,"line_start":833,"line_end":833,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387621,"byte_end":387632,"line_start":834,"line_end":834,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387634,"byte_end":387661,"line_start":835,"line_end":835,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387663,"byte_end":387666,"line_start":836,"line_end":836,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387668,"byte_end":387704,"line_start":837,"line_end":837,"column_start":2,"column_end":38}},{"value":"/ let mut iter = bits.chunks_exact(2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387706,"byte_end":387746,"line_start":838,"line_end":838,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387748,"byte_end":387751,"line_start":839,"line_end":839,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.next(), Some(bits![0, 1]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387753,"byte_end":387800,"line_start":840,"line_end":840,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(iter.next(), Some(bits![0, 0]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387802,"byte_end":387849,"line_start":841,"line_end":841,"column_start":2,"column_end":49}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387851,"byte_end":387886,"line_start":842,"line_end":842,"column_start":2,"column_end":37}},{"value":"/ assert_eq!(iter.remainder(), bits![1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387888,"byte_end":387931,"line_start":843,"line_end":843,"column_start":2,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387933,"byte_end":387940,"line_start":844,"line_end":844,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387942,"byte_end":387945,"line_start":845,"line_end":845,"column_start":2,"column_end":5}},{"value":"/ [`.chunks()`]: Self::chunks","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387947,"byte_end":387978,"line_start":846,"line_end":846,"column_start":2,"column_end":33}},{"value":"/ [`.chunks_exact_mut()`]: Self::chunks_exact_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":387980,"byte_end":388031,"line_start":847,"line_end":847,"column_start":2,"column_end":53}},{"value":"/ [`.rchunks_exact()`]: Self::rchunks_exact","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388033,"byte_end":388078,"line_start":848,"line_end":848,"column_start":2,"column_end":47}},{"value":"/ [`.remainder()`]: crate::slice::ChunksExact::remainder","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388080,"byte_end":388138,"line_start":849,"line_end":849,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390242,"byte_end":390258,"line_start":907,"line_end":907,"column_start":9,"column_end":25},"name":"chunks_exact_mut","qualname":"<BitSlice<T, O>>::chunks_exact_mut","value":"pub fn chunks_exact_mut(&mut Self, usize) -> ChunksExactMut<, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Iterates over non-overlapping mutable subslices of a bit-slice.","sig":null,"attributes":[{"value":"/ Iterates over non-overlapping mutable subslices of a bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388251,"byte_end":388318,"line_start":854,"line_end":854,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388320,"byte_end":388323,"line_start":855,"line_end":855,"column_start":2,"column_end":5}},{"value":"/ If `self.len()` is not an even multiple of `chunk_size`, then the last","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388325,"byte_end":388399,"line_start":856,"line_end":856,"column_start":2,"column_end":76}},{"value":"/ few bits are not yielded by the iterator at all. They can be accessed","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388401,"byte_end":388474,"line_start":857,"line_end":857,"column_start":2,"column_end":75}},{"value":"/ with the [`.into_remainder()`] method if the iterator is bound to a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388476,"byte_end":388547,"line_start":858,"line_end":858,"column_start":2,"column_end":73}},{"value":"/ name.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388549,"byte_end":388558,"line_start":859,"line_end":859,"column_start":2,"column_end":11}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388560,"byte_end":388563,"line_start":860,"line_end":860,"column_start":2,"column_end":5}},{"value":"/ Iterators do not require that each yielded item is destroyed before the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388565,"byte_end":388640,"line_start":861,"line_end":861,"column_start":2,"column_end":77}},{"value":"/ next is produced. This means that each bit-slice yielded must be marked","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388642,"byte_end":388717,"line_start":862,"line_end":862,"column_start":2,"column_end":77}},{"value":"/ as aliased. If you are using this in a loop that does not collect","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388719,"byte_end":388788,"line_start":863,"line_end":863,"column_start":2,"column_end":71}},{"value":"/ multiple yielded subslices for the same scope, then you can remove the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388790,"byte_end":388864,"line_start":864,"line_end":864,"column_start":2,"column_end":76}},{"value":"/ alias marking by calling the (`unsafe`) method [`.remove_alias()`] on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388866,"byte_end":388939,"line_start":865,"line_end":865,"column_start":2,"column_end":75}},{"value":"/ the iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388941,"byte_end":388958,"line_start":866,"line_end":866,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388960,"byte_end":388963,"line_start":867,"line_end":867,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388965,"byte_end":388980,"line_start":868,"line_end":868,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388982,"byte_end":388985,"line_start":869,"line_end":869,"column_start":2,"column_end":5}},{"value":"/ [`slice::chunks_exact_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.chunks_exact_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":388987,"byte_end":389094,"line_start":870,"line_end":870,"column_start":2,"column_end":109}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389096,"byte_end":389099,"line_start":871,"line_end":871,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389101,"byte_end":389123,"line_start":872,"line_end":872,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389125,"byte_end":389128,"line_start":873,"line_end":873,"column_start":2,"column_end":5}},{"value":"/ - [`.chunks_mut()`] yields any leftover bits at the end as a shorter","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389130,"byte_end":389202,"line_start":874,"line_end":874,"column_start":2,"column_end":74}},{"value":"/   chunk during iteration.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389204,"byte_end":389233,"line_start":875,"line_end":875,"column_start":2,"column_end":31}},{"value":"/ - [`.chunks_exact()`] has the same division logic, but each yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389235,"byte_end":389306,"line_start":876,"line_end":876,"column_start":2,"column_end":73}},{"value":"/   bit-slice is immutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389308,"byte_end":389337,"line_start":877,"line_end":877,"column_start":2,"column_end":31}},{"value":"/ - [`.rchunks_exact_mut()`] iterates from the back of the bit-slice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389339,"byte_end":389409,"line_start":878,"line_end":878,"column_start":2,"column_end":72}},{"value":"/   forwards, with the unyielded remainder segment at the front edge.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389411,"byte_end":389482,"line_start":879,"line_end":879,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389484,"byte_end":389487,"line_start":880,"line_end":880,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389489,"byte_end":389502,"line_start":881,"line_end":881,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389504,"byte_end":389507,"line_start":882,"line_end":882,"column_start":2,"column_end":5}},{"value":"/ This panics if `chunk_size` is `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389509,"byte_end":389548,"line_start":883,"line_end":883,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389550,"byte_end":389553,"line_start":884,"line_end":884,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389555,"byte_end":389570,"line_start":885,"line_end":885,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389572,"byte_end":389575,"line_start":886,"line_end":886,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389577,"byte_end":389588,"line_start":887,"line_end":887,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389590,"byte_end":389617,"line_start":888,"line_end":888,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389619,"byte_end":389622,"line_start":889,"line_end":889,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut u8, Msb0; 0; 5];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389624,"byte_end":389665,"line_start":890,"line_end":890,"column_start":2,"column_end":43}},{"value":"/ let mut iter = bits.chunks_exact_mut(2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389667,"byte_end":389711,"line_start":891,"line_end":891,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389713,"byte_end":389716,"line_start":892,"line_end":892,"column_start":2,"column_end":5}},{"value":"/ for (idx, chunk) in iter.by_ref().enumerate() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389718,"byte_end":389769,"line_start":893,"line_end":893,"column_start":2,"column_end":53}},{"value":"/   chunk.store(idx + 1);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389771,"byte_end":389798,"line_start":894,"line_end":894,"column_start":2,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389800,"byte_end":389805,"line_start":895,"line_end":895,"column_start":2,"column_end":7}},{"value":"/ iter.into_remainder().store(1u8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389807,"byte_end":389844,"line_start":896,"line_end":896,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389846,"byte_end":389849,"line_start":897,"line_end":897,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(bits, bits![0, 1, 1, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389851,"byte_end":389894,"line_start":898,"line_end":898,"column_start":2,"column_end":45}},{"value":"/ //                       remainder ^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389896,"byte_end":389936,"line_start":899,"line_end":899,"column_start":2,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389938,"byte_end":389945,"line_start":900,"line_end":900,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389947,"byte_end":389950,"line_start":901,"line_end":901,"column_start":2,"column_end":5}},{"value":"/ [`.chunks_exact()`]: Self::chunks_exact","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389952,"byte_end":389995,"line_start":902,"line_end":902,"column_start":2,"column_end":45}},{"value":"/ [`.chunks_mut()`]: Self::chunks_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":389997,"byte_end":390036,"line_start":903,"line_end":903,"column_start":2,"column_end":41}},{"value":"/ [`.into_remainder()`]: crate::slice::ChunksExactMut::into_remainder","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390038,"byte_end":390109,"line_start":904,"line_end":904,"column_start":2,"column_end":73}},{"value":"/ [`.rchunks_exact_mut()`]: Self::rchunks_exact_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390111,"byte_end":390164,"line_start":905,"line_end":905,"column_start":2,"column_end":55}},{"value":"/ [`.remove_alias()`]: crate::slice::ChunksExactMut::remove_alias","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390166,"byte_end":390233,"line_start":906,"line_end":906,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3266},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391710,"byte_end":391717,"line_start":955,"line_end":955,"column_start":9,"column_end":16},"name":"rchunks","qualname":"<BitSlice<T, O>>::rchunks","value":"pub fn rchunks(&Self, usize) -> RChunks<, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Iterates over non-overlapping subslices of a bit-slice, from the back\n edge.","sig":null,"attributes":[{"value":"/ Iterates over non-overlapping subslices of a bit-slice, from the back","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390368,"byte_end":390441,"line_start":914,"line_end":914,"column_start":2,"column_end":75}},{"value":"/ edge.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390443,"byte_end":390452,"line_start":915,"line_end":915,"column_start":2,"column_end":11}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390454,"byte_end":390457,"line_start":916,"line_end":916,"column_start":2,"column_end":5}},{"value":"/ Unlike `.chunks()`, this aligns its chunks to the back edge of `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390459,"byte_end":390533,"line_start":917,"line_end":917,"column_start":2,"column_end":76}},{"value":"/ If `self.len()` is not an even multiple of `chunk_size`, then the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390535,"byte_end":390604,"line_start":918,"line_end":918,"column_start":2,"column_end":71}},{"value":"/ leftover partial chunk is `self[0 .. len % chunk_size]`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390606,"byte_end":390666,"line_start":919,"line_end":919,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390668,"byte_end":390671,"line_start":920,"line_end":920,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390673,"byte_end":390688,"line_start":921,"line_end":921,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390690,"byte_end":390693,"line_start":922,"line_end":922,"column_start":2,"column_end":5}},{"value":"/ [`slice::rchunks`](https://doc.rust-lang.org/std/primitive.slice.html#method.rchunks)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390695,"byte_end":390784,"line_start":923,"line_end":923,"column_start":2,"column_end":91}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390786,"byte_end":390789,"line_start":924,"line_end":924,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390791,"byte_end":390813,"line_start":925,"line_end":925,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390815,"byte_end":390818,"line_start":926,"line_end":926,"column_start":2,"column_end":5}},{"value":"/ - [`.rchunks_mut()`] has the same division logic, but each yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390820,"byte_end":390890,"line_start":927,"line_end":927,"column_start":2,"column_end":72}},{"value":"/   bit-slice is mutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390892,"byte_end":390919,"line_start":928,"line_end":928,"column_start":2,"column_end":29}},{"value":"/ - [`.rchunks_exact()`] does not yield the final chunk if it is shorter","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390921,"byte_end":390995,"line_start":929,"line_end":929,"column_start":2,"column_end":76}},{"value":"/   than `chunk_size`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":390997,"byte_end":391021,"line_start":930,"line_end":930,"column_start":2,"column_end":26}},{"value":"/ - [`.chunks()`] iterates from the front of the bit-slice to the back,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391023,"byte_end":391096,"line_start":931,"line_end":931,"column_start":2,"column_end":75}},{"value":"/   with the final, possibly-shorter, segment at the back edge.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391098,"byte_end":391163,"line_start":932,"line_end":932,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391165,"byte_end":391168,"line_start":933,"line_end":933,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391170,"byte_end":391183,"line_start":934,"line_end":934,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391185,"byte_end":391188,"line_start":935,"line_end":935,"column_start":2,"column_end":5}},{"value":"/ This panics if `chunk_size` is `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391190,"byte_end":391229,"line_start":936,"line_end":936,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391231,"byte_end":391234,"line_start":937,"line_end":937,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391236,"byte_end":391251,"line_start":938,"line_end":938,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391253,"byte_end":391256,"line_start":939,"line_end":939,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391258,"byte_end":391269,"line_start":940,"line_end":940,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391271,"byte_end":391298,"line_start":941,"line_end":941,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391300,"byte_end":391303,"line_start":942,"line_end":942,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391305,"byte_end":391341,"line_start":943,"line_end":943,"column_start":2,"column_end":38}},{"value":"/ let mut iter = bits.rchunks(2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391343,"byte_end":391378,"line_start":944,"line_end":944,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391380,"byte_end":391383,"line_start":945,"line_end":945,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.next(), Some(bits![0, 1]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391385,"byte_end":391432,"line_start":946,"line_end":946,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(iter.next(), Some(bits![1, 0]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391434,"byte_end":391481,"line_start":947,"line_end":947,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(iter.next(), Some(bits![0]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391483,"byte_end":391527,"line_start":948,"line_end":948,"column_start":2,"column_end":46}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391529,"byte_end":391564,"line_start":949,"line_end":949,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391566,"byte_end":391573,"line_start":950,"line_end":950,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391575,"byte_end":391578,"line_start":951,"line_end":951,"column_start":2,"column_end":5}},{"value":"/ [`.chunks()`]: Self::chunks","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391580,"byte_end":391611,"line_start":952,"line_end":952,"column_start":2,"column_end":33}},{"value":"/ [`.rchunks_exact()`]: Self::rchunks_exact","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391613,"byte_end":391658,"line_start":953,"line_end":953,"column_start":2,"column_end":47}},{"value":"/ [`.rchunks_mut()`]: Self::rchunks_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391660,"byte_end":391701,"line_start":954,"line_end":954,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393575,"byte_end":393586,"line_start":1005,"line_end":1005,"column_start":9,"column_end":20},"name":"rchunks_mut","qualname":"<BitSlice<T, O>>::rchunks_mut","value":"pub fn rchunks_mut(&mut Self, usize) -> RChunksMut<, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Iterates over non-overlapping mutable subslices of a bit-slice, from the\n back edge.","sig":null,"attributes":[{"value":"/ Iterates over non-overlapping mutable subslices of a bit-slice, from the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391801,"byte_end":391877,"line_start":959,"line_end":959,"column_start":2,"column_end":78}},{"value":"/ back edge.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391879,"byte_end":391893,"line_start":960,"line_end":960,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391895,"byte_end":391898,"line_start":961,"line_end":961,"column_start":2,"column_end":5}},{"value":"/ Unlike `.chunks_mut()`, this aligns its chunks to the back edge of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391900,"byte_end":391970,"line_start":962,"line_end":962,"column_start":2,"column_end":72}},{"value":"/ `self`. If `self.len()` is not an even multiple of `chunk_size`, then","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":391972,"byte_end":392045,"line_start":963,"line_end":963,"column_start":2,"column_end":75}},{"value":"/ the leftover partial chunk is `self[0 .. len % chunk_size]`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392047,"byte_end":392111,"line_start":964,"line_end":964,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392113,"byte_end":392116,"line_start":965,"line_end":965,"column_start":2,"column_end":5}},{"value":"/ Iterators do not require that each yielded item is destroyed before the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392118,"byte_end":392193,"line_start":966,"line_end":966,"column_start":2,"column_end":77}},{"value":"/ next is produced. This means that each bit-slice yielded must be marked","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392195,"byte_end":392270,"line_start":967,"line_end":967,"column_start":2,"column_end":77}},{"value":"/ as aliased. If you are using this in a loop that does not collect","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392272,"byte_end":392341,"line_start":968,"line_end":968,"column_start":2,"column_end":71}},{"value":"/ multiple yielded values for the same scope, then you can remove the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392343,"byte_end":392414,"line_start":969,"line_end":969,"column_start":2,"column_end":73}},{"value":"/ alias marking by calling the (`unsafe`) method [`.remove_alias()`] on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392416,"byte_end":392489,"line_start":970,"line_end":970,"column_start":2,"column_end":75}},{"value":"/ the iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392491,"byte_end":392508,"line_start":971,"line_end":971,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392510,"byte_end":392513,"line_start":972,"line_end":972,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392515,"byte_end":392530,"line_start":973,"line_end":973,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392532,"byte_end":392535,"line_start":974,"line_end":974,"column_start":2,"column_end":5}},{"value":"/ [`slice::rchunks_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.rchunks_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392537,"byte_end":392634,"line_start":975,"line_end":975,"column_start":2,"column_end":99}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392636,"byte_end":392639,"line_start":976,"line_end":976,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392641,"byte_end":392663,"line_start":977,"line_end":977,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392665,"byte_end":392668,"line_start":978,"line_end":978,"column_start":2,"column_end":5}},{"value":"/ - [`.rchunks()`] has the same division logic, but each yielded bit-slice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392670,"byte_end":392746,"line_start":979,"line_end":979,"column_start":2,"column_end":78}},{"value":"/   is immutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392748,"byte_end":392767,"line_start":980,"line_end":980,"column_start":2,"column_end":21}},{"value":"/ - [`.rchunks_exact_mut()`] does not yield the final chunk if it is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392769,"byte_end":392839,"line_start":981,"line_end":981,"column_start":2,"column_end":72}},{"value":"/   shorter than `chunk_size`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392841,"byte_end":392873,"line_start":982,"line_end":982,"column_start":2,"column_end":34}},{"value":"/ - [`.chunks_mut()`] iterates from the front of the bit-slice to the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392875,"byte_end":392946,"line_start":983,"line_end":983,"column_start":2,"column_end":73}},{"value":"/   back, with the final, possibly-shorter, segment at the back edge.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":392948,"byte_end":393019,"line_start":984,"line_end":984,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393021,"byte_end":393024,"line_start":985,"line_end":985,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393026,"byte_end":393041,"line_start":986,"line_end":986,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393043,"byte_end":393046,"line_start":987,"line_end":987,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393048,"byte_end":393059,"line_start":988,"line_end":988,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393061,"byte_end":393088,"line_start":989,"line_end":989,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393090,"byte_end":393093,"line_start":990,"line_end":990,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut u8, Msb0; 0; 5];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393095,"byte_end":393136,"line_start":991,"line_end":991,"column_start":2,"column_end":43}},{"value":"/ for (idx, chunk) in unsafe {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393138,"byte_end":393170,"line_start":992,"line_end":992,"column_start":2,"column_end":34}},{"value":"/   bits.rchunks_mut(2).remove_alias()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393172,"byte_end":393212,"line_start":993,"line_end":993,"column_start":2,"column_end":42}},{"value":"/ }.enumerate() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393214,"byte_end":393233,"line_start":994,"line_end":994,"column_start":2,"column_end":21}},{"value":"/   chunk.store(idx + 1);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393235,"byte_end":393262,"line_start":995,"line_end":995,"column_start":2,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393264,"byte_end":393269,"line_start":996,"line_end":996,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(bits, bits![1, 1, 0, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393271,"byte_end":393314,"line_start":997,"line_end":997,"column_start":2,"column_end":45}},{"value":"/ //           remainder ^  ^^^^  ^^^^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393316,"byte_end":393356,"line_start":998,"line_end":998,"column_start":2,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393358,"byte_end":393365,"line_start":999,"line_end":999,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393367,"byte_end":393370,"line_start":1000,"line_end":1000,"column_start":2,"column_end":5}},{"value":"/ [`.chunks_mut()`]: Self::chunks_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393372,"byte_end":393411,"line_start":1001,"line_end":1001,"column_start":2,"column_end":41}},{"value":"/ [`.rchunks()`]: Self::rchunks","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393413,"byte_end":393446,"line_start":1002,"line_end":1002,"column_start":2,"column_end":35}},{"value":"/ [`.rchunks_exact_mut()`]: Self::rchunks_exact_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393448,"byte_end":393501,"line_start":1003,"line_end":1003,"column_start":2,"column_end":55}},{"value":"/ [`.remove_alias()`]: crate::slice::RChunksMut::remove_alias","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393503,"byte_end":393566,"line_start":1004,"line_end":1004,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395138,"byte_end":395151,"line_start":1051,"line_end":1051,"column_start":9,"column_end":22},"name":"rchunks_exact","qualname":"<BitSlice<T, O>>::rchunks_exact","value":"pub fn rchunks_exact(&Self, usize) -> RChunksExact<, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Iterates over non-overlapping subslices of a bit-slice, from the back\n edge.","sig":null,"attributes":[{"value":"/ Iterates over non-overlapping subslices of a bit-slice, from the back","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393680,"byte_end":393753,"line_start":1009,"line_end":1009,"column_start":2,"column_end":75}},{"value":"/ edge.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393755,"byte_end":393764,"line_start":1010,"line_end":1010,"column_start":2,"column_end":11}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393766,"byte_end":393769,"line_start":1011,"line_end":1011,"column_start":2,"column_end":5}},{"value":"/ If `self.len()` is not an even multiple of `chunk_size`, then the first","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393771,"byte_end":393846,"line_start":1012,"line_end":1012,"column_start":2,"column_end":77}},{"value":"/ few bits are not yielded by the iterator at all. They can be accessed","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393848,"byte_end":393921,"line_start":1013,"line_end":1013,"column_start":2,"column_end":75}},{"value":"/ with the [`.remainder()`] method if the iterator is bound to a name.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393923,"byte_end":393995,"line_start":1014,"line_end":1014,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":393997,"byte_end":394000,"line_start":1015,"line_end":1015,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394002,"byte_end":394017,"line_start":1016,"line_end":1016,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394019,"byte_end":394022,"line_start":1017,"line_end":1017,"column_start":2,"column_end":5}},{"value":"/ [`slice::rchunks_exact`](https://doc.rust-lang.org/std/primitive.slice.html#method.rchunks_exact)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394024,"byte_end":394125,"line_start":1018,"line_end":1018,"column_start":2,"column_end":103}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394127,"byte_end":394130,"line_start":1019,"line_end":1019,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394132,"byte_end":394154,"line_start":1020,"line_end":1020,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394156,"byte_end":394159,"line_start":1021,"line_end":1021,"column_start":2,"column_end":5}},{"value":"/ - [`.rchunks()`] yields any leftover bits at the front as a shorter","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394161,"byte_end":394232,"line_start":1022,"line_end":1022,"column_start":2,"column_end":73}},{"value":"/   chunk during iteration.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394234,"byte_end":394263,"line_start":1023,"line_end":1023,"column_start":2,"column_end":31}},{"value":"/ - [`.rchunks_exact_mut()`] has the same division logic, but each yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394265,"byte_end":394341,"line_start":1024,"line_end":1024,"column_start":2,"column_end":78}},{"value":"/   bit-slice is mutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394343,"byte_end":394370,"line_start":1025,"line_end":1025,"column_start":2,"column_end":29}},{"value":"/ - [`.chunks_exact()`] iterates from the front of the bit-slice to the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394372,"byte_end":394445,"line_start":1026,"line_end":1026,"column_start":2,"column_end":75}},{"value":"/   back, with the unyielded remainder segment at the back edge.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394447,"byte_end":394513,"line_start":1027,"line_end":1027,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394515,"byte_end":394518,"line_start":1028,"line_end":1028,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394520,"byte_end":394533,"line_start":1029,"line_end":1029,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394535,"byte_end":394538,"line_start":1030,"line_end":1030,"column_start":2,"column_end":5}},{"value":"/ This panics if `chunk_size` is `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394540,"byte_end":394579,"line_start":1031,"line_end":1031,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394581,"byte_end":394584,"line_start":1032,"line_end":1032,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394586,"byte_end":394601,"line_start":1033,"line_end":1033,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394603,"byte_end":394606,"line_start":1034,"line_end":1034,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394608,"byte_end":394619,"line_start":1035,"line_end":1035,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394621,"byte_end":394648,"line_start":1036,"line_end":1036,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394650,"byte_end":394653,"line_start":1037,"line_end":1037,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394655,"byte_end":394691,"line_start":1038,"line_end":1038,"column_start":2,"column_end":38}},{"value":"/ let mut iter = bits.rchunks_exact(2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394693,"byte_end":394734,"line_start":1039,"line_end":1039,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394736,"byte_end":394739,"line_start":1040,"line_end":1040,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.next(), Some(bits![0, 1]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394741,"byte_end":394788,"line_start":1041,"line_end":1041,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(iter.next(), Some(bits![1, 0]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394790,"byte_end":394837,"line_start":1042,"line_end":1042,"column_start":2,"column_end":49}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394839,"byte_end":394874,"line_start":1043,"line_end":1043,"column_start":2,"column_end":37}},{"value":"/ assert_eq!(iter.remainder(), bits![0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394876,"byte_end":394919,"line_start":1044,"line_end":1044,"column_start":2,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394921,"byte_end":394928,"line_start":1045,"line_end":1045,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394930,"byte_end":394933,"line_start":1046,"line_end":1046,"column_start":2,"column_end":5}},{"value":"/ [`.chunks_exact()`]: Self::chunks_exact","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394935,"byte_end":394978,"line_start":1047,"line_end":1047,"column_start":2,"column_end":45}},{"value":"/ [`.rchunks()`]: Self::rchunks","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":394980,"byte_end":395013,"line_start":1048,"line_end":1048,"column_start":2,"column_end":35}},{"value":"/ [`.rchunks_exact_mut()`]: Self::rchunks_exact_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395015,"byte_end":395068,"line_start":1049,"line_end":1049,"column_start":2,"column_end":55}},{"value":"/ [`.remainder()`]: crate::slice::RChunksExact::remainder","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395070,"byte_end":395129,"line_start":1050,"line_end":1050,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397123,"byte_end":397140,"line_start":1105,"line_end":1105,"column_start":9,"column_end":26},"name":"rchunks_exact_mut","qualname":"<BitSlice<T, O>>::rchunks_exact_mut","value":"pub fn rchunks_exact_mut(&mut Self, usize) -> RChunksExactMut<, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Iterates over non-overlapping mutable subslices of a bit-slice, from the\n back edge.","sig":null,"attributes":[{"value":"/ Iterates over non-overlapping mutable subslices of a bit-slice, from the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395245,"byte_end":395321,"line_start":1055,"line_end":1055,"column_start":2,"column_end":78}},{"value":"/ back edge.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395323,"byte_end":395337,"line_start":1056,"line_end":1056,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395339,"byte_end":395342,"line_start":1057,"line_end":1057,"column_start":2,"column_end":5}},{"value":"/ If `self.len()` is not an even multiple of `chunk_size`, then the first","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395344,"byte_end":395419,"line_start":1058,"line_end":1058,"column_start":2,"column_end":77}},{"value":"/ few bits are not yielded by the iterator at all. They can be accessed","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395421,"byte_end":395494,"line_start":1059,"line_end":1059,"column_start":2,"column_end":75}},{"value":"/ with the [`.into_remainder()`] method if the iterator is bound to a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395496,"byte_end":395567,"line_start":1060,"line_end":1060,"column_start":2,"column_end":73}},{"value":"/ name.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395569,"byte_end":395578,"line_start":1061,"line_end":1061,"column_start":2,"column_end":11}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395580,"byte_end":395583,"line_start":1062,"line_end":1062,"column_start":2,"column_end":5}},{"value":"/ Iterators do not require that each yielded item is destroyed before the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395585,"byte_end":395660,"line_start":1063,"line_end":1063,"column_start":2,"column_end":77}},{"value":"/ next is produced. This means that each bit-slice yielded must be marked","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395662,"byte_end":395737,"line_start":1064,"line_end":1064,"column_start":2,"column_end":77}},{"value":"/ as aliased. If you are using this in a loop that does not collect","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395739,"byte_end":395808,"line_start":1065,"line_end":1065,"column_start":2,"column_end":71}},{"value":"/ multiple yielded subslices for the same scope, then you can remove the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395810,"byte_end":395884,"line_start":1066,"line_end":1066,"column_start":2,"column_end":76}},{"value":"/ alias marking by calling the (`unsafe`) method [`.remove_alias()`] on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395886,"byte_end":395959,"line_start":1067,"line_end":1067,"column_start":2,"column_end":75}},{"value":"/ the iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395961,"byte_end":395978,"line_start":1068,"line_end":1068,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395980,"byte_end":395983,"line_start":1069,"line_end":1069,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":395985,"byte_end":396007,"line_start":1070,"line_end":1070,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396009,"byte_end":396012,"line_start":1071,"line_end":1071,"column_start":2,"column_end":5}},{"value":"/ - [`.rchunks_mut()`] yields any leftover bits at the front as a shorter","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396014,"byte_end":396089,"line_start":1072,"line_end":1072,"column_start":2,"column_end":77}},{"value":"/   chunk during iteration.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396091,"byte_end":396120,"line_start":1073,"line_end":1073,"column_start":2,"column_end":31}},{"value":"/ - [`.rchunks_exact()`] has the same division logic, but each yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396122,"byte_end":396194,"line_start":1074,"line_end":1074,"column_start":2,"column_end":74}},{"value":"/   bit-slice is immutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396196,"byte_end":396225,"line_start":1075,"line_end":1075,"column_start":2,"column_end":31}},{"value":"/ - [`.chunks_exact_mut()`] iterates from the front of the bit-slice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396227,"byte_end":396297,"line_start":1076,"line_end":1076,"column_start":2,"column_end":72}},{"value":"/   backwards, with the unyielded remainder segment at the back edge.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396299,"byte_end":396370,"line_start":1077,"line_end":1077,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396372,"byte_end":396375,"line_start":1078,"line_end":1078,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396377,"byte_end":396390,"line_start":1079,"line_end":1079,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396392,"byte_end":396395,"line_start":1080,"line_end":1080,"column_start":2,"column_end":5}},{"value":"/ This panics if `chunk_size` is `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396397,"byte_end":396436,"line_start":1081,"line_end":1081,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396438,"byte_end":396441,"line_start":1082,"line_end":1082,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396443,"byte_end":396458,"line_start":1083,"line_end":1083,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396460,"byte_end":396463,"line_start":1084,"line_end":1084,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396465,"byte_end":396476,"line_start":1085,"line_end":1085,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396478,"byte_end":396505,"line_start":1086,"line_end":1086,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396507,"byte_end":396510,"line_start":1087,"line_end":1087,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut u8, Msb0; 0; 5];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396512,"byte_end":396553,"line_start":1088,"line_end":1088,"column_start":2,"column_end":43}},{"value":"/ let mut iter = bits.rchunks_exact_mut(2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396555,"byte_end":396600,"line_start":1089,"line_end":1089,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396602,"byte_end":396605,"line_start":1090,"line_end":1090,"column_start":2,"column_end":5}},{"value":"/ for (idx, chunk) in iter.by_ref().enumerate() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396607,"byte_end":396658,"line_start":1091,"line_end":1091,"column_start":2,"column_end":53}},{"value":"/   chunk.store(idx + 1);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396660,"byte_end":396687,"line_start":1092,"line_end":1092,"column_start":2,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396689,"byte_end":396694,"line_start":1093,"line_end":1093,"column_start":2,"column_end":7}},{"value":"/ iter.into_remainder().store(1u8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396696,"byte_end":396733,"line_start":1094,"line_end":1094,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396735,"byte_end":396738,"line_start":1095,"line_end":1095,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(bits, bits![1, 1, 0, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396740,"byte_end":396783,"line_start":1096,"line_end":1096,"column_start":2,"column_end":45}},{"value":"/ //           remainder ^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396785,"byte_end":396813,"line_start":1097,"line_end":1097,"column_start":2,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396815,"byte_end":396822,"line_start":1098,"line_end":1098,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396824,"byte_end":396827,"line_start":1099,"line_end":1099,"column_start":2,"column_end":5}},{"value":"/ [`.chunks_exact_mut()`]: Self::chunks_exact_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396829,"byte_end":396880,"line_start":1100,"line_end":1100,"column_start":2,"column_end":53}},{"value":"/ [`.into_remainder()`]: crate::slice::RChunksExactMut::into_remainder","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396882,"byte_end":396954,"line_start":1101,"line_end":1101,"column_start":2,"column_end":74}},{"value":"/ [`.rchunks_exact()`]: Self::rchunks_exact","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":396956,"byte_end":397001,"line_start":1102,"line_end":1102,"column_start":2,"column_end":47}},{"value":"/ [`.rchunks_mut()`]: Self::rchunks_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397003,"byte_end":397044,"line_start":1103,"line_end":1103,"column_start":2,"column_end":43}},{"value":"/ [`.remove_alias()`]: crate::slice::RChunksExactMut::remove_alias","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397046,"byte_end":397114,"line_start":1104,"line_end":1104,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3270},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398578,"byte_end":398586,"line_start":1152,"line_end":1152,"column_start":9,"column_end":17},"name":"split_at","qualname":"<BitSlice<T, O>>::split_at","value":"pub fn split_at(&Self, usize) -> (&Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":" Splits a bit-slice in two parts at an index.","sig":null,"attributes":[{"value":"/ Splits a bit-slice in two parts at an index.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397252,"byte_end":397300,"line_start":1112,"line_end":1112,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397302,"byte_end":397305,"line_start":1113,"line_end":1113,"column_start":2,"column_end":5}},{"value":"/ The returned bit-slices are `self[.. mid]` and `self[mid ..]`. `mid` is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397307,"byte_end":397382,"line_start":1114,"line_end":1114,"column_start":2,"column_end":77}},{"value":"/ included in the right bit-slice, not the left.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397384,"byte_end":397434,"line_start":1115,"line_end":1115,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397436,"byte_end":397439,"line_start":1116,"line_end":1116,"column_start":2,"column_end":5}},{"value":"/ If `mid` is `0` then the left bit-slice is empty; if it is `self.len()`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397441,"byte_end":397516,"line_start":1117,"line_end":1117,"column_start":2,"column_end":77}},{"value":"/ then the right bit-slice is empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397518,"byte_end":397556,"line_start":1118,"line_end":1118,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397558,"byte_end":397561,"line_start":1119,"line_end":1119,"column_start":2,"column_end":5}},{"value":"/ This method guarantees that even when either partition is empty, the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397563,"byte_end":397635,"line_start":1120,"line_end":1120,"column_start":2,"column_end":74}},{"value":"/ encoded bit-pointer values of the bit-slice references is `&self[0]` and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397637,"byte_end":397713,"line_start":1121,"line_end":1121,"column_start":2,"column_end":78}},{"value":"/ `&self[mid]`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397715,"byte_end":397732,"line_start":1122,"line_end":1122,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397734,"byte_end":397737,"line_start":1123,"line_end":1123,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397739,"byte_end":397754,"line_start":1124,"line_end":1124,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397756,"byte_end":397759,"line_start":1125,"line_end":1125,"column_start":2,"column_end":5}},{"value":"/ [`slice::split_at`](https://doc.rust-lang.org/std/primitive.slice.html#method.split_at)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397761,"byte_end":397852,"line_start":1126,"line_end":1126,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397854,"byte_end":397857,"line_start":1127,"line_end":1127,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397859,"byte_end":397872,"line_start":1128,"line_end":1128,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397874,"byte_end":397877,"line_start":1129,"line_end":1129,"column_start":2,"column_end":5}},{"value":"/ This panics if `mid` is greater than `self.len()`. It is allowed to be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397879,"byte_end":397953,"line_start":1130,"line_end":1130,"column_start":2,"column_end":76}},{"value":"/ equal to the length, in which case the right bit-slice is simply empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":397955,"byte_end":398030,"line_start":1131,"line_end":1131,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398032,"byte_end":398035,"line_start":1132,"line_end":1132,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398037,"byte_end":398052,"line_start":1133,"line_end":1133,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398054,"byte_end":398057,"line_start":1134,"line_end":1134,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398059,"byte_end":398070,"line_start":1135,"line_end":1135,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398072,"byte_end":398099,"line_start":1136,"line_end":1136,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398101,"byte_end":398104,"line_start":1137,"line_end":1137,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 0, 0, 1, 1, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398106,"byte_end":398145,"line_start":1138,"line_end":1138,"column_start":2,"column_end":41}},{"value":"/ let base = bits.as_bitptr();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398147,"byte_end":398179,"line_start":1139,"line_end":1139,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398181,"byte_end":398184,"line_start":1140,"line_end":1140,"column_start":2,"column_end":5}},{"value":"/ let (a, b) = bits.split_at(0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398186,"byte_end":398220,"line_start":1141,"line_end":1141,"column_start":2,"column_end":36}},{"value":"/ assert_eq!(unsafe { a.as_bitptr().offset_from(base) }, 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398222,"byte_end":398284,"line_start":1142,"line_end":1142,"column_start":2,"column_end":64}},{"value":"/ assert_eq!(unsafe { b.as_bitptr().offset_from(base) }, 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398286,"byte_end":398348,"line_start":1143,"line_end":1143,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398350,"byte_end":398353,"line_start":1144,"line_end":1144,"column_start":2,"column_end":5}},{"value":"/ let (a, b) = bits.split_at(6);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398355,"byte_end":398389,"line_start":1145,"line_end":1145,"column_start":2,"column_end":36}},{"value":"/ assert_eq!(unsafe { b.as_bitptr().offset_from(base) }, 6);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398391,"byte_end":398453,"line_start":1146,"line_end":1146,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398455,"byte_end":398458,"line_start":1147,"line_end":1147,"column_start":2,"column_end":5}},{"value":"/ let (a, b) = bits.split_at(3);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398460,"byte_end":398494,"line_start":1148,"line_end":1148,"column_start":2,"column_end":36}},{"value":"/ assert_eq!(a, bits![0; 3]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398496,"byte_end":398527,"line_start":1149,"line_end":1149,"column_start":2,"column_end":33}},{"value":"/ assert_eq!(b, bits![1; 3]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398529,"byte_end":398560,"line_start":1150,"line_end":1150,"column_start":2,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398562,"byte_end":398569,"line_start":1151,"line_end":1151,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3271},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400496,"byte_end":400508,"line_start":1207,"line_end":1207,"column_start":9,"column_end":21},"name":"split_at_mut","qualname":"<BitSlice<T, O>>::split_at_mut","value":"pub fn split_at_mut(&mut Self, usize)\n-> (&mut BitSlice<T::Alias, O>, &mut BitSlice<T::Alias, O>)","parent":null,"children":[],"decl_id":null,"docs":" Splits a mutable bit-slice in two parts at an index.","sig":null,"attributes":[{"value":"/ Splits a mutable bit-slice in two parts at an index.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398721,"byte_end":398777,"line_start":1157,"line_end":1157,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398779,"byte_end":398782,"line_start":1158,"line_end":1158,"column_start":2,"column_end":5}},{"value":"/ The returned bit-slices are `self[.. mid]` and `self[mid ..]`. `mid` is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398784,"byte_end":398859,"line_start":1159,"line_end":1159,"column_start":2,"column_end":77}},{"value":"/ included in the right bit-slice, not the left.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398861,"byte_end":398911,"line_start":1160,"line_end":1160,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398913,"byte_end":398916,"line_start":1161,"line_end":1161,"column_start":2,"column_end":5}},{"value":"/ If `mid` is `0` then the left bit-slice is empty; if it is `self.len()`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398918,"byte_end":398993,"line_start":1162,"line_end":1162,"column_start":2,"column_end":77}},{"value":"/ then the right bit-slice is empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":398995,"byte_end":399033,"line_start":1163,"line_end":1163,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399035,"byte_end":399038,"line_start":1164,"line_end":1164,"column_start":2,"column_end":5}},{"value":"/ This method guarantees that even when either partition is empty, the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399040,"byte_end":399112,"line_start":1165,"line_end":1165,"column_start":2,"column_end":74}},{"value":"/ encoded bit-pointer values of the bit-slice references is `&self[0]` and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399114,"byte_end":399190,"line_start":1166,"line_end":1166,"column_start":2,"column_end":78}},{"value":"/ `&self[mid]`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399192,"byte_end":399209,"line_start":1167,"line_end":1167,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399211,"byte_end":399214,"line_start":1168,"line_end":1168,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399216,"byte_end":399231,"line_start":1169,"line_end":1169,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399233,"byte_end":399236,"line_start":1170,"line_end":1170,"column_start":2,"column_end":5}},{"value":"/ [`slice::split_at_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.split_at_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399238,"byte_end":399337,"line_start":1171,"line_end":1171,"column_start":2,"column_end":101}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399339,"byte_end":399342,"line_start":1172,"line_end":1172,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399344,"byte_end":399366,"line_start":1173,"line_end":1173,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399368,"byte_end":399371,"line_start":1174,"line_end":1174,"column_start":2,"column_end":5}},{"value":"/ The end bits of the left half and the start bits of the right half might","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399373,"byte_end":399449,"line_start":1175,"line_end":1175,"column_start":2,"column_end":78}},{"value":"/ be stored in the same memory element. In order to avoid breaking","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399451,"byte_end":399519,"line_start":1176,"line_end":1176,"column_start":2,"column_end":70}},{"value":"/ `bitvec`’s memory-safety guarantees, both bit-slices are marked as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399521,"byte_end":399593,"line_start":1177,"line_end":1177,"column_start":2,"column_end":72}},{"value":"/ `T::Alias`. This marking allows them to be used without interfering with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399595,"byte_end":399671,"line_start":1178,"line_end":1178,"column_start":2,"column_end":78}},{"value":"/ each other when they interact with memory.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399673,"byte_end":399719,"line_start":1179,"line_end":1179,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399721,"byte_end":399724,"line_start":1180,"line_end":1180,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399726,"byte_end":399739,"line_start":1181,"line_end":1181,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399741,"byte_end":399744,"line_start":1182,"line_end":1182,"column_start":2,"column_end":5}},{"value":"/ This panics if `mid` is greater than `self.len()`. It is allowed to be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399746,"byte_end":399820,"line_start":1183,"line_end":1183,"column_start":2,"column_end":76}},{"value":"/ equal to the length, in which case the right bit-slice is simply empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399822,"byte_end":399897,"line_start":1184,"line_end":1184,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399899,"byte_end":399902,"line_start":1185,"line_end":1185,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399904,"byte_end":399919,"line_start":1186,"line_end":1186,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399921,"byte_end":399924,"line_start":1187,"line_end":1187,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399926,"byte_end":399937,"line_start":1188,"line_end":1188,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399939,"byte_end":399966,"line_start":1189,"line_end":1189,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399968,"byte_end":399971,"line_start":1190,"line_end":1190,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut u8, Msb0; 0; 6];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":399973,"byte_end":400014,"line_start":1191,"line_end":1191,"column_start":2,"column_end":43}},{"value":"/ let base = bits.as_mut_bitptr();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400016,"byte_end":400052,"line_start":1192,"line_end":1192,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400054,"byte_end":400057,"line_start":1193,"line_end":1193,"column_start":2,"column_end":5}},{"value":"/ let (a, b) = bits.split_at_mut(0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400059,"byte_end":400097,"line_start":1194,"line_end":1194,"column_start":2,"column_end":40}},{"value":"/ assert_eq!(unsafe { a.as_mut_bitptr().offset_from(base) }, 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400099,"byte_end":400165,"line_start":1195,"line_end":1195,"column_start":2,"column_end":68}},{"value":"/ assert_eq!(unsafe { b.as_mut_bitptr().offset_from(base) }, 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400167,"byte_end":400233,"line_start":1196,"line_end":1196,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400235,"byte_end":400238,"line_start":1197,"line_end":1197,"column_start":2,"column_end":5}},{"value":"/ let (a, b) = bits.split_at_mut(6);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400240,"byte_end":400278,"line_start":1198,"line_end":1198,"column_start":2,"column_end":40}},{"value":"/ assert_eq!(unsafe { b.as_mut_bitptr().offset_from(base) }, 6);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400280,"byte_end":400346,"line_start":1199,"line_end":1199,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400348,"byte_end":400351,"line_start":1200,"line_end":1200,"column_start":2,"column_end":5}},{"value":"/ let (a, b) = bits.split_at_mut(3);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400353,"byte_end":400391,"line_start":1201,"line_end":1201,"column_start":2,"column_end":40}},{"value":"/ a.store(3);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400393,"byte_end":400408,"line_start":1202,"line_end":1202,"column_start":2,"column_end":17}},{"value":"/ b.store(5);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400410,"byte_end":400425,"line_start":1203,"line_end":1203,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400427,"byte_end":400430,"line_start":1204,"line_end":1204,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(bits, bits![0, 1, 1, 1, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400432,"byte_end":400478,"line_start":1205,"line_end":1205,"column_start":2,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400480,"byte_end":400487,"line_start":1206,"line_end":1206,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3272},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403103,"byte_end":403108,"line_start":1289,"line_end":1289,"column_start":9,"column_end":14},"name":"split","qualname":"<BitSlice<T, O>>::split","value":"pub fn split<F>(&Self, F) -> Split<, T, O, F> where F: FnMut(usize, &bool) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Iterates over subslices separated by bits that match a predicate. The\n matched bit is *not* contained in the yielded bit-slices.","sig":null,"attributes":[{"value":"/ Iterates over subslices separated by bits that match a predicate. The","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400701,"byte_end":400774,"line_start":1215,"line_end":1215,"column_start":2,"column_end":75}},{"value":"/ matched bit is *not* contained in the yielded bit-slices.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400776,"byte_end":400837,"line_start":1216,"line_end":1216,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400839,"byte_end":400842,"line_start":1217,"line_end":1217,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400844,"byte_end":400859,"line_start":1218,"line_end":1218,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400861,"byte_end":400864,"line_start":1219,"line_end":1219,"column_start":2,"column_end":5}},{"value":"/ [`slice::split`](https://doc.rust-lang.org/std/primitive.slice.html#method.split)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400866,"byte_end":400951,"line_start":1220,"line_end":1220,"column_start":2,"column_end":87}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400953,"byte_end":400956,"line_start":1221,"line_end":1221,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400958,"byte_end":400980,"line_start":1222,"line_end":1222,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400982,"byte_end":400985,"line_start":1223,"line_end":1223,"column_start":2,"column_end":5}},{"value":"/ The predicate function receives the index being tested as well as the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":400987,"byte_end":401060,"line_start":1224,"line_end":1224,"column_start":2,"column_end":75}},{"value":"/ bit value at that index. This allows the predicate to have more than one","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401062,"byte_end":401138,"line_start":1225,"line_end":1225,"column_start":2,"column_end":78}},{"value":"/ bit of information about the bit-slice being traversed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401140,"byte_end":401199,"line_start":1226,"line_end":1226,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401201,"byte_end":401204,"line_start":1227,"line_end":1227,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401206,"byte_end":401228,"line_start":1228,"line_end":1228,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401230,"byte_end":401233,"line_start":1229,"line_end":1229,"column_start":2,"column_end":5}},{"value":"/ - [`.split_mut()`] has the same splitting logic, but each yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401235,"byte_end":401304,"line_start":1230,"line_end":1230,"column_start":2,"column_end":71}},{"value":"/   bit-slice is mutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401306,"byte_end":401333,"line_start":1231,"line_end":1231,"column_start":2,"column_end":29}},{"value":"/ - [`.split_inclusive()`] includes the matched bit in the yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401335,"byte_end":401403,"line_start":1232,"line_end":1232,"column_start":2,"column_end":70}},{"value":"/   bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401405,"byte_end":401421,"line_start":1233,"line_end":1233,"column_start":2,"column_end":18}},{"value":"/ - [`.rsplit()`] iterates from the back of the bit-slice instead of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401423,"byte_end":401497,"line_start":1234,"line_end":1234,"column_start":2,"column_end":76}},{"value":"/   front.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401499,"byte_end":401511,"line_start":1235,"line_end":1235,"column_start":2,"column_end":14}},{"value":"/ - [`.splitn()`] times out after `n` yields.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401513,"byte_end":401560,"line_start":1236,"line_end":1236,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401562,"byte_end":401565,"line_start":1237,"line_end":1237,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401567,"byte_end":401582,"line_start":1238,"line_end":1238,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401584,"byte_end":401587,"line_start":1239,"line_end":1239,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401589,"byte_end":401600,"line_start":1240,"line_end":1240,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401602,"byte_end":401629,"line_start":1241,"line_end":1241,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401631,"byte_end":401634,"line_start":1242,"line_end":1242,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 1, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401636,"byte_end":401669,"line_start":1243,"line_end":1243,"column_start":2,"column_end":35}},{"value":"/ //                     ^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401671,"byte_end":401699,"line_start":1244,"line_end":1244,"column_start":2,"column_end":30}},{"value":"/ let mut iter = bits.split(|pos, _bit| pos % 3 == 2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401701,"byte_end":401757,"line_start":1245,"line_end":1245,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401759,"byte_end":401762,"line_start":1246,"line_end":1246,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.next().unwrap(), bits![0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401764,"byte_end":401814,"line_start":1247,"line_end":1247,"column_start":2,"column_end":52}},{"value":"/ assert_eq!(iter.next().unwrap(), bits![0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401816,"byte_end":401863,"line_start":1248,"line_end":1248,"column_start":2,"column_end":49}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401865,"byte_end":401900,"line_start":1249,"line_end":1249,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401902,"byte_end":401909,"line_start":1250,"line_end":1250,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401911,"byte_end":401914,"line_start":1251,"line_end":1251,"column_start":2,"column_end":5}},{"value":"/ If the first bit is matched, then an empty bit-slice will be the first","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401916,"byte_end":401990,"line_start":1252,"line_end":1252,"column_start":2,"column_end":76}},{"value":"/ item yielded by the iterator. Similarly, if the last bit in the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":401992,"byte_end":402059,"line_start":1253,"line_end":1253,"column_start":2,"column_end":69}},{"value":"/ bit-slice matches, then an empty bit-slice will be the last item","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402061,"byte_end":402129,"line_start":1254,"line_end":1254,"column_start":2,"column_end":70}},{"value":"/ yielded.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402131,"byte_end":402143,"line_start":1255,"line_end":1255,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402145,"byte_end":402148,"line_start":1256,"line_end":1256,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402150,"byte_end":402161,"line_start":1257,"line_end":1257,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402163,"byte_end":402190,"line_start":1258,"line_end":1258,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402192,"byte_end":402195,"line_start":1259,"line_end":1259,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402197,"byte_end":402227,"line_start":1260,"line_end":1260,"column_start":2,"column_end":32}},{"value":"/ //                     ^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402229,"byte_end":402257,"line_start":1261,"line_end":1261,"column_start":2,"column_end":30}},{"value":"/ let mut iter = bits.split(|_pos, bit| *bit);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402259,"byte_end":402307,"line_start":1262,"line_end":1262,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402309,"byte_end":402312,"line_start":1263,"line_end":1263,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.next().unwrap(), bits![0; 2]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402314,"byte_end":402364,"line_start":1264,"line_end":1264,"column_start":2,"column_end":52}},{"value":"/ assert!(iter.next().unwrap().is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402366,"byte_end":402411,"line_start":1265,"line_end":1265,"column_start":2,"column_end":47}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402413,"byte_end":402448,"line_start":1266,"line_end":1266,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402450,"byte_end":402457,"line_start":1267,"line_end":1267,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402459,"byte_end":402462,"line_start":1268,"line_end":1268,"column_start":2,"column_end":5}},{"value":"/ If two matched bits are directly adjacent, then an empty bit-slice will","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402464,"byte_end":402539,"line_start":1269,"line_end":1269,"column_start":2,"column_end":77}},{"value":"/ be yielded between them:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402541,"byte_end":402569,"line_start":1270,"line_end":1270,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402571,"byte_end":402574,"line_start":1271,"line_end":1271,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402576,"byte_end":402587,"line_start":1272,"line_end":1272,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402589,"byte_end":402616,"line_start":1273,"line_end":1273,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402618,"byte_end":402621,"line_start":1274,"line_end":1274,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402623,"byte_end":402656,"line_start":1275,"line_end":1275,"column_start":2,"column_end":35}},{"value":"/ //                  ^  ^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402658,"byte_end":402686,"line_start":1276,"line_end":1276,"column_start":2,"column_end":30}},{"value":"/ let mut iter = bits.split(|_pos, bit| !*bit);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402688,"byte_end":402737,"line_start":1277,"line_end":1277,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402739,"byte_end":402742,"line_start":1278,"line_end":1278,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.next().unwrap(), bits![1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402744,"byte_end":402791,"line_start":1279,"line_end":1279,"column_start":2,"column_end":49}},{"value":"/ assert!(iter.next().unwrap().is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402793,"byte_end":402838,"line_start":1280,"line_end":1280,"column_start":2,"column_end":47}},{"value":"/ assert_eq!(iter.next().unwrap(), bits![1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402840,"byte_end":402887,"line_start":1281,"line_end":1281,"column_start":2,"column_end":49}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402889,"byte_end":402924,"line_start":1282,"line_end":1282,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402926,"byte_end":402933,"line_start":1283,"line_end":1283,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402935,"byte_end":402938,"line_start":1284,"line_end":1284,"column_start":2,"column_end":5}},{"value":"/ [`.rsplit()`]: Self::rsplit","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402940,"byte_end":402971,"line_start":1285,"line_end":1285,"column_start":2,"column_end":33}},{"value":"/ [`.splitn()`]: Self::splitn","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":402973,"byte_end":403004,"line_start":1286,"line_end":1286,"column_start":2,"column_end":33}},{"value":"/ [`.split_inclusive()`]: Self::split_inclusive","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403006,"byte_end":403055,"line_start":1287,"line_end":1287,"column_start":2,"column_end":51}},{"value":"/ [`.split_mut()`]: Self::split_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403057,"byte_end":403094,"line_start":1288,"line_end":1288,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3274},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405053,"byte_end":405062,"line_start":1342,"line_end":1342,"column_start":9,"column_end":18},"name":"split_mut","qualname":"<BitSlice<T, O>>::split_mut","value":"pub fn split_mut<F>(&mut Self, F) -> SplitMut<, T, O, F> where\nF: FnMut(usize, &bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Iterates over mutable subslices separated by bits that match a\n predicate. The matched bit is *not* contained in the yielded bit-slices.","sig":null,"attributes":[{"value":"/ Iterates over mutable subslices separated by bits that match a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403216,"byte_end":403282,"line_start":1294,"line_end":1294,"column_start":2,"column_end":68}},{"value":"/ predicate. The matched bit is *not* contained in the yielded bit-slices.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403284,"byte_end":403360,"line_start":1295,"line_end":1295,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403362,"byte_end":403365,"line_start":1296,"line_end":1296,"column_start":2,"column_end":5}},{"value":"/ Iterators do not require that each yielded item is destroyed before the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403367,"byte_end":403442,"line_start":1297,"line_end":1297,"column_start":2,"column_end":77}},{"value":"/ next is produced. This means that each bit-slice yielded must be marked","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403444,"byte_end":403519,"line_start":1298,"line_end":1298,"column_start":2,"column_end":77}},{"value":"/ as aliased. If you are using this in a loop that does not collect","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403521,"byte_end":403590,"line_start":1299,"line_end":1299,"column_start":2,"column_end":71}},{"value":"/ multiple yielded subslices for the same scope, then you can remove the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403592,"byte_end":403666,"line_start":1300,"line_end":1300,"column_start":2,"column_end":76}},{"value":"/ alias marking by calling the (`unsafe`) method [`.remove_alias()`] on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403668,"byte_end":403741,"line_start":1301,"line_end":1301,"column_start":2,"column_end":75}},{"value":"/ the iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403743,"byte_end":403760,"line_start":1302,"line_end":1302,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403762,"byte_end":403765,"line_start":1303,"line_end":1303,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403767,"byte_end":403782,"line_start":1304,"line_end":1304,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403784,"byte_end":403787,"line_start":1305,"line_end":1305,"column_start":2,"column_end":5}},{"value":"/ [`slice::split_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.split_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403789,"byte_end":403882,"line_start":1306,"line_end":1306,"column_start":2,"column_end":95}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403884,"byte_end":403887,"line_start":1307,"line_end":1307,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403889,"byte_end":403911,"line_start":1308,"line_end":1308,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403913,"byte_end":403916,"line_start":1309,"line_end":1309,"column_start":2,"column_end":5}},{"value":"/ The predicate function receives the index being tested as well as the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403918,"byte_end":403991,"line_start":1310,"line_end":1310,"column_start":2,"column_end":75}},{"value":"/ bit value at that index. This allows the predicate to have more than one","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":403993,"byte_end":404069,"line_start":1311,"line_end":1311,"column_start":2,"column_end":78}},{"value":"/ bit of information about the bit-slice being traversed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404071,"byte_end":404130,"line_start":1312,"line_end":1312,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404132,"byte_end":404135,"line_start":1313,"line_end":1313,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404137,"byte_end":404159,"line_start":1314,"line_end":1314,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404161,"byte_end":404164,"line_start":1315,"line_end":1315,"column_start":2,"column_end":5}},{"value":"/ - [`.split()`] has the same splitting logic, but each yielded bit-slice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404166,"byte_end":404241,"line_start":1316,"line_end":1316,"column_start":2,"column_end":77}},{"value":"/   is immutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404243,"byte_end":404262,"line_start":1317,"line_end":1317,"column_start":2,"column_end":21}},{"value":"/ - [`.split_inclusive_mut()`] includes the matched bit in the yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404264,"byte_end":404336,"line_start":1318,"line_end":1318,"column_start":2,"column_end":74}},{"value":"/   bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404338,"byte_end":404354,"line_start":1319,"line_end":1319,"column_start":2,"column_end":18}},{"value":"/ - [`.rsplit_mut()`] iterates from the back of the bit-slice instead of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404356,"byte_end":404430,"line_start":1320,"line_end":1320,"column_start":2,"column_end":76}},{"value":"/   the front.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404432,"byte_end":404448,"line_start":1321,"line_end":1321,"column_start":2,"column_end":18}},{"value":"/ - [`.splitn_mut()`] times out after `n` yields.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404450,"byte_end":404501,"line_start":1322,"line_end":1322,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404503,"byte_end":404506,"line_start":1323,"line_end":1323,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404508,"byte_end":404523,"line_start":1324,"line_end":1324,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404525,"byte_end":404528,"line_start":1325,"line_end":1325,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404530,"byte_end":404541,"line_start":1326,"line_end":1326,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404543,"byte_end":404570,"line_start":1327,"line_end":1327,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404572,"byte_end":404575,"line_start":1328,"line_end":1328,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0, 0, 1, 0, 1, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404577,"byte_end":404620,"line_start":1329,"line_end":1329,"column_start":2,"column_end":45}},{"value":"/ //                         ^     ^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404622,"byte_end":404660,"line_start":1330,"line_end":1330,"column_start":2,"column_end":40}},{"value":"/ for group in bits.split_mut(|_pos, bit| *bit) {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404662,"byte_end":404713,"line_start":1331,"line_end":1331,"column_start":2,"column_end":53}},{"value":"/   group.set(0, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404715,"byte_end":404740,"line_start":1332,"line_end":1332,"column_start":2,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404742,"byte_end":404747,"line_start":1333,"line_end":1333,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(bits, bits![1, 0, 1, 1, 1, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404749,"byte_end":404795,"line_start":1334,"line_end":1334,"column_start":2,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404797,"byte_end":404804,"line_start":1335,"line_end":1335,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404806,"byte_end":404809,"line_start":1336,"line_end":1336,"column_start":2,"column_end":5}},{"value":"/ [`.remove_alias()`]: crate::slice::SplitMut::remove_alias","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404811,"byte_end":404872,"line_start":1337,"line_end":1337,"column_start":2,"column_end":63}},{"value":"/ [`.rsplit_mut()`]: Self::rsplit_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404874,"byte_end":404913,"line_start":1338,"line_end":1338,"column_start":2,"column_end":41}},{"value":"/ [`.split()`]: Self::split","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404915,"byte_end":404944,"line_start":1339,"line_end":1339,"column_start":2,"column_end":31}},{"value":"/ [`.split_inclusive_mut()`]: Self::split_inclusive_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":404946,"byte_end":405003,"line_start":1340,"line_end":1340,"column_start":2,"column_end":59}},{"value":"/ [`.splitn_mut()`]: Self::splitn_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405005,"byte_end":405044,"line_start":1341,"line_end":1341,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406451,"byte_end":406466,"line_start":1384,"line_end":1384,"column_start":9,"column_end":24},"name":"split_inclusive","qualname":"<BitSlice<T, O>>::split_inclusive","value":"pub fn split_inclusive<F>(&Self, F) -> SplitInclusive<, T, O, F> where\nF: FnMut(usize, &bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Iterates over subslices separated by bits that match a predicate. Unlike\n `.split()`, this *does* include the matching bit as the last bit in the\n yielded bit-slice.","sig":null,"attributes":[{"value":"/ Iterates over subslices separated by bits that match a predicate. Unlike","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405192,"byte_end":405268,"line_start":1347,"line_end":1347,"column_start":2,"column_end":78}},{"value":"/ `.split()`, this *does* include the matching bit as the last bit in the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405270,"byte_end":405345,"line_start":1348,"line_end":1348,"column_start":2,"column_end":77}},{"value":"/ yielded bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405347,"byte_end":405369,"line_start":1349,"line_end":1349,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405371,"byte_end":405374,"line_start":1350,"line_end":1350,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405376,"byte_end":405391,"line_start":1351,"line_end":1351,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405393,"byte_end":405396,"line_start":1352,"line_end":1352,"column_start":2,"column_end":5}},{"value":"/ [`slice::split_inclusive`](https://doc.rust-lang.org/std/primitive.slice.html#method.split_inclusive)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405398,"byte_end":405503,"line_start":1353,"line_end":1353,"column_start":2,"column_end":107}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405505,"byte_end":405508,"line_start":1354,"line_end":1354,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405510,"byte_end":405532,"line_start":1355,"line_end":1355,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405534,"byte_end":405537,"line_start":1356,"line_end":1356,"column_start":2,"column_end":5}},{"value":"/ The predicate function receives the index being tested as well as the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405539,"byte_end":405612,"line_start":1357,"line_end":1357,"column_start":2,"column_end":75}},{"value":"/ bit value at that index. This allows the predicate to have more than one","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405614,"byte_end":405690,"line_start":1358,"line_end":1358,"column_start":2,"column_end":78}},{"value":"/ bit of information about the bit-slice being traversed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405692,"byte_end":405751,"line_start":1359,"line_end":1359,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405753,"byte_end":405756,"line_start":1360,"line_end":1360,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405758,"byte_end":405780,"line_start":1361,"line_end":1361,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405782,"byte_end":405785,"line_start":1362,"line_end":1362,"column_start":2,"column_end":5}},{"value":"/ - [`.split_inclusive_mut()`] has the same splitting logic, but each","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405787,"byte_end":405858,"line_start":1363,"line_end":1363,"column_start":2,"column_end":73}},{"value":"/   yielded bit-slice is mutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405860,"byte_end":405895,"line_start":1364,"line_end":1364,"column_start":2,"column_end":37}},{"value":"/ - [`.split()`] does not include the matched bit in the yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405897,"byte_end":405963,"line_start":1365,"line_end":1365,"column_start":2,"column_end":68}},{"value":"/   bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405965,"byte_end":405981,"line_start":1366,"line_end":1366,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405983,"byte_end":405986,"line_start":1367,"line_end":1367,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":405988,"byte_end":406003,"line_start":1368,"line_end":1368,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406005,"byte_end":406008,"line_start":1369,"line_end":1369,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406010,"byte_end":406021,"line_start":1370,"line_end":1370,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406023,"byte_end":406050,"line_start":1371,"line_end":1371,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406052,"byte_end":406055,"line_start":1372,"line_end":1372,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 0, 1, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406057,"byte_end":406093,"line_start":1373,"line_end":1373,"column_start":2,"column_end":38}},{"value":"/ //                     ^     ^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406095,"byte_end":406129,"line_start":1374,"line_end":1374,"column_start":2,"column_end":36}},{"value":"/ let mut iter = bits.split_inclusive(|_pos, bit| *bit);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406131,"byte_end":406189,"line_start":1375,"line_end":1375,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406191,"byte_end":406194,"line_start":1376,"line_end":1376,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.next().unwrap(), bits![0, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406196,"byte_end":406249,"line_start":1377,"line_end":1377,"column_start":2,"column_end":55}},{"value":"/ assert_eq!(iter.next().unwrap(), bits![0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406251,"byte_end":406301,"line_start":1378,"line_end":1378,"column_start":2,"column_end":52}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406303,"byte_end":406338,"line_start":1379,"line_end":1379,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406340,"byte_end":406347,"line_start":1380,"line_end":1380,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406349,"byte_end":406352,"line_start":1381,"line_end":1381,"column_start":2,"column_end":5}},{"value":"/ [`.split()`]: Self::split","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406354,"byte_end":406383,"line_start":1382,"line_end":1382,"column_start":2,"column_end":31}},{"value":"/ [`.split_inclusive_mut()`]: Self::split_inclusive_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406385,"byte_end":406442,"line_start":1383,"line_end":1383,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3278},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408280,"byte_end":408299,"line_start":1433,"line_end":1433,"column_start":9,"column_end":28},"name":"split_inclusive_mut","qualname":"<BitSlice<T, O>>::split_inclusive_mut","value":"pub fn split_inclusive_mut<F>(&mut Self, F) -> SplitInclusiveMut<, T, O, F>\nwhere F: FnMut(usize, &bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Iterates over mutable subslices separated by bits that match a\n predicate. Unlike `.split_mut()`, this *does* include the matching bit\n as the last bit in the bit-slice.","sig":null,"attributes":[{"value":"/ Iterates over mutable subslices separated by bits that match a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406592,"byte_end":406658,"line_start":1389,"line_end":1389,"column_start":2,"column_end":68}},{"value":"/ predicate. Unlike `.split_mut()`, this *does* include the matching bit","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406660,"byte_end":406734,"line_start":1390,"line_end":1390,"column_start":2,"column_end":76}},{"value":"/ as the last bit in the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406736,"byte_end":406773,"line_start":1391,"line_end":1391,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406775,"byte_end":406778,"line_start":1392,"line_end":1392,"column_start":2,"column_end":5}},{"value":"/ Iterators do not require that each yielded item is destroyed before the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406780,"byte_end":406855,"line_start":1393,"line_end":1393,"column_start":2,"column_end":77}},{"value":"/ next is produced. This means that each bit-slice yielded must be marked","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406857,"byte_end":406932,"line_start":1394,"line_end":1394,"column_start":2,"column_end":77}},{"value":"/ as aliased. If you are using this in a loop that does not collect","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":406934,"byte_end":407003,"line_start":1395,"line_end":1395,"column_start":2,"column_end":71}},{"value":"/ multiple yielded subslices for the same scope, then you can remove the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407005,"byte_end":407079,"line_start":1396,"line_end":1396,"column_start":2,"column_end":76}},{"value":"/ alias marking by calling the (`unsafe`) method [`.remove_alias()`] on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407081,"byte_end":407154,"line_start":1397,"line_end":1397,"column_start":2,"column_end":75}},{"value":"/ the iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407156,"byte_end":407173,"line_start":1398,"line_end":1398,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407175,"byte_end":407178,"line_start":1399,"line_end":1399,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407180,"byte_end":407195,"line_start":1400,"line_end":1400,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407197,"byte_end":407200,"line_start":1401,"line_end":1401,"column_start":2,"column_end":5}},{"value":"/ [`slice::split_inclusive_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.split_inclusive_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407202,"byte_end":407315,"line_start":1402,"line_end":1402,"column_start":2,"column_end":115}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407317,"byte_end":407320,"line_start":1403,"line_end":1403,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407322,"byte_end":407344,"line_start":1404,"line_end":1404,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407346,"byte_end":407349,"line_start":1405,"line_end":1405,"column_start":2,"column_end":5}},{"value":"/ The predicate function receives the index being tested as well as the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407351,"byte_end":407424,"line_start":1406,"line_end":1406,"column_start":2,"column_end":75}},{"value":"/ bit value at that index. This allows the predicate to have more than one","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407426,"byte_end":407502,"line_start":1407,"line_end":1407,"column_start":2,"column_end":78}},{"value":"/ bit of information about the bit-slice being traversed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407504,"byte_end":407563,"line_start":1408,"line_end":1408,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407565,"byte_end":407568,"line_start":1409,"line_end":1409,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407570,"byte_end":407592,"line_start":1410,"line_end":1410,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407594,"byte_end":407597,"line_start":1411,"line_end":1411,"column_start":2,"column_end":5}},{"value":"/ - [`.split_inclusive()`] has the same splitting logic, but each yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407599,"byte_end":407674,"line_start":1412,"line_end":1412,"column_start":2,"column_end":77}},{"value":"/   bit-slice is immutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407676,"byte_end":407705,"line_start":1413,"line_end":1413,"column_start":2,"column_end":31}},{"value":"/ - [`.split_mut()`] does not include the matched bit in the yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407707,"byte_end":407777,"line_start":1414,"line_end":1414,"column_start":2,"column_end":72}},{"value":"/   bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407779,"byte_end":407795,"line_start":1415,"line_end":1415,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407797,"byte_end":407800,"line_start":1416,"line_end":1416,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407802,"byte_end":407817,"line_start":1417,"line_end":1417,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407819,"byte_end":407822,"line_start":1418,"line_end":1418,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407824,"byte_end":407835,"line_start":1419,"line_end":1419,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407837,"byte_end":407864,"line_start":1420,"line_end":1420,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407866,"byte_end":407869,"line_start":1421,"line_end":1421,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0, 0, 0, 0, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407871,"byte_end":407911,"line_start":1422,"line_end":1422,"column_start":2,"column_end":42}},{"value":"/ //                         ^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407913,"byte_end":407945,"line_start":1423,"line_end":1423,"column_start":2,"column_end":34}},{"value":"/ for group in bits.split_inclusive_mut(|pos, _bit| pos % 3 == 2) {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":407947,"byte_end":408016,"line_start":1424,"line_end":1424,"column_start":2,"column_end":71}},{"value":"/   group.set(0, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408018,"byte_end":408043,"line_start":1425,"line_end":1425,"column_start":2,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408045,"byte_end":408050,"line_start":1426,"line_end":1426,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(bits, bits![1, 0, 0, 1, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408052,"byte_end":408095,"line_start":1427,"line_end":1427,"column_start":2,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408097,"byte_end":408104,"line_start":1428,"line_end":1428,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408106,"byte_end":408109,"line_start":1429,"line_end":1429,"column_start":2,"column_end":5}},{"value":"/ [`.remove_alias()`]: crate::slice::SplitInclusiveMut::remove_alias","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408111,"byte_end":408181,"line_start":1430,"line_end":1430,"column_start":2,"column_end":72}},{"value":"/ [`.split_inclusive()`]: Self::split_inclusive","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408183,"byte_end":408232,"line_start":1431,"line_end":1431,"column_start":2,"column_end":51}},{"value":"/ [`.split_mut()`]: Self::split_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408234,"byte_end":408271,"line_start":1432,"line_end":1432,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3280},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410754,"byte_end":410760,"line_start":1515,"line_end":1515,"column_start":9,"column_end":15},"name":"rsplit","qualname":"<BitSlice<T, O>>::rsplit","value":"pub fn rsplit<F>(&Self, F) -> RSplit<, T, O, F> where F: FnMut(usize, &bool)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Iterates over subslices separated by bits that match a predicate, from\n the back edge. The matched bit is *not* contained in the yielded\n bit-slices.","sig":null,"attributes":[{"value":"/ Iterates over subslices separated by bits that match a predicate, from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408459,"byte_end":408533,"line_start":1443,"line_end":1443,"column_start":2,"column_end":76}},{"value":"/ the back edge. The matched bit is *not* contained in the yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408535,"byte_end":408603,"line_start":1444,"line_end":1444,"column_start":2,"column_end":70}},{"value":"/ bit-slices.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408605,"byte_end":408620,"line_start":1445,"line_end":1445,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408622,"byte_end":408625,"line_start":1446,"line_end":1446,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408627,"byte_end":408642,"line_start":1447,"line_end":1447,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408644,"byte_end":408647,"line_start":1448,"line_end":1448,"column_start":2,"column_end":5}},{"value":"/ [`slice::rsplit`](https://doc.rust-lang.org/std/primitive.slice.html#method.rsplit)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408649,"byte_end":408736,"line_start":1449,"line_end":1449,"column_start":2,"column_end":89}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408738,"byte_end":408741,"line_start":1450,"line_end":1450,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408743,"byte_end":408765,"line_start":1451,"line_end":1451,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408767,"byte_end":408770,"line_start":1452,"line_end":1452,"column_start":2,"column_end":5}},{"value":"/ The predicate function receives the index being tested as well as the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408772,"byte_end":408845,"line_start":1453,"line_end":1453,"column_start":2,"column_end":75}},{"value":"/ bit value at that index. This allows the predicate to have more than one","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408847,"byte_end":408923,"line_start":1454,"line_end":1454,"column_start":2,"column_end":78}},{"value":"/ bit of information about the bit-slice being traversed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408925,"byte_end":408984,"line_start":1455,"line_end":1455,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408986,"byte_end":408989,"line_start":1456,"line_end":1456,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":408991,"byte_end":409013,"line_start":1457,"line_end":1457,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409015,"byte_end":409018,"line_start":1458,"line_end":1458,"column_start":2,"column_end":5}},{"value":"/ - [`.rsplit_mut()`] has the same splitting logic, but each yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409020,"byte_end":409090,"line_start":1459,"line_end":1459,"column_start":2,"column_end":72}},{"value":"/   bit-slice is mutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409092,"byte_end":409119,"line_start":1460,"line_end":1460,"column_start":2,"column_end":29}},{"value":"/ - [`.split()`] iterates from the front of the bit-slice instead of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409121,"byte_end":409195,"line_start":1461,"line_end":1461,"column_start":2,"column_end":76}},{"value":"/   back.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409197,"byte_end":409208,"line_start":1462,"line_end":1462,"column_start":2,"column_end":13}},{"value":"/ - [`.rsplitn()`] times out after `n` yields.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409210,"byte_end":409258,"line_start":1463,"line_end":1463,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409260,"byte_end":409263,"line_start":1464,"line_end":1464,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409265,"byte_end":409280,"line_start":1465,"line_end":1465,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409282,"byte_end":409285,"line_start":1466,"line_end":1466,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409287,"byte_end":409298,"line_start":1467,"line_end":1467,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409300,"byte_end":409327,"line_start":1468,"line_end":1468,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409329,"byte_end":409332,"line_start":1469,"line_end":1469,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 1, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409334,"byte_end":409367,"line_start":1470,"line_end":1470,"column_start":2,"column_end":35}},{"value":"/ //                     ^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409369,"byte_end":409397,"line_start":1471,"line_end":1471,"column_start":2,"column_end":30}},{"value":"/ let mut iter = bits.rsplit(|pos, _bit| pos % 3 == 2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409399,"byte_end":409456,"line_start":1472,"line_end":1472,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409458,"byte_end":409461,"line_start":1473,"line_end":1473,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.next().unwrap(), bits![0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409463,"byte_end":409510,"line_start":1474,"line_end":1474,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(iter.next().unwrap(), bits![0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409512,"byte_end":409562,"line_start":1475,"line_end":1475,"column_start":2,"column_end":52}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409564,"byte_end":409599,"line_start":1476,"line_end":1476,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409601,"byte_end":409608,"line_start":1477,"line_end":1477,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409610,"byte_end":409613,"line_start":1478,"line_end":1478,"column_start":2,"column_end":5}},{"value":"/ If the last bit is matched, then an empty bit-slice will be the first","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409615,"byte_end":409688,"line_start":1479,"line_end":1479,"column_start":2,"column_end":75}},{"value":"/ item yielded by the iterator. Similarly, if the first bit in the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409690,"byte_end":409758,"line_start":1480,"line_end":1480,"column_start":2,"column_end":70}},{"value":"/ bit-slice matches, then an empty bit-slice will be the last item","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409760,"byte_end":409828,"line_start":1481,"line_end":1481,"column_start":2,"column_end":70}},{"value":"/ yielded.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409830,"byte_end":409842,"line_start":1482,"line_end":1482,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409844,"byte_end":409847,"line_start":1483,"line_end":1483,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409849,"byte_end":409860,"line_start":1484,"line_end":1484,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409862,"byte_end":409889,"line_start":1485,"line_end":1485,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409891,"byte_end":409894,"line_start":1486,"line_end":1486,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409896,"byte_end":409926,"line_start":1487,"line_end":1487,"column_start":2,"column_end":32}},{"value":"/ //                     ^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409928,"byte_end":409956,"line_start":1488,"line_end":1488,"column_start":2,"column_end":30}},{"value":"/ let mut iter = bits.rsplit(|_pos, bit| *bit);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":409958,"byte_end":410007,"line_start":1489,"line_end":1489,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410009,"byte_end":410012,"line_start":1490,"line_end":1490,"column_start":2,"column_end":5}},{"value":"/ assert!(iter.next().unwrap().is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410014,"byte_end":410059,"line_start":1491,"line_end":1491,"column_start":2,"column_end":47}},{"value":"/ assert_eq!(iter.next().unwrap(), bits![0; 2]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410061,"byte_end":410111,"line_start":1492,"line_end":1492,"column_start":2,"column_end":52}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410113,"byte_end":410148,"line_start":1493,"line_end":1493,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410150,"byte_end":410157,"line_start":1494,"line_end":1494,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410159,"byte_end":410162,"line_start":1495,"line_end":1495,"column_start":2,"column_end":5}},{"value":"/ If two yielded bits are directly adjacent, then an empty bit-slice will","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410164,"byte_end":410239,"line_start":1496,"line_end":1496,"column_start":2,"column_end":77}},{"value":"/ be yielded between them:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410241,"byte_end":410269,"line_start":1497,"line_end":1497,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410271,"byte_end":410274,"line_start":1498,"line_end":1498,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410276,"byte_end":410287,"line_start":1499,"line_end":1499,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410289,"byte_end":410316,"line_start":1500,"line_end":1500,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410318,"byte_end":410321,"line_start":1501,"line_end":1501,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410323,"byte_end":410356,"line_start":1502,"line_end":1502,"column_start":2,"column_end":35}},{"value":"/ //                  ^  ^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410358,"byte_end":410386,"line_start":1503,"line_end":1503,"column_start":2,"column_end":30}},{"value":"/ let mut iter = bits.split(|_pos, bit| !*bit);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410388,"byte_end":410437,"line_start":1504,"line_end":1504,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410439,"byte_end":410442,"line_start":1505,"line_end":1505,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.next().unwrap(), bits![1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410444,"byte_end":410491,"line_start":1506,"line_end":1506,"column_start":2,"column_end":49}},{"value":"/ assert!(iter.next().unwrap().is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410493,"byte_end":410538,"line_start":1507,"line_end":1507,"column_start":2,"column_end":47}},{"value":"/ assert_eq!(iter.next().unwrap(), bits![1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410540,"byte_end":410587,"line_start":1508,"line_end":1508,"column_start":2,"column_end":49}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410589,"byte_end":410624,"line_start":1509,"line_end":1509,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410626,"byte_end":410633,"line_start":1510,"line_end":1510,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410635,"byte_end":410638,"line_start":1511,"line_end":1511,"column_start":2,"column_end":5}},{"value":"/ [`.rsplitn()`]: Self::rsplitn","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410640,"byte_end":410673,"line_start":1512,"line_end":1512,"column_start":2,"column_end":35}},{"value":"/ [`.rsplit_mut()`]: Self::rsplit_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410675,"byte_end":410714,"line_start":1513,"line_end":1513,"column_start":2,"column_end":41}},{"value":"/ [`.split()`]: Self::split","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410716,"byte_end":410745,"line_start":1514,"line_end":1514,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3282},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412601,"byte_end":412611,"line_start":1566,"line_end":1566,"column_start":9,"column_end":19},"name":"rsplit_mut","qualname":"<BitSlice<T, O>>::rsplit_mut","value":"pub fn rsplit_mut<F>(&mut Self, F) -> RSplitMut<, T, O, F> where\nF: FnMut(usize, &bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Iterates over mutable subslices separated by bits that match a\n predicate, from the back. The matched bit is *not* contained in the\n yielded bit-slices.","sig":null,"attributes":[{"value":"/ Iterates over mutable subslices separated by bits that match a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410870,"byte_end":410936,"line_start":1520,"line_end":1520,"column_start":2,"column_end":68}},{"value":"/ predicate, from the back. The matched bit is *not* contained in the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":410938,"byte_end":411009,"line_start":1521,"line_end":1521,"column_start":2,"column_end":73}},{"value":"/ yielded bit-slices.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411011,"byte_end":411034,"line_start":1522,"line_end":1522,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411036,"byte_end":411039,"line_start":1523,"line_end":1523,"column_start":2,"column_end":5}},{"value":"/ Iterators do not require that each yielded item is destroyed before the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411041,"byte_end":411116,"line_start":1524,"line_end":1524,"column_start":2,"column_end":77}},{"value":"/ next is produced. This means that each bit-slice yielded must be marked","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411118,"byte_end":411193,"line_start":1525,"line_end":1525,"column_start":2,"column_end":77}},{"value":"/ as aliased. If you are using this in a loop that does not collect","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411195,"byte_end":411264,"line_start":1526,"line_end":1526,"column_start":2,"column_end":71}},{"value":"/ multiple yielded subslices for the same scope, then you can remove the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411266,"byte_end":411340,"line_start":1527,"line_end":1527,"column_start":2,"column_end":76}},{"value":"/ alias marking by calling the (`unsafe`) method [`.remove_alias()`] on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411342,"byte_end":411415,"line_start":1528,"line_end":1528,"column_start":2,"column_end":75}},{"value":"/ the iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411417,"byte_end":411434,"line_start":1529,"line_end":1529,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411436,"byte_end":411439,"line_start":1530,"line_end":1530,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411441,"byte_end":411456,"line_start":1531,"line_end":1531,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411458,"byte_end":411461,"line_start":1532,"line_end":1532,"column_start":2,"column_end":5}},{"value":"/ [`slice::rsplit_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.rsplit_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411463,"byte_end":411558,"line_start":1533,"line_end":1533,"column_start":2,"column_end":97}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411560,"byte_end":411563,"line_start":1534,"line_end":1534,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411565,"byte_end":411587,"line_start":1535,"line_end":1535,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411589,"byte_end":411592,"line_start":1536,"line_end":1536,"column_start":2,"column_end":5}},{"value":"/ The predicate function receives the index being tested as well as the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411594,"byte_end":411667,"line_start":1537,"line_end":1537,"column_start":2,"column_end":75}},{"value":"/ bit value at that index. This allows the predicate to have more than one","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411669,"byte_end":411745,"line_start":1538,"line_end":1538,"column_start":2,"column_end":78}},{"value":"/ bit of information about the bit-slice being traversed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411747,"byte_end":411806,"line_start":1539,"line_end":1539,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411808,"byte_end":411811,"line_start":1540,"line_end":1540,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411813,"byte_end":411835,"line_start":1541,"line_end":1541,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411837,"byte_end":411840,"line_start":1542,"line_end":1542,"column_start":2,"column_end":5}},{"value":"/ - [`.rsplit()`] has the same splitting logic, but each yielded bit-slice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411842,"byte_end":411918,"line_start":1543,"line_end":1543,"column_start":2,"column_end":78}},{"value":"/   is immutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411920,"byte_end":411939,"line_start":1544,"line_end":1544,"column_start":2,"column_end":21}},{"value":"/ - [`.split_mut()`] iterates from the front of the bit-slice to the back.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":411941,"byte_end":412017,"line_start":1545,"line_end":1545,"column_start":2,"column_end":78}},{"value":"/ - [`.rsplitn_mut()`] iterates from the front of the bit-slice to the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412019,"byte_end":412091,"line_start":1546,"line_end":1546,"column_start":2,"column_end":74}},{"value":"/   back.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412093,"byte_end":412104,"line_start":1547,"line_end":1547,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412106,"byte_end":412109,"line_start":1548,"line_end":1548,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412111,"byte_end":412126,"line_start":1549,"line_end":1549,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412128,"byte_end":412131,"line_start":1550,"line_end":1550,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412133,"byte_end":412144,"line_start":1551,"line_end":1551,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412146,"byte_end":412173,"line_start":1552,"line_end":1552,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412175,"byte_end":412178,"line_start":1553,"line_end":1553,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0, 0, 1, 0, 1, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412180,"byte_end":412223,"line_start":1554,"line_end":1554,"column_start":2,"column_end":45}},{"value":"/ //                         ^     ^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412225,"byte_end":412263,"line_start":1555,"line_end":1555,"column_start":2,"column_end":40}},{"value":"/ for group in bits.rsplit_mut(|_pos, bit| *bit) {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412265,"byte_end":412317,"line_start":1556,"line_end":1556,"column_start":2,"column_end":54}},{"value":"/   group.set(0, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412319,"byte_end":412344,"line_start":1557,"line_end":1557,"column_start":2,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412346,"byte_end":412351,"line_start":1558,"line_end":1558,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(bits, bits![1, 0, 1, 1, 1, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412353,"byte_end":412399,"line_start":1559,"line_end":1559,"column_start":2,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412401,"byte_end":412408,"line_start":1560,"line_end":1560,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412410,"byte_end":412413,"line_start":1561,"line_end":1561,"column_start":2,"column_end":5}},{"value":"/ [`.remove_alias()`]: crate::slice::RSplitMut::remove_alias","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412415,"byte_end":412477,"line_start":1562,"line_end":1562,"column_start":2,"column_end":64}},{"value":"/ [`.rsplit()`]: Self::rsplit","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412479,"byte_end":412510,"line_start":1563,"line_end":1563,"column_start":2,"column_end":33}},{"value":"/ [`.rsplitn_mut()`]: Self::rsplitn_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412512,"byte_end":412553,"line_start":1564,"line_end":1564,"column_start":2,"column_end":43}},{"value":"/ [`.split_mut()`]: Self::split_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412555,"byte_end":412592,"line_start":1565,"line_end":1565,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414099,"byte_end":414105,"line_start":1610,"line_end":1610,"column_start":9,"column_end":15},"name":"splitn","qualname":"<BitSlice<T, O>>::splitn","value":"pub fn splitn<F>(&Self, usize, F) -> SplitN<, T, O, F> where\nF: FnMut(usize, &bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Iterates over subslices separated by bits that match a predicate, giving\n up after yielding `n` times. The `n`th yield contains the rest of the\n bit-slice. As with `.split()`, the yielded bit-slices do not contain the\n matched bit.","sig":null,"attributes":[{"value":"/ Iterates over subslices separated by bits that match a predicate, giving","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412743,"byte_end":412819,"line_start":1571,"line_end":1571,"column_start":2,"column_end":78}},{"value":"/ up after yielding `n` times. The `n`th yield contains the rest of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412821,"byte_end":412894,"line_start":1572,"line_end":1572,"column_start":2,"column_end":75}},{"value":"/ bit-slice. As with `.split()`, the yielded bit-slices do not contain the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412896,"byte_end":412972,"line_start":1573,"line_end":1573,"column_start":2,"column_end":78}},{"value":"/ matched bit.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412974,"byte_end":412990,"line_start":1574,"line_end":1574,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412992,"byte_end":412995,"line_start":1575,"line_end":1575,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":412997,"byte_end":413012,"line_start":1576,"line_end":1576,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413014,"byte_end":413017,"line_start":1577,"line_end":1577,"column_start":2,"column_end":5}},{"value":"/ [`slice::splitn`](https://doc.rust-lang.org/std/primitive.slice.html#method.splitn)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413019,"byte_end":413106,"line_start":1578,"line_end":1578,"column_start":2,"column_end":89}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413108,"byte_end":413111,"line_start":1579,"line_end":1579,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413113,"byte_end":413135,"line_start":1580,"line_end":1580,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413137,"byte_end":413140,"line_start":1581,"line_end":1581,"column_start":2,"column_end":5}},{"value":"/ The predicate function receives the index being tested as well as the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413142,"byte_end":413215,"line_start":1582,"line_end":1582,"column_start":2,"column_end":75}},{"value":"/ bit value at that index. This allows the predicate to have more than one","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413217,"byte_end":413293,"line_start":1583,"line_end":1583,"column_start":2,"column_end":78}},{"value":"/ bit of information about the bit-slice being traversed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413295,"byte_end":413354,"line_start":1584,"line_end":1584,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413356,"byte_end":413359,"line_start":1585,"line_end":1585,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413361,"byte_end":413383,"line_start":1586,"line_end":1586,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413385,"byte_end":413388,"line_start":1587,"line_end":1587,"column_start":2,"column_end":5}},{"value":"/ - [`.splitn_mut()`] has the same splitting logic, but each yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413390,"byte_end":413460,"line_start":1588,"line_end":1588,"column_start":2,"column_end":72}},{"value":"/   bit-slice is mutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413462,"byte_end":413489,"line_start":1589,"line_end":1589,"column_start":2,"column_end":29}},{"value":"/ - [`.rsplitn()`] iterates from the back of the bit-slice instead of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413491,"byte_end":413566,"line_start":1590,"line_end":1590,"column_start":2,"column_end":77}},{"value":"/   front.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413568,"byte_end":413580,"line_start":1591,"line_end":1591,"column_start":2,"column_end":14}},{"value":"/ - [`.split()`] has the same splitting logic, but never times out.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413582,"byte_end":413651,"line_start":1592,"line_end":1592,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413653,"byte_end":413656,"line_start":1593,"line_end":1593,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413658,"byte_end":413673,"line_start":1594,"line_end":1594,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413675,"byte_end":413678,"line_start":1595,"line_end":1595,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413680,"byte_end":413691,"line_start":1596,"line_end":1596,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413693,"byte_end":413720,"line_start":1597,"line_end":1597,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413722,"byte_end":413725,"line_start":1598,"line_end":1598,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 0, 1, 0, 1, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413727,"byte_end":413766,"line_start":1599,"line_end":1599,"column_start":2,"column_end":41}},{"value":"/ let mut iter = bits.splitn(2, |_pos, bit| *bit);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413768,"byte_end":413820,"line_start":1600,"line_end":1600,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413822,"byte_end":413825,"line_start":1601,"line_end":1601,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.next().unwrap(), bits![0, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413827,"byte_end":413877,"line_start":1602,"line_end":1602,"column_start":2,"column_end":52}},{"value":"/ assert_eq!(iter.next().unwrap(), bits![0, 1, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413879,"byte_end":413932,"line_start":1603,"line_end":1603,"column_start":2,"column_end":55}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413934,"byte_end":413969,"line_start":1604,"line_end":1604,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413971,"byte_end":413978,"line_start":1605,"line_end":1605,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413980,"byte_end":413983,"line_start":1606,"line_end":1606,"column_start":2,"column_end":5}},{"value":"/ [`.rsplitn()`]: Self::rsplitn","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":413985,"byte_end":414018,"line_start":1607,"line_end":1607,"column_start":2,"column_end":35}},{"value":"/ [`.split()`]: Self::split","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414020,"byte_end":414049,"line_start":1608,"line_end":1608,"column_start":2,"column_end":31}},{"value":"/ [`.splitn_mut()`]: Self::splitn_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414051,"byte_end":414090,"line_start":1609,"line_end":1609,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3286},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416022,"byte_end":416032,"line_start":1661,"line_end":1661,"column_start":9,"column_end":19},"name":"splitn_mut","qualname":"<BitSlice<T, O>>::splitn_mut","value":"pub fn splitn_mut<F>(&mut Self, usize, F) -> SplitNMut<, T, O, F> where\nF: FnMut(usize, &bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Iterates over mutable subslices separated by bits that match a\n predicate, giving up after yielding `n` times. The `n`th yield contains\n the rest of the bit-slice. As with `.split_mut()`, the yielded\n bit-slices do not contain the matched bit.","sig":null,"attributes":[{"value":"/ Iterates over mutable subslices separated by bits that match a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414228,"byte_end":414294,"line_start":1615,"line_end":1615,"column_start":2,"column_end":68}},{"value":"/ predicate, giving up after yielding `n` times. The `n`th yield contains","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414296,"byte_end":414371,"line_start":1616,"line_end":1616,"column_start":2,"column_end":77}},{"value":"/ the rest of the bit-slice. As with `.split_mut()`, the yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414373,"byte_end":414439,"line_start":1617,"line_end":1617,"column_start":2,"column_end":68}},{"value":"/ bit-slices do not contain the matched bit.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414441,"byte_end":414487,"line_start":1618,"line_end":1618,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414489,"byte_end":414492,"line_start":1619,"line_end":1619,"column_start":2,"column_end":5}},{"value":"/ Iterators do not require that each yielded item is destroyed before the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414494,"byte_end":414569,"line_start":1620,"line_end":1620,"column_start":2,"column_end":77}},{"value":"/ next is produced. This means that each bit-slice yielded must be marked","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414571,"byte_end":414646,"line_start":1621,"line_end":1621,"column_start":2,"column_end":77}},{"value":"/ as aliased. If you are using this in a loop that does not collect","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414648,"byte_end":414717,"line_start":1622,"line_end":1622,"column_start":2,"column_end":71}},{"value":"/ multiple yielded subslices for the same scope, then you can remove the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414719,"byte_end":414793,"line_start":1623,"line_end":1623,"column_start":2,"column_end":76}},{"value":"/ alias marking by calling the (`unsafe`) method [`.remove_alias()`] on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414795,"byte_end":414868,"line_start":1624,"line_end":1624,"column_start":2,"column_end":75}},{"value":"/ the iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414870,"byte_end":414887,"line_start":1625,"line_end":1625,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414889,"byte_end":414892,"line_start":1626,"line_end":1626,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414894,"byte_end":414909,"line_start":1627,"line_end":1627,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414911,"byte_end":414914,"line_start":1628,"line_end":1628,"column_start":2,"column_end":5}},{"value":"/ [`slice::splitn_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.splitn_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":414916,"byte_end":415011,"line_start":1629,"line_end":1629,"column_start":2,"column_end":97}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415013,"byte_end":415016,"line_start":1630,"line_end":1630,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415018,"byte_end":415040,"line_start":1631,"line_end":1631,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415042,"byte_end":415045,"line_start":1632,"line_end":1632,"column_start":2,"column_end":5}},{"value":"/ The predicate function receives the index being tested as well as the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415047,"byte_end":415120,"line_start":1633,"line_end":1633,"column_start":2,"column_end":75}},{"value":"/ bit value at that index. This allows the predicate to have more than one","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415122,"byte_end":415198,"line_start":1634,"line_end":1634,"column_start":2,"column_end":78}},{"value":"/ bit of information about the bit-slice being traversed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415200,"byte_end":415259,"line_start":1635,"line_end":1635,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415261,"byte_end":415264,"line_start":1636,"line_end":1636,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415266,"byte_end":415288,"line_start":1637,"line_end":1637,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415290,"byte_end":415293,"line_start":1638,"line_end":1638,"column_start":2,"column_end":5}},{"value":"/ - [`.splitn()`] has the same splitting logic, but each yielded bit-slice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415295,"byte_end":415371,"line_start":1639,"line_end":1639,"column_start":2,"column_end":78}},{"value":"/   is immutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415373,"byte_end":415392,"line_start":1640,"line_end":1640,"column_start":2,"column_end":21}},{"value":"/ - [`.rsplitn_mut()`] iterates from the back of the bit-slice instead of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415394,"byte_end":415469,"line_start":1641,"line_end":1641,"column_start":2,"column_end":77}},{"value":"/   the front.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415471,"byte_end":415487,"line_start":1642,"line_end":1642,"column_start":2,"column_end":18}},{"value":"/ - [`.split_mut()`] has the same splitting logic, but never times out.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415489,"byte_end":415562,"line_start":1643,"line_end":1643,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415564,"byte_end":415567,"line_start":1644,"line_end":1644,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415569,"byte_end":415584,"line_start":1645,"line_end":1645,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415586,"byte_end":415589,"line_start":1646,"line_end":1646,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415591,"byte_end":415602,"line_start":1647,"line_end":1647,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415604,"byte_end":415631,"line_start":1648,"line_end":1648,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415633,"byte_end":415636,"line_start":1649,"line_end":1649,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0, 0, 1, 0, 1, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415638,"byte_end":415681,"line_start":1650,"line_end":1650,"column_start":2,"column_end":45}},{"value":"/ for group in bits.splitn_mut(2, |_pos, bit| *bit) {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415683,"byte_end":415738,"line_start":1651,"line_end":1651,"column_start":2,"column_end":57}},{"value":"/   group.set(0, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415740,"byte_end":415765,"line_start":1652,"line_end":1652,"column_start":2,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415767,"byte_end":415772,"line_start":1653,"line_end":1653,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(bits, bits![1, 0, 1, 1, 1, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415774,"byte_end":415820,"line_start":1654,"line_end":1654,"column_start":2,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415822,"byte_end":415829,"line_start":1655,"line_end":1655,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415831,"byte_end":415834,"line_start":1656,"line_end":1656,"column_start":2,"column_end":5}},{"value":"/ [`.remove_alias()`]: crate::slice::SplitNMut::remove_alias","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415836,"byte_end":415898,"line_start":1657,"line_end":1657,"column_start":2,"column_end":64}},{"value":"/ [`.rsplitn_mut()`]: Self::rsplitn_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415900,"byte_end":415941,"line_start":1658,"line_end":1658,"column_start":2,"column_end":43}},{"value":"/ [`.split_mut()`]: Self::split_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415943,"byte_end":415980,"line_start":1659,"line_end":1659,"column_start":2,"column_end":39}},{"value":"/ [`.splitn()`]: Self::splitn","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":415982,"byte_end":416013,"line_start":1660,"line_end":1660,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3288},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417598,"byte_end":417605,"line_start":1706,"line_end":1706,"column_start":9,"column_end":16},"name":"rsplitn","qualname":"<BitSlice<T, O>>::rsplitn","value":"pub fn rsplitn<F>(&Self, usize, F) -> RSplitN<, T, O, F> where\nF: FnMut(usize, &bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Iterates over mutable subslices separated by bits that match a\n predicate from the back edge, giving up after yielding `n` times. The\n `n`th yield contains the rest of the bit-slice. As with `.split_mut()`,\n the yielded bit-slices do not contain the matched bit.","sig":null,"attributes":[{"value":"/ Iterates over mutable subslices separated by bits that match a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416177,"byte_end":416243,"line_start":1666,"line_end":1666,"column_start":2,"column_end":68}},{"value":"/ predicate from the back edge, giving up after yielding `n` times. The","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416245,"byte_end":416318,"line_start":1667,"line_end":1667,"column_start":2,"column_end":75}},{"value":"/ `n`th yield contains the rest of the bit-slice. As with `.split_mut()`,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416320,"byte_end":416395,"line_start":1668,"line_end":1668,"column_start":2,"column_end":77}},{"value":"/ the yielded bit-slices do not contain the matched bit.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416397,"byte_end":416455,"line_start":1669,"line_end":1669,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416457,"byte_end":416460,"line_start":1670,"line_end":1670,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416462,"byte_end":416477,"line_start":1671,"line_end":1671,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416479,"byte_end":416482,"line_start":1672,"line_end":1672,"column_start":2,"column_end":5}},{"value":"/ [`slice::rsplitn`](https://doc.rust-lang.org/std/primitive.slice.html#method.rsplitn)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416484,"byte_end":416573,"line_start":1673,"line_end":1673,"column_start":2,"column_end":91}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416575,"byte_end":416578,"line_start":1674,"line_end":1674,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416580,"byte_end":416602,"line_start":1675,"line_end":1675,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416604,"byte_end":416607,"line_start":1676,"line_end":1676,"column_start":2,"column_end":5}},{"value":"/ The predicate function receives the index being tested as well as the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416609,"byte_end":416682,"line_start":1677,"line_end":1677,"column_start":2,"column_end":75}},{"value":"/ bit value at that index. This allows the predicate to have more than one","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416684,"byte_end":416760,"line_start":1678,"line_end":1678,"column_start":2,"column_end":78}},{"value":"/ bit of information about the bit-slice being traversed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416762,"byte_end":416821,"line_start":1679,"line_end":1679,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416823,"byte_end":416826,"line_start":1680,"line_end":1680,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416828,"byte_end":416850,"line_start":1681,"line_end":1681,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416852,"byte_end":416855,"line_start":1682,"line_end":1682,"column_start":2,"column_end":5}},{"value":"/ - [`.rsplitn_mut()`] has the same splitting logic, but each yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416857,"byte_end":416928,"line_start":1683,"line_end":1683,"column_start":2,"column_end":73}},{"value":"/   bit-slice is mutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416930,"byte_end":416957,"line_start":1684,"line_end":1684,"column_start":2,"column_end":29}},{"value":"/ - [`.splitn()`]: iterates from the front of the bit-slice instead of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":416959,"byte_end":417035,"line_start":1685,"line_end":1685,"column_start":2,"column_end":78}},{"value":"/   back.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417037,"byte_end":417048,"line_start":1686,"line_end":1686,"column_start":2,"column_end":13}},{"value":"/ - [`.rsplit()`] has the same splitting logic, but never times out.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417050,"byte_end":417120,"line_start":1687,"line_end":1687,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417122,"byte_end":417125,"line_start":1688,"line_end":1688,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417127,"byte_end":417142,"line_start":1689,"line_end":1689,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417144,"byte_end":417147,"line_start":1690,"line_end":1690,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417149,"byte_end":417160,"line_start":1691,"line_end":1691,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417162,"byte_end":417189,"line_start":1692,"line_end":1692,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417191,"byte_end":417194,"line_start":1693,"line_end":1693,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 0, 1, 1, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417196,"byte_end":417232,"line_start":1694,"line_end":1694,"column_start":2,"column_end":38}},{"value":"/ //                        ^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417234,"byte_end":417265,"line_start":1695,"line_end":1695,"column_start":2,"column_end":33}},{"value":"/ let mut iter = bits.rsplitn(2, |_pos, bit| *bit);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417267,"byte_end":417320,"line_start":1696,"line_end":1696,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417322,"byte_end":417325,"line_start":1697,"line_end":1697,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.next().unwrap(), bits![0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417327,"byte_end":417374,"line_start":1698,"line_end":1698,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(iter.next().unwrap(), bits![0, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417376,"byte_end":417429,"line_start":1699,"line_end":1699,"column_start":2,"column_end":55}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417431,"byte_end":417466,"line_start":1700,"line_end":1700,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417468,"byte_end":417475,"line_start":1701,"line_end":1701,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417477,"byte_end":417480,"line_start":1702,"line_end":1702,"column_start":2,"column_end":5}},{"value":"/ [`.rsplit()`]: Self::rsplit","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417482,"byte_end":417513,"line_start":1703,"line_end":1703,"column_start":2,"column_end":33}},{"value":"/ [`.rsplitn_mut()`]: Self::rsplitn_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417515,"byte_end":417556,"line_start":1704,"line_end":1704,"column_start":2,"column_end":43}},{"value":"/ [`.splitn()`]: Self::splitn","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417558,"byte_end":417589,"line_start":1705,"line_end":1705,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3290},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419624,"byte_end":419635,"line_start":1758,"line_end":1758,"column_start":9,"column_end":20},"name":"rsplitn_mut","qualname":"<BitSlice<T, O>>::rsplitn_mut","value":"pub fn rsplitn_mut<F>(&mut Self, usize, F) -> RSplitNMut<, T, O, F> where\nF: FnMut(usize, &bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Iterates over mutable subslices separated by bits that match a\n predicate from the back edge, giving up after yielding `n` times. The\n `n`th yield contains the rest of the bit-slice. As with `.split_mut()`,\n the yielded bit-slices do not contain the matched bit.","sig":null,"attributes":[{"value":"/ Iterates over mutable subslices separated by bits that match a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417730,"byte_end":417796,"line_start":1711,"line_end":1711,"column_start":2,"column_end":68}},{"value":"/ predicate from the back edge, giving up after yielding `n` times. The","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417798,"byte_end":417871,"line_start":1712,"line_end":1712,"column_start":2,"column_end":75}},{"value":"/ `n`th yield contains the rest of the bit-slice. As with `.split_mut()`,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417873,"byte_end":417948,"line_start":1713,"line_end":1713,"column_start":2,"column_end":77}},{"value":"/ the yielded bit-slices do not contain the matched bit.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":417950,"byte_end":418008,"line_start":1714,"line_end":1714,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418010,"byte_end":418013,"line_start":1715,"line_end":1715,"column_start":2,"column_end":5}},{"value":"/ Iterators do not require that each yielded item is destroyed before the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418015,"byte_end":418090,"line_start":1716,"line_end":1716,"column_start":2,"column_end":77}},{"value":"/ next is produced. This means that each bit-slice yielded must be marked","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418092,"byte_end":418167,"line_start":1717,"line_end":1717,"column_start":2,"column_end":77}},{"value":"/ as aliased. If you are using this in a loop that does not collect","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418169,"byte_end":418238,"line_start":1718,"line_end":1718,"column_start":2,"column_end":71}},{"value":"/ multiple yielded subslices for the same scope, then you can remove the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418240,"byte_end":418314,"line_start":1719,"line_end":1719,"column_start":2,"column_end":76}},{"value":"/ alias marking by calling the (`unsafe`) method [`.remove_alias()`] on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418316,"byte_end":418389,"line_start":1720,"line_end":1720,"column_start":2,"column_end":75}},{"value":"/ the iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418391,"byte_end":418408,"line_start":1721,"line_end":1721,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418410,"byte_end":418413,"line_start":1722,"line_end":1722,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418415,"byte_end":418430,"line_start":1723,"line_end":1723,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418432,"byte_end":418435,"line_start":1724,"line_end":1724,"column_start":2,"column_end":5}},{"value":"/ [`slice::rsplitn_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.rsplitn_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418437,"byte_end":418534,"line_start":1725,"line_end":1725,"column_start":2,"column_end":99}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418536,"byte_end":418539,"line_start":1726,"line_end":1726,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418541,"byte_end":418563,"line_start":1727,"line_end":1727,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418565,"byte_end":418568,"line_start":1728,"line_end":1728,"column_start":2,"column_end":5}},{"value":"/ The predicate function receives the index being tested as well as the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418570,"byte_end":418643,"line_start":1729,"line_end":1729,"column_start":2,"column_end":75}},{"value":"/ bit value at that index. This allows the predicate to have more than one","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418645,"byte_end":418721,"line_start":1730,"line_end":1730,"column_start":2,"column_end":78}},{"value":"/ bit of information about the bit-slice being traversed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418723,"byte_end":418782,"line_start":1731,"line_end":1731,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418784,"byte_end":418787,"line_start":1732,"line_end":1732,"column_start":2,"column_end":5}},{"value":"/ ## Sibling Methods","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418789,"byte_end":418811,"line_start":1733,"line_end":1733,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418813,"byte_end":418816,"line_start":1734,"line_end":1734,"column_start":2,"column_end":5}},{"value":"/ - [`.rsplitn()`] has the same splitting logic, but each yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418818,"byte_end":418885,"line_start":1735,"line_end":1735,"column_start":2,"column_end":69}},{"value":"/   bit-slice is immutable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418887,"byte_end":418916,"line_start":1736,"line_end":1736,"column_start":2,"column_end":31}},{"value":"/ - [`.splitn_mut()`] iterates from the front of the bit-slice instead of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418918,"byte_end":418993,"line_start":1737,"line_end":1737,"column_start":2,"column_end":77}},{"value":"/   the back.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":418995,"byte_end":419010,"line_start":1738,"line_end":1738,"column_start":2,"column_end":17}},{"value":"/ - [`.rsplit_mut()`] has the same splitting logic, but never times out.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419012,"byte_end":419086,"line_start":1739,"line_end":1739,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419088,"byte_end":419091,"line_start":1740,"line_end":1740,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419093,"byte_end":419108,"line_start":1741,"line_end":1741,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419110,"byte_end":419113,"line_start":1742,"line_end":1742,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419115,"byte_end":419126,"line_start":1743,"line_end":1743,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419128,"byte_end":419155,"line_start":1744,"line_end":1744,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419157,"byte_end":419160,"line_start":1745,"line_end":1745,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0, 0, 1, 0, 0, 1, 0, 0, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419162,"byte_end":419214,"line_start":1746,"line_end":1746,"column_start":2,"column_end":54}},{"value":"/ for group in bits.rsplitn_mut(2, |_idx, bit| *bit) {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419216,"byte_end":419272,"line_start":1747,"line_end":1747,"column_start":2,"column_end":58}},{"value":"/   group.set(0, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419274,"byte_end":419299,"line_start":1748,"line_end":1748,"column_start":2,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419301,"byte_end":419306,"line_start":1749,"line_end":1749,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(bits, bits![1, 0, 1, 0, 0, 1, 1, 0, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419308,"byte_end":419363,"line_start":1750,"line_end":1750,"column_start":2,"column_end":57}},{"value":"/ //                     ^ group 2         ^ group 1","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419365,"byte_end":419419,"line_start":1751,"line_end":1751,"column_start":2,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419421,"byte_end":419428,"line_start":1752,"line_end":1752,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419430,"byte_end":419433,"line_start":1753,"line_end":1753,"column_start":2,"column_end":5}},{"value":"/ [`.remove_alias()`]: crate::slice::RSplitNMut::remove_alias","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419435,"byte_end":419498,"line_start":1754,"line_end":1754,"column_start":2,"column_end":65}},{"value":"/ [`.rsplitn()`]: Self::rsplitn","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419500,"byte_end":419533,"line_start":1755,"line_end":1755,"column_start":2,"column_end":35}},{"value":"/ [`.rsplit_mut()`]: Self::rsplit_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419535,"byte_end":419574,"line_start":1756,"line_end":1756,"column_start":2,"column_end":41}},{"value":"/ [`.splitn_mut()`]: Self::splitn_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419576,"byte_end":419615,"line_start":1757,"line_end":1757,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3292},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420499,"byte_end":420507,"line_start":1783,"line_end":1783,"column_start":9,"column_end":17},"name":"contains","qualname":"<BitSlice<T, O>>::contains","value":"pub fn contains<T2, O2>(&Self, &BitSlice<T2, O2>) -> bool where T2: BitStore,\nO2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Tests if the bit-slice contains the given sequence anywhere within it.","sig":null,"attributes":[{"value":"/ Tests if the bit-slice contains the given sequence anywhere within it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419782,"byte_end":419856,"line_start":1763,"line_end":1763,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419858,"byte_end":419861,"line_start":1764,"line_end":1764,"column_start":2,"column_end":5}},{"value":"/ This scans over `self.windows(other.len())` until one of the windows","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419863,"byte_end":419935,"line_start":1765,"line_end":1765,"column_start":2,"column_end":74}},{"value":"/ matches. The search key does not need to share type parameters with the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":419937,"byte_end":420012,"line_start":1766,"line_end":1766,"column_start":2,"column_end":77}},{"value":"/ bit-slice being tested, as the comparison is bit-wise. However, sharing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420014,"byte_end":420089,"line_start":1767,"line_end":1767,"column_start":2,"column_end":77}},{"value":"/ type parameters will accelerate the comparison.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420091,"byte_end":420142,"line_start":1768,"line_end":1768,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420144,"byte_end":420147,"line_start":1769,"line_end":1769,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420149,"byte_end":420164,"line_start":1770,"line_end":1770,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420166,"byte_end":420169,"line_start":1771,"line_end":1771,"column_start":2,"column_end":5}},{"value":"/ [`slice::contains`](https://doc.rust-lang.org/std/primitive.slice.html#method.contains)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420171,"byte_end":420262,"line_start":1772,"line_end":1772,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420264,"byte_end":420267,"line_start":1773,"line_end":1773,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420269,"byte_end":420284,"line_start":1774,"line_end":1774,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420286,"byte_end":420289,"line_start":1775,"line_end":1775,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420291,"byte_end":420302,"line_start":1776,"line_end":1776,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420304,"byte_end":420331,"line_start":1777,"line_end":1777,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420333,"byte_end":420336,"line_start":1778,"line_end":1778,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 0, 1, 0, 1, 1, 0, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420338,"byte_end":420383,"line_start":1779,"line_end":1779,"column_start":2,"column_end":47}},{"value":"/ assert!( bits.contains(bits![0, 1, 1, 0]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420385,"byte_end":420432,"line_start":1780,"line_end":1780,"column_start":2,"column_end":49}},{"value":"/ assert!(!bits.contains(bits![1, 0, 0, 1]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420434,"byte_end":420481,"line_start":1781,"line_end":1781,"column_start":2,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420483,"byte_end":420490,"line_start":1782,"line_end":1782,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3296},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421559,"byte_end":421570,"line_start":1822,"line_end":1822,"column_start":9,"column_end":20},"name":"starts_with","qualname":"<BitSlice<T, O>>::starts_with","value":"pub fn starts_with<T2, O2>(&Self, &BitSlice<T2, O2>) -> bool where\nT2: BitStore, O2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Tests if the bit-slice begins with the given sequence.","sig":null,"attributes":[{"value":"/ Tests if the bit-slice begins with the given sequence.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420694,"byte_end":420752,"line_start":1792,"line_end":1792,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420754,"byte_end":420757,"line_start":1793,"line_end":1793,"column_start":2,"column_end":5}},{"value":"/ The search key does not need to share type parameters with the bit-slice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420759,"byte_end":420835,"line_start":1794,"line_end":1794,"column_start":2,"column_end":78}},{"value":"/ being tested, as the comparison is bit-wise. However, sharing type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420837,"byte_end":420907,"line_start":1795,"line_end":1795,"column_start":2,"column_end":72}},{"value":"/ parameters will accelerate the comparison.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420909,"byte_end":420955,"line_start":1796,"line_end":1796,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420957,"byte_end":420960,"line_start":1797,"line_end":1797,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420962,"byte_end":420977,"line_start":1798,"line_end":1798,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420979,"byte_end":420982,"line_start":1799,"line_end":1799,"column_start":2,"column_end":5}},{"value":"/ [`slice::starts_with`](https://doc.rust-lang.org/std/primitive.slice.html#method.starts_with)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":420984,"byte_end":421081,"line_start":1800,"line_end":1800,"column_start":2,"column_end":99}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421083,"byte_end":421086,"line_start":1801,"line_end":1801,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421088,"byte_end":421103,"line_start":1802,"line_end":1802,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421105,"byte_end":421108,"line_start":1803,"line_end":1803,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421110,"byte_end":421121,"line_start":1804,"line_end":1804,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421123,"byte_end":421150,"line_start":1805,"line_end":1805,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421152,"byte_end":421155,"line_start":1806,"line_end":1806,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 1, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421157,"byte_end":421190,"line_start":1807,"line_end":1807,"column_start":2,"column_end":35}},{"value":"/ assert!( bits.starts_with(bits![0, 1]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421192,"byte_end":421236,"line_start":1808,"line_end":1808,"column_start":2,"column_end":46}},{"value":"/ assert!(!bits.starts_with(bits![1, 0]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421238,"byte_end":421282,"line_start":1809,"line_end":1809,"column_start":2,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421284,"byte_end":421291,"line_start":1810,"line_end":1810,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421293,"byte_end":421296,"line_start":1811,"line_end":1811,"column_start":2,"column_end":5}},{"value":"/ This always returns `true` if the needle is empty:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421298,"byte_end":421352,"line_start":1812,"line_end":1812,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421354,"byte_end":421357,"line_start":1813,"line_end":1813,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421359,"byte_end":421370,"line_start":1814,"line_end":1814,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421372,"byte_end":421399,"line_start":1815,"line_end":1815,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421401,"byte_end":421404,"line_start":1816,"line_end":1816,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421406,"byte_end":421436,"line_start":1817,"line_end":1817,"column_start":2,"column_end":32}},{"value":"/ let empty = bits![];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421438,"byte_end":421462,"line_start":1818,"line_end":1818,"column_start":2,"column_end":26}},{"value":"/ assert!(bits.starts_with(empty));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421464,"byte_end":421501,"line_start":1819,"line_end":1819,"column_start":2,"column_end":39}},{"value":"/ assert!(empty.starts_with(empty));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421503,"byte_end":421541,"line_start":1820,"line_end":1820,"column_start":2,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421543,"byte_end":421550,"line_start":1821,"line_end":1821,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3300},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422601,"byte_end":422610,"line_start":1862,"line_end":1862,"column_start":9,"column_end":18},"name":"ends_with","qualname":"<BitSlice<T, O>>::ends_with","value":"pub fn ends_with<T2, O2>(&Self, &BitSlice<T2, O2>) -> bool where T2: BitStore,\nO2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Tests if the bit-slice ends with the given sequence.","sig":null,"attributes":[{"value":"/ Tests if the bit-slice ends with the given sequence.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421750,"byte_end":421806,"line_start":1832,"line_end":1832,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421808,"byte_end":421811,"line_start":1833,"line_end":1833,"column_start":2,"column_end":5}},{"value":"/ The search key does not need to share type parameters with the bit-slice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421813,"byte_end":421889,"line_start":1834,"line_end":1834,"column_start":2,"column_end":78}},{"value":"/ being tested, as the comparison is bit-wise. However, sharing type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421891,"byte_end":421961,"line_start":1835,"line_end":1835,"column_start":2,"column_end":72}},{"value":"/ parameters will accelerate the comparison.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":421963,"byte_end":422009,"line_start":1836,"line_end":1836,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422011,"byte_end":422014,"line_start":1837,"line_end":1837,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422016,"byte_end":422031,"line_start":1838,"line_end":1838,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422033,"byte_end":422036,"line_start":1839,"line_end":1839,"column_start":2,"column_end":5}},{"value":"/ [`slice::ends_with`](https://doc.rust-lang.org/std/primitive.slice.html#method.ends_with)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422038,"byte_end":422131,"line_start":1840,"line_end":1840,"column_start":2,"column_end":95}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422133,"byte_end":422136,"line_start":1841,"line_end":1841,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422138,"byte_end":422153,"line_start":1842,"line_end":1842,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422155,"byte_end":422158,"line_start":1843,"line_end":1843,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422160,"byte_end":422171,"line_start":1844,"line_end":1844,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422173,"byte_end":422200,"line_start":1845,"line_end":1845,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422202,"byte_end":422205,"line_start":1846,"line_end":1846,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 1, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422207,"byte_end":422240,"line_start":1847,"line_end":1847,"column_start":2,"column_end":35}},{"value":"/ assert!( bits.ends_with(bits![1, 0]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422242,"byte_end":422284,"line_start":1848,"line_end":1848,"column_start":2,"column_end":44}},{"value":"/ assert!(!bits.ends_with(bits![0, 1]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422286,"byte_end":422328,"line_start":1849,"line_end":1849,"column_start":2,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422330,"byte_end":422337,"line_start":1850,"line_end":1850,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422339,"byte_end":422342,"line_start":1851,"line_end":1851,"column_start":2,"column_end":5}},{"value":"/ This always returns `true` if the needle is empty:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422344,"byte_end":422398,"line_start":1852,"line_end":1852,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422400,"byte_end":422403,"line_start":1853,"line_end":1853,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422405,"byte_end":422416,"line_start":1854,"line_end":1854,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422418,"byte_end":422445,"line_start":1855,"line_end":1855,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422447,"byte_end":422450,"line_start":1856,"line_end":1856,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422452,"byte_end":422482,"line_start":1857,"line_end":1857,"column_start":2,"column_end":32}},{"value":"/ let empty = bits![];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422484,"byte_end":422508,"line_start":1858,"line_end":1858,"column_start":2,"column_end":26}},{"value":"/ assert!(bits.ends_with(empty));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422510,"byte_end":422545,"line_start":1859,"line_end":1859,"column_start":2,"column_end":37}},{"value":"/ assert!(empty.ends_with(empty));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422547,"byte_end":422583,"line_start":1860,"line_end":1860,"column_start":2,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422585,"byte_end":422592,"line_start":1861,"line_end":1861,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3304},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423776,"byte_end":423788,"line_start":1900,"line_end":1900,"column_start":9,"column_end":21},"name":"strip_prefix","qualname":"<BitSlice<T, O>>::strip_prefix","value":"pub fn strip_prefix<T2, O2>(&Self, &BitSlice<T2, O2>) -> Option<&Self> where\nT2: BitStore, O2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Removes a prefix bit-slice, if present.","sig":null,"attributes":[{"value":"/ Removes a prefix bit-slice, if present.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422803,"byte_end":422846,"line_start":1872,"line_end":1872,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422848,"byte_end":422851,"line_start":1873,"line_end":1873,"column_start":2,"column_end":5}},{"value":"/ Like [`.starts_with()`], the search key does not need to share type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422853,"byte_end":422924,"line_start":1874,"line_end":1874,"column_start":2,"column_end":73}},{"value":"/ parameters with the bit-slice being stripped. If","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422926,"byte_end":422978,"line_start":1875,"line_end":1875,"column_start":2,"column_end":54}},{"value":"/ `self.starts_with(suffix)`, then this returns `Some(&self[prefix.len()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":422980,"byte_end":423054,"line_start":1876,"line_end":1876,"column_start":2,"column_end":76}},{"value":"/ ..])`, otherwise it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423056,"byte_end":423095,"line_start":1877,"line_end":1877,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423097,"byte_end":423100,"line_start":1878,"line_end":1878,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423102,"byte_end":423117,"line_start":1879,"line_end":1879,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423119,"byte_end":423122,"line_start":1880,"line_end":1880,"column_start":2,"column_end":5}},{"value":"/ [`slice::strip_prefix`](https://doc.rust-lang.org/std/primitive.slice.html#method.strip_prefix)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423124,"byte_end":423223,"line_start":1881,"line_end":1881,"column_start":2,"column_end":101}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423225,"byte_end":423228,"line_start":1882,"line_end":1882,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423230,"byte_end":423252,"line_start":1883,"line_end":1883,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423254,"byte_end":423257,"line_start":1884,"line_end":1884,"column_start":2,"column_end":5}},{"value":"/ `BitSlice` does not support pattern searches; instead, it permits `self`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423259,"byte_end":423335,"line_start":1885,"line_end":1885,"column_start":2,"column_end":78}},{"value":"/ and `prefix` to differ in type parameters.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423337,"byte_end":423383,"line_start":1886,"line_end":1886,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423385,"byte_end":423388,"line_start":1887,"line_end":1887,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423390,"byte_end":423405,"line_start":1888,"line_end":1888,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423407,"byte_end":423410,"line_start":1889,"line_end":1889,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423412,"byte_end":423423,"line_start":1890,"line_end":1890,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423425,"byte_end":423452,"line_start":1891,"line_end":1891,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423454,"byte_end":423457,"line_start":1892,"line_end":1892,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 0, 0, 1, 0, 1, 1, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423459,"byte_end":423507,"line_start":1893,"line_end":1893,"column_start":2,"column_end":50}},{"value":"/ assert_eq!(bits.strip_prefix(bits![0, 1]).unwrap(), bits[2 ..]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423509,"byte_end":423577,"line_start":1894,"line_end":1894,"column_start":2,"column_end":70}},{"value":"/ assert_eq!(bits.strip_prefix(bits![0, 1, 0, 0,]).unwrap(), bits[4 ..]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423579,"byte_end":423654,"line_start":1895,"line_end":1895,"column_start":2,"column_end":77}},{"value":"/ assert!(bits.strip_prefix(bits![1, 0]).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423656,"byte_end":423710,"line_start":1896,"line_end":1896,"column_start":2,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423712,"byte_end":423719,"line_start":1897,"line_end":1897,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423721,"byte_end":423724,"line_start":1898,"line_end":1898,"column_start":2,"column_end":5}},{"value":"/ [`.starts_with()`]: Self::starts_with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423726,"byte_end":423767,"line_start":1899,"line_end":1899,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3307},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424967,"byte_end":424979,"line_start":1944,"line_end":1944,"column_start":9,"column_end":21},"name":"strip_suffix","qualname":"<BitSlice<T, O>>::strip_suffix","value":"pub fn strip_suffix<T2, O2>(&Self, &BitSlice<T2, O2>) -> Option<&Self> where\nT2: BitStore, O2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Removes a suffix bit-slice, if present.","sig":null,"attributes":[{"value":"/ Removes a suffix bit-slice, if present.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":423989,"byte_end":424032,"line_start":1916,"line_end":1916,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424034,"byte_end":424037,"line_start":1917,"line_end":1917,"column_start":2,"column_end":5}},{"value":"/ Like [`.ends_with()`], the search key does not need to share type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424039,"byte_end":424108,"line_start":1918,"line_end":1918,"column_start":2,"column_end":71}},{"value":"/ parameters with the bit-slice being stripped. If","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424110,"byte_end":424162,"line_start":1919,"line_end":1919,"column_start":2,"column_end":54}},{"value":"/ `self.ends_with(suffix)`, then this returns `Some(&self[.. self.len() -","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424164,"byte_end":424239,"line_start":1920,"line_end":1920,"column_start":2,"column_end":77}},{"value":"/ suffix.len()])`, otherwise it returns `None`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424241,"byte_end":424290,"line_start":1921,"line_end":1921,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424292,"byte_end":424295,"line_start":1922,"line_end":1922,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424297,"byte_end":424312,"line_start":1923,"line_end":1923,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424314,"byte_end":424317,"line_start":1924,"line_end":1924,"column_start":2,"column_end":5}},{"value":"/ [`slice::strip_suffix`](https://doc.rust-lang.org/std/primitive.slice.html#method.strip_suffix)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424319,"byte_end":424418,"line_start":1925,"line_end":1925,"column_start":2,"column_end":101}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424420,"byte_end":424423,"line_start":1926,"line_end":1926,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424425,"byte_end":424447,"line_start":1927,"line_end":1927,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424449,"byte_end":424452,"line_start":1928,"line_end":1928,"column_start":2,"column_end":5}},{"value":"/ `BitSlice` does not support pattern searches; instead, it permits `self`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424454,"byte_end":424530,"line_start":1929,"line_end":1929,"column_start":2,"column_end":78}},{"value":"/ and `suffix` to differ in type parameters.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424532,"byte_end":424578,"line_start":1930,"line_end":1930,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424580,"byte_end":424583,"line_start":1931,"line_end":1931,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424585,"byte_end":424600,"line_start":1932,"line_end":1932,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424602,"byte_end":424605,"line_start":1933,"line_end":1933,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424607,"byte_end":424618,"line_start":1934,"line_end":1934,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424620,"byte_end":424647,"line_start":1935,"line_end":1935,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424649,"byte_end":424652,"line_start":1936,"line_end":1936,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 0, 0, 1, 0, 1, 1, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424654,"byte_end":424702,"line_start":1937,"line_end":1937,"column_start":2,"column_end":50}},{"value":"/ assert_eq!(bits.strip_suffix(bits![1, 0]).unwrap(), bits[.. 7]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424704,"byte_end":424772,"line_start":1938,"line_end":1938,"column_start":2,"column_end":70}},{"value":"/ assert_eq!(bits.strip_suffix(bits![0, 1, 1, 0]).unwrap(), bits[.. 5]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424774,"byte_end":424848,"line_start":1939,"line_end":1939,"column_start":2,"column_end":76}},{"value":"/ assert!(bits.strip_suffix(bits![0, 1]).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424850,"byte_end":424904,"line_start":1940,"line_end":1940,"column_start":2,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424906,"byte_end":424913,"line_start":1941,"line_end":1941,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424915,"byte_end":424918,"line_start":1942,"line_end":1942,"column_start":2,"column_end":5}},{"value":"/ [`.ends_with()`]: Self::ends_with.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":424920,"byte_end":424958,"line_start":1943,"line_end":1943,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3310},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425953,"byte_end":425964,"line_start":1984,"line_end":1984,"column_start":9,"column_end":20},"name":"rotate_left","qualname":"<BitSlice<T, O>>::rotate_left","value":"pub fn rotate_left(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Rotates the contents of a bit-slice to the left (towards the zero\n index).","sig":null,"attributes":[{"value":"/ Rotates the contents of a bit-slice to the left (towards the zero","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425191,"byte_end":425260,"line_start":1960,"line_end":1960,"column_start":2,"column_end":71}},{"value":"/ index).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425262,"byte_end":425273,"line_start":1961,"line_end":1961,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425275,"byte_end":425278,"line_start":1962,"line_end":1962,"column_start":2,"column_end":5}},{"value":"/ This essentially splits the bit-slice at `by`, then exchanges the two","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425280,"byte_end":425353,"line_start":1963,"line_end":1963,"column_start":2,"column_end":75}},{"value":"/ pieces. `self[.. by]` becomes the first section, and is then followed by","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425355,"byte_end":425431,"line_start":1964,"line_end":1964,"column_start":2,"column_end":78}},{"value":"/ `self[.. by]`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425433,"byte_end":425451,"line_start":1965,"line_end":1965,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425453,"byte_end":425456,"line_start":1966,"line_end":1966,"column_start":2,"column_end":5}},{"value":"/ The implementation is batch-accelerated where possible. It should have a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425458,"byte_end":425534,"line_start":1967,"line_end":1967,"column_start":2,"column_end":78}},{"value":"/ runtime complexity much lower than `O(by)`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425536,"byte_end":425583,"line_start":1968,"line_end":1968,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425585,"byte_end":425588,"line_start":1969,"line_end":1969,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425590,"byte_end":425605,"line_start":1970,"line_end":1970,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425607,"byte_end":425610,"line_start":1971,"line_end":1971,"column_start":2,"column_end":5}},{"value":"/ [`slice::rotate_left`](https://doc.rust-lang.org/std/primitive.slice.html#method.rotate_left)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425612,"byte_end":425709,"line_start":1972,"line_end":1972,"column_start":2,"column_end":99}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425711,"byte_end":425714,"line_start":1973,"line_end":1973,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425716,"byte_end":425731,"line_start":1974,"line_end":1974,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425733,"byte_end":425736,"line_start":1975,"line_end":1975,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425738,"byte_end":425749,"line_start":1976,"line_end":1976,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425751,"byte_end":425778,"line_start":1977,"line_end":1977,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425780,"byte_end":425783,"line_start":1978,"line_end":1978,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0, 0, 1, 0, 1, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425785,"byte_end":425828,"line_start":1979,"line_end":1979,"column_start":2,"column_end":45}},{"value":"/ //      split occurs here ^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425830,"byte_end":425861,"line_start":1980,"line_end":1980,"column_start":2,"column_end":33}},{"value":"/ bits.rotate_left(2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425863,"byte_end":425887,"line_start":1981,"line_end":1981,"column_start":2,"column_end":26}},{"value":"/ assert_eq!(bits, bits![1, 0, 1, 0, 0, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425889,"byte_end":425935,"line_start":1982,"line_end":1982,"column_start":2,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":425937,"byte_end":425944,"line_start":1983,"line_end":1983,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3311},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":427348,"byte_end":427360,"line_start":2031,"line_end":2031,"column_start":9,"column_end":21},"name":"rotate_right","qualname":"<BitSlice<T, O>>::rotate_right","value":"pub fn rotate_right(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Rotates the contents of a bit-slice to the right (away from the zero\n index).","sig":null,"attributes":[{"value":"/ Rotates the contents of a bit-slice to the right (away from the zero","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":426549,"byte_end":426621,"line_start":2007,"line_end":2007,"column_start":2,"column_end":74}},{"value":"/ index).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":426623,"byte_end":426634,"line_start":2008,"line_end":2008,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":426636,"byte_end":426639,"line_start":2009,"line_end":2009,"column_start":2,"column_end":5}},{"value":"/ This essentially splits the bit-slice at `self.len() - by`, then","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":426641,"byte_end":426709,"line_start":2010,"line_end":2010,"column_start":2,"column_end":70}},{"value":"/ exchanges the two pieces. `self[len - by ..]` becomes the first section,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":426711,"byte_end":426787,"line_start":2011,"line_end":2011,"column_start":2,"column_end":78}},{"value":"/ and is then followed by `self[.. len - by]`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":426789,"byte_end":426837,"line_start":2012,"line_end":2012,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":426839,"byte_end":426842,"line_start":2013,"line_end":2013,"column_start":2,"column_end":5}},{"value":"/ The implementation is batch-accelerated where possible. It should have a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":426844,"byte_end":426920,"line_start":2014,"line_end":2014,"column_start":2,"column_end":78}},{"value":"/ runtime complexity much lower than `O(by)`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":426922,"byte_end":426969,"line_start":2015,"line_end":2015,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":426971,"byte_end":426974,"line_start":2016,"line_end":2016,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":426976,"byte_end":426991,"line_start":2017,"line_end":2017,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":426993,"byte_end":426996,"line_start":2018,"line_end":2018,"column_start":2,"column_end":5}},{"value":"/ [`slice::rotate_right`](https://doc.rust-lang.org/std/primitive.slice.html#method.rotate_right)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":426998,"byte_end":427097,"line_start":2019,"line_end":2019,"column_start":2,"column_end":101}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":427099,"byte_end":427102,"line_start":2020,"line_end":2020,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":427104,"byte_end":427119,"line_start":2021,"line_end":2021,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":427121,"byte_end":427124,"line_start":2022,"line_end":2022,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":427126,"byte_end":427137,"line_start":2023,"line_end":2023,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":427139,"byte_end":427166,"line_start":2024,"line_end":2024,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":427168,"byte_end":427171,"line_start":2025,"line_end":2025,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0, 0, 1, 1, 1, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":427173,"byte_end":427216,"line_start":2026,"line_end":2026,"column_start":2,"column_end":45}},{"value":"/ //            split occurs here ^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":427218,"byte_end":427255,"line_start":2027,"line_end":2027,"column_start":2,"column_end":39}},{"value":"/ bits.rotate_right(2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":427257,"byte_end":427282,"line_start":2028,"line_end":2028,"column_start":2,"column_end":27}},{"value":"/ assert_eq!(bits, bits![1, 0, 0, 0, 1, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":427284,"byte_end":427330,"line_start":2029,"line_end":2029,"column_start":2,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":427332,"byte_end":427339,"line_start":2030,"line_end":2030,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3312},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428526,"byte_end":428530,"line_start":2074,"line_end":2074,"column_start":9,"column_end":13},"name":"fill","qualname":"<BitSlice<T, O>>::fill","value":"pub fn fill(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Fills the bit-slice with a given bit.","sig":null,"attributes":[{"value":"/ Fills the bit-slice with a given bit.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":427965,"byte_end":428006,"line_start":2055,"line_end":2055,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428008,"byte_end":428011,"line_start":2056,"line_end":2056,"column_start":2,"column_end":5}},{"value":"/ This is a recent stabilization in the standard library. `bitvec`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428013,"byte_end":428081,"line_start":2057,"line_end":2057,"column_start":2,"column_end":70}},{"value":"/ previously offered this behavior as the novel API `.set_all()`. That","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428083,"byte_end":428155,"line_start":2058,"line_end":2058,"column_start":2,"column_end":74}},{"value":"/ method name is now removed in favor of this standard-library analogue.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428157,"byte_end":428231,"line_start":2059,"line_end":2059,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428233,"byte_end":428236,"line_start":2060,"line_end":2060,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428238,"byte_end":428253,"line_start":2061,"line_end":2061,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428255,"byte_end":428258,"line_start":2062,"line_end":2062,"column_start":2,"column_end":5}},{"value":"/ [`slice::fill`](https://doc.rust-lang.org/std/primitive.slice.html#method.fill)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428260,"byte_end":428343,"line_start":2063,"line_end":2063,"column_start":2,"column_end":85}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428345,"byte_end":428348,"line_start":2064,"line_end":2064,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428350,"byte_end":428365,"line_start":2065,"line_end":2065,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428367,"byte_end":428370,"line_start":2066,"line_end":2066,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428372,"byte_end":428383,"line_start":2067,"line_end":2067,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428385,"byte_end":428412,"line_start":2068,"line_end":2068,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428414,"byte_end":428417,"line_start":2069,"line_end":2069,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0; 5];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428419,"byte_end":428450,"line_start":2070,"line_end":2070,"column_start":2,"column_end":33}},{"value":"/ bits.fill(true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428452,"byte_end":428472,"line_start":2071,"line_end":2071,"column_start":2,"column_end":22}},{"value":"/ assert_eq!(bits, bits![1; 5]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428474,"byte_end":428508,"line_start":2072,"line_end":2072,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428510,"byte_end":428517,"line_start":2073,"line_end":2073,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3313},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429178,"byte_end":429187,"line_start":2102,"line_end":2102,"column_start":9,"column_end":18},"name":"fill_with","qualname":"<BitSlice<T, O>>::fill_with","value":"pub fn fill_with<F>(&mut Self, F) where F: FnMut(usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Fills the bit-slice with bits produced by a generator function.","sig":null,"attributes":[{"value":"/ Fills the bit-slice with bits produced by a generator function.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428647,"byte_end":428714,"line_start":2082,"line_end":2082,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428716,"byte_end":428719,"line_start":2083,"line_end":2083,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428721,"byte_end":428736,"line_start":2084,"line_end":2084,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428738,"byte_end":428741,"line_start":2085,"line_end":2085,"column_start":2,"column_end":5}},{"value":"/ [`slice::fill_with`](https://doc.rust-lang.org/std/primitive.slice.html#method.fill_with)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428743,"byte_end":428836,"line_start":2086,"line_end":2086,"column_start":2,"column_end":95}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428838,"byte_end":428841,"line_start":2087,"line_end":2087,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428843,"byte_end":428865,"line_start":2088,"line_end":2088,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428867,"byte_end":428870,"line_start":2089,"line_end":2089,"column_start":2,"column_end":5}},{"value":"/ The generator function receives the index of the bit being initialized","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428872,"byte_end":428946,"line_start":2090,"line_end":2090,"column_start":2,"column_end":76}},{"value":"/ as an argument.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428948,"byte_end":428967,"line_start":2091,"line_end":2091,"column_start":2,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428969,"byte_end":428972,"line_start":2092,"line_end":2092,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428974,"byte_end":428989,"line_start":2093,"line_end":2093,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428991,"byte_end":428994,"line_start":2094,"line_end":2094,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":428996,"byte_end":429007,"line_start":2095,"line_end":2095,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429009,"byte_end":429036,"line_start":2096,"line_end":2096,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429038,"byte_end":429041,"line_start":2097,"line_end":2097,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0; 5];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429043,"byte_end":429074,"line_start":2098,"line_end":2098,"column_start":2,"column_end":33}},{"value":"/ bits.fill_with(|idx| idx % 2 == 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429076,"byte_end":429115,"line_start":2099,"line_end":2099,"column_start":2,"column_end":41}},{"value":"/ assert_eq!(bits, bits![1, 0, 1, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429117,"byte_end":429160,"line_start":2100,"line_end":2100,"column_start":2,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429162,"byte_end":429169,"line_start":2101,"line_end":2101,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3315},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429519,"byte_end":429535,"line_start":2114,"line_end":2114,"column_start":9,"column_end":25},"name":"clone_from_slice","qualname":"<BitSlice<T, O>>::clone_from_slice","value":"pub fn clone_from_slice<T2, O2>(&mut Self, &BitSlice<T2, O2>) where\nT2: BitStore, O2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429361,"byte_end":429391,"line_start":2111,"line_end":2111,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.clone_from_bitslice()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429393,"byte_end":429447,"line_start":2112,"line_end":2112,"column_start":2,"column_end":56}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429449,"byte_end":429510,"line_start":2113,"line_end":2113,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429816,"byte_end":429831,"line_start":2125,"line_end":2125,"column_start":9,"column_end":24},"name":"copy_from_slice","qualname":"<BitSlice<T, O>>::copy_from_slice","value":"pub fn copy_from_slice(&mut Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429659,"byte_end":429689,"line_start":2122,"line_end":2122,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.copy_from_bitslice()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429691,"byte_end":429744,"line_start":2123,"line_end":2123,"column_start":2,"column_end":55}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429746,"byte_end":429807,"line_start":2124,"line_end":2124,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430909,"byte_end":430920,"line_start":2157,"line_end":2157,"column_start":9,"column_end":20},"name":"copy_within","qualname":"<BitSlice<T, O>>::copy_within","value":"pub fn copy_within<R>(&mut Self, R, usize) where R: RangeExt<usize>","parent":null,"children":[],"decl_id":null,"docs":" Copies a span of bits to another location in the bit-slice.","sig":null,"attributes":[{"value":"/ Copies a span of bits to another location in the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429893,"byte_end":429956,"line_start":2129,"line_end":2129,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429958,"byte_end":429961,"line_start":2130,"line_end":2130,"column_start":2,"column_end":5}},{"value":"/ `src` is the range of bit-indices in the bit-slice to copy, and `dest is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":429963,"byte_end":430039,"line_start":2131,"line_end":2131,"column_start":2,"column_end":78}},{"value":"/ the starting index of the destination range. `src` and `dest .. dest +","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430041,"byte_end":430115,"line_start":2132,"line_end":2132,"column_start":2,"column_end":76}},{"value":"/ src.len()` are permitted to overlap; the copy will automatically detect","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430117,"byte_end":430192,"line_start":2133,"line_end":2133,"column_start":2,"column_end":77}},{"value":"/ and manage this. However, both `src` and `dest .. dest + src.len()`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430194,"byte_end":430265,"line_start":2134,"line_end":2134,"column_start":2,"column_end":73}},{"value":"/ **must** fall within the bounds of `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430267,"byte_end":430313,"line_start":2135,"line_end":2135,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430315,"byte_end":430318,"line_start":2136,"line_end":2136,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430320,"byte_end":430335,"line_start":2137,"line_end":2137,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430337,"byte_end":430340,"line_start":2138,"line_end":2138,"column_start":2,"column_end":5}},{"value":"/ [`slice::copy_within`](https://doc.rust-lang.org/std/primitive.slice.html#method.copy_within)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430342,"byte_end":430439,"line_start":2139,"line_end":2139,"column_start":2,"column_end":99}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430441,"byte_end":430444,"line_start":2140,"line_end":2140,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430446,"byte_end":430459,"line_start":2141,"line_end":2141,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430461,"byte_end":430464,"line_start":2142,"line_end":2142,"column_start":2,"column_end":5}},{"value":"/ This panics if either the source or destination range exceed","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430466,"byte_end":430530,"line_start":2143,"line_end":2143,"column_start":2,"column_end":66}},{"value":"/ `self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430532,"byte_end":430549,"line_start":2144,"line_end":2144,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430551,"byte_end":430554,"line_start":2145,"line_end":2145,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430556,"byte_end":430571,"line_start":2146,"line_end":2146,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430573,"byte_end":430576,"line_start":2147,"line_end":2147,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430578,"byte_end":430589,"line_start":2148,"line_end":2148,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430591,"byte_end":430618,"line_start":2149,"line_end":2149,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430620,"byte_end":430623,"line_start":2150,"line_end":2150,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430625,"byte_end":430686,"line_start":2151,"line_end":2151,"column_start":2,"column_end":63}},{"value":"/ bits.copy_within(1 .. 5, 8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430688,"byte_end":430720,"line_start":2152,"line_end":2152,"column_start":2,"column_end":34}},{"value":"/ //                        v  v  v  v","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430722,"byte_end":430762,"line_start":2153,"line_end":2153,"column_start":2,"column_end":42}},{"value":"/ assert_eq!(bits, bits![1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430764,"byte_end":430828,"line_start":2154,"line_end":2154,"column_start":2,"column_end":66}},{"value":"/ //                                             ^  ^  ^  ^","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430830,"byte_end":430891,"line_start":2155,"line_end":2155,"column_start":2,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":430893,"byte_end":430900,"line_start":2156,"line_end":2156,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3321},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":431416,"byte_end":431431,"line_start":2172,"line_end":2172,"column_start":9,"column_end":24},"name":"swap_with_slice","qualname":"<BitSlice<T, O>>::swap_with_slice","value":"pub fn swap_with_slice<T2, O2>(&mut Self, &mut BitSlice<T2, O2>) where\nT2: BitStore, O2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"use `.swap_with_bitslice()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":431291,"byte_end":431344,"line_start":2170,"line_end":2170,"column_start":2,"column_end":55}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":431346,"byte_end":431407,"line_start":2171,"line_end":2171,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3324},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432987,"byte_end":432995,"line_start":2221,"line_end":2221,"column_start":16,"column_end":24},"name":"align_to","qualname":"<BitSlice<T, O>>::align_to","value":"pub unsafe fn align_to<U>(&Self) -> (&Self, &BitSlice<U, O>, &Self) where\nU: BitStore","parent":null,"children":[],"decl_id":null,"docs":" Produces bit-slice view(s) with different underlying storage types.","sig":null,"attributes":[{"value":"/ Produces bit-slice view(s) with different underlying storage types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":431562,"byte_end":431633,"line_start":2180,"line_end":2180,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":431635,"byte_end":431638,"line_start":2181,"line_end":2181,"column_start":2,"column_end":5}},{"value":"/ This may have unexpected effects, and you cannot assume that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":431640,"byte_end":431704,"line_start":2182,"line_end":2182,"column_start":2,"column_end":66}},{"value":"/ `before[idx] == after[idx]`! Consult the [tables in the manual][layout]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":431706,"byte_end":431781,"line_start":2183,"line_end":2183,"column_start":2,"column_end":77}},{"value":"/ for information about memory layouts.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":431783,"byte_end":431824,"line_start":2184,"line_end":2184,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":431826,"byte_end":431829,"line_start":2185,"line_end":2185,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":431831,"byte_end":431846,"line_start":2186,"line_end":2186,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":431848,"byte_end":431851,"line_start":2187,"line_end":2187,"column_start":2,"column_end":5}},{"value":"/ [`slice::align_to`](https://doc.rust-lang.org/std/primitive.slice.html#method.align_to)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":431853,"byte_end":431944,"line_start":2188,"line_end":2188,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":431946,"byte_end":431949,"line_start":2189,"line_end":2189,"column_start":2,"column_end":5}},{"value":"/ ## Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":431951,"byte_end":431963,"line_start":2190,"line_end":2190,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":431965,"byte_end":431968,"line_start":2191,"line_end":2191,"column_start":2,"column_end":5}},{"value":"/ Unlike the standard library documentation, this explicitly guarantees","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":431970,"byte_end":432043,"line_start":2192,"line_end":2192,"column_start":2,"column_end":75}},{"value":"/ that the middle bit-slice will have maximal size. You may rely on this","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432045,"byte_end":432119,"line_start":2193,"line_end":2193,"column_start":2,"column_end":76}},{"value":"/ property.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432121,"byte_end":432134,"line_start":2194,"line_end":2194,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432136,"byte_end":432139,"line_start":2195,"line_end":2195,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432141,"byte_end":432154,"line_start":2196,"line_end":2196,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432156,"byte_end":432159,"line_start":2197,"line_end":2197,"column_start":2,"column_end":5}},{"value":"/ You may not use this to cast away alias protections. Rust does not have","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432161,"byte_end":432236,"line_start":2198,"line_end":2198,"column_start":2,"column_end":77}},{"value":"/ support for higher-kinded types, so this cannot express the relation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432238,"byte_end":432310,"line_start":2199,"line_end":2199,"column_start":2,"column_end":74}},{"value":"/ `Outer<T> -> Outer<U> where Outer: BitStoreContainer`, but memory safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432312,"byte_end":432388,"line_start":2200,"line_end":2200,"column_start":2,"column_end":78}},{"value":"/ does require that you respect this rule. Reälign integers to integers,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432390,"byte_end":432465,"line_start":2201,"line_end":2201,"column_start":2,"column_end":76}},{"value":"/ `Cell`s to `Cell`s, and atomics to atomics, but do not cross these","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432467,"byte_end":432537,"line_start":2202,"line_end":2202,"column_start":2,"column_end":72}},{"value":"/ boundaries.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432539,"byte_end":432554,"line_start":2203,"line_end":2203,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432556,"byte_end":432559,"line_start":2204,"line_end":2204,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432561,"byte_end":432576,"line_start":2205,"line_end":2205,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432578,"byte_end":432581,"line_start":2206,"line_end":2206,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432583,"byte_end":432594,"line_start":2207,"line_end":2207,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432596,"byte_end":432623,"line_start":2208,"line_end":2208,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432625,"byte_end":432628,"line_start":2209,"line_end":2209,"column_start":2,"column_end":5}},{"value":"/ let bytes: [u8; 7] = [1, 2, 3, 4, 5, 6, 7];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432630,"byte_end":432677,"line_start":2210,"line_end":2210,"column_start":2,"column_end":49}},{"value":"/ let bits = bytes.view_bits::<Lsb0>();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432679,"byte_end":432720,"line_start":2211,"line_end":2211,"column_start":2,"column_end":43}},{"value":"/ let (pfx, mid, sfx) = unsafe {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432722,"byte_end":432756,"line_start":2212,"line_end":2212,"column_start":2,"column_end":36}},{"value":"/   bits.align_to::<u16>()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432758,"byte_end":432786,"line_start":2213,"line_end":2213,"column_start":2,"column_end":30}},{"value":"/ };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432788,"byte_end":432794,"line_start":2214,"line_end":2214,"column_start":2,"column_end":8}},{"value":"/ assert!(pfx.len() <= 8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432796,"byte_end":432824,"line_start":2215,"line_end":2215,"column_start":2,"column_end":30}},{"value":"/ assert_eq!(mid.len(), 48);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432826,"byte_end":432856,"line_start":2216,"line_end":2216,"column_start":2,"column_end":32}},{"value":"/ assert!(sfx.len() <= 8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432858,"byte_end":432886,"line_start":2217,"line_end":2217,"column_start":2,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432888,"byte_end":432895,"line_start":2218,"line_end":2218,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432897,"byte_end":432900,"line_start":2219,"line_end":2219,"column_start":2,"column_end":5}},{"value":"/ [layout]: https://bitvecto-rs.github.io/bitvec/memory-layout.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":432902,"byte_end":432971,"line_start":2220,"line_end":2220,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3326},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434651,"byte_end":434663,"line_start":2272,"line_end":2272,"column_start":16,"column_end":28},"name":"align_to_mut","qualname":"<BitSlice<T, O>>::align_to_mut","value":"pub unsafe fn align_to_mut<U>(&mut Self)\n-> (&mut Self, &mut BitSlice<U, O>, &mut Self) where U: BitStore","parent":null,"children":[],"decl_id":null,"docs":" Produces bit-slice view(s) with different underlying storage types.","sig":null,"attributes":[{"value":"/ Produces bit-slice view(s) with different underlying storage types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433206,"byte_end":433277,"line_start":2231,"line_end":2231,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433279,"byte_end":433282,"line_start":2232,"line_end":2232,"column_start":2,"column_end":5}},{"value":"/ This may have unexpected effects, and you cannot assume that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433284,"byte_end":433348,"line_start":2233,"line_end":2233,"column_start":2,"column_end":66}},{"value":"/ `before[idx] == after[idx]`! Consult the [tables in the manual][layout]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433350,"byte_end":433425,"line_start":2234,"line_end":2234,"column_start":2,"column_end":77}},{"value":"/ for information about memory layouts.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433427,"byte_end":433468,"line_start":2235,"line_end":2235,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433470,"byte_end":433473,"line_start":2236,"line_end":2236,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433475,"byte_end":433490,"line_start":2237,"line_end":2237,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433492,"byte_end":433495,"line_start":2238,"line_end":2238,"column_start":2,"column_end":5}},{"value":"/ [`slice::align_to_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.align_to_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433497,"byte_end":433596,"line_start":2239,"line_end":2239,"column_start":2,"column_end":101}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433598,"byte_end":433601,"line_start":2240,"line_end":2240,"column_start":2,"column_end":5}},{"value":"/ ## Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433603,"byte_end":433615,"line_start":2241,"line_end":2241,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433617,"byte_end":433620,"line_start":2242,"line_end":2242,"column_start":2,"column_end":5}},{"value":"/ Unlike the standard library documentation, this explicitly guarantees","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433622,"byte_end":433695,"line_start":2243,"line_end":2243,"column_start":2,"column_end":75}},{"value":"/ that the middle bit-slice will have maximal size. You may rely on this","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433697,"byte_end":433771,"line_start":2244,"line_end":2244,"column_start":2,"column_end":76}},{"value":"/ property.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433773,"byte_end":433786,"line_start":2245,"line_end":2245,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433788,"byte_end":433791,"line_start":2246,"line_end":2246,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433793,"byte_end":433806,"line_start":2247,"line_end":2247,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433808,"byte_end":433811,"line_start":2248,"line_end":2248,"column_start":2,"column_end":5}},{"value":"/ You may not use this to cast away alias protections. Rust does not have","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433813,"byte_end":433888,"line_start":2249,"line_end":2249,"column_start":2,"column_end":77}},{"value":"/ support for higher-kinded types, so this cannot express the relation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433890,"byte_end":433962,"line_start":2250,"line_end":2250,"column_start":2,"column_end":74}},{"value":"/ `Outer<T> -> Outer<U> where Outer: BitStoreContainer`, but memory safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":433964,"byte_end":434040,"line_start":2251,"line_end":2251,"column_start":2,"column_end":78}},{"value":"/ does require that you respect this rule. Reälign integers to integers,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434042,"byte_end":434117,"line_start":2252,"line_end":2252,"column_start":2,"column_end":76}},{"value":"/ `Cell`s to `Cell`s, and atomics to atomics, but do not cross these","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434119,"byte_end":434189,"line_start":2253,"line_end":2253,"column_start":2,"column_end":72}},{"value":"/ boundaries.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434191,"byte_end":434206,"line_start":2254,"line_end":2254,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434208,"byte_end":434211,"line_start":2255,"line_end":2255,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434213,"byte_end":434228,"line_start":2256,"line_end":2256,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434230,"byte_end":434233,"line_start":2257,"line_end":2257,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434235,"byte_end":434246,"line_start":2258,"line_end":2258,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434248,"byte_end":434275,"line_start":2259,"line_end":2259,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434277,"byte_end":434280,"line_start":2260,"line_end":2260,"column_start":2,"column_end":5}},{"value":"/ let mut bytes: [u8; 7] = [1, 2, 3, 4, 5, 6, 7];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434282,"byte_end":434333,"line_start":2261,"line_end":2261,"column_start":2,"column_end":53}},{"value":"/ let bits = bytes.view_bits_mut::<Lsb0>();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434335,"byte_end":434380,"line_start":2262,"line_end":2262,"column_start":2,"column_end":47}},{"value":"/ let (pfx, mid, sfx) = unsafe {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434382,"byte_end":434416,"line_start":2263,"line_end":2263,"column_start":2,"column_end":36}},{"value":"/   bits.align_to_mut::<u16>()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434418,"byte_end":434450,"line_start":2264,"line_end":2264,"column_start":2,"column_end":34}},{"value":"/ };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434452,"byte_end":434458,"line_start":2265,"line_end":2265,"column_start":2,"column_end":8}},{"value":"/ assert!(pfx.len() <= 8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434460,"byte_end":434488,"line_start":2266,"line_end":2266,"column_start":2,"column_end":30}},{"value":"/ assert_eq!(mid.len(), 48);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434490,"byte_end":434520,"line_start":2267,"line_end":2267,"column_start":2,"column_end":32}},{"value":"/ assert!(sfx.len() <= 8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434522,"byte_end":434550,"line_start":2268,"line_end":2268,"column_start":2,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434552,"byte_end":434559,"line_start":2269,"line_end":2269,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434561,"byte_end":434564,"line_start":2270,"line_end":2270,"column_start":2,"column_end":5}},{"value":"/ [layout]: https://bitvecto-rs.github.io/bitvec/memory-layout.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434566,"byte_end":434635,"line_start":2271,"line_end":2271,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3331},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435106,"byte_end":435112,"line_start":2293,"line_end":2293,"column_start":9,"column_end":15},"name":"to_vec","qualname":"<BitSlice<T, O>>::to_vec","value":"pub fn to_vec(&Self) -> BitVec<T::Unalias, O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"use `.to_bitvec()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434990,"byte_end":435034,"line_start":2291,"line_end":2291,"column_start":2,"column_end":46}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435036,"byte_end":435097,"line_start":2292,"line_end":2292,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435804,"byte_end":435810,"line_start":2322,"line_end":2322,"column_start":9,"column_end":15},"name":"repeat","qualname":"<BitSlice<T, O>>::repeat","value":"pub fn repeat(&Self, usize) -> BitVec<T::Unalias, O>","parent":null,"children":[],"decl_id":null,"docs":" Creates a bit-vector by repeating a bit-slice `n` times.","sig":null,"attributes":[{"value":"/ Creates a bit-vector by repeating a bit-slice `n` times.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435171,"byte_end":435231,"line_start":2297,"line_end":2297,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435233,"byte_end":435236,"line_start":2298,"line_end":2298,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435238,"byte_end":435253,"line_start":2299,"line_end":2299,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435255,"byte_end":435258,"line_start":2300,"line_end":2300,"column_start":2,"column_end":5}},{"value":"/ [`slice::repeat`](https://doc.rust-lang.org/std/primitive.slice.html#method.repeat)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435260,"byte_end":435347,"line_start":2301,"line_end":2301,"column_start":2,"column_end":89}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435349,"byte_end":435352,"line_start":2302,"line_end":2302,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435354,"byte_end":435367,"line_start":2303,"line_end":2303,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435369,"byte_end":435372,"line_start":2304,"line_end":2304,"column_start":2,"column_end":5}},{"value":"/ This method panics if `self.len() * n` exceeds the `BitVec` capacity.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435374,"byte_end":435447,"line_start":2305,"line_end":2305,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435449,"byte_end":435452,"line_start":2306,"line_end":2306,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435454,"byte_end":435469,"line_start":2307,"line_end":2307,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435471,"byte_end":435474,"line_start":2308,"line_end":2308,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435476,"byte_end":435487,"line_start":2309,"line_end":2309,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435489,"byte_end":435516,"line_start":2310,"line_end":2310,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435518,"byte_end":435521,"line_start":2311,"line_end":2311,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(bits![0, 1].repeat(3), bitvec![0, 1, 0, 1, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435523,"byte_end":435588,"line_start":2312,"line_end":2312,"column_start":2,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435590,"byte_end":435597,"line_start":2313,"line_end":2313,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435599,"byte_end":435602,"line_start":2314,"line_end":2314,"column_start":2,"column_end":5}},{"value":"/ This panics by exceeding bit-vector maximum capacity:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435604,"byte_end":435661,"line_start":2315,"line_end":2315,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435663,"byte_end":435666,"line_start":2316,"line_end":2316,"column_start":2,"column_end":5}},{"value":"/ ```rust,should_panic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435668,"byte_end":435692,"line_start":2317,"line_end":2317,"column_start":2,"column_end":26}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435694,"byte_end":435721,"line_start":2318,"line_end":2318,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435723,"byte_end":435726,"line_start":2319,"line_end":2319,"column_start":2,"column_end":5}},{"value":"/ bits![0, 1].repeat(BitSlice::<usize, Lsb0>::MAX_BITS);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435728,"byte_end":435786,"line_start":2320,"line_end":2320,"column_start":2,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":435788,"byte_end":435795,"line_start":2321,"line_end":2321,"column_start":2,"column_end":9}}]},{"kind":"Function","id":{"krate":0,"index":3333},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":436536,"byte_end":436544,"line_start":2345,"line_end":2345,"column_start":8,"column_end":16},"name":"from_ref","qualname":"::slice::api::from_ref","value":"pub fn from_ref<T, O>(&T) -> &BitSlice<T, O> where T: BitStore, O: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":436410,"byte_end":436471,"line_start":2343,"line_end":2343,"column_start":1,"column_end":62}},{"value":"deprecated = \"use `BitSlice::from_element()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":436472,"byte_end":436528,"line_start":2344,"line_end":2344,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":3336},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":436779,"byte_end":436787,"line_start":2355,"line_end":2355,"column_start":8,"column_end":16},"name":"from_mut","qualname":"::slice::api::from_mut","value":"pub fn from_mut<T, O>(&mut T) -> &mut BitSlice<T, O> where T: BitStore,\nO: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":436649,"byte_end":436710,"line_start":2353,"line_end":2353,"column_start":1,"column_end":62}},{"value":"deprecated = \"use `BitSlice::from_element_mut()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":436711,"byte_end":436771,"line_start":2354,"line_end":2354,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":3339},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":436977,"byte_end":436991,"line_start":2364,"line_end":2364,"column_start":15,"column_end":29},"name":"from_raw_parts","qualname":"::slice::api::from_raw_parts","value":"pub unsafe fn from_raw_parts<'a, T, O>(BitPtr<Const, T, O>, usize)\n-> Result<&'a BitSlice<T, O>, BitSpanError<T>> where O: BitOrder, T: 'a +\nBitStore","parent":null,"children":[],"decl_id":null,"docs":"# Raw Bit-Slice Construction","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3344},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":437274,"byte_end":437292,"line_start":2376,"line_end":2376,"column_start":15,"column_end":33},"name":"from_raw_parts_mut","qualname":"::slice::api::from_raw_parts_mut","value":"pub unsafe fn from_raw_parts_mut<'a, T, O>(BitPtr<Mut, T, O>, usize)\n-> Result<&'a mut BitSlice<T, O>, BitSpanError<T>> where O: BitOrder, T: 'a +\nBitStore","parent":null,"children":[],"decl_id":null,"docs":"# Raw Bit-Slice Construction","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3349},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":437568,"byte_end":437581,"line_start":2388,"line_end":2388,"column_start":11,"column_end":24},"name":"BitSliceIndex","qualname":"::slice::api::BitSliceIndex","value":"BitSliceIndex<'a, T, O>","parent":null,"children":[{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3357},{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3360}],"decl_id":null,"docs":"# Bit-Slice Indexing","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3353},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":437676,"byte_end":437681,"line_start":2394,"line_end":2394,"column_start":7,"column_end":12},"name":"Immut","qualname":"::slice::api::BitSliceIndex::Immut","value":"type Immut;","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" The output type of immutable access.\n","sig":null,"attributes":[{"value":"/ The output type of immutable access.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":437629,"byte_end":437669,"line_start":2393,"line_end":2393,"column_start":2,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":3354},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":437730,"byte_end":437733,"line_start":2397,"line_end":2397,"column_start":7,"column_end":10},"name":"Mut","qualname":"::slice::api::BitSliceIndex::Mut","value":"type Mut;","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" The output type of mutable access.\n","sig":null,"attributes":[{"value":"/ The output type of mutable access.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":437685,"byte_end":437723,"line_start":2396,"line_end":2396,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3355},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":437913,"byte_end":437916,"line_start":2405,"line_end":2405,"column_start":5,"column_end":8},"name":"get","qualname":"::slice::api::BitSliceIndex::get","value":"pub fn get(Self, &'a BitSlice<T, O>) -> Option<Self::Immut>","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" Immutably indexes into a bit-slice, returning `None` if `self` is out of\n bounds.","sig":null,"attributes":[{"value":"/ Immutably indexes into a bit-slice, returning `None` if `self` is out of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":437737,"byte_end":437813,"line_start":2399,"line_end":2399,"column_start":2,"column_end":78}},{"value":"/ bounds.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":437815,"byte_end":437826,"line_start":2400,"line_end":2400,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":437828,"byte_end":437831,"line_start":2401,"line_end":2401,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":437833,"byte_end":437848,"line_start":2402,"line_end":2402,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":437850,"byte_end":437853,"line_start":2403,"line_end":2403,"column_start":2,"column_end":5}},{"value":"/ [`SliceIndex::get`](core::slice::SliceIndex::get)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":437855,"byte_end":437908,"line_start":2404,"line_end":2404,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438157,"byte_end":438164,"line_start":2413,"line_end":2413,"column_start":5,"column_end":12},"name":"get_mut","qualname":"::slice::api::BitSliceIndex::get_mut","value":"pub fn get_mut(Self, &'a mut BitSlice<T, O>) -> Option<Self::Mut>","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" Mutably indexes into a bit-slice, returning `None` if `self` is out of\n bounds.","sig":null,"attributes":[{"value":"/ Mutably indexes into a bit-slice, returning `None` if `self` is out of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":437975,"byte_end":438049,"line_start":2407,"line_end":2407,"column_start":2,"column_end":76}},{"value":"/ bounds.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438051,"byte_end":438062,"line_start":2408,"line_end":2408,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438064,"byte_end":438067,"line_start":2409,"line_end":2409,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438069,"byte_end":438084,"line_start":2410,"line_end":2410,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438086,"byte_end":438089,"line_start":2411,"line_end":2411,"column_start":2,"column_end":5}},{"value":"/ [`SliceIndex::get_mut`](core::slice::SliceIndex::get_mut)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438091,"byte_end":438152,"line_start":2412,"line_end":2412,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3357},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438647,"byte_end":438660,"line_start":2426,"line_end":2426,"column_start":12,"column_end":25},"name":"get_unchecked","qualname":"::slice::api::BitSliceIndex::get_unchecked","value":"pub unsafe fn get_unchecked(Self, &'a BitSlice<T, O>) -> Self::Immut","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" Immutably indexes into a bit-slice without doing any bounds checking.","sig":null,"attributes":[{"value":"/ Immutably indexes into a bit-slice without doing any bounds checking.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438225,"byte_end":438298,"line_start":2415,"line_end":2415,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438300,"byte_end":438303,"line_start":2416,"line_end":2416,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438305,"byte_end":438320,"line_start":2417,"line_end":2417,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438322,"byte_end":438325,"line_start":2418,"line_end":2418,"column_start":2,"column_end":5}},{"value":"/ [`SliceIndex::get_unchecked`](core::slice::SliceIndex::get_unchecked)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438327,"byte_end":438400,"line_start":2419,"line_end":2419,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438402,"byte_end":438405,"line_start":2420,"line_end":2420,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438407,"byte_end":438420,"line_start":2421,"line_end":2421,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438422,"byte_end":438425,"line_start":2422,"line_end":2422,"column_start":2,"column_end":5}},{"value":"/ If `self` is not in bounds, then memory accesses through it are illegal","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438427,"byte_end":438502,"line_start":2423,"line_end":2423,"column_start":2,"column_end":77}},{"value":"/ and the program becomes undefined. You must ensure that `self` is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438504,"byte_end":438573,"line_start":2424,"line_end":2424,"column_start":2,"column_end":71}},{"value":"/ appropriately within `0 .. bits.len()` at the call site.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438575,"byte_end":438635,"line_start":2425,"line_end":2425,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3358},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439157,"byte_end":439174,"line_start":2441,"line_end":2441,"column_start":12,"column_end":29},"name":"get_unchecked_mut","qualname":"::slice::api::BitSliceIndex::get_unchecked_mut","value":"pub unsafe fn get_unchecked_mut(Self, &'a mut BitSlice<T, O>) -> Self::Mut","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" Mutably indexes into a bit-slice without doing any bounds checking.","sig":null,"attributes":[{"value":"/ Mutably indexes into a bit-slice without doing any bounds checking.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438711,"byte_end":438782,"line_start":2428,"line_end":2428,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438784,"byte_end":438787,"line_start":2429,"line_end":2429,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438789,"byte_end":438804,"line_start":2430,"line_end":2430,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438806,"byte_end":438809,"line_start":2431,"line_end":2431,"column_start":2,"column_end":5}},{"value":"/ [`SliceIndex::get_unchecked_mut`][0]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438811,"byte_end":438851,"line_start":2432,"line_end":2432,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438853,"byte_end":438856,"line_start":2433,"line_end":2433,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438858,"byte_end":438871,"line_start":2434,"line_end":2434,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438873,"byte_end":438876,"line_start":2435,"line_end":2435,"column_start":2,"column_end":5}},{"value":"/ If `self` is not in bounds, then memory accesses through it bare illegal","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438878,"byte_end":438954,"line_start":2436,"line_end":2436,"column_start":2,"column_end":78}},{"value":"/ and the program becomes undefined. You must ensure that `self` is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":438956,"byte_end":439025,"line_start":2437,"line_end":2437,"column_start":2,"column_end":71}},{"value":"/ appropriately within `0 .. bits.len()` at the call site.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439027,"byte_end":439087,"line_start":2438,"line_end":2438,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439089,"byte_end":439092,"line_start":2439,"line_end":2439,"column_start":2,"column_end":5}},{"value":"/ [0]: core::slice::SliceIndex::get_unchecked_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439094,"byte_end":439145,"line_start":2440,"line_end":2440,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3359},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439517,"byte_end":439522,"line_start":2455,"line_end":2455,"column_start":5,"column_end":10},"name":"index","qualname":"::slice::api::BitSliceIndex::index","value":"pub fn index(Self, &'a BitSlice<T, O>) -> Self::Immut","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" Immutably indexes into a bit-slice, panicking if `self` is out of\n bounds.","sig":null,"attributes":[{"value":"/ Immutably indexes into a bit-slice, panicking if `self` is out of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439228,"byte_end":439297,"line_start":2444,"line_end":2444,"column_start":2,"column_end":71}},{"value":"/ bounds.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439299,"byte_end":439310,"line_start":2445,"line_end":2445,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439312,"byte_end":439315,"line_start":2446,"line_end":2446,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439317,"byte_end":439332,"line_start":2447,"line_end":2447,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439334,"byte_end":439337,"line_start":2448,"line_end":2448,"column_start":2,"column_end":5}},{"value":"/ [`SliceIndex::index`](core::slice::SliceIndex::index)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439339,"byte_end":439396,"line_start":2449,"line_end":2449,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439398,"byte_end":439401,"line_start":2450,"line_end":2450,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439403,"byte_end":439416,"line_start":2451,"line_end":2451,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439418,"byte_end":439421,"line_start":2452,"line_end":2452,"column_start":2,"column_end":5}},{"value":"/ Implementations are required to panic if `self` exceeds `bits.len()` in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439423,"byte_end":439498,"line_start":2453,"line_end":2453,"column_start":2,"column_end":77}},{"value":"/ any way.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439500,"byte_end":439512,"line_start":2454,"line_end":2454,"column_start":2,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3360},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439855,"byte_end":439864,"line_start":2467,"line_end":2467,"column_start":5,"column_end":14},"name":"index_mut","qualname":"::slice::api::BitSliceIndex::index_mut","value":"pub fn index_mut(Self, &'a mut BitSlice<T, O>) -> Self::Mut","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" Mutably indexes into a bit-slice, panicking if `self` is out of bounds.","sig":null,"attributes":[{"value":"/ Mutably indexes into a bit-slice, panicking if `self` is out of bounds.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439573,"byte_end":439648,"line_start":2457,"line_end":2457,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439650,"byte_end":439653,"line_start":2458,"line_end":2458,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439655,"byte_end":439670,"line_start":2459,"line_end":2459,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439672,"byte_end":439675,"line_start":2460,"line_end":2460,"column_start":2,"column_end":5}},{"value":"/ [`SliceIndex::index`](core::slice::SliceIndex::index)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439677,"byte_end":439734,"line_start":2461,"line_end":2461,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439736,"byte_end":439739,"line_start":2462,"line_end":2462,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439741,"byte_end":439754,"line_start":2463,"line_end":2463,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439756,"byte_end":439759,"line_start":2464,"line_end":2464,"column_start":2,"column_end":5}},{"value":"/ Implementations are required to panic if `self` exceeds `bits.len()` in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439761,"byte_end":439836,"line_start":2465,"line_end":2465,"column_start":2,"column_end":77}},{"value":"/ any way.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":439838,"byte_end":439850,"line_start":2466,"line_end":2466,"column_start":2,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3461},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":445939,"byte_end":445943,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"Iter","qualname":"::slice::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3465},{"krate":0,"index":3466}],"decl_id":null,"docs":"# Shared Bit-Slice Iteration","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":445853,"byte_end":445873,"line_start":67,"line_end":67,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3472},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447331,"byte_end":447342,"line_start":120,"line_end":120,"column_start":9,"column_end":20},"name":"as_bitslice","qualname":"<Iter>::as_bitslice","value":"pub fn as_bitslice(&Self) -> &'a BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":" Views the currently unyielded bit-slice.","sig":null,"attributes":[{"value":"/ Views the currently unyielded bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":446659,"byte_end":446703,"line_start":97,"line_end":97,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":446705,"byte_end":446708,"line_start":98,"line_end":98,"column_start":2,"column_end":5}},{"value":"/ Because the iterator is a shared view, the returned bit-slice does not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":446710,"byte_end":446784,"line_start":99,"line_end":99,"column_start":2,"column_end":76}},{"value":"/ cause a lifetime conflict, and the iterator can continue to be used","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":446786,"byte_end":446857,"line_start":100,"line_end":100,"column_start":2,"column_end":73}},{"value":"/ while it exists.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":446859,"byte_end":446879,"line_start":101,"line_end":101,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":446881,"byte_end":446884,"line_start":102,"line_end":102,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":446886,"byte_end":446901,"line_start":103,"line_end":103,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":446903,"byte_end":446906,"line_start":104,"line_end":104,"column_start":2,"column_end":5}},{"value":"/ [`Iter::as_slice`](core::slice::Iter::as_slice)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":446908,"byte_end":446959,"line_start":105,"line_end":105,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":446961,"byte_end":446964,"line_start":106,"line_end":106,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":446966,"byte_end":446981,"line_start":107,"line_end":107,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":446983,"byte_end":446986,"line_start":108,"line_end":108,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":446988,"byte_end":446999,"line_start":109,"line_end":109,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447001,"byte_end":447028,"line_start":110,"line_end":110,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447030,"byte_end":447033,"line_start":111,"line_end":111,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 0, 1, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447035,"byte_end":447068,"line_start":112,"line_end":112,"column_start":2,"column_end":35}},{"value":"/ let mut iter = bits.iter();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447070,"byte_end":447101,"line_start":113,"line_end":113,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447103,"byte_end":447106,"line_start":114,"line_end":114,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.as_bitslice(), bits![0, 0, 1, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447108,"byte_end":447162,"line_start":115,"line_end":115,"column_start":2,"column_end":56}},{"value":"/ assert!(!*iter.nth(1).unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447164,"byte_end":447200,"line_start":116,"line_end":116,"column_start":2,"column_end":38}},{"value":"/ assert_eq!(iter.as_bitslice(), bits![1, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447202,"byte_end":447250,"line_start":117,"line_end":117,"column_start":2,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447252,"byte_end":447259,"line_start":118,"line_end":118,"column_start":2,"column_end":9}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447261,"byte_end":447322,"line_start":119,"line_end":119,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447596,"byte_end":447604,"line_start":127,"line_end":127,"column_start":9,"column_end":17},"name":"as_slice","qualname":"<Iter>::as_slice","value":"pub fn as_slice(&Self) -> &'a BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447446,"byte_end":447476,"line_start":124,"line_end":124,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.as_bitslice()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447478,"byte_end":447524,"line_start":125,"line_end":125,"column_start":2,"column_end":48}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447526,"byte_end":447587,"line_start":126,"line_end":126,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3474},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448376,"byte_end":448383,"line_start":152,"line_end":152,"column_start":9,"column_end":16},"name":"by_refs","qualname":"<Iter>::by_refs","value":"pub fn by_refs(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Adapts the iterator to yield regular `&bool` references rather than the\n [proxy reference][0].","sig":null,"attributes":[{"value":"/ Adapts the iterator to yield regular `&bool` references rather than the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447662,"byte_end":447737,"line_start":131,"line_end":131,"column_start":2,"column_end":77}},{"value":"/ [proxy reference][0].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447739,"byte_end":447764,"line_start":132,"line_end":132,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447766,"byte_end":447769,"line_start":133,"line_end":133,"column_start":2,"column_end":5}},{"value":"/ This allows the iterator to be used in APIs that expect ordinary","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447771,"byte_end":447839,"line_start":134,"line_end":134,"column_start":2,"column_end":70}},{"value":"/ references. It reads from the proxy and provides an equivalent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447841,"byte_end":447907,"line_start":135,"line_end":135,"column_start":2,"column_end":68}},{"value":"/ `&'static bool`. The address value of the yielded reference is not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447909,"byte_end":447979,"line_start":136,"line_end":136,"column_start":2,"column_end":72}},{"value":"/ related to the addresses covered by the `BitSlice` buffer in any way.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":447981,"byte_end":448054,"line_start":137,"line_end":137,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448056,"byte_end":448059,"line_start":138,"line_end":138,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448061,"byte_end":448076,"line_start":139,"line_end":139,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448078,"byte_end":448081,"line_start":140,"line_end":140,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448083,"byte_end":448094,"line_start":141,"line_end":141,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448096,"byte_end":448123,"line_start":142,"line_end":142,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448125,"byte_end":448128,"line_start":143,"line_end":143,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448130,"byte_end":448157,"line_start":144,"line_end":144,"column_start":2,"column_end":29}},{"value":"/ let mut iter = bits.iter().by_refs();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448159,"byte_end":448200,"line_start":145,"line_end":145,"column_start":2,"column_end":43}},{"value":"/ assert_eq!(iter.next(), Some(&false));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448202,"byte_end":448244,"line_start":146,"line_end":146,"column_start":2,"column_end":44}},{"value":"/ assert_eq!(iter.next(), Some(&true));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448246,"byte_end":448287,"line_start":147,"line_end":147,"column_start":2,"column_end":43}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448289,"byte_end":448324,"line_start":148,"line_end":148,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448326,"byte_end":448333,"line_start":149,"line_end":149,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448335,"byte_end":448338,"line_start":150,"line_end":150,"column_start":2,"column_end":5}},{"value":"/ [0]: crate::ptr::BitRef","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448340,"byte_end":448367,"line_start":151,"line_end":151,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3477},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449674,"byte_end":449681,"line_start":198,"line_end":198,"column_start":9,"column_end":16},"name":"by_vals","qualname":"<Iter>::by_vals","value":"pub fn by_vals(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Adapts the iterator to yield `bool` values rather than the\n [proxy reference][0].","sig":null,"attributes":[{"value":"/ Adapts the iterator to yield `bool` values rather than the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448586,"byte_end":448648,"line_start":165,"line_end":165,"column_start":2,"column_end":64}},{"value":"/ [proxy reference][0].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448650,"byte_end":448675,"line_start":166,"line_end":166,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448677,"byte_end":448680,"line_start":167,"line_end":167,"column_start":2,"column_end":5}},{"value":"/ This allows the iterator to be used in APIs that expect direct values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448682,"byte_end":448756,"line_start":168,"line_end":168,"column_start":2,"column_end":76}},{"value":"/ It dereferences the proxy and yields the referent `bool` directly. It","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448758,"byte_end":448831,"line_start":169,"line_end":169,"column_start":2,"column_end":75}},{"value":"/ replaces `Iterator::copied`, which is not available on this type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448833,"byte_end":448902,"line_start":170,"line_end":170,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448904,"byte_end":448907,"line_start":171,"line_end":171,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448909,"byte_end":448924,"line_start":172,"line_end":172,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448926,"byte_end":448929,"line_start":173,"line_end":173,"column_start":2,"column_end":5}},{"value":"/ [`Iterator::copied`](core::iter::Iterator::copied)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448931,"byte_end":448985,"line_start":174,"line_end":174,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448987,"byte_end":448990,"line_start":175,"line_end":175,"column_start":2,"column_end":5}},{"value":"/ ## Performance","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":448992,"byte_end":449010,"line_start":176,"line_end":176,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449012,"byte_end":449015,"line_start":177,"line_end":177,"column_start":2,"column_end":5}},{"value":"/ This bypasses the construction of a `BitRef` for each yielded bit. Do","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449017,"byte_end":449090,"line_start":178,"line_end":178,"column_start":2,"column_end":75}},{"value":"/ not use `bits.as_bitptr_range().map(|bp| unsafe { bp.read() })` in a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449092,"byte_end":449164,"line_start":179,"line_end":179,"column_start":2,"column_end":74}},{"value":"/ misguided attempt to eke out some additional performance in your code.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449166,"byte_end":449240,"line_start":180,"line_end":180,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449242,"byte_end":449245,"line_start":181,"line_end":181,"column_start":2,"column_end":5}},{"value":"/ This iterator is already the fastest possible walk across a bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449247,"byte_end":449321,"line_start":182,"line_end":182,"column_start":2,"column_end":76}},{"value":"/ You do not need to beat it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449323,"byte_end":449354,"line_start":183,"line_end":183,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449356,"byte_end":449359,"line_start":184,"line_end":184,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449361,"byte_end":449376,"line_start":185,"line_end":185,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449378,"byte_end":449381,"line_start":186,"line_end":186,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449383,"byte_end":449394,"line_start":187,"line_end":187,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449396,"byte_end":449423,"line_start":188,"line_end":188,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449425,"byte_end":449428,"line_start":189,"line_end":189,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449430,"byte_end":449457,"line_start":190,"line_end":190,"column_start":2,"column_end":29}},{"value":"/ let mut iter = bits.iter().by_vals();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449459,"byte_end":449500,"line_start":191,"line_end":191,"column_start":2,"column_end":43}},{"value":"/ assert_eq!(iter.next(), Some(false));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449502,"byte_end":449543,"line_start":192,"line_end":192,"column_start":2,"column_end":43}},{"value":"/ assert_eq!(iter.next(), Some(true));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449545,"byte_end":449585,"line_start":193,"line_end":193,"column_start":2,"column_end":42}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449587,"byte_end":449622,"line_start":194,"line_end":194,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449624,"byte_end":449631,"line_start":195,"line_end":195,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449633,"byte_end":449636,"line_start":196,"line_end":196,"column_start":2,"column_end":5}},{"value":"/ [0]: crate::ptr::BitRef","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449638,"byte_end":449665,"line_start":197,"line_end":197,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3480},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":450584,"byte_end":450590,"line_start":223,"line_end":223,"column_start":9,"column_end":15},"name":"copied","qualname":"<Iter>::copied","value":"pub fn copied(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields `bool` values directly, rather than [proxy references][0].","sig":null,"attributes":[{"value":"/ Yields `bool` values directly, rather than [proxy references][0].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449842,"byte_end":449911,"line_start":208,"line_end":208,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449913,"byte_end":449916,"line_start":209,"line_end":209,"column_start":2,"column_end":5}},{"value":"/ The original slice iterator yields true `&bool`, and as such allows","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449918,"byte_end":449989,"line_start":210,"line_end":210,"column_start":2,"column_end":73}},{"value":"/ [`Iterator::copied`] to exist. This iterator does not satisfy the bounds","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":449991,"byte_end":450067,"line_start":211,"line_end":211,"column_start":2,"column_end":78}},{"value":"/ for that method, so `.copied()` is provided as an inherent in order to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":450069,"byte_end":450143,"line_start":212,"line_end":212,"column_start":2,"column_end":76}},{"value":"/ maintain source compatibility. Prefer [`.by_vals()`] instead, which","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":450145,"byte_end":450216,"line_start":213,"line_end":213,"column_start":2,"column_end":73}},{"value":"/ avoids the name collision while still making clear that it yields `bool`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":450218,"byte_end":450294,"line_start":214,"line_end":214,"column_start":2,"column_end":78}},{"value":"/ values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":450296,"byte_end":450307,"line_start":215,"line_end":215,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":450309,"byte_end":450312,"line_start":216,"line_end":216,"column_start":2,"column_end":5}},{"value":"/ [`Iterator::copied`]: core::iter::Iterator::copied","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":450314,"byte_end":450368,"line_start":217,"line_end":217,"column_start":2,"column_end":56}},{"value":"/ [`.by_vals()`]: Self::by_vals","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":450370,"byte_end":450403,"line_start":218,"line_end":218,"column_start":2,"column_end":35}},{"value":"/ [0]: crate::ptr::BitRef","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":450405,"byte_end":450432,"line_start":219,"line_end":219,"column_start":2,"column_end":29}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":450434,"byte_end":450464,"line_start":220,"line_end":220,"column_start":2,"column_end":32}},{"value":"deprecated =\n\"`Iterator::copied` does not exist on this type. Use \\\n\t                `.by_vals()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":450466,"byte_end":450575,"line_start":221,"line_end":222,"column_start":2,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3494},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":451669,"byte_end":451676,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::slice::iter::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":3498},{"krate":0,"index":3499}],"decl_id":null,"docs":"# Exclusive Bit-Slice Iteration","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":451580,"byte_end":451600,"line_start":273,"line_end":273,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3505},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453166,"byte_end":453179,"line_start":327,"line_end":327,"column_start":9,"column_end":22},"name":"into_bitslice","qualname":"<IterMut>::into_bitslice","value":"pub fn into_bitslice(Self) -> &'a mut BitSlice<T::Alias, O>","parent":null,"children":[],"decl_id":null,"docs":" Views the underlying bit-slice as a subslice of the original data.","sig":null,"attributes":[{"value":"/ Views the underlying bit-slice as a subslice of the original data.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452447,"byte_end":452517,"line_start":303,"line_end":303,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452519,"byte_end":452522,"line_start":304,"line_end":304,"column_start":2,"column_end":5}},{"value":"/ This consumes the iterator in order to avoid creating aliasing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452524,"byte_end":452590,"line_start":305,"line_end":305,"column_start":2,"column_end":68}},{"value":"/ references between the returned subslice (which has the original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452592,"byte_end":452660,"line_start":306,"line_end":306,"column_start":2,"column_end":70}},{"value":"/ lifetime, and is not borrowed from the iterator) and the proxies the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452662,"byte_end":452734,"line_start":307,"line_end":307,"column_start":2,"column_end":74}},{"value":"/ iterator produces.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452736,"byte_end":452758,"line_start":308,"line_end":308,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452760,"byte_end":452763,"line_start":309,"line_end":309,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452765,"byte_end":452780,"line_start":310,"line_end":310,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452782,"byte_end":452785,"line_start":311,"line_end":311,"column_start":2,"column_end":5}},{"value":"/ [`IterMut::into_slice`](core::slice::IterMut::into_slice)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452787,"byte_end":452848,"line_start":312,"line_end":312,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452850,"byte_end":452853,"line_start":313,"line_end":313,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452855,"byte_end":452870,"line_start":314,"line_end":314,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452872,"byte_end":452875,"line_start":315,"line_end":315,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452877,"byte_end":452888,"line_start":316,"line_end":316,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452890,"byte_end":452917,"line_start":317,"line_end":317,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452919,"byte_end":452922,"line_start":318,"line_end":318,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0, 0, 1, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452924,"byte_end":452961,"line_start":319,"line_end":319,"column_start":2,"column_end":39}},{"value":"/ let mut iter = bits.iter_mut();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452963,"byte_end":452998,"line_start":320,"line_end":320,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453000,"byte_end":453003,"line_start":321,"line_end":321,"column_start":2,"column_end":5}},{"value":"/ *iter.next().unwrap() = true;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453005,"byte_end":453038,"line_start":322,"line_end":322,"column_start":2,"column_end":35}},{"value":"/ assert_eq!(iter.into_bitslice(), bits![0, 1, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453040,"byte_end":453093,"line_start":323,"line_end":323,"column_start":2,"column_end":55}},{"value":"/ assert!(bits[0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453095,"byte_end":453116,"line_start":324,"line_end":324,"column_start":2,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453118,"byte_end":453125,"line_start":325,"line_end":325,"column_start":2,"column_end":9}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453127,"byte_end":453157,"line_start":326,"line_end":326,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453437,"byte_end":453447,"line_start":334,"line_end":334,"column_start":9,"column_end":19},"name":"into_slice","qualname":"<IterMut>::into_slice","value":"pub fn into_slice(Self) -> &'a mut BitSlice<T::Alias, O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453285,"byte_end":453315,"line_start":331,"line_end":331,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.into_bitslice()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453317,"byte_end":453365,"line_start":332,"line_end":332,"column_start":2,"column_end":50}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453367,"byte_end":453428,"line_start":333,"line_end":333,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454361,"byte_end":454372,"line_start":365,"line_end":365,"column_start":9,"column_end":20},"name":"as_bitslice","qualname":"<IterMut>::as_bitslice","value":"pub fn as_bitslice(&Self) -> &BitSlice<T::Alias, O>","parent":null,"children":[],"decl_id":null,"docs":" Views the remaining bit-slice that has not yet been iterated.","sig":null,"attributes":[{"value":"/ Views the remaining bit-slice that has not yet been iterated.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453517,"byte_end":453582,"line_start":338,"line_end":338,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453584,"byte_end":453587,"line_start":339,"line_end":339,"column_start":2,"column_end":5}},{"value":"/ This borrows the iterator’s own lifetime, preventing it from being used","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453589,"byte_end":453666,"line_start":340,"line_end":340,"column_start":2,"column_end":77}},{"value":"/ while the bit-slice view exists and thus ensuring that no aliasing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453668,"byte_end":453738,"line_start":341,"line_end":341,"column_start":2,"column_end":72}},{"value":"/ references are created. Bits that the iterator has already yielded are","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453740,"byte_end":453814,"line_start":342,"line_end":342,"column_start":2,"column_end":76}},{"value":"/ not included in the produced bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453816,"byte_end":453859,"line_start":343,"line_end":343,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453861,"byte_end":453864,"line_start":344,"line_end":344,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453866,"byte_end":453881,"line_start":345,"line_end":345,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453883,"byte_end":453886,"line_start":346,"line_end":346,"column_start":2,"column_end":5}},{"value":"/ [`IterMut::as_slice`](core::slice::IterMut::as_slice)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453888,"byte_end":453945,"line_start":347,"line_end":347,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453947,"byte_end":453950,"line_start":348,"line_end":348,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453952,"byte_end":453967,"line_start":349,"line_end":349,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453969,"byte_end":453972,"line_start":350,"line_end":350,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453974,"byte_end":453985,"line_start":351,"line_end":351,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":453987,"byte_end":454014,"line_start":352,"line_end":352,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454016,"byte_end":454019,"line_start":353,"line_end":353,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0; 4];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454021,"byte_end":454052,"line_start":354,"line_end":354,"column_start":2,"column_end":33}},{"value":"/ let mut iter = bits.iter_mut();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454054,"byte_end":454089,"line_start":355,"line_end":355,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454091,"byte_end":454094,"line_start":356,"line_end":356,"column_start":2,"column_end":5}},{"value":"/ *iter.next().unwrap() = true;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454096,"byte_end":454129,"line_start":357,"line_end":357,"column_start":2,"column_end":35}},{"value":"/ assert_eq!(iter.as_bitslice(), bits![0; 3]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454131,"byte_end":454179,"line_start":358,"line_end":358,"column_start":2,"column_end":50}},{"value":"/ *iter.next().unwrap() = true;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454181,"byte_end":454214,"line_start":359,"line_end":359,"column_start":2,"column_end":35}},{"value":"/ assert_eq!(iter.as_bitslice(), bits![0; 2]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454216,"byte_end":454264,"line_start":360,"line_end":360,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454266,"byte_end":454269,"line_start":361,"line_end":361,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(bits, bits![1, 1, 0, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454271,"byte_end":454311,"line_start":362,"line_end":362,"column_start":2,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454313,"byte_end":454320,"line_start":363,"line_end":363,"column_start":2,"column_end":9}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454322,"byte_end":454352,"line_start":364,"line_end":364,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454630,"byte_end":454638,"line_start":372,"line_end":372,"column_start":9,"column_end":17},"name":"as_slice","qualname":"<IterMut>::as_slice","value":"pub fn as_slice(&Self) -> &BitSlice<T::Alias, O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454480,"byte_end":454510,"line_start":369,"line_end":369,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.as_bitslice()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454512,"byte_end":454558,"line_start":370,"line_end":370,"column_start":2,"column_end":48}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454560,"byte_end":454621,"line_start":371,"line_end":371,"column_start":2,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":6117},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":458917,"byte_end":458924,"line_start":549,"line_end":549,"column_start":12,"column_end":19},"name":"Windows","qualname":"::slice::iter::Windows","value":"Windows {  }","parent":null,"children":[{"krate":0,"index":6121},{"krate":0,"index":6122}],"decl_id":null,"docs":"# Bit-Slice Windowing","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6155},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":460609,"byte_end":460615,"line_start":625,"line_end":625,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::slice::iter::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":6159},{"krate":0,"index":6160}],"decl_id":null,"docs":"# Shared Bit-Slice Chunking","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6194},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":462586,"byte_end":462595,"line_start":710,"line_end":710,"column_start":12,"column_end":21},"name":"ChunksMut","qualname":"::slice::iter::ChunksMut","value":"ChunksMut {  }","parent":null,"children":[{"krate":0,"index":6198},{"krate":0,"index":6199}],"decl_id":null,"docs":"# Exclusive Bit-Slice Chunking","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6227},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":464632,"byte_end":464643,"line_start":796,"line_end":796,"column_start":12,"column_end":23},"name":"ChunksExact","qualname":"::slice::iter::ChunksExact","value":"ChunksExact {  }","parent":null,"children":[{"krate":0,"index":6231},{"krate":0,"index":6232},{"krate":0,"index":6233}],"decl_id":null,"docs":"# Shared Bit-Slice Exact Chunking","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3524},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":465545,"byte_end":465554,"line_start":833,"line_end":833,"column_start":9,"column_end":18},"name":"remainder","qualname":"<ChunksExact>::remainder","value":"pub fn remainder(&Self) -> &'a BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":" Gets the remnant bit-slice that the iterator will not yield.","sig":null,"attributes":[{"value":"/ Gets the remnant bit-slice that the iterator will not yield.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":465344,"byte_end":465408,"line_start":827,"line_end":827,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":465410,"byte_end":465413,"line_start":828,"line_end":828,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":465415,"byte_end":465430,"line_start":829,"line_end":829,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":465432,"byte_end":465435,"line_start":830,"line_end":830,"column_start":2,"column_end":5}},{"value":"/ [`ChunksExact::remainder`](core::slice::ChunksExact::remainder)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":465437,"byte_end":465504,"line_start":831,"line_end":831,"column_start":2,"column_end":69}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":465506,"byte_end":465536,"line_start":832,"line_end":832,"column_start":2,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":6266},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":466956,"byte_end":466970,"line_start":897,"line_end":897,"column_start":12,"column_end":26},"name":"ChunksExactMut","qualname":"::slice::iter::ChunksExactMut","value":"ChunksExactMut {  }","parent":null,"children":[{"krate":0,"index":6270},{"krate":0,"index":6271},{"krate":0,"index":6272}],"decl_id":null,"docs":"# Exclusive Bit-Slice Exact Chunking","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3530},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":467993,"byte_end":468007,"line_start":937,"line_end":937,"column_start":9,"column_end":23},"name":"into_remainder","qualname":"<ChunksExactMut>::into_remainder","value":"pub fn into_remainder(Self) -> &'a mut BitSlice<T::Alias, O>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the iterator, returning the remnant bit-slice that it will not\n yield.","sig":null,"attributes":[{"value":"/ Consumes the iterator, returning the remnant bit-slice that it will not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":467736,"byte_end":467811,"line_start":928,"line_end":928,"column_start":2,"column_end":77}},{"value":"/ yield.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":467813,"byte_end":467823,"line_start":929,"line_end":929,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":467825,"byte_end":467828,"line_start":930,"line_end":930,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":467830,"byte_end":467845,"line_start":931,"line_end":931,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":467847,"byte_end":467850,"line_start":932,"line_end":932,"column_start":2,"column_end":5}},{"value":"/ [`ChunksExactMut::into_remainder`][0]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":467852,"byte_end":467893,"line_start":933,"line_end":933,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":467895,"byte_end":467898,"line_start":934,"line_end":934,"column_start":2,"column_end":5}},{"value":"/ [0]: core::slice::ChunksExactMut::into_remainder","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":467900,"byte_end":467952,"line_start":935,"line_end":935,"column_start":2,"column_end":54}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":467954,"byte_end":467984,"line_start":936,"line_end":936,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3531},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":468538,"byte_end":468552,"line_start":957,"line_end":957,"column_start":9,"column_end":23},"name":"take_remainder","qualname":"<ChunksExactMut>::take_remainder","value":"pub fn take_remainder(&mut Self) -> &'a mut BitSlice<T::Alias, O>","parent":null,"children":[],"decl_id":null,"docs":" Takes the remnant bit-slice out of the iterator.","sig":null,"attributes":[{"value":"/ Takes the remnant bit-slice out of the iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":468067,"byte_end":468119,"line_start":941,"line_end":941,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":468121,"byte_end":468124,"line_start":942,"line_end":942,"column_start":2,"column_end":5}},{"value":"/ The first time this is called, it will produce the remnant; on each","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":468126,"byte_end":468197,"line_start":943,"line_end":943,"column_start":2,"column_end":73}},{"value":"/ subsequent call, it will produce an empty bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":468199,"byte_end":468255,"line_start":944,"line_end":944,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":468257,"byte_end":468260,"line_start":945,"line_end":945,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":468262,"byte_end":468277,"line_start":946,"line_end":946,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":468279,"byte_end":468282,"line_start":947,"line_end":947,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":468284,"byte_end":468295,"line_start":948,"line_end":948,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":468297,"byte_end":468324,"line_start":949,"line_end":949,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":468326,"byte_end":468329,"line_start":950,"line_end":950,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0; 5];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":468331,"byte_end":468362,"line_start":951,"line_end":951,"column_start":2,"column_end":33}},{"value":"/ let mut chunks = bits.chunks_exact_mut(3);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":468364,"byte_end":468410,"line_start":952,"line_end":952,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":468412,"byte_end":468415,"line_start":953,"line_end":953,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(chunks.take_remainder(), bits![0; 2]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":468417,"byte_end":468470,"line_start":954,"line_end":954,"column_start":2,"column_end":55}},{"value":"/ assert!(chunks.take_remainder().is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":468472,"byte_end":468520,"line_start":955,"line_end":955,"column_start":2,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":468522,"byte_end":468529,"line_start":956,"line_end":956,"column_start":2,"column_end":9}}]},{"kind":"Struct","id":{"krate":0,"index":6300},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":470122,"byte_end":470129,"line_start":1022,"line_end":1022,"column_start":12,"column_end":19},"name":"RChunks","qualname":"::slice::iter::RChunks","value":"RChunks {  }","parent":null,"children":[{"krate":0,"index":6304},{"krate":0,"index":6305}],"decl_id":null,"docs":"# Shared Bit-Slice Reverse Chunking","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6338},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":472898,"byte_end":472908,"line_start":1122,"line_end":1122,"column_start":12,"column_end":22},"name":"RChunksMut","qualname":"::slice::iter::RChunksMut","value":"RChunksMut {  }","parent":null,"children":[{"krate":0,"index":6342},{"krate":0,"index":6343}],"decl_id":null,"docs":"# Exclusive Bit-Slice Chunking","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6371},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":474962,"byte_end":474974,"line_start":1205,"line_end":1205,"column_start":12,"column_end":24},"name":"RChunksExact","qualname":"::slice::iter::RChunksExact","value":"RChunksExact {  }","parent":null,"children":[{"krate":0,"index":6375},{"krate":0,"index":6376},{"krate":0,"index":6377}],"decl_id":null,"docs":"# Shared Bit-Slice Reverse Exact Chunking","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3537},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":475842,"byte_end":475851,"line_start":1241,"line_end":1241,"column_start":9,"column_end":18},"name":"remainder","qualname":"<RChunksExact>::remainder","value":"pub fn remainder(&Self) -> &'a BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":" Gets the remnant bit-slice that the iterator will not yield.","sig":null,"attributes":[{"value":"/ Gets the remnant bit-slice that the iterator will not yield.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":475639,"byte_end":475703,"line_start":1235,"line_end":1235,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":475705,"byte_end":475708,"line_start":1236,"line_end":1236,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":475710,"byte_end":475725,"line_start":1237,"line_end":1237,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":475727,"byte_end":475730,"line_start":1238,"line_end":1238,"column_start":2,"column_end":5}},{"value":"/ [`RChunksExact::remainder`](core::slice::RChunksExact::remainder)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":475732,"byte_end":475801,"line_start":1239,"line_end":1239,"column_start":2,"column_end":71}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":475803,"byte_end":475833,"line_start":1240,"line_end":1240,"column_start":2,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":6410},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":477391,"byte_end":477406,"line_start":1306,"line_end":1306,"column_start":12,"column_end":27},"name":"RChunksExactMut","qualname":"::slice::iter::RChunksExactMut","value":"RChunksExactMut {  }","parent":null,"children":[{"krate":0,"index":6414},{"krate":0,"index":6415},{"krate":0,"index":6416}],"decl_id":null,"docs":"# Exclusive Bit-Slice Reverse Exact Chunking","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3543},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478395,"byte_end":478409,"line_start":1345,"line_end":1345,"column_start":9,"column_end":23},"name":"into_remainder","qualname":"<RChunksExactMut>::into_remainder","value":"pub fn into_remainder(Self) -> &'a mut BitSlice<T::Alias, O>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the iterator, returning the remnant bit-slice that it will not\n yield.","sig":null,"attributes":[{"value":"/ Consumes the iterator, returning the remnant bit-slice that it will not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478136,"byte_end":478211,"line_start":1336,"line_end":1336,"column_start":2,"column_end":77}},{"value":"/ yield.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478213,"byte_end":478223,"line_start":1337,"line_end":1337,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478225,"byte_end":478228,"line_start":1338,"line_end":1338,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478230,"byte_end":478245,"line_start":1339,"line_end":1339,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478247,"byte_end":478250,"line_start":1340,"line_end":1340,"column_start":2,"column_end":5}},{"value":"/ [`RChunksExactMut::into_remainder`][0]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478252,"byte_end":478294,"line_start":1341,"line_end":1341,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478296,"byte_end":478299,"line_start":1342,"line_end":1342,"column_start":2,"column_end":5}},{"value":"/ [0]: core::slice::RChunksExactMut::into_remainder","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478301,"byte_end":478354,"line_start":1343,"line_end":1343,"column_start":2,"column_end":55}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478356,"byte_end":478386,"line_start":1344,"line_end":1344,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3544},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478941,"byte_end":478955,"line_start":1365,"line_end":1365,"column_start":9,"column_end":23},"name":"take_remainder","qualname":"<RChunksExactMut>::take_remainder","value":"pub fn take_remainder(&mut Self) -> &'a mut BitSlice<T::Alias, O>","parent":null,"children":[],"decl_id":null,"docs":" Takes the remnant bit-slice out of the iterator.","sig":null,"attributes":[{"value":"/ Takes the remnant bit-slice out of the iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478469,"byte_end":478521,"line_start":1349,"line_end":1349,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478523,"byte_end":478526,"line_start":1350,"line_end":1350,"column_start":2,"column_end":5}},{"value":"/ The first time this is called, it will produce the remnant; on each","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478528,"byte_end":478599,"line_start":1351,"line_end":1351,"column_start":2,"column_end":73}},{"value":"/ subsequent call, it will produce an empty bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478601,"byte_end":478657,"line_start":1352,"line_end":1352,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478659,"byte_end":478662,"line_start":1353,"line_end":1353,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478664,"byte_end":478679,"line_start":1354,"line_end":1354,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478681,"byte_end":478684,"line_start":1355,"line_end":1355,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478686,"byte_end":478697,"line_start":1356,"line_end":1356,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478699,"byte_end":478726,"line_start":1357,"line_end":1357,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478728,"byte_end":478731,"line_start":1358,"line_end":1358,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0; 5];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478733,"byte_end":478764,"line_start":1359,"line_end":1359,"column_start":2,"column_end":33}},{"value":"/ let mut chunks = bits.rchunks_exact_mut(3);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478766,"byte_end":478813,"line_start":1360,"line_end":1360,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478815,"byte_end":478818,"line_start":1361,"line_end":1361,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(chunks.take_remainder(), bits![0; 2]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478820,"byte_end":478873,"line_start":1362,"line_end":1362,"column_start":2,"column_end":55}},{"value":"/ assert!(chunks.take_remainder().is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478875,"byte_end":478923,"line_start":1363,"line_end":1363,"column_start":2,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":478925,"byte_end":478932,"line_start":1364,"line_end":1364,"column_start":2,"column_end":9}}]},{"kind":"Struct","id":{"krate":0,"index":6469},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":482921,"byte_end":482926,"line_start":1554,"line_end":1554,"column_start":12,"column_end":17},"name":"Split","qualname":"::slice::iter::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":6474},{"krate":0,"index":6475},{"krate":0,"index":6476}],"decl_id":null,"docs":"# Shared Bit-Slice Splitting","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3547},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":484117,"byte_end":484125,"line_start":1611,"line_end":1611,"column_start":12,"column_end":20},"name":"SplitMut","qualname":"::slice::iter::SplitMut","value":"SplitMut {  }","parent":null,"children":[{"krate":0,"index":3552},{"krate":0,"index":3553},{"krate":0,"index":3554}],"decl_id":null,"docs":"# Exclusive Bit-Slice Splitting","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6559},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":485621,"byte_end":485635,"line_start":1677,"line_end":1677,"column_start":12,"column_end":26},"name":"SplitInclusive","qualname":"::slice::iter::SplitInclusive","value":"SplitInclusive {  }","parent":null,"children":[{"krate":0,"index":6564},{"krate":0,"index":6565},{"krate":0,"index":6566}],"decl_id":null,"docs":"# Shared Bit-Slice Splitting","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3555},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":486984,"byte_end":487001,"line_start":1738,"line_end":1738,"column_start":12,"column_end":29},"name":"SplitInclusiveMut","qualname":"::slice::iter::SplitInclusiveMut","value":"SplitInclusiveMut {  }","parent":null,"children":[{"krate":0,"index":3560},{"krate":0,"index":3561},{"krate":0,"index":3562}],"decl_id":null,"docs":"# Exclusive Bit-Slice Splitting","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6653},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":488537,"byte_end":488543,"line_start":1807,"line_end":1807,"column_start":12,"column_end":18},"name":"RSplit","qualname":"::slice::iter::RSplit","value":"RSplit {  }","parent":null,"children":[{"krate":0,"index":6658},{"krate":0,"index":6659},{"krate":0,"index":6660}],"decl_id":null,"docs":"# Shared Bit-Slice Reverse Splitting","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3563},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":489575,"byte_end":489584,"line_start":1850,"line_end":1850,"column_start":12,"column_end":21},"name":"RSplitMut","qualname":"::slice::iter::RSplitMut","value":"RSplitMut {  }","parent":null,"children":[{"krate":0,"index":3568},{"krate":0,"index":3569},{"krate":0,"index":3570}],"decl_id":null,"docs":"# Exclusive Bit-Slice Reverse Splitting","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6739},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":490996,"byte_end":491002,"line_start":1901,"line_end":1901,"column_start":12,"column_end":18},"name":"SplitN","qualname":"::slice::iter::SplitN","value":"SplitN {  }","parent":null,"children":[{"krate":0,"index":6744},{"krate":0,"index":6745}],"decl_id":null,"docs":"# Shared Bit-Slice Splitting","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3573},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":491283,"byte_end":491292,"line_start":1914,"line_end":1914,"column_start":12,"column_end":21},"name":"SplitNMut","qualname":"::slice::iter::SplitNMut","value":"SplitNMut {  }","parent":null,"children":[{"krate":0,"index":3578},{"krate":0,"index":3579}],"decl_id":null,"docs":"# Exclusive Bit-Slice Splitting","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6752},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":491591,"byte_end":491598,"line_start":1928,"line_end":1928,"column_start":12,"column_end":19},"name":"RSplitN","qualname":"::slice::iter::RSplitN","value":"RSplitN {  }","parent":null,"children":[{"krate":0,"index":6757},{"krate":0,"index":6758}],"decl_id":null,"docs":"# Shared Bit-Slice Reverse Splitting","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3580},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":491881,"byte_end":491891,"line_start":1941,"line_end":1941,"column_start":12,"column_end":22},"name":"RSplitNMut","qualname":"::slice::iter::RSplitNMut","value":"RSplitNMut {  }","parent":null,"children":[{"krate":0,"index":3585},{"krate":0,"index":3586}],"decl_id":null,"docs":"# Exclusive Bit-Slice Reverse Splitting","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6861},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":494236,"byte_end":494244,"line_start":2041,"line_end":2041,"column_start":12,"column_end":20},"name":"IterOnes","qualname":"::slice::iter::IterOnes","value":"IterOnes {  }","parent":null,"children":[{"krate":0,"index":6865},{"krate":0,"index":6866}],"decl_id":null,"docs":"# Bit Seeking","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6913},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":496723,"byte_end":496732,"line_start":2168,"line_end":2168,"column_start":12,"column_end":21},"name":"IterZeros","qualname":"::slice::iter::IterZeros","value":"IterZeros {  }","parent":null,"children":[{"krate":0,"index":6917},{"krate":0,"index":6918}],"decl_id":null,"docs":"# Bit Seeking","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6965},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":503144,"byte_end":503158,"line_start":2430,"line_end":2430,"column_start":5,"column_end":19},"name":"IterMutNoAlias","qualname":"::slice::iter::IterMutNoAlias","value":"IterMutNoAlias {  }","parent":null,"children":[{"krate":0,"index":6969}],"decl_id":null,"docs":"# Anti-Aliasing Iterator Adapter","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":499642,"byte_end":499662,"line_start":2309,"line_end":2309,"column_start":3,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7005},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":503277,"byte_end":503293,"line_start":2434,"line_end":2434,"column_start":5,"column_end":21},"name":"ChunksMutNoAlias","qualname":"::slice::iter::ChunksMutNoAlias","value":"ChunksMutNoAlias {  }","parent":null,"children":[{"krate":0,"index":7009}],"decl_id":null,"docs":"# Anti-Aliasing Iterator Adapter","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":499642,"byte_end":499662,"line_start":2309,"line_end":2309,"column_start":3,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7045},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":503401,"byte_end":503422,"line_start":2438,"line_end":2438,"column_start":5,"column_end":26},"name":"ChunksExactMutNoAlias","qualname":"::slice::iter::ChunksExactMutNoAlias","value":"ChunksExactMutNoAlias {  }","parent":null,"children":[{"krate":0,"index":7049}],"decl_id":null,"docs":"# Anti-Aliasing Iterator Adapter","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":499642,"byte_end":499662,"line_start":2309,"line_end":2309,"column_start":3,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7085},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":503526,"byte_end":503543,"line_start":2442,"line_end":2442,"column_start":5,"column_end":22},"name":"RChunksMutNoAlias","qualname":"::slice::iter::RChunksMutNoAlias","value":"RChunksMutNoAlias {  }","parent":null,"children":[{"krate":0,"index":7089}],"decl_id":null,"docs":"# Anti-Aliasing Iterator Adapter","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":499642,"byte_end":499662,"line_start":2309,"line_end":2309,"column_start":3,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7125},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":503652,"byte_end":503674,"line_start":2446,"line_end":2446,"column_start":5,"column_end":27},"name":"RChunksExactMutNoAlias","qualname":"::slice::iter::RChunksExactMutNoAlias","value":"RChunksExactMutNoAlias {  }","parent":null,"children":[{"krate":0,"index":7129}],"decl_id":null,"docs":"# Anti-Aliasing Iterator Adapter","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":499642,"byte_end":499662,"line_start":2309,"line_end":2309,"column_start":3,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7165},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":503780,"byte_end":503795,"line_start":2450,"line_end":2450,"column_start":5,"column_end":20},"name":"SplitMutNoAlias","qualname":"::slice::iter::SplitMutNoAlias","value":"SplitMutNoAlias {  }","parent":null,"children":[{"krate":0,"index":7170}],"decl_id":null,"docs":"# Anti-Aliasing Iterator Adapter","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":499642,"byte_end":499662,"line_start":2309,"line_end":2309,"column_start":3,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7211},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":503910,"byte_end":503934,"line_start":2454,"line_end":2454,"column_start":5,"column_end":29},"name":"SplitInclusiveMutNoAlias","qualname":"::slice::iter::SplitInclusiveMutNoAlias","value":"SplitInclusiveMutNoAlias {  }","parent":null,"children":[{"krate":0,"index":7216}],"decl_id":null,"docs":"# Anti-Aliasing Iterator Adapter","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":499642,"byte_end":499662,"line_start":2309,"line_end":2309,"column_start":3,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7257},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":504041,"byte_end":504057,"line_start":2458,"line_end":2458,"column_start":5,"column_end":21},"name":"RSplitMutNoAlias","qualname":"::slice::iter::RSplitMutNoAlias","value":"RSplitMutNoAlias {  }","parent":null,"children":[{"krate":0,"index":7262}],"decl_id":null,"docs":"# Anti-Aliasing Iterator Adapter","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":499642,"byte_end":499662,"line_start":2309,"line_end":2309,"column_start":3,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7303},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":504164,"byte_end":504180,"line_start":2462,"line_end":2462,"column_start":5,"column_end":21},"name":"SplitNMutNoAlias","qualname":"::slice::iter::SplitNMutNoAlias","value":"SplitNMutNoAlias {  }","parent":null,"children":[{"krate":0,"index":7308}],"decl_id":null,"docs":"# Anti-Aliasing Iterator Adapter","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":499642,"byte_end":499662,"line_start":2309,"line_end":2309,"column_start":3,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7349},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":504288,"byte_end":504305,"line_start":2466,"line_end":2466,"column_start":5,"column_end":22},"name":"RSplitNMutNoAlias","qualname":"::slice::iter::RSplitNMutNoAlias","value":"RSplitNMutNoAlias {  }","parent":null,"children":[{"krate":0,"index":7354}],"decl_id":null,"docs":"# Anti-Aliasing Iterator Adapter","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":499642,"byte_end":499662,"line_start":2309,"line_end":2309,"column_start":3,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3647},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":504568,"byte_end":504582,"line_start":2478,"line_end":2478,"column_start":9,"column_end":23},"name":"into_remainder","qualname":"<ChunksExactMutNoAlias>::into_remainder","value":"pub fn into_remainder(Self) -> &'a mut BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":" See [`ChunksExactMut::into_remainder()`][0].","sig":null,"attributes":[{"value":"/ See [`ChunksExactMut::into_remainder()`][0].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":504451,"byte_end":504499,"line_start":2475,"line_end":2475,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":504501,"byte_end":504504,"line_start":2476,"line_end":2476,"column_start":2,"column_end":5}},{"value":"/ [0]: crate::slice::ChunksExactMut::into_remainder","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":504506,"byte_end":504559,"line_start":2477,"line_end":2477,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":504802,"byte_end":504816,"line_start":2485,"line_end":2485,"column_start":9,"column_end":23},"name":"take_remainder","qualname":"<ChunksExactMutNoAlias>::take_remainder","value":"pub fn take_remainder(&mut Self) -> &'a mut BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":" See [`ChunksExactMut::take_remainder()`][0]","sig":null,"attributes":[{"value":"/ See [`ChunksExactMut::take_remainder()`][0]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":504686,"byte_end":504733,"line_start":2482,"line_end":2482,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":504735,"byte_end":504738,"line_start":2483,"line_end":2483,"column_start":2,"column_end":5}},{"value":"/ [0]: crate::slice::ChunksExactMut::take_remainder","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":504740,"byte_end":504793,"line_start":2484,"line_end":2484,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3653},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":505134,"byte_end":505148,"line_start":2498,"line_end":2498,"column_start":9,"column_end":23},"name":"into_remainder","qualname":"<RChunksExactMutNoAlias>::into_remainder","value":"pub fn into_remainder(Self) -> &'a mut BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":" See [`RChunksExactMut::into_remainder()`][0]","sig":null,"attributes":[{"value":"/ See [`RChunksExactMut::into_remainder()`][0]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":505016,"byte_end":505064,"line_start":2495,"line_end":2495,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":505066,"byte_end":505069,"line_start":2496,"line_end":2496,"column_start":2,"column_end":5}},{"value":"/ [0]: crate::slice::RChunksExactMut::into_remainder","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":505071,"byte_end":505125,"line_start":2497,"line_end":2497,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":505371,"byte_end":505385,"line_start":2505,"line_end":2505,"column_start":9,"column_end":23},"name":"take_remainder","qualname":"<RChunksExactMutNoAlias>::take_remainder","value":"pub fn take_remainder(&mut Self) -> &'a mut BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":" See [`RChunksExactMut::take_remainder()`][0]","sig":null,"attributes":[{"value":"/ See [`RChunksExactMut::take_remainder()`][0]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":505252,"byte_end":505300,"line_start":2502,"line_end":2502,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":505302,"byte_end":505305,"line_start":2503,"line_end":2503,"column_start":2,"column_end":5}},{"value":"/ [0]:  crate::slice::RChunksExactMut::take_remainder","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":505307,"byte_end":505362,"line_start":2504,"line_end":2504,"column_start":2,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":4142},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":317559,"byte_end":317567,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"BitSlice","qualname":"::slice::BitSlice","value":"BitSlice {  }","parent":null,"children":[{"krate":0,"index":4145},{"krate":0,"index":4146},{"krate":0,"index":4147}],"decl_id":null,"docs":"# Bit-Addressable Memory","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":317477,"byte_end":317497,"line_start":58,"line_end":58,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4151},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319086,"byte_end":319091,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"name":"empty","qualname":"<BitSlice<T, O>>::empty","value":"pub fn empty<'a>() -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Produces an empty bit-slice with an arbitrary lifetime.","sig":null,"attributes":[{"value":"/ Produces an empty bit-slice with an arbitrary lifetime.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":318743,"byte_end":318802,"line_start":94,"line_end":94,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":318804,"byte_end":318807,"line_start":95,"line_end":95,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":318809,"byte_end":318824,"line_start":96,"line_end":96,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":318826,"byte_end":318829,"line_start":97,"line_end":97,"column_start":2,"column_end":5}},{"value":"/ This is equivalent to the `&[]` literal.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":318831,"byte_end":318875,"line_start":98,"line_end":98,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":318877,"byte_end":318880,"line_start":99,"line_end":99,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":318882,"byte_end":318897,"line_start":100,"line_end":100,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":318899,"byte_end":318902,"line_start":101,"line_end":101,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":318904,"byte_end":318915,"line_start":102,"line_end":102,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":318917,"byte_end":318944,"line_start":103,"line_end":103,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":318946,"byte_end":318949,"line_start":104,"line_end":104,"column_start":2,"column_end":5}},{"value":"/ assert!(BitSlice::<u16, LocalBits>::empty().is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":318951,"byte_end":319011,"line_start":105,"line_end":105,"column_start":2,"column_end":62}},{"value":"/ assert_eq!(bits![], BitSlice::<u8, Msb0>::empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319013,"byte_end":319068,"line_start":106,"line_end":106,"column_start":2,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319070,"byte_end":319077,"line_start":107,"line_end":107,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4153},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319538,"byte_end":319547,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"empty_mut","qualname":"<BitSlice<T, O>>::empty_mut","value":"pub fn empty_mut<'a>() -> &'a mut Self","parent":null,"children":[],"decl_id":null,"docs":" Produces an empty bit-slice with an arbitrary lifetime.","sig":null,"attributes":[{"value":"/ Produces an empty bit-slice with an arbitrary lifetime.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319180,"byte_end":319239,"line_start":112,"line_end":112,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319241,"byte_end":319244,"line_start":113,"line_end":113,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319246,"byte_end":319261,"line_start":114,"line_end":114,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319263,"byte_end":319266,"line_start":115,"line_end":115,"column_start":2,"column_end":5}},{"value":"/ This is equivalent to the `&mut []` literal.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319268,"byte_end":319316,"line_start":116,"line_end":116,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319318,"byte_end":319321,"line_start":117,"line_end":117,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319323,"byte_end":319338,"line_start":118,"line_end":118,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319340,"byte_end":319343,"line_start":119,"line_end":119,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319345,"byte_end":319356,"line_start":120,"line_end":120,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319358,"byte_end":319385,"line_start":121,"line_end":121,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319387,"byte_end":319390,"line_start":122,"line_end":122,"column_start":2,"column_end":5}},{"value":"/ assert!(BitSlice::<u16, LocalBits>::empty_mut().is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319392,"byte_end":319456,"line_start":123,"line_end":123,"column_start":2,"column_end":66}},{"value":"/ assert_eq!(bits![mut], BitSlice::<u8, Msb0>::empty_mut());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319458,"byte_end":319520,"line_start":124,"line_end":124,"column_start":2,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319522,"byte_end":319529,"line_start":125,"line_end":125,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4155},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320458,"byte_end":320470,"line_start":159,"line_end":159,"column_start":9,"column_end":21},"name":"from_element","qualname":"<BitSlice<T, O>>::from_element","value":"pub fn from_element(&T) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a shared `&BitSlice` reference over a shared element.","sig":null,"attributes":[{"value":"/ Constructs a shared `&BitSlice` reference over a shared element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319638,"byte_end":319706,"line_start":130,"line_end":130,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319708,"byte_end":319711,"line_start":131,"line_end":131,"column_start":2,"column_end":5}},{"value":"/ The [`BitView`] trait, implemented on all [`BitStore`] implementors,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319713,"byte_end":319785,"line_start":132,"line_end":132,"column_start":2,"column_end":74}},{"value":"/ provides a [`.view_bits::<O>()`] method which delegates to this function","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319787,"byte_end":319863,"line_start":133,"line_end":133,"column_start":2,"column_end":78}},{"value":"/ and may be more convenient for you to write.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319865,"byte_end":319913,"line_start":134,"line_end":134,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319915,"byte_end":319918,"line_start":135,"line_end":135,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319920,"byte_end":319937,"line_start":136,"line_end":136,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319939,"byte_end":319942,"line_start":137,"line_end":137,"column_start":2,"column_end":5}},{"value":"/ - `elem`: A shared reference to a memory element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319944,"byte_end":319997,"line_start":138,"line_end":138,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":319999,"byte_end":320002,"line_start":139,"line_end":139,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320004,"byte_end":320018,"line_start":140,"line_end":140,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320020,"byte_end":320023,"line_start":141,"line_end":141,"column_start":2,"column_end":5}},{"value":"/ A shared `&BitSlice` over `elem`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320025,"byte_end":320062,"line_start":142,"line_end":142,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320064,"byte_end":320067,"line_start":143,"line_end":143,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320069,"byte_end":320084,"line_start":144,"line_end":144,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320086,"byte_end":320089,"line_start":145,"line_end":145,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320091,"byte_end":320102,"line_start":146,"line_end":146,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320104,"byte_end":320131,"line_start":147,"line_end":147,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320133,"byte_end":320136,"line_start":148,"line_end":148,"column_start":2,"column_end":5}},{"value":"/ let elem = 0u8;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320138,"byte_end":320157,"line_start":149,"line_end":149,"column_start":2,"column_end":21}},{"value":"/ let bits = BitSlice::<_, Lsb0>::from_element(&elem);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320159,"byte_end":320215,"line_start":150,"line_end":150,"column_start":2,"column_end":58}},{"value":"/ assert_eq!(bits.len(), 8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320217,"byte_end":320247,"line_start":151,"line_end":151,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320249,"byte_end":320252,"line_start":152,"line_end":152,"column_start":2,"column_end":5}},{"value":"/ let bits = elem.view_bits::<Lsb0>();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320254,"byte_end":320294,"line_start":153,"line_end":153,"column_start":2,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320296,"byte_end":320303,"line_start":154,"line_end":154,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320305,"byte_end":320308,"line_start":155,"line_end":155,"column_start":2,"column_end":5}},{"value":"/ [`BitStore`]: crate::store::BitStore","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320310,"byte_end":320350,"line_start":156,"line_end":156,"column_start":2,"column_end":42}},{"value":"/ [`BitView`]: crate::view::BitView","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320352,"byte_end":320389,"line_start":157,"line_end":157,"column_start":2,"column_end":39}},{"value":"/ [`.view_bits::<O>()`]: crate::view::BitView::view_bits","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320391,"byte_end":320449,"line_start":158,"line_end":158,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4156},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321652,"byte_end":321668,"line_start":201,"line_end":201,"column_start":9,"column_end":25},"name":"from_element_mut","qualname":"<BitSlice<T, O>>::from_element_mut","value":"pub fn from_element_mut(&mut T) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs an exclusive `&mut BitSlice` reference over an element.","sig":null,"attributes":[{"value":"/ Constructs an exclusive `&mut BitSlice` reference over an element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320609,"byte_end":320679,"line_start":167,"line_end":167,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320681,"byte_end":320684,"line_start":168,"line_end":168,"column_start":2,"column_end":5}},{"value":"/ The [`BitView`] trait, implemented on all [`BitStore`] implementors,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320686,"byte_end":320758,"line_start":169,"line_end":169,"column_start":2,"column_end":74}},{"value":"/ provides a [`.view_bits_mut::<O>()`] method which delegates to this","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320760,"byte_end":320831,"line_start":170,"line_end":170,"column_start":2,"column_end":73}},{"value":"/ function and may be more convenient for you to write.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320833,"byte_end":320890,"line_start":171,"line_end":171,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320892,"byte_end":320895,"line_start":172,"line_end":172,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320897,"byte_end":320914,"line_start":173,"line_end":173,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320916,"byte_end":320919,"line_start":174,"line_end":174,"column_start":2,"column_end":5}},{"value":"/ - `elem`: An exclusive reference to a memory element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320921,"byte_end":320978,"line_start":175,"line_end":175,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320980,"byte_end":320983,"line_start":176,"line_end":176,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":320985,"byte_end":320999,"line_start":177,"line_end":177,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321001,"byte_end":321004,"line_start":178,"line_end":178,"column_start":2,"column_end":5}},{"value":"/ An exclusive `&mut BitSlice` over `elem`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321006,"byte_end":321051,"line_start":179,"line_end":179,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321053,"byte_end":321056,"line_start":180,"line_end":180,"column_start":2,"column_end":5}},{"value":"/ Note that the original `elem` reference will be inaccessible for the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321058,"byte_end":321130,"line_start":181,"line_end":181,"column_start":2,"column_end":74}},{"value":"/ duration of the returned bit-slice handle’s lifetime.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321132,"byte_end":321191,"line_start":182,"line_end":182,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321193,"byte_end":321196,"line_start":183,"line_end":183,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321198,"byte_end":321213,"line_start":184,"line_end":184,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321215,"byte_end":321218,"line_start":185,"line_end":185,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321220,"byte_end":321231,"line_start":186,"line_end":186,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321233,"byte_end":321260,"line_start":187,"line_end":187,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321262,"byte_end":321265,"line_start":188,"line_end":188,"column_start":2,"column_end":5}},{"value":"/ let mut elem = 0u8;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321267,"byte_end":321290,"line_start":189,"line_end":189,"column_start":2,"column_end":25}},{"value":"/ let bits = BitSlice::<_, Lsb0>::from_element_mut(&mut elem);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321292,"byte_end":321356,"line_start":190,"line_end":190,"column_start":2,"column_end":66}},{"value":"/ bits.set(1, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321358,"byte_end":321380,"line_start":191,"line_end":191,"column_start":2,"column_end":24}},{"value":"/ assert!(bits[1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321382,"byte_end":321403,"line_start":192,"line_end":192,"column_start":2,"column_end":23}},{"value":"/ assert_eq!(elem, 2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321405,"byte_end":321429,"line_start":193,"line_end":193,"column_start":2,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321431,"byte_end":321434,"line_start":194,"line_end":194,"column_start":2,"column_end":5}},{"value":"/ let bits = elem.view_bits_mut::<Lsb0>();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321436,"byte_end":321480,"line_start":195,"line_end":195,"column_start":2,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321482,"byte_end":321489,"line_start":196,"line_end":196,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321491,"byte_end":321494,"line_start":197,"line_end":197,"column_start":2,"column_end":5}},{"value":"/ [`BitStore`]: crate::store::BitStore","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321496,"byte_end":321536,"line_start":198,"line_end":198,"column_start":2,"column_end":42}},{"value":"/ [`BitView`]: crate::view::BitView","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321538,"byte_end":321575,"line_start":199,"line_end":199,"column_start":2,"column_end":39}},{"value":"/ [`.view_bits_mut::<O>()`]: crate::view::BitView::view_bits_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321577,"byte_end":321643,"line_start":200,"line_end":200,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4157},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322707,"byte_end":322717,"line_start":241,"line_end":241,"column_start":9,"column_end":19},"name":"from_slice","qualname":"<BitSlice<T, O>>::from_slice","value":"pub fn from_slice(&[T]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a shared `&BitSlice` reference over a slice of elements.","sig":null,"attributes":[{"value":"/ Constructs a shared `&BitSlice` reference over a slice of elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321815,"byte_end":321886,"line_start":209,"line_end":209,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321888,"byte_end":321891,"line_start":210,"line_end":210,"column_start":2,"column_end":5}},{"value":"/ The [`BitView`] trait, implemented on all `[T]` slices, provides a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321893,"byte_end":321963,"line_start":211,"line_end":211,"column_start":2,"column_end":72}},{"value":"/ [`.view_bits::<O>()`] method which delegates to this function and may be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":321965,"byte_end":322041,"line_start":212,"line_end":212,"column_start":2,"column_end":78}},{"value":"/ more convenient for you to write.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322043,"byte_end":322080,"line_start":213,"line_end":213,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322082,"byte_end":322085,"line_start":214,"line_end":214,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322087,"byte_end":322104,"line_start":215,"line_end":215,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322106,"byte_end":322109,"line_start":216,"line_end":216,"column_start":2,"column_end":5}},{"value":"/ - `slice`: A shared reference to a slice of memory elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322111,"byte_end":322175,"line_start":217,"line_end":217,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322177,"byte_end":322180,"line_start":218,"line_end":218,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322182,"byte_end":322196,"line_start":219,"line_end":219,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322198,"byte_end":322201,"line_start":220,"line_end":220,"column_start":2,"column_end":5}},{"value":"/ A shared `BitSlice` reference over all of `slice`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322203,"byte_end":322257,"line_start":221,"line_end":221,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322259,"byte_end":322262,"line_start":222,"line_end":222,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322264,"byte_end":322277,"line_start":223,"line_end":223,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322279,"byte_end":322282,"line_start":224,"line_end":224,"column_start":2,"column_end":5}},{"value":"/ This will panic if `slice` is too long to encode as a bit-slice view.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322284,"byte_end":322357,"line_start":225,"line_end":225,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322359,"byte_end":322362,"line_start":226,"line_end":226,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322364,"byte_end":322379,"line_start":227,"line_end":227,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322381,"byte_end":322384,"line_start":228,"line_end":228,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322386,"byte_end":322397,"line_start":229,"line_end":229,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322399,"byte_end":322426,"line_start":230,"line_end":230,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322428,"byte_end":322431,"line_start":231,"line_end":231,"column_start":2,"column_end":5}},{"value":"/ let data = [0u16, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322433,"byte_end":322458,"line_start":232,"line_end":232,"column_start":2,"column_end":27}},{"value":"/ let bits = BitSlice::<_, Lsb0>::from_slice(&data);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322460,"byte_end":322514,"line_start":233,"line_end":233,"column_start":2,"column_end":56}},{"value":"/ assert!(bits[16]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322516,"byte_end":322538,"line_start":234,"line_end":234,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322540,"byte_end":322543,"line_start":235,"line_end":235,"column_start":2,"column_end":5}},{"value":"/ let bits = data.view_bits::<Lsb0>();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322545,"byte_end":322585,"line_start":236,"line_end":236,"column_start":2,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322587,"byte_end":322594,"line_start":237,"line_end":237,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322596,"byte_end":322599,"line_start":238,"line_end":238,"column_start":2,"column_end":5}},{"value":"/ [`BitView`]: crate::view::BitView","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322601,"byte_end":322638,"line_start":239,"line_end":239,"column_start":2,"column_end":39}},{"value":"/ [`.view_bits::<O>()`]: crate::view::BitView::view_bits","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322640,"byte_end":322698,"line_start":240,"line_end":240,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4158},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323929,"byte_end":323943,"line_start":280,"line_end":280,"column_start":9,"column_end":23},"name":"try_from_slice","qualname":"<BitSlice<T, O>>::try_from_slice","value":"pub fn try_from_slice(&[T]) -> Result<&Self, BitSpanError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to construct a shared `&BitSlice` reference over a slice of\n elements.","sig":null,"attributes":[{"value":"/ Attempts to construct a shared `&BitSlice` reference over a slice of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322786,"byte_end":322858,"line_start":245,"line_end":245,"column_start":2,"column_end":74}},{"value":"/ elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322860,"byte_end":322873,"line_start":246,"line_end":246,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322875,"byte_end":322878,"line_start":247,"line_end":247,"column_start":2,"column_end":5}},{"value":"/ The [`BitView`], implemented on all `[T]` slices, provides a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322880,"byte_end":322944,"line_start":248,"line_end":248,"column_start":2,"column_end":66}},{"value":"/ [`.try_view_bits::<O>()`] method which delegates to this function and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":322946,"byte_end":323019,"line_start":249,"line_end":249,"column_start":2,"column_end":75}},{"value":"/ may be more convenient for you to write.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323021,"byte_end":323065,"line_start":250,"line_end":250,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323067,"byte_end":323070,"line_start":251,"line_end":251,"column_start":2,"column_end":5}},{"value":"/ This is *very hard*, if not impossible, to cause to fail. Rust will not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323072,"byte_end":323147,"line_start":252,"line_end":252,"column_start":2,"column_end":77}},{"value":"/ create excessive arrays on 64-bit architectures.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323149,"byte_end":323201,"line_start":253,"line_end":253,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323203,"byte_end":323206,"line_start":254,"line_end":254,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323208,"byte_end":323225,"line_start":255,"line_end":255,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323227,"byte_end":323230,"line_start":256,"line_end":256,"column_start":2,"column_end":5}},{"value":"/ - `slice`: A shared reference to a slice of memory elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323232,"byte_end":323296,"line_start":257,"line_end":257,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323298,"byte_end":323301,"line_start":258,"line_end":258,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323303,"byte_end":323317,"line_start":259,"line_end":259,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323319,"byte_end":323322,"line_start":260,"line_end":260,"column_start":2,"column_end":5}},{"value":"/ A shared `&BitSlice` over `slice`. If `slice` is longer than can be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323324,"byte_end":323395,"line_start":261,"line_end":261,"column_start":2,"column_end":73}},{"value":"/ encoded into a `&BitSlice` (see [`MAX_ELTS`]), this will fail and return","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323397,"byte_end":323473,"line_start":262,"line_end":262,"column_start":2,"column_end":78}},{"value":"/ the original `slice` as an error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323475,"byte_end":323512,"line_start":263,"line_end":263,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323514,"byte_end":323517,"line_start":264,"line_end":264,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323519,"byte_end":323534,"line_start":265,"line_end":265,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323536,"byte_end":323539,"line_start":266,"line_end":266,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323541,"byte_end":323552,"line_start":267,"line_end":267,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323554,"byte_end":323581,"line_start":268,"line_end":268,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323583,"byte_end":323586,"line_start":269,"line_end":269,"column_start":2,"column_end":5}},{"value":"/ let data = [0u8, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323588,"byte_end":323612,"line_start":270,"line_end":270,"column_start":2,"column_end":26}},{"value":"/ let bits = BitSlice::<_, Msb0>::try_from_slice(&data).unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323614,"byte_end":323681,"line_start":271,"line_end":271,"column_start":2,"column_end":69}},{"value":"/ assert!(bits[15]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323683,"byte_end":323705,"line_start":272,"line_end":272,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323707,"byte_end":323710,"line_start":273,"line_end":273,"column_start":2,"column_end":5}},{"value":"/ let bits = data.try_view_bits::<Msb0>().unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323712,"byte_end":323765,"line_start":274,"line_end":274,"column_start":2,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323767,"byte_end":323774,"line_start":275,"line_end":275,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323776,"byte_end":323779,"line_start":276,"line_end":276,"column_start":2,"column_end":5}},{"value":"/ [`BitView`]: crate::view::BitView","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323781,"byte_end":323818,"line_start":277,"line_end":277,"column_start":2,"column_end":39}},{"value":"/ [`MAX_ELTS`]: Self::MAX_ELTS","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323820,"byte_end":323852,"line_start":278,"line_end":278,"column_start":2,"column_end":34}},{"value":"/ [`.try_view_bits::<O>()`]: crate::view::BitView::try_view_bits","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":323854,"byte_end":323920,"line_start":279,"line_end":279,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4159},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325208,"byte_end":325222,"line_start":327,"line_end":327,"column_start":9,"column_end":23},"name":"from_slice_mut","qualname":"<BitSlice<T, O>>::from_slice_mut","value":"pub fn from_slice_mut(&mut [T]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs an exclusive `&mut BitSlice` reference over a slice of\n elements.","sig":null,"attributes":[{"value":"/ Constructs an exclusive `&mut BitSlice` reference over a slice of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324220,"byte_end":324289,"line_start":292,"line_end":292,"column_start":2,"column_end":71}},{"value":"/ elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324291,"byte_end":324304,"line_start":293,"line_end":293,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324306,"byte_end":324309,"line_start":294,"line_end":294,"column_start":2,"column_end":5}},{"value":"/ The [`BitView`] trait, implemented on all `[T]` slices, provides a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324311,"byte_end":324381,"line_start":295,"line_end":295,"column_start":2,"column_end":72}},{"value":"/ [`.view_bits_mut::<O>()`] method which delegates to this function and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324383,"byte_end":324456,"line_start":296,"line_end":296,"column_start":2,"column_end":75}},{"value":"/ may be more convenient for you to write.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324458,"byte_end":324502,"line_start":297,"line_end":297,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324504,"byte_end":324507,"line_start":298,"line_end":298,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324509,"byte_end":324526,"line_start":299,"line_end":299,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324528,"byte_end":324531,"line_start":300,"line_end":300,"column_start":2,"column_end":5}},{"value":"/ - `slice`: An exclusive reference to a slice of memory elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324533,"byte_end":324601,"line_start":301,"line_end":301,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324603,"byte_end":324606,"line_start":302,"line_end":302,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324608,"byte_end":324622,"line_start":303,"line_end":303,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324624,"byte_end":324627,"line_start":304,"line_end":304,"column_start":2,"column_end":5}},{"value":"/ An exclusive `&mut BitSlice` over all of `slice`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324629,"byte_end":324682,"line_start":305,"line_end":305,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324684,"byte_end":324687,"line_start":306,"line_end":306,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324689,"byte_end":324702,"line_start":307,"line_end":307,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324704,"byte_end":324707,"line_start":308,"line_end":308,"column_start":2,"column_end":5}},{"value":"/ This panics if `slice` is too long to encode as a bit-slice view.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324709,"byte_end":324778,"line_start":309,"line_end":309,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324780,"byte_end":324783,"line_start":310,"line_end":310,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324785,"byte_end":324800,"line_start":311,"line_end":311,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324802,"byte_end":324805,"line_start":312,"line_end":312,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324807,"byte_end":324818,"line_start":313,"line_end":313,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324820,"byte_end":324847,"line_start":314,"line_end":314,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324849,"byte_end":324852,"line_start":315,"line_end":315,"column_start":2,"column_end":5}},{"value":"/ let mut data = [0u16; 2];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324854,"byte_end":324883,"line_start":316,"line_end":316,"column_start":2,"column_end":31}},{"value":"/ let bits = BitSlice::<_, Lsb0>::from_slice_mut(&mut data);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324885,"byte_end":324947,"line_start":317,"line_end":317,"column_start":2,"column_end":64}},{"value":"/ bits.set(0, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324949,"byte_end":324971,"line_start":318,"line_end":318,"column_start":2,"column_end":24}},{"value":"/ bits.set(17, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324973,"byte_end":324996,"line_start":319,"line_end":319,"column_start":2,"column_end":25}},{"value":"/ assert_eq!(data, [1, 2]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":324998,"byte_end":325027,"line_start":320,"line_end":320,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325029,"byte_end":325032,"line_start":321,"line_end":321,"column_start":2,"column_end":5}},{"value":"/ let bits = data.view_bits_mut::<Lsb0>();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325034,"byte_end":325078,"line_start":322,"line_end":322,"column_start":2,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325080,"byte_end":325087,"line_start":323,"line_end":323,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325089,"byte_end":325092,"line_start":324,"line_end":324,"column_start":2,"column_end":5}},{"value":"/ [`BitView`]: crate::view::BitView","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325094,"byte_end":325131,"line_start":325,"line_end":325,"column_start":2,"column_end":39}},{"value":"/ [`.view_bits_mut::<O>()`]: crate::view::BitView::view_bits_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325133,"byte_end":325199,"line_start":326,"line_end":326,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4160},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326424,"byte_end":326442,"line_start":365,"line_end":365,"column_start":9,"column_end":27},"name":"try_from_slice_mut","qualname":"<BitSlice<T, O>>::try_from_slice_mut","value":"pub fn try_from_slice_mut(&mut [T]) -> Result<&mut Self, BitSpanError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to construct an exclusive `&mut BitSlice` reference over a\n slice of elements.","sig":null,"attributes":[{"value":"/ Attempts to construct an exclusive `&mut BitSlice` reference over a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325303,"byte_end":325374,"line_start":331,"line_end":331,"column_start":2,"column_end":73}},{"value":"/ slice of elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325376,"byte_end":325398,"line_start":332,"line_end":332,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325400,"byte_end":325403,"line_start":333,"line_end":333,"column_start":2,"column_end":5}},{"value":"/ The [`BitView`] trait, implemented on all `[T]` slices, provides a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325405,"byte_end":325475,"line_start":334,"line_end":334,"column_start":2,"column_end":72}},{"value":"/ [`.try_view_bits_mut::<O>()`] method which delegates to this function","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325477,"byte_end":325550,"line_start":335,"line_end":335,"column_start":2,"column_end":75}},{"value":"/ and may be more convenient for you to write.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325552,"byte_end":325600,"line_start":336,"line_end":336,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325602,"byte_end":325605,"line_start":337,"line_end":337,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325607,"byte_end":325624,"line_start":338,"line_end":338,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325626,"byte_end":325629,"line_start":339,"line_end":339,"column_start":2,"column_end":5}},{"value":"/ - `slice`: An exclusive reference to a slice of memory elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325631,"byte_end":325699,"line_start":340,"line_end":340,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325701,"byte_end":325704,"line_start":341,"line_end":341,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325706,"byte_end":325720,"line_start":342,"line_end":342,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325722,"byte_end":325725,"line_start":343,"line_end":343,"column_start":2,"column_end":5}},{"value":"/ An exclusive `&mut BitSlice` over `slice`. If `slice` is longer than can","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325727,"byte_end":325803,"line_start":344,"line_end":344,"column_start":2,"column_end":78}},{"value":"/ be encoded into a `&mut BitSlice` (see [`MAX_ELTS`]), this will fail and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325805,"byte_end":325881,"line_start":345,"line_end":345,"column_start":2,"column_end":78}},{"value":"/ return the original `slice` as an error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325883,"byte_end":325927,"line_start":346,"line_end":346,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325929,"byte_end":325932,"line_start":347,"line_end":347,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325934,"byte_end":325949,"line_start":348,"line_end":348,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325951,"byte_end":325954,"line_start":349,"line_end":349,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325956,"byte_end":325967,"line_start":350,"line_end":350,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325969,"byte_end":325996,"line_start":351,"line_end":351,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":325998,"byte_end":326001,"line_start":352,"line_end":352,"column_start":2,"column_end":5}},{"value":"/ let mut data = [0u8; 2];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326003,"byte_end":326031,"line_start":353,"line_end":353,"column_start":2,"column_end":30}},{"value":"/ let bits = BitSlice::<_, Msb0>::try_from_slice_mut(&mut data).unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326033,"byte_end":326108,"line_start":354,"line_end":354,"column_start":2,"column_end":77}},{"value":"/ bits.set(7, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326110,"byte_end":326132,"line_start":355,"line_end":355,"column_start":2,"column_end":24}},{"value":"/ bits.set(15, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326134,"byte_end":326157,"line_start":356,"line_end":356,"column_start":2,"column_end":25}},{"value":"/ assert_eq!(data, [1; 2]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326159,"byte_end":326188,"line_start":357,"line_end":357,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326190,"byte_end":326193,"line_start":358,"line_end":358,"column_start":2,"column_end":5}},{"value":"/ let bits = data.try_view_bits_mut::<Msb0>().unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326195,"byte_end":326252,"line_start":359,"line_end":359,"column_start":2,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326254,"byte_end":326261,"line_start":360,"line_end":360,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326263,"byte_end":326266,"line_start":361,"line_end":361,"column_start":2,"column_end":5}},{"value":"/ [`BitView`]: crate::view::BitView","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326268,"byte_end":326305,"line_start":362,"line_end":362,"column_start":2,"column_end":39}},{"value":"/ [`MAX_ELTS`]: Self::MAX_ELTS","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326307,"byte_end":326339,"line_start":363,"line_end":363,"column_start":2,"column_end":34}},{"value":"/ [`.try_view_bits_mut::<O>()`]: crate::view::BitView::try_view_bits_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326341,"byte_end":326415,"line_start":364,"line_end":364,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4161},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327305,"byte_end":327325,"line_start":393,"line_end":393,"column_start":16,"column_end":36},"name":"from_slice_unchecked","qualname":"<BitSlice<T, O>>::from_slice_unchecked","value":"pub unsafe fn from_slice_unchecked(&[T]) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a shared `&BitSlice` over an element slice, without checking\n its length.","sig":null,"attributes":[{"value":"/ Constructs a shared `&BitSlice` over an element slice, without checking","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326737,"byte_end":326812,"line_start":379,"line_end":379,"column_start":2,"column_end":77}},{"value":"/ its length.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326814,"byte_end":326829,"line_start":380,"line_end":380,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326831,"byte_end":326834,"line_start":381,"line_end":381,"column_start":2,"column_end":5}},{"value":"/ If `slice` is too long to encode into a `&BitSlice`, then the produced","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326836,"byte_end":326910,"line_start":382,"line_end":382,"column_start":2,"column_end":76}},{"value":"/ bit-slice’s length is unspecified.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326912,"byte_end":326952,"line_start":383,"line_end":383,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326954,"byte_end":326957,"line_start":384,"line_end":384,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326959,"byte_end":326972,"line_start":385,"line_end":385,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326974,"byte_end":326977,"line_start":386,"line_end":386,"column_start":2,"column_end":5}},{"value":"/ You must ensure that `slice.len() < BitSlice::MAX_ELTS`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":326979,"byte_end":327039,"line_start":387,"line_end":387,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327041,"byte_end":327044,"line_start":388,"line_end":388,"column_start":2,"column_end":5}},{"value":"/ Calling this function with an over-long slice is **library-level**","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327046,"byte_end":327116,"line_start":389,"line_end":389,"column_start":2,"column_end":72}},{"value":"/ undefined behavior. You may not assume anything about its implementation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327118,"byte_end":327194,"line_start":390,"line_end":390,"column_start":2,"column_end":78}},{"value":"/ or behavior, and must conservatively assume that over-long slices cause","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327196,"byte_end":327271,"line_start":391,"line_end":391,"column_start":2,"column_end":77}},{"value":"/ compiler UB.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327273,"byte_end":327289,"line_start":392,"line_end":392,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4162},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328077,"byte_end":328101,"line_start":414,"line_end":414,"column_start":16,"column_end":40},"name":"from_slice_unchecked_mut","qualname":"<BitSlice<T, O>>::from_slice_unchecked_mut","value":"pub unsafe fn from_slice_unchecked_mut(&mut [T]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs an exclusive `&mut BitSlice` over an element slice, without\n checking its length.","sig":null,"attributes":[{"value":"/ Constructs an exclusive `&mut BitSlice` over an element slice, without","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327497,"byte_end":327571,"line_start":400,"line_end":400,"column_start":2,"column_end":76}},{"value":"/ checking its length.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327573,"byte_end":327597,"line_start":401,"line_end":401,"column_start":2,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327599,"byte_end":327602,"line_start":402,"line_end":402,"column_start":2,"column_end":5}},{"value":"/ If `slice` is too long to encode into a `&mut BitSlice`, then the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327604,"byte_end":327673,"line_start":403,"line_end":403,"column_start":2,"column_end":71}},{"value":"/ produced bit-slice’s length is unspecified.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327675,"byte_end":327724,"line_start":404,"line_end":404,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327726,"byte_end":327729,"line_start":405,"line_end":405,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327731,"byte_end":327744,"line_start":406,"line_end":406,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327746,"byte_end":327749,"line_start":407,"line_end":407,"column_start":2,"column_end":5}},{"value":"/ You must ensure that `slice.len() < BitSlice::MAX_ELTS`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327751,"byte_end":327811,"line_start":408,"line_end":408,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327813,"byte_end":327816,"line_start":409,"line_end":409,"column_start":2,"column_end":5}},{"value":"/ Calling this function with an over-long slice is **library-level**","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327818,"byte_end":327888,"line_start":410,"line_end":410,"column_start":2,"column_end":72}},{"value":"/ undefined behavior. You may not assume anything about its implementation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327890,"byte_end":327966,"line_start":411,"line_end":411,"column_start":2,"column_end":78}},{"value":"/ or behavior, and must conservatively assume that over-long slices cause","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":327968,"byte_end":328043,"line_start":412,"line_end":412,"column_start":2,"column_end":77}},{"value":"/ compiler UB.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328045,"byte_end":328061,"line_start":413,"line_end":413,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4166},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328708,"byte_end":328717,"line_start":438,"line_end":438,"column_start":9,"column_end":18},"name":"as_bitptr","qualname":"<BitSlice<T, O>>::as_bitptr","value":"pub fn as_bitptr(&Self) -> BitPtr<Const, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Gets a raw pointer to the zeroth bit of the bit-slice.","sig":null,"attributes":[{"value":"/ Gets a raw pointer to the zeroth bit of the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328382,"byte_end":328440,"line_start":428,"line_end":428,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328442,"byte_end":328445,"line_start":429,"line_end":429,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328447,"byte_end":328462,"line_start":430,"line_end":430,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328464,"byte_end":328467,"line_start":431,"line_end":431,"column_start":2,"column_end":5}},{"value":"/ [`slice::as_ptr`](https://doc.rust-lang.org/std/primitive.slice.html#method.as_ptr)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328469,"byte_end":328556,"line_start":432,"line_end":432,"column_start":2,"column_end":89}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328558,"byte_end":328561,"line_start":433,"line_end":433,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328563,"byte_end":328585,"line_start":434,"line_end":434,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328587,"byte_end":328590,"line_start":435,"line_end":435,"column_start":2,"column_end":5}},{"value":"/ This is renamed in order to indicate that it is returning a `bitvec`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328592,"byte_end":328664,"line_start":436,"line_end":436,"column_start":2,"column_end":74}},{"value":"/ structure, not a raw pointer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328666,"byte_end":328699,"line_start":437,"line_end":437,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4167},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329136,"byte_end":329149,"line_start":452,"line_end":452,"column_start":9,"column_end":22},"name":"as_mut_bitptr","qualname":"<BitSlice<T, O>>::as_mut_bitptr","value":"pub fn as_mut_bitptr(&mut Self) -> BitPtr<Mut, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Gets a raw, write-capable pointer to the zeroth bit of the bit-slice.","sig":null,"attributes":[{"value":"/ Gets a raw, write-capable pointer to the zeroth bit of the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328787,"byte_end":328860,"line_start":442,"line_end":442,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328862,"byte_end":328865,"line_start":443,"line_end":443,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328867,"byte_end":328882,"line_start":444,"line_end":444,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328884,"byte_end":328887,"line_start":445,"line_end":445,"column_start":2,"column_end":5}},{"value":"/ [`slice::as_mut_ptr`](https://doc.rust-lang.org/std/primitive.slice.html#method.as_mut_ptr)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328889,"byte_end":328984,"line_start":446,"line_end":446,"column_start":2,"column_end":97}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328986,"byte_end":328989,"line_start":447,"line_end":447,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328991,"byte_end":329013,"line_start":448,"line_end":448,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329015,"byte_end":329018,"line_start":449,"line_end":449,"column_start":2,"column_end":5}},{"value":"/ This is renamed in order to indicate that it is returning a `bitvec`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329020,"byte_end":329092,"line_start":450,"line_end":450,"column_start":2,"column_end":74}},{"value":"/ structure, not a raw pointer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329094,"byte_end":329127,"line_start":451,"line_end":451,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4168},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329895,"byte_end":329910,"line_start":475,"line_end":475,"column_start":9,"column_end":24},"name":"as_bitptr_range","qualname":"<BitSlice<T, O>>::as_bitptr_range","value":"pub fn as_bitptr_range(&Self) -> BitPtrRange<Const, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Views the bit-slice as a half-open range of bit-pointers, to its first\n bit *in* the bit-slice and first bit *beyond* it.","sig":null,"attributes":[{"value":"/ Views the bit-slice as a half-open range of bit-pointers, to its first","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329225,"byte_end":329299,"line_start":456,"line_end":456,"column_start":2,"column_end":76}},{"value":"/ bit *in* the bit-slice and first bit *beyond* it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329301,"byte_end":329354,"line_start":457,"line_end":457,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329356,"byte_end":329359,"line_start":458,"line_end":458,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329361,"byte_end":329376,"line_start":459,"line_end":459,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329378,"byte_end":329381,"line_start":460,"line_end":460,"column_start":2,"column_end":5}},{"value":"/ [`slice::as_ptr_range`](https://doc.rust-lang.org/std/primitive.slice.html#method.as_ptr_range)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329383,"byte_end":329482,"line_start":461,"line_end":461,"column_start":2,"column_end":101}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329484,"byte_end":329487,"line_start":462,"line_end":462,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329489,"byte_end":329511,"line_start":463,"line_end":463,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329513,"byte_end":329516,"line_start":464,"line_end":464,"column_start":2,"column_end":5}},{"value":"/ This is renamed to indicate that it returns a `bitvec` structure, rather","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329518,"byte_end":329594,"line_start":465,"line_end":465,"column_start":2,"column_end":78}},{"value":"/ than an ordinary `Range`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329596,"byte_end":329625,"line_start":466,"line_end":466,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329627,"byte_end":329630,"line_start":467,"line_end":467,"column_start":2,"column_end":5}},{"value":"/ ## Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329632,"byte_end":329644,"line_start":468,"line_end":468,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329646,"byte_end":329649,"line_start":469,"line_end":469,"column_start":2,"column_end":5}},{"value":"/ `BitSlice` does define a [`.as_ptr_range()`], which returns a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329651,"byte_end":329716,"line_start":470,"line_end":470,"column_start":2,"column_end":67}},{"value":"/ `Range<BitPtr>`. `BitPtrRange` has additional capabilities that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329718,"byte_end":329785,"line_start":471,"line_end":471,"column_start":2,"column_end":69}},{"value":"/ `Range<*const T>` and `Range<BitPtr>` do not.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329787,"byte_end":329836,"line_start":472,"line_end":472,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329838,"byte_end":329841,"line_start":473,"line_end":473,"column_start":2,"column_end":5}},{"value":"/ [`.as_ptr_range()`]: Self::as_ptr_range","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329843,"byte_end":329886,"line_start":474,"line_end":474,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4169},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330639,"byte_end":330658,"line_start":496,"line_end":496,"column_start":9,"column_end":28},"name":"as_mut_bitptr_range","qualname":"<BitSlice<T, O>>::as_mut_bitptr_range","value":"pub fn as_mut_bitptr_range(&mut Self) -> BitPtrRange<Mut, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Views the bit-slice as a half-open range of write-capable bit-pointers,\n to its first bit *in* the bit-slice and the first bit *beyond* it.","sig":null,"attributes":[{"value":"/ Views the bit-slice as a half-open range of write-capable bit-pointers,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":329991,"byte_end":330066,"line_start":479,"line_end":479,"column_start":2,"column_end":77}},{"value":"/ to its first bit *in* the bit-slice and the first bit *beyond* it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330068,"byte_end":330138,"line_start":480,"line_end":480,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330140,"byte_end":330143,"line_start":481,"line_end":481,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330145,"byte_end":330160,"line_start":482,"line_end":482,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330162,"byte_end":330165,"line_start":483,"line_end":483,"column_start":2,"column_end":5}},{"value":"/ [`slice::as_mut_ptr_range`](https://doc.rust-lang.org/std/primitive.slice.html#method.as_mut_ptr_range)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330167,"byte_end":330274,"line_start":484,"line_end":484,"column_start":2,"column_end":109}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330276,"byte_end":330279,"line_start":485,"line_end":485,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330281,"byte_end":330303,"line_start":486,"line_end":486,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330305,"byte_end":330308,"line_start":487,"line_end":487,"column_start":2,"column_end":5}},{"value":"/ This is renamed to indicate that it returns a `bitvec` structure, rather","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330310,"byte_end":330386,"line_start":488,"line_end":488,"column_start":2,"column_end":78}},{"value":"/ than an ordinary `Range`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330388,"byte_end":330417,"line_start":489,"line_end":489,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330419,"byte_end":330422,"line_start":490,"line_end":490,"column_start":2,"column_end":5}},{"value":"/ ## Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330424,"byte_end":330436,"line_start":491,"line_end":491,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330438,"byte_end":330441,"line_start":492,"line_end":492,"column_start":2,"column_end":5}},{"value":"/ `BitSlice` does define a [`.as_mut_ptr_range()`], which returns a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330443,"byte_end":330512,"line_start":493,"line_end":493,"column_start":2,"column_end":71}},{"value":"/ `Range<BitPtr>`. `BitPtrRange` has additional capabilities that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330514,"byte_end":330581,"line_start":494,"line_end":494,"column_start":2,"column_end":69}},{"value":"/ `Range<*mut T>` and `Range<BitPtr>` do not.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330583,"byte_end":330630,"line_start":495,"line_end":495,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4170},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331929,"byte_end":331948,"line_start":537,"line_end":537,"column_start":9,"column_end":28},"name":"clone_from_bitslice","qualname":"<BitSlice<T, O>>::clone_from_bitslice","value":"pub fn clone_from_bitslice<T2, O2>(&mut Self, &BitSlice<T2, O2>) where\nT2: BitStore, O2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Copies the bits from `src` into `self`.","sig":null,"attributes":[{"value":"/ Copies the bits from `src` into `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330745,"byte_end":330788,"line_start":500,"line_end":500,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330790,"byte_end":330793,"line_start":501,"line_end":501,"column_start":2,"column_end":5}},{"value":"/ `self` and `src` must have the same length.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330795,"byte_end":330842,"line_start":502,"line_end":502,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330844,"byte_end":330847,"line_start":503,"line_end":503,"column_start":2,"column_end":5}},{"value":"/ ## Performance","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330849,"byte_end":330867,"line_start":504,"line_end":504,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330869,"byte_end":330872,"line_start":505,"line_end":505,"column_start":2,"column_end":5}},{"value":"/ If `src` has the same type arguments as `self`, it will use the same","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330874,"byte_end":330946,"line_start":506,"line_end":506,"column_start":2,"column_end":74}},{"value":"/ implementation as [`.copy_from_bitslice()`]; if you know that this will","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":330948,"byte_end":331023,"line_start":507,"line_end":507,"column_start":2,"column_end":77}},{"value":"/ always be the case, you should prefer to use that method directly.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331025,"byte_end":331095,"line_start":508,"line_end":508,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331097,"byte_end":331100,"line_start":509,"line_end":509,"column_start":2,"column_end":5}},{"value":"/ Only `.copy_from_bitslice()` is *able* to perform acceleration; this","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331102,"byte_end":331174,"line_start":510,"line_end":510,"column_start":2,"column_end":74}},{"value":"/ method is *always* required to perform a bit-by-bit crawl over both","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331176,"byte_end":331247,"line_start":511,"line_end":511,"column_start":2,"column_end":73}},{"value":"/ bit-slices.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331249,"byte_end":331264,"line_start":512,"line_end":512,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331266,"byte_end":331269,"line_start":513,"line_end":513,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331271,"byte_end":331286,"line_start":514,"line_end":514,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331288,"byte_end":331291,"line_start":515,"line_end":515,"column_start":2,"column_end":5}},{"value":"/ [`slice::clone_from_slice`](https://doc.rust-lang.org/std/primitive.slice.html#method.clone_from_slice)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331293,"byte_end":331400,"line_start":516,"line_end":516,"column_start":2,"column_end":109}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331402,"byte_end":331405,"line_start":517,"line_end":517,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331407,"byte_end":331429,"line_start":518,"line_end":518,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331431,"byte_end":331434,"line_start":519,"line_end":519,"column_start":2,"column_end":5}},{"value":"/ This is renamed to reflect that it copies from another bit-slice, not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331436,"byte_end":331509,"line_start":520,"line_end":520,"column_start":2,"column_end":75}},{"value":"/ from an element slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331511,"byte_end":331537,"line_start":521,"line_end":521,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331539,"byte_end":331542,"line_start":522,"line_end":522,"column_start":2,"column_end":5}},{"value":"/ In order to support general usage, it allows `src` to have different","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331544,"byte_end":331616,"line_start":523,"line_end":523,"column_start":2,"column_end":74}},{"value":"/ type parameters than `self`, at the cost of performance optimizations.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331618,"byte_end":331692,"line_start":524,"line_end":524,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331694,"byte_end":331697,"line_start":525,"line_end":525,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331699,"byte_end":331712,"line_start":526,"line_end":526,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331714,"byte_end":331717,"line_start":527,"line_end":527,"column_start":2,"column_end":5}},{"value":"/ This panics if the two bit-slices have different lengths.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331719,"byte_end":331780,"line_start":528,"line_end":528,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331782,"byte_end":331785,"line_start":529,"line_end":529,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331787,"byte_end":331802,"line_start":530,"line_end":530,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331804,"byte_end":331807,"line_start":531,"line_end":531,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331809,"byte_end":331820,"line_start":532,"line_end":532,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331822,"byte_end":331849,"line_start":533,"line_end":533,"column_start":2,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331851,"byte_end":331858,"line_start":534,"line_end":534,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331860,"byte_end":331863,"line_start":535,"line_end":535,"column_start":2,"column_end":5}},{"value":"/ [`.copy_from_bitslice()`]: Self::copy_from_bitslice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":331865,"byte_end":331920,"line_start":536,"line_end":536,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4173},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332911,"byte_end":332929,"line_start":581,"line_end":581,"column_start":9,"column_end":27},"name":"copy_from_bitslice","qualname":"<BitSlice<T, O>>::copy_from_bitslice","value":"pub fn copy_from_bitslice(&mut Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":" Copies all bits from `src` into `self`, using batched acceleration when\n possible.","sig":null,"attributes":[{"value":"/ Copies all bits from `src` into `self`, using batched acceleration when","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332458,"byte_end":332533,"line_start":563,"line_end":563,"column_start":2,"column_end":77}},{"value":"/ possible.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332535,"byte_end":332548,"line_start":564,"line_end":564,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332550,"byte_end":332553,"line_start":565,"line_end":565,"column_start":2,"column_end":5}},{"value":"/ `self` and `src` must have the same length.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332555,"byte_end":332602,"line_start":566,"line_end":566,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332604,"byte_end":332607,"line_start":567,"line_end":567,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332609,"byte_end":332624,"line_start":568,"line_end":568,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332626,"byte_end":332629,"line_start":569,"line_end":569,"column_start":2,"column_end":5}},{"value":"/ [`slice::copy_from_slice`](https://doc.rust-lang.org/std/primitive.slice.html#method.copy_from_slice)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332631,"byte_end":332736,"line_start":570,"line_end":570,"column_start":2,"column_end":107}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332738,"byte_end":332741,"line_start":571,"line_end":571,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332743,"byte_end":332756,"line_start":572,"line_end":572,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332758,"byte_end":332761,"line_start":573,"line_end":573,"column_start":2,"column_end":5}},{"value":"/ This panics if the two bit-slices have different lengths.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332763,"byte_end":332824,"line_start":574,"line_end":574,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332826,"byte_end":332829,"line_start":575,"line_end":575,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332831,"byte_end":332846,"line_start":576,"line_end":576,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332848,"byte_end":332851,"line_start":577,"line_end":577,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332853,"byte_end":332864,"line_start":578,"line_end":578,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332866,"byte_end":332893,"line_start":579,"line_end":579,"column_start":2,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":332895,"byte_end":332902,"line_start":580,"line_end":580,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4174},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":335294,"byte_end":335312,"line_start":674,"line_end":674,"column_start":9,"column_end":27},"name":"swap_with_bitslice","qualname":"<BitSlice<T, O>>::swap_with_bitslice","value":"pub fn swap_with_bitslice<T2, O2>(&mut Self, &mut BitSlice<T2, O2>) where\nT2: BitStore, O2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Swaps the contents of two bit-slices.","sig":null,"attributes":[{"value":"/ Swaps the contents of two bit-slices.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334426,"byte_end":334467,"line_start":640,"line_end":640,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334469,"byte_end":334472,"line_start":641,"line_end":641,"column_start":2,"column_end":5}},{"value":"/ `self` and `other` must have the same length.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334474,"byte_end":334523,"line_start":642,"line_end":642,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334525,"byte_end":334528,"line_start":643,"line_end":643,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334530,"byte_end":334545,"line_start":644,"line_end":644,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334547,"byte_end":334550,"line_start":645,"line_end":645,"column_start":2,"column_end":5}},{"value":"/ [`slice::swap_with_slice`](https://doc.rust-lang.org/std/primitive.slice.html#method.swap_with_slice)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334552,"byte_end":334657,"line_start":646,"line_end":646,"column_start":2,"column_end":107}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334659,"byte_end":334662,"line_start":647,"line_end":647,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334664,"byte_end":334686,"line_start":648,"line_end":648,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334688,"byte_end":334691,"line_start":649,"line_end":649,"column_start":2,"column_end":5}},{"value":"/ This method is renamed, as it takes a bit-slice rather than an element","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334693,"byte_end":334767,"line_start":650,"line_end":650,"column_start":2,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334769,"byte_end":334779,"line_start":651,"line_end":651,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334781,"byte_end":334784,"line_start":652,"line_end":652,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334786,"byte_end":334799,"line_start":653,"line_end":653,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334801,"byte_end":334804,"line_start":654,"line_end":654,"column_start":2,"column_end":5}},{"value":"/ This panics if the two bit-slices have different lengths.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334806,"byte_end":334867,"line_start":655,"line_end":655,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334869,"byte_end":334872,"line_start":656,"line_end":656,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334874,"byte_end":334889,"line_start":657,"line_end":657,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334891,"byte_end":334894,"line_start":658,"line_end":658,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334896,"byte_end":334907,"line_start":659,"line_end":659,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334909,"byte_end":334936,"line_start":660,"line_end":660,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334938,"byte_end":334941,"line_start":661,"line_end":661,"column_start":2,"column_end":5}},{"value":"/ let mut one = [0xA5u8, 0x69];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334943,"byte_end":334976,"line_start":662,"line_end":662,"column_start":2,"column_end":35}},{"value":"/ let mut two = 0x1234u16;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":334978,"byte_end":335006,"line_start":663,"line_end":663,"column_start":2,"column_end":30}},{"value":"/ let one_bits = one.view_bits_mut::<Msb0>();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":335008,"byte_end":335055,"line_start":664,"line_end":664,"column_start":2,"column_end":49}},{"value":"/ let two_bits = two.view_bits_mut::<Lsb0>();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":335057,"byte_end":335104,"line_start":665,"line_end":665,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":335106,"byte_end":335109,"line_start":666,"line_end":666,"column_start":2,"column_end":5}},{"value":"/ one_bits.swap_with_bitslice(two_bits);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":335111,"byte_end":335153,"line_start":667,"line_end":667,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":335155,"byte_end":335158,"line_start":668,"line_end":668,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(one, [0x2C, 0x48]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":335160,"byte_end":335194,"line_start":669,"line_end":669,"column_start":2,"column_end":36}},{"value":"/ # if cfg!(target_endian = \"little\") {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":335196,"byte_end":335237,"line_start":670,"line_end":670,"column_start":2,"column_end":43}},{"value":"/ assert_eq!(two, 0x96A5);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":335239,"byte_end":335267,"line_start":671,"line_end":671,"column_start":2,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":335269,"byte_end":335276,"line_start":672,"line_end":672,"column_start":2,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":335278,"byte_end":335285,"line_start":673,"line_end":673,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4181},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336715,"byte_end":336718,"line_start":735,"line_end":735,"column_start":9,"column_end":12},"name":"set","qualname":"<BitSlice<T, O>>::set","value":"pub fn set(&mut Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Writes a new value into a single bit.","sig":null,"attributes":[{"value":"/ Writes a new value into a single bit.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336048,"byte_end":336089,"line_start":709,"line_end":709,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336091,"byte_end":336094,"line_start":710,"line_end":710,"column_start":2,"column_end":5}},{"value":"/ This is the replacement for `*slice[index] = value;`, as `bitvec` is not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336096,"byte_end":336172,"line_start":711,"line_end":711,"column_start":2,"column_end":78}},{"value":"/ able to express that under the current `IndexMut` API signature.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336174,"byte_end":336242,"line_start":712,"line_end":712,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336244,"byte_end":336247,"line_start":713,"line_end":713,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336249,"byte_end":336266,"line_start":714,"line_end":714,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336268,"byte_end":336271,"line_start":715,"line_end":715,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336273,"byte_end":336290,"line_start":716,"line_end":716,"column_start":2,"column_end":19}},{"value":"/ - `index`: The bit-index to set. It must be in `0 .. self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336292,"byte_end":336361,"line_start":717,"line_end":717,"column_start":2,"column_end":71}},{"value":"/ - `value`: The new bit-value to write into the bit at `index`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336363,"byte_end":336429,"line_start":718,"line_end":718,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336431,"byte_end":336434,"line_start":719,"line_end":719,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336436,"byte_end":336449,"line_start":720,"line_end":720,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336451,"byte_end":336454,"line_start":721,"line_end":721,"column_start":2,"column_end":5}},{"value":"/ This panics if `index` is out of bounds.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336456,"byte_end":336500,"line_start":722,"line_end":722,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336502,"byte_end":336505,"line_start":723,"line_end":723,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336507,"byte_end":336522,"line_start":724,"line_end":724,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336524,"byte_end":336527,"line_start":725,"line_end":725,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336529,"byte_end":336540,"line_start":726,"line_end":726,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336542,"byte_end":336569,"line_start":727,"line_end":727,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336571,"byte_end":336574,"line_start":728,"line_end":728,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336576,"byte_end":336607,"line_start":729,"line_end":729,"column_start":2,"column_end":33}},{"value":"/ bits.set(0, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336609,"byte_end":336631,"line_start":730,"line_end":730,"column_start":2,"column_end":24}},{"value":"/ bits.set(1, false);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336633,"byte_end":336656,"line_start":731,"line_end":731,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336658,"byte_end":336661,"line_start":732,"line_end":732,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(bits, bits![1, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336663,"byte_end":336697,"line_start":733,"line_end":733,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336699,"byte_end":336706,"line_start":734,"line_end":734,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4182},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337642,"byte_end":337655,"line_start":768,"line_end":768,"column_start":16,"column_end":29},"name":"set_unchecked","qualname":"<BitSlice<T, O>>::set_unchecked","value":"pub unsafe fn set_unchecked(&mut Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Writes a new value into a single bit, without bounds checking.","sig":null,"attributes":[{"value":"/ Writes a new value into a single bit, without bounds checking.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336794,"byte_end":336860,"line_start":739,"line_end":739,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336862,"byte_end":336865,"line_start":740,"line_end":740,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336867,"byte_end":336884,"line_start":741,"line_end":741,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336886,"byte_end":336889,"line_start":742,"line_end":742,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336891,"byte_end":336908,"line_start":743,"line_end":743,"column_start":2,"column_end":19}},{"value":"/ - `index`: The bit-index to set. It must be in `0 .. self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336910,"byte_end":336979,"line_start":744,"line_end":744,"column_start":2,"column_end":71}},{"value":"/ - `value`: The new bit-value to write into the bit at `index`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":336981,"byte_end":337047,"line_start":745,"line_end":745,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337049,"byte_end":337052,"line_start":746,"line_end":746,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337054,"byte_end":337067,"line_start":747,"line_end":747,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337069,"byte_end":337072,"line_start":748,"line_end":748,"column_start":2,"column_end":5}},{"value":"/ You must ensure that `index` is in the range `0 .. self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337074,"byte_end":337141,"line_start":749,"line_end":749,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337143,"byte_end":337146,"line_start":750,"line_end":750,"column_start":2,"column_end":5}},{"value":"/ This performs bit-pointer offset arithmetic without doing any bounds","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337148,"byte_end":337220,"line_start":751,"line_end":751,"column_start":2,"column_end":74}},{"value":"/ checks. If `index` is out of bounds, then this will issue an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337222,"byte_end":337286,"line_start":752,"line_end":752,"column_start":2,"column_end":66}},{"value":"/ out-of-bounds access and will trigger memory unsafety.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337288,"byte_end":337346,"line_start":753,"line_end":753,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337348,"byte_end":337351,"line_start":754,"line_end":754,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337353,"byte_end":337368,"line_start":755,"line_end":755,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337370,"byte_end":337373,"line_start":756,"line_end":756,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337375,"byte_end":337386,"line_start":757,"line_end":757,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337388,"byte_end":337415,"line_start":758,"line_end":758,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337417,"byte_end":337420,"line_start":759,"line_end":759,"column_start":2,"column_end":5}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337422,"byte_end":337445,"line_start":760,"line_end":760,"column_start":2,"column_end":25}},{"value":"/ let bits = &mut data.view_bits_mut::<Lsb0>()[.. 2];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337447,"byte_end":337502,"line_start":761,"line_end":761,"column_start":2,"column_end":57}},{"value":"/ assert_eq!(bits.len(), 2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337504,"byte_end":337534,"line_start":762,"line_end":762,"column_start":2,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337536,"byte_end":337548,"line_start":763,"line_end":763,"column_start":2,"column_end":14}},{"value":"/   bits.set_unchecked(3, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337550,"byte_end":337584,"line_start":764,"line_end":764,"column_start":2,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337586,"byte_end":337591,"line_start":765,"line_end":765,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(data, 8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337593,"byte_end":337617,"line_start":766,"line_end":766,"column_start":2,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337619,"byte_end":337626,"line_start":767,"line_end":767,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4183},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338074,"byte_end":338081,"line_start":787,"line_end":787,"column_start":9,"column_end":16},"name":"replace","qualname":"<BitSlice<T, O>>::replace","value":"pub fn replace(&mut Self, usize, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Writes a new value into a bit, and returns its previous value.","sig":null,"attributes":[{"value":"/ Writes a new value into a bit, and returns its previous value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337741,"byte_end":337807,"line_start":772,"line_end":772,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337809,"byte_end":337812,"line_start":773,"line_end":773,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337814,"byte_end":337827,"line_start":774,"line_end":774,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337829,"byte_end":337832,"line_start":775,"line_end":775,"column_start":2,"column_end":5}},{"value":"/ This panics if `index` is not less than `self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337834,"byte_end":337891,"line_start":776,"line_end":776,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337893,"byte_end":337896,"line_start":777,"line_end":777,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337898,"byte_end":337913,"line_start":778,"line_end":778,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337915,"byte_end":337918,"line_start":779,"line_end":779,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337920,"byte_end":337931,"line_start":780,"line_end":780,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337933,"byte_end":337960,"line_start":781,"line_end":781,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337962,"byte_end":337965,"line_start":782,"line_end":782,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337967,"byte_end":337995,"line_start":783,"line_end":783,"column_start":2,"column_end":30}},{"value":"/ assert!(!bits.replace(0, true));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":337997,"byte_end":338033,"line_start":784,"line_end":784,"column_start":2,"column_end":38}},{"value":"/ assert!(bits[0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338035,"byte_end":338056,"line_start":785,"line_end":785,"column_start":2,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338058,"byte_end":338065,"line_start":786,"line_end":786,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4184},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338673,"byte_end":338690,"line_start":812,"line_end":812,"column_start":16,"column_end":33},"name":"replace_unchecked","qualname":"<BitSlice<T, O>>::replace_unchecked","value":"pub unsafe fn replace_unchecked(&mut Self, usize, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Writes a new value into a bit, returning the previous value, without\n bounds checking.","sig":null,"attributes":[{"value":"/ Writes a new value into a bit, returning the previous value, without","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338234,"byte_end":338306,"line_start":792,"line_end":792,"column_start":2,"column_end":74}},{"value":"/ bounds checking.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338308,"byte_end":338328,"line_start":793,"line_end":793,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338330,"byte_end":338333,"line_start":794,"line_end":794,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338335,"byte_end":338348,"line_start":795,"line_end":795,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338350,"byte_end":338353,"line_start":796,"line_end":796,"column_start":2,"column_end":5}},{"value":"/ `index` must be less than `self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338355,"byte_end":338398,"line_start":797,"line_end":797,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338400,"byte_end":338403,"line_start":798,"line_end":798,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338405,"byte_end":338420,"line_start":799,"line_end":799,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338422,"byte_end":338425,"line_start":800,"line_end":800,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338427,"byte_end":338438,"line_start":801,"line_end":801,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338440,"byte_end":338467,"line_start":802,"line_end":802,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338469,"byte_end":338472,"line_start":803,"line_end":803,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 0, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338474,"byte_end":338505,"line_start":804,"line_end":804,"column_start":2,"column_end":33}},{"value":"/ let old = unsafe {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338507,"byte_end":338529,"line_start":805,"line_end":805,"column_start":2,"column_end":24}},{"value":"/   let a = &mut bits[.. 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338531,"byte_end":338561,"line_start":806,"line_end":806,"column_start":2,"column_end":32}},{"value":"/   a.replace_unchecked(1, true)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338563,"byte_end":338597,"line_start":807,"line_end":807,"column_start":2,"column_end":36}},{"value":"/ };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338599,"byte_end":338605,"line_start":808,"line_end":808,"column_start":2,"column_end":8}},{"value":"/ assert!(!old);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338607,"byte_end":338625,"line_start":809,"line_end":809,"column_start":2,"column_end":20}},{"value":"/ assert!(bits[1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338627,"byte_end":338648,"line_start":810,"line_end":810,"column_start":2,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338650,"byte_end":338657,"line_start":811,"line_end":811,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4185},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339282,"byte_end":339296,"line_start":834,"line_end":834,"column_start":16,"column_end":30},"name":"swap_unchecked","qualname":"<BitSlice<T, O>>::swap_unchecked","value":"pub unsafe fn swap_unchecked(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps two bits in a bit-slice, without bounds checking.","sig":null,"attributes":[{"value":"/ Swaps two bits in a bit-slice, without bounds checking.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338803,"byte_end":338862,"line_start":820,"line_end":820,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338864,"byte_end":338867,"line_start":821,"line_end":821,"column_start":2,"column_end":5}},{"value":"/ See [`.swap()`] for documentation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338869,"byte_end":338907,"line_start":822,"line_end":822,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338909,"byte_end":338912,"line_start":823,"line_end":823,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338914,"byte_end":338927,"line_start":824,"line_end":824,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338929,"byte_end":338932,"line_start":825,"line_end":825,"column_start":2,"column_end":5}},{"value":"/ You must ensure that `a` and `b` are both in the range `0 ..","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":338934,"byte_end":338998,"line_start":826,"line_end":826,"column_start":2,"column_end":66}},{"value":"/ self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339000,"byte_end":339016,"line_start":827,"line_end":827,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339018,"byte_end":339021,"line_start":828,"line_end":828,"column_start":2,"column_end":5}},{"value":"/ This method performs bit-pointer offset arithmetic without doing any","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339023,"byte_end":339095,"line_start":829,"line_end":829,"column_start":2,"column_end":74}},{"value":"/ bounds checks. If `a` or `b` are out of bounds, then this will issue an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339097,"byte_end":339172,"line_start":830,"line_end":830,"column_start":2,"column_end":77}},{"value":"/ out-of-bounds access and will trigger memory unsafety.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339174,"byte_end":339232,"line_start":831,"line_end":831,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339234,"byte_end":339237,"line_start":832,"line_end":832,"column_start":2,"column_end":5}},{"value":"/ [`.swap()`]: Self::swap","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339239,"byte_end":339266,"line_start":833,"line_end":833,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4186},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339932,"byte_end":339950,"line_start":854,"line_end":854,"column_start":16,"column_end":34},"name":"split_at_unchecked","qualname":"<BitSlice<T, O>>::split_at_unchecked","value":"pub unsafe fn split_at_unchecked(&Self, usize) -> (&Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":" Splits a bit-slice at an index, without bounds checking.","sig":null,"attributes":[{"value":"/ Splits a bit-slice at an index, without bounds checking.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339435,"byte_end":339495,"line_start":840,"line_end":840,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339497,"byte_end":339500,"line_start":841,"line_end":841,"column_start":2,"column_end":5}},{"value":"/ See [`.split_at()`] for documentation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339502,"byte_end":339544,"line_start":842,"line_end":842,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339546,"byte_end":339549,"line_start":843,"line_end":843,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339551,"byte_end":339564,"line_start":844,"line_end":844,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339566,"byte_end":339569,"line_start":845,"line_end":845,"column_start":2,"column_end":5}},{"value":"/ You must ensure that `mid` is in the range `0 ..= self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339571,"byte_end":339637,"line_start":846,"line_end":846,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339639,"byte_end":339642,"line_start":847,"line_end":847,"column_start":2,"column_end":5}},{"value":"/ This method produces new bit-slice references. If `mid` is out of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339644,"byte_end":339713,"line_start":848,"line_end":848,"column_start":2,"column_end":71}},{"value":"/ bounds, its behavior is **library-level** undefined. You must","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339715,"byte_end":339780,"line_start":849,"line_end":849,"column_start":2,"column_end":67}},{"value":"/ conservatively assume that an out-of-bounds split point produces","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339782,"byte_end":339850,"line_start":850,"line_end":850,"column_start":2,"column_end":70}},{"value":"/ compiler-level UB.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339852,"byte_end":339874,"line_start":851,"line_end":851,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339876,"byte_end":339879,"line_start":852,"line_end":852,"column_start":2,"column_end":5}},{"value":"/ [`.split_at()`]: Self::split_at","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":339881,"byte_end":339916,"line_start":853,"line_end":853,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4187},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":340778,"byte_end":340800,"line_start":879,"line_end":879,"column_start":16,"column_end":38},"name":"split_at_unchecked_mut","qualname":"<BitSlice<T, O>>::split_at_unchecked_mut","value":"pub unsafe fn split_at_unchecked_mut(&mut Self, usize)\n-> (&mut BitSlice<T::Alias, O>, &mut BitSlice<T::Alias, O>)","parent":null,"children":[],"decl_id":null,"docs":" Splits a mutable bit-slice at an index, without bounds checking.","sig":null,"attributes":[{"value":"/ Splits a mutable bit-slice at an index, without bounds checking.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":340261,"byte_end":340329,"line_start":865,"line_end":865,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":340331,"byte_end":340334,"line_start":866,"line_end":866,"column_start":2,"column_end":5}},{"value":"/ See [`.split_at_mut()`] for documentation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":340336,"byte_end":340382,"line_start":867,"line_end":867,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":340384,"byte_end":340387,"line_start":868,"line_end":868,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":340389,"byte_end":340402,"line_start":869,"line_end":869,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":340404,"byte_end":340407,"line_start":870,"line_end":870,"column_start":2,"column_end":5}},{"value":"/ You must ensure that `mid` is in the range `0 ..= self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":340409,"byte_end":340475,"line_start":871,"line_end":871,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":340477,"byte_end":340480,"line_start":872,"line_end":872,"column_start":2,"column_end":5}},{"value":"/ This method produces new bit-slice references. If `mid` is out of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":340482,"byte_end":340551,"line_start":873,"line_end":873,"column_start":2,"column_end":71}},{"value":"/ bounds, its behavior is **library-level** undefined. You must","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":340553,"byte_end":340618,"line_start":874,"line_end":874,"column_start":2,"column_end":67}},{"value":"/ conservatively assume that an out-of-bounds split point produces","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":340620,"byte_end":340688,"line_start":875,"line_end":875,"column_start":2,"column_end":70}},{"value":"/ compiler-level UB.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":340690,"byte_end":340712,"line_start":876,"line_end":876,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":340714,"byte_end":340717,"line_start":877,"line_end":877,"column_start":2,"column_end":5}},{"value":"/ [`.split_at_mut()`]: Self::split_at_mut","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":340719,"byte_end":340762,"line_start":878,"line_end":878,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4188},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341990,"byte_end":342011,"line_start":925,"line_end":925,"column_start":16,"column_end":37},"name":"copy_within_unchecked","qualname":"<BitSlice<T, O>>::copy_within_unchecked","value":"pub unsafe fn copy_within_unchecked<R>(&mut Self, R, usize) where\nR: RangeExt<usize>","parent":null,"children":[],"decl_id":null,"docs":" Copies bits from one region of the bit-slice to another region of\n itself, without doing bounds checks.","sig":null,"attributes":[{"value":"/ Copies bits from one region of the bit-slice to another region of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341112,"byte_end":341181,"line_start":892,"line_end":892,"column_start":2,"column_end":71}},{"value":"/ itself, without doing bounds checks.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341183,"byte_end":341223,"line_start":893,"line_end":893,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341225,"byte_end":341228,"line_start":894,"line_end":894,"column_start":2,"column_end":5}},{"value":"/ The regions are allowed to overlap.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341230,"byte_end":341269,"line_start":895,"line_end":895,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341271,"byte_end":341274,"line_start":896,"line_end":896,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341276,"byte_end":341293,"line_start":897,"line_end":897,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341295,"byte_end":341298,"line_start":898,"line_end":898,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341300,"byte_end":341317,"line_start":899,"line_end":899,"column_start":2,"column_end":19}},{"value":"/ - `src`: The range within `self` from which to copy.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341319,"byte_end":341375,"line_start":900,"line_end":900,"column_start":2,"column_end":58}},{"value":"/ - `dst`: The starting index within `self` at which to paste.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341377,"byte_end":341441,"line_start":901,"line_end":901,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341443,"byte_end":341446,"line_start":902,"line_end":902,"column_start":2,"column_end":5}},{"value":"/ ## Effects","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341448,"byte_end":341462,"line_start":903,"line_end":903,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341464,"byte_end":341467,"line_start":904,"line_end":904,"column_start":2,"column_end":5}},{"value":"/ `self[src]` is copied to `self[dest .. dest + src.len()]`. The bits of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341469,"byte_end":341543,"line_start":905,"line_end":905,"column_start":2,"column_end":76}},{"value":"/ `self[src]` are in an unspecified, but initialized, state.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341545,"byte_end":341607,"line_start":906,"line_end":906,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341609,"byte_end":341612,"line_start":907,"line_end":907,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341614,"byte_end":341627,"line_start":908,"line_end":908,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341629,"byte_end":341632,"line_start":909,"line_end":909,"column_start":2,"column_end":5}},{"value":"/ `src.end()` and `dest + src.len()` must be entirely within bounds.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341634,"byte_end":341704,"line_start":910,"line_end":910,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341706,"byte_end":341709,"line_start":911,"line_end":911,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341711,"byte_end":341726,"line_start":912,"line_end":912,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341728,"byte_end":341731,"line_start":913,"line_end":913,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341733,"byte_end":341744,"line_start":914,"line_end":914,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341746,"byte_end":341773,"line_start":915,"line_end":915,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341775,"byte_end":341778,"line_start":916,"line_end":916,"column_start":2,"column_end":5}},{"value":"/ let mut data = 0b1011_0000u8;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341780,"byte_end":341813,"line_start":917,"line_end":917,"column_start":2,"column_end":35}},{"value":"/ let bits = data.view_bits_mut::<Msb0>();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341815,"byte_end":341859,"line_start":918,"line_end":918,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341861,"byte_end":341864,"line_start":919,"line_end":919,"column_start":2,"column_end":5}},{"value":"/ unsafe {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341866,"byte_end":341878,"line_start":920,"line_end":920,"column_start":2,"column_end":14}},{"value":"/   bits.copy_within_unchecked(.. 4, 2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341880,"byte_end":341922,"line_start":921,"line_end":921,"column_start":2,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341924,"byte_end":341929,"line_start":922,"line_end":922,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(data, 0b1010_1100);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341931,"byte_end":341965,"line_start":923,"line_end":923,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":341967,"byte_end":341974,"line_start":924,"line_end":924,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4190},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":342737,"byte_end":342745,"line_start":950,"line_end":950,"column_start":9,"column_end":17},"name":"for_each","qualname":"<BitSlice<T, O>>::for_each","value":"pub fn for_each<impl FnMut(usize, bool) -> bool: FnMut(usize, bool) ->\nbool>(&mut Self, impl FnMut(usize, bool) -> bool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":342649,"byte_end":342679,"line_start":948,"line_end":948,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.iter_mut().enumerate()`\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":342681,"byte_end":342728,"line_start":949,"line_end":949,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4195},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":343414,"byte_end":343424,"line_start":972,"line_end":972,"column_start":9,"column_end":19},"name":"bit_domain","qualname":"<BitSlice<T, O>>::bit_domain","value":"pub fn bit_domain(&Self) -> BitDomain<, Const, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Partitions a bit-slice into maybe-contended and known-uncontended parts.","sig":null,"attributes":[{"value":"/ Partitions a bit-slice into maybe-contended and known-uncontended parts.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":343023,"byte_end":343099,"line_start":965,"line_end":965,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":343101,"byte_end":343104,"line_start":966,"line_end":966,"column_start":2,"column_end":5}},{"value":"/ The documentation of `BitDomain` goes into this in more detail. In","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":343106,"byte_end":343176,"line_start":967,"line_end":967,"column_start":2,"column_end":72}},{"value":"/ short, this produces a `&BitSlice` that is as large as possible without","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":343178,"byte_end":343253,"line_start":968,"line_end":968,"column_start":2,"column_end":77}},{"value":"/ requiring alias protection, as well as any bits that were not able to be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":343255,"byte_end":343331,"line_start":969,"line_end":969,"column_start":2,"column_end":78}},{"value":"/ included in the unaliased bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":343333,"byte_end":343373,"line_start":970,"line_end":970,"column_start":2,"column_end":42}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":343375,"byte_end":343405,"line_start":971,"line_end":971,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4196},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":343907,"byte_end":343921,"line_start":984,"line_end":984,"column_start":9,"column_end":23},"name":"bit_domain_mut","qualname":"<BitSlice<T, O>>::bit_domain_mut","value":"pub fn bit_domain_mut(&mut Self) -> BitDomain<, Mut, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Partitions a mutable bit-slice into maybe-contended and\n known-uncontended parts.","sig":null,"attributes":[{"value":"/ Partitions a mutable bit-slice into maybe-contended and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":343499,"byte_end":343558,"line_start":976,"line_end":976,"column_start":2,"column_end":61}},{"value":"/ known-uncontended parts.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":343560,"byte_end":343588,"line_start":977,"line_end":977,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":343590,"byte_end":343593,"line_start":978,"line_end":978,"column_start":2,"column_end":5}},{"value":"/ The documentation of `BitDomain` goes into this in more detail. In","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":343595,"byte_end":343665,"line_start":979,"line_end":979,"column_start":2,"column_end":72}},{"value":"/ short, this produces a `&mut BitSlice` that is as large as possible","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":343667,"byte_end":343738,"line_start":980,"line_end":980,"column_start":2,"column_end":73}},{"value":"/ without requiring alias protection, as well as any bits that were not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":343740,"byte_end":343813,"line_start":981,"line_end":981,"column_start":2,"column_end":75}},{"value":"/ able to be included in the unaliased bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":343815,"byte_end":343866,"line_start":982,"line_end":982,"column_start":2,"column_end":53}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":343868,"byte_end":343898,"line_start":983,"line_end":983,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4197},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344442,"byte_end":344448,"line_start":996,"line_end":996,"column_start":9,"column_end":15},"name":"domain","qualname":"<BitSlice<T, O>>::domain","value":"pub fn domain(&Self) -> Domain<, Const, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Views the underlying memory of a bit-slice, removing alias protections\n where possible.","sig":null,"attributes":[{"value":"/ Views the underlying memory of a bit-slice, removing alias protections","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344002,"byte_end":344076,"line_start":988,"line_end":988,"column_start":2,"column_end":76}},{"value":"/ where possible.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344078,"byte_end":344097,"line_start":989,"line_end":989,"column_start":2,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344099,"byte_end":344102,"line_start":990,"line_end":990,"column_start":2,"column_end":5}},{"value":"/ The documentation of `Domain` goes into this in more detail. In short,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344104,"byte_end":344178,"line_start":991,"line_end":991,"column_start":2,"column_end":76}},{"value":"/ this produces a `&[T]` slice with alias protections removed, covering","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344180,"byte_end":344253,"line_start":992,"line_end":992,"column_start":2,"column_end":75}},{"value":"/ all elements that `self` completely fills. Partially-used elements on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344255,"byte_end":344328,"line_start":993,"line_end":993,"column_start":2,"column_end":75}},{"value":"/ either the front or back edge of the slice are returned separately.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344330,"byte_end":344401,"line_start":994,"line_end":994,"column_start":2,"column_end":73}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344403,"byte_end":344433,"line_start":995,"line_end":995,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4198},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344943,"byte_end":344953,"line_start":1008,"line_end":1008,"column_start":9,"column_end":19},"name":"domain_mut","qualname":"<BitSlice<T, O>>::domain_mut","value":"pub fn domain_mut(&mut Self) -> Domain<, Mut, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Views the underlying memory of a bit-slice, removing alias protections\n where possible.","sig":null,"attributes":[{"value":"/ Views the underlying memory of a bit-slice, removing alias protections","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344506,"byte_end":344580,"line_start":1000,"line_end":1000,"column_start":2,"column_end":76}},{"value":"/ where possible.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344582,"byte_end":344601,"line_start":1001,"line_end":1001,"column_start":2,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344603,"byte_end":344606,"line_start":1002,"line_end":1002,"column_start":2,"column_end":5}},{"value":"/ The documentation of `Domain` goes into this in more detail. In short,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344608,"byte_end":344682,"line_start":1003,"line_end":1003,"column_start":2,"column_end":76}},{"value":"/ this produces a `&mut [T]` slice with alias protections removed,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344684,"byte_end":344752,"line_start":1004,"line_end":1004,"column_start":2,"column_end":70}},{"value":"/ covering all elements that `self` completely fills. Partially-used","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344754,"byte_end":344824,"line_start":1005,"line_end":1005,"column_start":2,"column_end":72}},{"value":"/ elements on the front or back edge of the slice are returned separately.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344826,"byte_end":344902,"line_start":1006,"line_end":1006,"column_start":2,"column_end":78}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":344904,"byte_end":344934,"line_start":1007,"line_end":1007,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4202},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345426,"byte_end":345436,"line_start":1031,"line_end":1031,"column_start":9,"column_end":19},"name":"count_ones","qualname":"<BitSlice<T, O>>::count_ones","value":"pub fn count_ones(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Counts the number of bits set to `1` in the bit-slice contents.","sig":null,"attributes":[{"value":"/ Counts the number of bits set to `1` in the bit-slice contents.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345100,"byte_end":345167,"line_start":1019,"line_end":1019,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345169,"byte_end":345172,"line_start":1020,"line_end":1020,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345174,"byte_end":345189,"line_start":1021,"line_end":1021,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345191,"byte_end":345194,"line_start":1022,"line_end":1022,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345196,"byte_end":345207,"line_start":1023,"line_end":1023,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345209,"byte_end":345236,"line_start":1024,"line_end":1024,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345238,"byte_end":345241,"line_start":1025,"line_end":1025,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![1, 1, 0, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345243,"byte_end":345276,"line_start":1026,"line_end":1026,"column_start":2,"column_end":35}},{"value":"/ assert_eq!(bits[.. 2].count_ones(), 2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345278,"byte_end":345321,"line_start":1027,"line_end":1027,"column_start":2,"column_end":45}},{"value":"/ assert_eq!(bits[2 ..].count_ones(), 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345323,"byte_end":345366,"line_start":1028,"line_end":1028,"column_start":2,"column_end":45}},{"value":"/ assert_eq!(bits![].count_ones(), 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345368,"byte_end":345408,"line_start":1029,"line_end":1029,"column_start":2,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345410,"byte_end":345417,"line_start":1030,"line_end":1030,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4206},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":346205,"byte_end":346216,"line_start":1058,"line_end":1058,"column_start":9,"column_end":20},"name":"count_zeros","qualname":"<BitSlice<T, O>>::count_zeros","value":"pub fn count_zeros(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Counts the number of bits cleared to `0` in the bit-slice contents.","sig":null,"attributes":[{"value":"/ Counts the number of bits cleared to `0` in the bit-slice contents.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345872,"byte_end":345943,"line_start":1046,"line_end":1046,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345945,"byte_end":345948,"line_start":1047,"line_end":1047,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345950,"byte_end":345965,"line_start":1048,"line_end":1048,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345967,"byte_end":345970,"line_start":1049,"line_end":1049,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345972,"byte_end":345983,"line_start":1050,"line_end":1050,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345985,"byte_end":346012,"line_start":1051,"line_end":1051,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":346014,"byte_end":346017,"line_start":1052,"line_end":1052,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![1, 1, 0, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":346019,"byte_end":346052,"line_start":1053,"line_end":1053,"column_start":2,"column_end":35}},{"value":"/ assert_eq!(bits[.. 2].count_zeros(), 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":346054,"byte_end":346098,"line_start":1054,"line_end":1054,"column_start":2,"column_end":46}},{"value":"/ assert_eq!(bits[2 ..].count_zeros(), 2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":346100,"byte_end":346144,"line_start":1055,"line_end":1055,"column_start":2,"column_end":46}},{"value":"/ assert_eq!(bits![].count_zeros(), 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":346146,"byte_end":346187,"line_start":1056,"line_end":1056,"column_start":2,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":346189,"byte_end":346196,"line_start":1057,"line_end":1057,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4210},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348034,"byte_end":348043,"line_start":1113,"line_end":1113,"column_start":9,"column_end":18},"name":"iter_ones","qualname":"<BitSlice<T, O>>::iter_ones","value":"pub fn iter_ones(&Self) -> IterOnes<, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates the index of each bit in a bit-slice set to `1`.","sig":null,"attributes":[{"value":"/ Enumerates the index of each bit in a bit-slice set to `1`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":346777,"byte_end":346840,"line_start":1079,"line_end":1079,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":346842,"byte_end":346845,"line_start":1080,"line_end":1080,"column_start":2,"column_end":5}},{"value":"/ This is a shorthand for a `.enumerate().filter_map()` iterator that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":346847,"byte_end":346918,"line_start":1081,"line_end":1081,"column_start":2,"column_end":73}},{"value":"/ selects the index of each `true` bit; however, its implementation is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":346920,"byte_end":346992,"line_start":1082,"line_end":1082,"column_start":2,"column_end":74}},{"value":"/ eligible for optimizations that the individual-bit iterator is not.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":346994,"byte_end":347065,"line_start":1083,"line_end":1083,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347067,"byte_end":347070,"line_start":1084,"line_end":1084,"column_start":2,"column_end":5}},{"value":"/ Specializations for the `Lsb0` and `Msb0` orderings allow processors","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347072,"byte_end":347144,"line_start":1085,"line_end":1085,"column_start":2,"column_end":74}},{"value":"/ with instructions that seek particular bits within an element to operate","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347146,"byte_end":347222,"line_start":1086,"line_end":1086,"column_start":2,"column_end":78}},{"value":"/ on whole elements, rather than on each bit individually.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347224,"byte_end":347284,"line_start":1087,"line_end":1087,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347286,"byte_end":347289,"line_start":1088,"line_end":1088,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347291,"byte_end":347306,"line_start":1089,"line_end":1089,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347308,"byte_end":347311,"line_start":1090,"line_end":1090,"column_start":2,"column_end":5}},{"value":"/ This example uses `.iter_ones()`, a `.filter_map()` that finds the index","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347313,"byte_end":347389,"line_start":1091,"line_end":1091,"column_start":2,"column_end":78}},{"value":"/ of each set bit, and the known indices, in order to show that they have","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347391,"byte_end":347466,"line_start":1092,"line_end":1092,"column_start":2,"column_end":77}},{"value":"/ equivalent behavior.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347468,"byte_end":347492,"line_start":1093,"line_end":1093,"column_start":2,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347494,"byte_end":347497,"line_start":1094,"line_end":1094,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347499,"byte_end":347510,"line_start":1095,"line_end":1095,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347512,"byte_end":347539,"line_start":1096,"line_end":1096,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347541,"byte_end":347544,"line_start":1097,"line_end":1097,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 0, 0, 1, 0, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347546,"byte_end":347594,"line_start":1098,"line_end":1098,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347596,"byte_end":347599,"line_start":1099,"line_end":1099,"column_start":2,"column_end":5}},{"value":"/ let iter_ones = bits.iter_ones();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347601,"byte_end":347638,"line_start":1100,"line_end":1100,"column_start":2,"column_end":39}},{"value":"/ let known_indices = [1, 4, 8].iter().copied();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347640,"byte_end":347690,"line_start":1101,"line_end":1101,"column_start":2,"column_end":52}},{"value":"/ let filter = bits.iter()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347692,"byte_end":347720,"line_start":1102,"line_end":1102,"column_start":2,"column_end":30}},{"value":"/   .by_vals()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347722,"byte_end":347738,"line_start":1103,"line_end":1103,"column_start":2,"column_end":18}},{"value":"/   .enumerate()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347740,"byte_end":347758,"line_start":1104,"line_end":1104,"column_start":2,"column_end":20}},{"value":"/   .filter_map(|(idx, bit)| if bit { Some(idx) } else { None });","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347760,"byte_end":347827,"line_start":1105,"line_end":1105,"column_start":2,"column_end":69}},{"value":"/ let all = iter_ones.zip(known_indices).zip(filter);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347829,"byte_end":347884,"line_start":1106,"line_end":1106,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347886,"byte_end":347889,"line_start":1107,"line_end":1107,"column_start":2,"column_end":5}},{"value":"/ for ((iter_one, known), filtered) in all {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347891,"byte_end":347937,"line_start":1108,"line_end":1108,"column_start":2,"column_end":48}},{"value":"/   assert_eq!(iter_one, known);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347939,"byte_end":347973,"line_start":1109,"line_end":1109,"column_start":2,"column_end":36}},{"value":"/   assert_eq!(known, filtered);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":347975,"byte_end":348009,"line_start":1110,"line_end":1110,"column_start":2,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348011,"byte_end":348016,"line_start":1111,"line_end":1111,"column_start":2,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348018,"byte_end":348025,"line_start":1112,"line_end":1112,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4211},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349371,"byte_end":349381,"line_start":1151,"line_end":1151,"column_start":9,"column_end":19},"name":"iter_zeros","qualname":"<BitSlice<T, O>>::iter_zeros","value":"pub fn iter_zeros(&Self) -> IterZeros<, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates the index of each bit in a bit-slice cleared to `0`.","sig":null,"attributes":[{"value":"/ Enumerates the index of each bit in a bit-slice cleared to `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348098,"byte_end":348165,"line_start":1117,"line_end":1117,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348167,"byte_end":348170,"line_start":1118,"line_end":1118,"column_start":2,"column_end":5}},{"value":"/ This is a shorthand for a `.enumerate().filter_map()` iterator that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348172,"byte_end":348243,"line_start":1119,"line_end":1119,"column_start":2,"column_end":73}},{"value":"/ selects the index of each `false` bit; however, its implementation is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348245,"byte_end":348318,"line_start":1120,"line_end":1120,"column_start":2,"column_end":75}},{"value":"/ eligible for optimizations that the individual-bit iterator is not.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348320,"byte_end":348391,"line_start":1121,"line_end":1121,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348393,"byte_end":348396,"line_start":1122,"line_end":1122,"column_start":2,"column_end":5}},{"value":"/ Specializations for the `Lsb0` and `Msb0` orderings allow processors","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348398,"byte_end":348470,"line_start":1123,"line_end":1123,"column_start":2,"column_end":74}},{"value":"/ with instructions that seek particular bits within an element to operate","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348472,"byte_end":348548,"line_start":1124,"line_end":1124,"column_start":2,"column_end":78}},{"value":"/ on whole elements, rather than on each bit individually.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348550,"byte_end":348610,"line_start":1125,"line_end":1125,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348612,"byte_end":348615,"line_start":1126,"line_end":1126,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348617,"byte_end":348632,"line_start":1127,"line_end":1127,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348634,"byte_end":348637,"line_start":1128,"line_end":1128,"column_start":2,"column_end":5}},{"value":"/ This example uses `.iter_zeros()`, a `.filter_map()` that finds the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348639,"byte_end":348710,"line_start":1129,"line_end":1129,"column_start":2,"column_end":73}},{"value":"/ index of each cleared bit, and the known indices, in order to show that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348712,"byte_end":348787,"line_start":1130,"line_end":1130,"column_start":2,"column_end":77}},{"value":"/ they have equivalent behavior.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348789,"byte_end":348823,"line_start":1131,"line_end":1131,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348825,"byte_end":348828,"line_start":1132,"line_end":1132,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348830,"byte_end":348841,"line_start":1133,"line_end":1133,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348843,"byte_end":348870,"line_start":1134,"line_end":1134,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348872,"byte_end":348875,"line_start":1135,"line_end":1135,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![1, 0, 1, 1, 0, 1, 1, 1, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348877,"byte_end":348925,"line_start":1136,"line_end":1136,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348927,"byte_end":348930,"line_start":1137,"line_end":1137,"column_start":2,"column_end":5}},{"value":"/ let iter_zeros = bits.iter_zeros();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348932,"byte_end":348971,"line_start":1138,"line_end":1138,"column_start":2,"column_end":41}},{"value":"/ let known_indices = [1, 4, 8].iter().copied();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":348973,"byte_end":349023,"line_start":1139,"line_end":1139,"column_start":2,"column_end":52}},{"value":"/ let filter = bits.iter()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349025,"byte_end":349053,"line_start":1140,"line_end":1140,"column_start":2,"column_end":30}},{"value":"/   .by_vals()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349055,"byte_end":349071,"line_start":1141,"line_end":1141,"column_start":2,"column_end":18}},{"value":"/   .enumerate()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349073,"byte_end":349091,"line_start":1142,"line_end":1142,"column_start":2,"column_end":20}},{"value":"/   .filter_map(|(idx, bit)| if !bit { Some(idx) } else { None });","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349093,"byte_end":349161,"line_start":1143,"line_end":1143,"column_start":2,"column_end":70}},{"value":"/ let all = iter_zeros.zip(known_indices).zip(filter);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349163,"byte_end":349219,"line_start":1144,"line_end":1144,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349221,"byte_end":349224,"line_start":1145,"line_end":1145,"column_start":2,"column_end":5}},{"value":"/ for ((iter_zero, known), filtered) in all {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349226,"byte_end":349273,"line_start":1146,"line_end":1146,"column_start":2,"column_end":49}},{"value":"/   assert_eq!(iter_zero, known);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349275,"byte_end":349310,"line_start":1147,"line_end":1147,"column_start":2,"column_end":37}},{"value":"/   assert_eq!(known, filtered);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349312,"byte_end":349346,"line_start":1148,"line_end":1148,"column_start":2,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349348,"byte_end":349353,"line_start":1149,"line_end":1149,"column_start":2,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349355,"byte_end":349362,"line_start":1150,"line_end":1150,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4212},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349806,"byte_end":349815,"line_start":1168,"line_end":1168,"column_start":9,"column_end":18},"name":"first_one","qualname":"<BitSlice<T, O>>::first_one","value":"pub fn first_one(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Finds the index of the first bit in the bit-slice set to `1`.","sig":null,"attributes":[{"value":"/ Finds the index of the first bit in the bit-slice set to `1`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349438,"byte_end":349503,"line_start":1155,"line_end":1155,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349505,"byte_end":349508,"line_start":1156,"line_end":1156,"column_start":2,"column_end":5}},{"value":"/ Returns `None` if there is no `true` bit in the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349510,"byte_end":349572,"line_start":1157,"line_end":1157,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349574,"byte_end":349577,"line_start":1158,"line_end":1158,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349579,"byte_end":349594,"line_start":1159,"line_end":1159,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349596,"byte_end":349599,"line_start":1160,"line_end":1160,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349601,"byte_end":349612,"line_start":1161,"line_end":1161,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349614,"byte_end":349641,"line_start":1162,"line_end":1162,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349643,"byte_end":349646,"line_start":1163,"line_end":1163,"column_start":2,"column_end":5}},{"value":"/ assert!(bits![].first_one().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349648,"byte_end":349691,"line_start":1164,"line_end":1164,"column_start":2,"column_end":45}},{"value":"/ assert!(bits![0].first_one().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349693,"byte_end":349737,"line_start":1165,"line_end":1165,"column_start":2,"column_end":46}},{"value":"/ assert_eq!(bits![0, 1].first_one(), Some(1));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349739,"byte_end":349788,"line_start":1166,"line_end":1166,"column_start":2,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349790,"byte_end":349797,"line_start":1167,"line_end":1167,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4213},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350249,"byte_end":350259,"line_start":1185,"line_end":1185,"column_start":9,"column_end":19},"name":"first_zero","qualname":"<BitSlice<T, O>>::first_zero","value":"pub fn first_zero(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Finds the index of the first bit in the bit-slice cleared to `0`.","sig":null,"attributes":[{"value":"/ Finds the index of the first bit in the bit-slice cleared to `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349873,"byte_end":349942,"line_start":1172,"line_end":1172,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349944,"byte_end":349947,"line_start":1173,"line_end":1173,"column_start":2,"column_end":5}},{"value":"/ Returns `None` if there is no `false` bit in the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":349949,"byte_end":350012,"line_start":1174,"line_end":1174,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350014,"byte_end":350017,"line_start":1175,"line_end":1175,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350019,"byte_end":350034,"line_start":1176,"line_end":1176,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350036,"byte_end":350039,"line_start":1177,"line_end":1177,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350041,"byte_end":350052,"line_start":1178,"line_end":1178,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350054,"byte_end":350081,"line_start":1179,"line_end":1179,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350083,"byte_end":350086,"line_start":1180,"line_end":1180,"column_start":2,"column_end":5}},{"value":"/ assert!(bits![].first_zero().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350088,"byte_end":350132,"line_start":1181,"line_end":1181,"column_start":2,"column_end":46}},{"value":"/ assert!(bits![1].first_zero().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350134,"byte_end":350179,"line_start":1182,"line_end":1182,"column_start":2,"column_end":47}},{"value":"/ assert_eq!(bits![1, 0].first_zero(), Some(1));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350181,"byte_end":350231,"line_start":1183,"line_end":1183,"column_start":2,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350233,"byte_end":350240,"line_start":1184,"line_end":1184,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4214},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350682,"byte_end":350690,"line_start":1202,"line_end":1202,"column_start":9,"column_end":17},"name":"last_one","qualname":"<BitSlice<T, O>>::last_one","value":"pub fn last_one(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Finds the index of the last bit in the bit-slice set to `1`.","sig":null,"attributes":[{"value":"/ Finds the index of the last bit in the bit-slice set to `1`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350318,"byte_end":350382,"line_start":1189,"line_end":1189,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350384,"byte_end":350387,"line_start":1190,"line_end":1190,"column_start":2,"column_end":5}},{"value":"/ Returns `None` if there is no `true` bit in the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350389,"byte_end":350451,"line_start":1191,"line_end":1191,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350453,"byte_end":350456,"line_start":1192,"line_end":1192,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350458,"byte_end":350473,"line_start":1193,"line_end":1193,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350475,"byte_end":350478,"line_start":1194,"line_end":1194,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350480,"byte_end":350491,"line_start":1195,"line_end":1195,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350493,"byte_end":350520,"line_start":1196,"line_end":1196,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350522,"byte_end":350525,"line_start":1197,"line_end":1197,"column_start":2,"column_end":5}},{"value":"/ assert!(bits![].last_one().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350527,"byte_end":350569,"line_start":1198,"line_end":1198,"column_start":2,"column_end":44}},{"value":"/ assert!(bits![0].last_one().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350571,"byte_end":350614,"line_start":1199,"line_end":1199,"column_start":2,"column_end":45}},{"value":"/ assert_eq!(bits![1, 0].last_one(), Some(0));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350616,"byte_end":350664,"line_start":1200,"line_end":1200,"column_start":2,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350666,"byte_end":350673,"line_start":1201,"line_end":1201,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4215},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351125,"byte_end":351134,"line_start":1219,"line_end":1219,"column_start":9,"column_end":18},"name":"last_zero","qualname":"<BitSlice<T, O>>::last_zero","value":"pub fn last_zero(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Finds the index of the last bit in the bit-slice cleared to `0`.","sig":null,"attributes":[{"value":"/ Finds the index of the last bit in the bit-slice cleared to `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350753,"byte_end":350821,"line_start":1206,"line_end":1206,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350823,"byte_end":350826,"line_start":1207,"line_end":1207,"column_start":2,"column_end":5}},{"value":"/ Returns `None` if there is no `false` bit in the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350828,"byte_end":350891,"line_start":1208,"line_end":1208,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350893,"byte_end":350896,"line_start":1209,"line_end":1209,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350898,"byte_end":350913,"line_start":1210,"line_end":1210,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350915,"byte_end":350918,"line_start":1211,"line_end":1211,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350920,"byte_end":350931,"line_start":1212,"line_end":1212,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350933,"byte_end":350960,"line_start":1213,"line_end":1213,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350962,"byte_end":350965,"line_start":1214,"line_end":1214,"column_start":2,"column_end":5}},{"value":"/ assert!(bits![].last_zero().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":350967,"byte_end":351010,"line_start":1215,"line_end":1215,"column_start":2,"column_end":45}},{"value":"/ assert!(bits![1].last_zero().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351012,"byte_end":351056,"line_start":1216,"line_end":1216,"column_start":2,"column_end":46}},{"value":"/ assert_eq!(bits![0, 1].last_zero(), Some(0));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351058,"byte_end":351107,"line_start":1217,"line_end":1217,"column_start":2,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351109,"byte_end":351116,"line_start":1218,"line_end":1218,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4216},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351576,"byte_end":351588,"line_start":1237,"line_end":1237,"column_start":9,"column_end":21},"name":"leading_ones","qualname":"<BitSlice<T, O>>::leading_ones","value":"pub fn leading_ones(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Counts the number of bits from the start of the bit-slice to the first\n bit set to `0`.","sig":null,"attributes":[{"value":"/ Counts the number of bits from the start of the bit-slice to the first","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351198,"byte_end":351272,"line_start":1223,"line_end":1223,"column_start":2,"column_end":76}},{"value":"/ bit set to `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351274,"byte_end":351293,"line_start":1224,"line_end":1224,"column_start":2,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351295,"byte_end":351298,"line_start":1225,"line_end":1225,"column_start":2,"column_end":5}},{"value":"/ This returns `0` if the bit-slice is empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351300,"byte_end":351347,"line_start":1226,"line_end":1226,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351349,"byte_end":351352,"line_start":1227,"line_end":1227,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351354,"byte_end":351369,"line_start":1228,"line_end":1228,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351371,"byte_end":351374,"line_start":1229,"line_end":1229,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351376,"byte_end":351387,"line_start":1230,"line_end":1230,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351389,"byte_end":351416,"line_start":1231,"line_end":1231,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351418,"byte_end":351421,"line_start":1232,"line_end":1232,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(bits![].leading_ones(), 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351423,"byte_end":351465,"line_start":1233,"line_end":1233,"column_start":2,"column_end":44}},{"value":"/ assert_eq!(bits![0].leading_ones(), 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351467,"byte_end":351510,"line_start":1234,"line_end":1234,"column_start":2,"column_end":45}},{"value":"/ assert_eq!(bits![1, 0].leading_ones(), 1);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351512,"byte_end":351558,"line_start":1235,"line_end":1235,"column_start":2,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351560,"byte_end":351567,"line_start":1236,"line_end":1236,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4218},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352043,"byte_end":352056,"line_start":1255,"line_end":1255,"column_start":9,"column_end":22},"name":"leading_zeros","qualname":"<BitSlice<T, O>>::leading_zeros","value":"pub fn leading_zeros(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Counts the number of bits from the start of the bit-slice to the first\n bit set to `1`.","sig":null,"attributes":[{"value":"/ Counts the number of bits from the start of the bit-slice to the first","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351662,"byte_end":351736,"line_start":1241,"line_end":1241,"column_start":2,"column_end":76}},{"value":"/ bit set to `1`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351738,"byte_end":351757,"line_start":1242,"line_end":1242,"column_start":2,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351759,"byte_end":351762,"line_start":1243,"line_end":1243,"column_start":2,"column_end":5}},{"value":"/ This returns `0` if the bit-slice is empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351764,"byte_end":351811,"line_start":1244,"line_end":1244,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351813,"byte_end":351816,"line_start":1245,"line_end":1245,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351818,"byte_end":351833,"line_start":1246,"line_end":1246,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351835,"byte_end":351838,"line_start":1247,"line_end":1247,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351840,"byte_end":351851,"line_start":1248,"line_end":1248,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351853,"byte_end":351880,"line_start":1249,"line_end":1249,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351882,"byte_end":351885,"line_start":1250,"line_end":1250,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(bits![].leading_zeros(), 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351887,"byte_end":351930,"line_start":1251,"line_end":1251,"column_start":2,"column_end":45}},{"value":"/ assert_eq!(bits![1].leading_zeros(), 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351932,"byte_end":351976,"line_start":1252,"line_end":1252,"column_start":2,"column_end":46}},{"value":"/ assert_eq!(bits![0, 1].leading_zeros(), 1);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":351978,"byte_end":352025,"line_start":1253,"line_end":1253,"column_start":2,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352027,"byte_end":352034,"line_start":1254,"line_end":1254,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4220},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352507,"byte_end":352520,"line_start":1273,"line_end":1273,"column_start":9,"column_end":22},"name":"trailing_ones","qualname":"<BitSlice<T, O>>::trailing_ones","value":"pub fn trailing_ones(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Counts the number of bits from the end of the bit-slice to the last bit\n set to `0`.","sig":null,"attributes":[{"value":"/ Counts the number of bits from the end of the bit-slice to the last bit","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352129,"byte_end":352204,"line_start":1259,"line_end":1259,"column_start":2,"column_end":77}},{"value":"/ set to `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352206,"byte_end":352221,"line_start":1260,"line_end":1260,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352223,"byte_end":352226,"line_start":1261,"line_end":1261,"column_start":2,"column_end":5}},{"value":"/ This returns `0` if the bit-slice is empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352228,"byte_end":352275,"line_start":1262,"line_end":1262,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352277,"byte_end":352280,"line_start":1263,"line_end":1263,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352282,"byte_end":352297,"line_start":1264,"line_end":1264,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352299,"byte_end":352302,"line_start":1265,"line_end":1265,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352304,"byte_end":352315,"line_start":1266,"line_end":1266,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352317,"byte_end":352344,"line_start":1267,"line_end":1267,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352346,"byte_end":352349,"line_start":1268,"line_end":1268,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(bits![].trailing_ones(), 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352351,"byte_end":352394,"line_start":1269,"line_end":1269,"column_start":2,"column_end":45}},{"value":"/ assert_eq!(bits![0].trailing_ones(), 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352396,"byte_end":352440,"line_start":1270,"line_end":1270,"column_start":2,"column_end":46}},{"value":"/ assert_eq!(bits![0, 1].trailing_ones(), 1);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352442,"byte_end":352489,"line_start":1271,"line_end":1271,"column_start":2,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352491,"byte_end":352498,"line_start":1272,"line_end":1272,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4222},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353008,"byte_end":353022,"line_start":1292,"line_end":1292,"column_start":9,"column_end":23},"name":"trailing_zeros","qualname":"<BitSlice<T, O>>::trailing_zeros","value":"pub fn trailing_zeros(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Counts the number of bits from the end of the bit-slice to the last bit\n set to `1`.","sig":null,"attributes":[{"value":"/ Counts the number of bits from the end of the bit-slice to the last bit","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352627,"byte_end":352702,"line_start":1278,"line_end":1278,"column_start":2,"column_end":77}},{"value":"/ set to `1`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352704,"byte_end":352719,"line_start":1279,"line_end":1279,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352721,"byte_end":352724,"line_start":1280,"line_end":1280,"column_start":2,"column_end":5}},{"value":"/ This returns `0` if the bit-slice is empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352726,"byte_end":352773,"line_start":1281,"line_end":1281,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352775,"byte_end":352778,"line_start":1282,"line_end":1282,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352780,"byte_end":352795,"line_start":1283,"line_end":1283,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352797,"byte_end":352800,"line_start":1284,"line_end":1284,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352802,"byte_end":352813,"line_start":1285,"line_end":1285,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352815,"byte_end":352842,"line_start":1286,"line_end":1286,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352844,"byte_end":352847,"line_start":1287,"line_end":1287,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(bits![].trailing_zeros(), 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352849,"byte_end":352893,"line_start":1288,"line_end":1288,"column_start":2,"column_end":46}},{"value":"/ assert_eq!(bits![1].trailing_zeros(), 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352895,"byte_end":352940,"line_start":1289,"line_end":1289,"column_start":2,"column_end":47}},{"value":"/ assert_eq!(bits![1, 0].trailing_zeros(), 1);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352942,"byte_end":352990,"line_start":1290,"line_end":1290,"column_start":2,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":352992,"byte_end":352999,"line_start":1291,"line_end":1291,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4224},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353429,"byte_end":353432,"line_start":1310,"line_end":1310,"column_start":9,"column_end":12},"name":"any","qualname":"<BitSlice<T, O>>::any","value":"pub fn any(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if there is at least one bit set to `1` in the bit-slice.","sig":null,"attributes":[{"value":"/ Tests if there is at least one bit set to `1` in the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353128,"byte_end":353195,"line_start":1297,"line_end":1297,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353197,"byte_end":353200,"line_start":1298,"line_end":1298,"column_start":2,"column_end":5}},{"value":"/ Returns `false` when `self` is empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353202,"byte_end":353243,"line_start":1299,"line_end":1299,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353245,"byte_end":353248,"line_start":1300,"line_end":1300,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353250,"byte_end":353265,"line_start":1301,"line_end":1301,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353267,"byte_end":353270,"line_start":1302,"line_end":1302,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353272,"byte_end":353283,"line_start":1303,"line_end":1303,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353285,"byte_end":353312,"line_start":1304,"line_end":1304,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353314,"byte_end":353317,"line_start":1305,"line_end":1305,"column_start":2,"column_end":5}},{"value":"/ assert!(!bits![].any());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353319,"byte_end":353347,"line_start":1306,"line_end":1306,"column_start":2,"column_end":30}},{"value":"/ assert!(!bits![0].any());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353349,"byte_end":353378,"line_start":1307,"line_end":1307,"column_start":2,"column_end":31}},{"value":"/ assert!(bits![0, 1].any());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353380,"byte_end":353411,"line_start":1308,"line_end":1308,"column_start":2,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353413,"byte_end":353420,"line_start":1309,"line_end":1309,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4225},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353764,"byte_end":353767,"line_start":1327,"line_end":1327,"column_start":9,"column_end":12},"name":"all","qualname":"<BitSlice<T, O>>::all","value":"pub fn all(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if every bit is set to `1` in the bit-slice.","sig":null,"attributes":[{"value":"/ Tests if every bit is set to `1` in the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353479,"byte_end":353533,"line_start":1314,"line_end":1314,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353535,"byte_end":353538,"line_start":1315,"line_end":1315,"column_start":2,"column_end":5}},{"value":"/ Returns `true` when `self` is empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353540,"byte_end":353580,"line_start":1316,"line_end":1316,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353582,"byte_end":353585,"line_start":1317,"line_end":1317,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353587,"byte_end":353602,"line_start":1318,"line_end":1318,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353604,"byte_end":353607,"line_start":1319,"line_end":1319,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353609,"byte_end":353620,"line_start":1320,"line_end":1320,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353622,"byte_end":353649,"line_start":1321,"line_end":1321,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353651,"byte_end":353654,"line_start":1322,"line_end":1322,"column_start":2,"column_end":5}},{"value":"/ assert!( bits![].all());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353656,"byte_end":353684,"line_start":1323,"line_end":1323,"column_start":2,"column_end":30}},{"value":"/ assert!(!bits![0].all());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353686,"byte_end":353715,"line_start":1324,"line_end":1324,"column_start":2,"column_end":31}},{"value":"/ assert!( bits![1].all());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353717,"byte_end":353746,"line_start":1325,"line_end":1325,"column_start":2,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353748,"byte_end":353755,"line_start":1326,"line_end":1326,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4226},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354117,"byte_end":354124,"line_start":1344,"line_end":1344,"column_start":9,"column_end":16},"name":"not_any","qualname":"<BitSlice<T, O>>::not_any","value":"pub fn not_any(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if every bit is cleared to `0` in the bit-slice.","sig":null,"attributes":[{"value":"/ Tests if every bit is cleared to `0` in the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353816,"byte_end":353874,"line_start":1331,"line_end":1331,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353876,"byte_end":353879,"line_start":1332,"line_end":1332,"column_start":2,"column_end":5}},{"value":"/ Returns `true` when `self` is empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353881,"byte_end":353921,"line_start":1333,"line_end":1333,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353923,"byte_end":353926,"line_start":1334,"line_end":1334,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353928,"byte_end":353943,"line_start":1335,"line_end":1335,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353945,"byte_end":353948,"line_start":1336,"line_end":1336,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353950,"byte_end":353961,"line_start":1337,"line_end":1337,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353963,"byte_end":353990,"line_start":1338,"line_end":1338,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353992,"byte_end":353995,"line_start":1339,"line_end":1339,"column_start":2,"column_end":5}},{"value":"/ assert!( bits![].not_any());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":353997,"byte_end":354029,"line_start":1340,"line_end":1340,"column_start":2,"column_end":34}},{"value":"/ assert!(!bits![1].not_any());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354031,"byte_end":354064,"line_start":1341,"line_end":1341,"column_start":2,"column_end":35}},{"value":"/ assert!( bits![0].not_any());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354066,"byte_end":354099,"line_start":1342,"line_end":1342,"column_start":2,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354101,"byte_end":354108,"line_start":1343,"line_end":1343,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4227},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354481,"byte_end":354488,"line_start":1361,"line_end":1361,"column_start":9,"column_end":16},"name":"not_all","qualname":"<BitSlice<T, O>>::not_all","value":"pub fn not_all(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if at least one bit is cleared to `0` in the bit-slice.","sig":null,"attributes":[{"value":"/ Tests if at least one bit is cleared to `0` in the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354172,"byte_end":354237,"line_start":1348,"line_end":1348,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354239,"byte_end":354242,"line_start":1349,"line_end":1349,"column_start":2,"column_end":5}},{"value":"/ Returns `false` when `self` is empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354244,"byte_end":354285,"line_start":1350,"line_end":1350,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354287,"byte_end":354290,"line_start":1351,"line_end":1351,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354292,"byte_end":354307,"line_start":1352,"line_end":1352,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354309,"byte_end":354312,"line_start":1353,"line_end":1353,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354314,"byte_end":354325,"line_start":1354,"line_end":1354,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354327,"byte_end":354354,"line_start":1355,"line_end":1355,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354356,"byte_end":354359,"line_start":1356,"line_end":1356,"column_start":2,"column_end":5}},{"value":"/ assert!(!bits![].not_all());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354361,"byte_end":354393,"line_start":1357,"line_end":1357,"column_start":2,"column_end":34}},{"value":"/ assert!(!bits![1].not_all());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354395,"byte_end":354428,"line_start":1358,"line_end":1358,"column_start":2,"column_end":35}},{"value":"/ assert!( bits![0].not_all());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354430,"byte_end":354463,"line_start":1359,"line_end":1359,"column_start":2,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354465,"byte_end":354472,"line_start":1360,"line_end":1360,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4228},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354913,"byte_end":354917,"line_start":1380,"line_end":1380,"column_start":9,"column_end":13},"name":"some","qualname":"<BitSlice<T, O>>::some","value":"pub fn some(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if at least one bit is set to `1`, and at least one bit is cleared\n to `0`, in the bit-slice.","sig":null,"attributes":[{"value":"/ Tests if at least one bit is set to `1`, and at least one bit is cleared","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354536,"byte_end":354612,"line_start":1365,"line_end":1365,"column_start":2,"column_end":78}},{"value":"/ to `0`, in the bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354614,"byte_end":354643,"line_start":1366,"line_end":1366,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354645,"byte_end":354648,"line_start":1367,"line_end":1367,"column_start":2,"column_end":5}},{"value":"/ Returns `false` when `self` is empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354650,"byte_end":354691,"line_start":1368,"line_end":1368,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354693,"byte_end":354696,"line_start":1369,"line_end":1369,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354698,"byte_end":354713,"line_start":1370,"line_end":1370,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354715,"byte_end":354718,"line_start":1371,"line_end":1371,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354720,"byte_end":354731,"line_start":1372,"line_end":1372,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354733,"byte_end":354760,"line_start":1373,"line_end":1373,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354762,"byte_end":354765,"line_start":1374,"line_end":1374,"column_start":2,"column_end":5}},{"value":"/ assert!(!bits![].some());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354767,"byte_end":354796,"line_start":1375,"line_end":1375,"column_start":2,"column_end":31}},{"value":"/ assert!(!bits![0].some());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354798,"byte_end":354828,"line_start":1376,"line_end":1376,"column_start":2,"column_end":32}},{"value":"/ assert!(!bits![1].some());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354830,"byte_end":354860,"line_start":1377,"line_end":1377,"column_start":2,"column_end":32}},{"value":"/ assert!( bits![0, 1].some());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354862,"byte_end":354895,"line_start":1378,"line_end":1378,"column_start":2,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":354897,"byte_end":354904,"line_start":1379,"line_end":1379,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4232},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355703,"byte_end":355713,"line_start":1413,"line_end":1413,"column_start":9,"column_end":19},"name":"shift_left","qualname":"<BitSlice<T, O>>::shift_left","value":"pub fn shift_left(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shifts the contents of a bit-slice down (towards the zero-index),\n clearing the top bits to `0`.","sig":null,"attributes":[{"value":"/ Shifts the contents of a bit-slice down (towards the zero-index),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355060,"byte_end":355129,"line_start":1391,"line_end":1391,"column_start":2,"column_end":71}},{"value":"/ clearing the top bits to `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355131,"byte_end":355164,"line_start":1392,"line_end":1392,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355166,"byte_end":355169,"line_start":1393,"line_end":1393,"column_start":2,"column_end":5}},{"value":"/ This is a more-expensive version of taking `&bits[by ..]`; unless you","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355171,"byte_end":355244,"line_start":1394,"line_end":1394,"column_start":2,"column_end":75}},{"value":"/ want to directly affect the memory representation, you should use that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355246,"byte_end":355320,"line_start":1395,"line_end":1395,"column_start":2,"column_end":76}},{"value":"/ instead.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355322,"byte_end":355334,"line_start":1396,"line_end":1396,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355336,"byte_end":355339,"line_start":1397,"line_end":1397,"column_start":2,"column_end":5}},{"value":"/ Has no effect when `by` is `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355341,"byte_end":355376,"line_start":1398,"line_end":1398,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355378,"byte_end":355381,"line_start":1399,"line_end":1399,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355383,"byte_end":355396,"line_start":1400,"line_end":1400,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355398,"byte_end":355401,"line_start":1401,"line_end":1401,"column_start":2,"column_end":5}},{"value":"/ This panics if `by` is not less than `self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355403,"byte_end":355457,"line_start":1402,"line_end":1402,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355459,"byte_end":355462,"line_start":1403,"line_end":1403,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355464,"byte_end":355479,"line_start":1404,"line_end":1404,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355481,"byte_end":355484,"line_start":1405,"line_end":1405,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355486,"byte_end":355497,"line_start":1406,"line_end":1406,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355499,"byte_end":355526,"line_start":1407,"line_end":1407,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355528,"byte_end":355531,"line_start":1408,"line_end":1408,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355533,"byte_end":355594,"line_start":1409,"line_end":1409,"column_start":2,"column_end":63}},{"value":"/ bits.shift_left(2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355596,"byte_end":355619,"line_start":1410,"line_end":1410,"column_start":2,"column_end":25}},{"value":"/ assert_eq!(bits, bits![1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355621,"byte_end":355685,"line_start":1411,"line_end":1411,"column_start":2,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355687,"byte_end":355694,"line_start":1412,"line_end":1412,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4233},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356680,"byte_end":356691,"line_start":1454,"line_end":1454,"column_start":9,"column_end":20},"name":"shift_right","qualname":"<BitSlice<T, O>>::shift_right","value":"pub fn shift_right(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shifts the contents of a bit-slice up (away from the zero-index),\n clearing the bottom bits to `0`.","sig":null,"attributes":[{"value":"/ Shifts the contents of a bit-slice up (away from the zero-index),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356015,"byte_end":356084,"line_start":1432,"line_end":1432,"column_start":2,"column_end":71}},{"value":"/ clearing the bottom bits to `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356086,"byte_end":356122,"line_start":1433,"line_end":1433,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356124,"byte_end":356127,"line_start":1434,"line_end":1434,"column_start":2,"column_end":5}},{"value":"/ This is a more-expensive version of taking `&bits[.. bits.len() - by]`;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356129,"byte_end":356204,"line_start":1435,"line_end":1435,"column_start":2,"column_end":77}},{"value":"/ unless you want to directly affect the memory representation, you should","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356206,"byte_end":356282,"line_start":1436,"line_end":1436,"column_start":2,"column_end":78}},{"value":"/ just use that instead.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356284,"byte_end":356310,"line_start":1437,"line_end":1437,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356312,"byte_end":356315,"line_start":1438,"line_end":1438,"column_start":2,"column_end":5}},{"value":"/ Has no effect when `by` is `0`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356317,"byte_end":356352,"line_start":1439,"line_end":1439,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356354,"byte_end":356357,"line_start":1440,"line_end":1440,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356359,"byte_end":356372,"line_start":1441,"line_end":1441,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356374,"byte_end":356377,"line_start":1442,"line_end":1442,"column_start":2,"column_end":5}},{"value":"/ This panics if `by` is not less than `self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356379,"byte_end":356433,"line_start":1443,"line_end":1443,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356435,"byte_end":356438,"line_start":1444,"line_end":1444,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356440,"byte_end":356455,"line_start":1445,"line_end":1445,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356457,"byte_end":356460,"line_start":1446,"line_end":1446,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356462,"byte_end":356473,"line_start":1447,"line_end":1447,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356475,"byte_end":356502,"line_start":1448,"line_end":1448,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356504,"byte_end":356507,"line_start":1449,"line_end":1449,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![mut 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356509,"byte_end":356570,"line_start":1450,"line_end":1450,"column_start":2,"column_end":63}},{"value":"/ bits.shift_right(2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356572,"byte_end":356596,"line_start":1451,"line_end":1451,"column_start":2,"column_end":26}},{"value":"/ assert_eq!(bits, bits![0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356598,"byte_end":356662,"line_start":1452,"line_end":1452,"column_start":2,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":356664,"byte_end":356671,"line_start":1453,"line_end":1453,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4247},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360554,"byte_end":360565,"line_start":1592,"line_end":1592,"column_start":9,"column_end":20},"name":"set_aliased","qualname":"<BitSlice<T, O>>::set_aliased","value":"pub fn set_aliased(&Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Writes a new value into a single bit, using alias-safe operations.","sig":null,"attributes":[{"value":"/ Writes a new value into a single bit, using alias-safe operations.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":359614,"byte_end":359684,"line_start":1561,"line_end":1561,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":359686,"byte_end":359689,"line_start":1562,"line_end":1562,"column_start":2,"column_end":5}},{"value":"/ This is equivalent to [`.set()`], except that it does not require an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":359691,"byte_end":359763,"line_start":1563,"line_end":1563,"column_start":2,"column_end":74}},{"value":"/ `&mut` reference, and allows bit-slices with alias-safe storage to share","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":359765,"byte_end":359841,"line_start":1564,"line_end":1564,"column_start":2,"column_end":78}},{"value":"/ write permissions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":359843,"byte_end":359865,"line_start":1565,"line_end":1565,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":359867,"byte_end":359870,"line_start":1566,"line_end":1566,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":359872,"byte_end":359889,"line_start":1567,"line_end":1567,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":359891,"byte_end":359894,"line_start":1568,"line_end":1568,"column_start":2,"column_end":5}},{"value":"/ - `&self`: This method only exists on bit-slices with alias-safe","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":359896,"byte_end":359964,"line_start":1569,"line_end":1569,"column_start":2,"column_end":70}},{"value":"/   storage, and so does not require exclusive access.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":359966,"byte_end":360022,"line_start":1570,"line_end":1570,"column_start":2,"column_end":58}},{"value":"/ - `index`: The bit index to set. It must be in `0 .. self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360024,"byte_end":360093,"line_start":1571,"line_end":1571,"column_start":2,"column_end":71}},{"value":"/ - `value`: The new bit-value to write into the bit at `index`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360095,"byte_end":360161,"line_start":1572,"line_end":1572,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360163,"byte_end":360166,"line_start":1573,"line_end":1573,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360168,"byte_end":360181,"line_start":1574,"line_end":1574,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360183,"byte_end":360186,"line_start":1575,"line_end":1575,"column_start":2,"column_end":5}},{"value":"/ This panics if `index` is out of bounds.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360188,"byte_end":360232,"line_start":1576,"line_end":1576,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360234,"byte_end":360237,"line_start":1577,"line_end":1577,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360239,"byte_end":360254,"line_start":1578,"line_end":1578,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360256,"byte_end":360259,"line_start":1579,"line_end":1579,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360261,"byte_end":360272,"line_start":1580,"line_end":1580,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360274,"byte_end":360301,"line_start":1581,"line_end":1581,"column_start":2,"column_end":29}},{"value":"/ use core::cell::Cell;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360303,"byte_end":360328,"line_start":1582,"line_end":1582,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360330,"byte_end":360333,"line_start":1583,"line_end":1583,"column_start":2,"column_end":5}},{"value":"/ let bits: &BitSlice<_, _> = bits![Cell<usize>, Lsb0; 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360335,"byte_end":360398,"line_start":1584,"line_end":1584,"column_start":2,"column_end":65}},{"value":"/ bits.set_aliased(0, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360400,"byte_end":360430,"line_start":1585,"line_end":1585,"column_start":2,"column_end":32}},{"value":"/ bits.set_aliased(1, false);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360432,"byte_end":360463,"line_start":1586,"line_end":1586,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360465,"byte_end":360468,"line_start":1587,"line_end":1587,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(bits, bits![1, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360470,"byte_end":360504,"line_start":1588,"line_end":1588,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360506,"byte_end":360513,"line_start":1589,"line_end":1589,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360515,"byte_end":360518,"line_start":1590,"line_end":1590,"column_start":2,"column_end":5}},{"value":"/ [`.set()`]: Self::set","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360520,"byte_end":360545,"line_start":1591,"line_end":1591,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4248},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361750,"byte_end":361771,"line_start":1632,"line_end":1632,"column_start":16,"column_end":37},"name":"set_aliased_unchecked","qualname":"<BitSlice<T, O>>::set_aliased_unchecked","value":"pub unsafe fn set_aliased_unchecked(&Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Writes a new value into a single bit, using alias-safe operations and\n without bounds checking.","sig":null,"attributes":[{"value":"/ Writes a new value into a single bit, using alias-safe operations and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360716,"byte_end":360789,"line_start":1599,"line_end":1599,"column_start":2,"column_end":75}},{"value":"/ without bounds checking.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360791,"byte_end":360819,"line_start":1600,"line_end":1600,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360821,"byte_end":360824,"line_start":1601,"line_end":1601,"column_start":2,"column_end":5}},{"value":"/ This is equivalent to [`.set_unchecked()`], except that it does not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360826,"byte_end":360897,"line_start":1602,"line_end":1602,"column_start":2,"column_end":73}},{"value":"/ require an `&mut` reference, and allows bit-slices with alias-safe","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360899,"byte_end":360969,"line_start":1603,"line_end":1603,"column_start":2,"column_end":72}},{"value":"/ storage to share write permissions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":360971,"byte_end":361010,"line_start":1604,"line_end":1604,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361012,"byte_end":361015,"line_start":1605,"line_end":1605,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361017,"byte_end":361034,"line_start":1606,"line_end":1606,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361036,"byte_end":361039,"line_start":1607,"line_end":1607,"column_start":2,"column_end":5}},{"value":"/ - `&self`: This method only exists on bit-slices with alias-safe","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361041,"byte_end":361109,"line_start":1608,"line_end":1608,"column_start":2,"column_end":70}},{"value":"/   storage, and so does not require exclusive access.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361111,"byte_end":361167,"line_start":1609,"line_end":1609,"column_start":2,"column_end":58}},{"value":"/ - `index`: The bit index to set. It must be in `0 .. self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361169,"byte_end":361238,"line_start":1610,"line_end":1610,"column_start":2,"column_end":71}},{"value":"/ - `value`: The new bit-value to write into the bit at `index`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361240,"byte_end":361306,"line_start":1611,"line_end":1611,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361308,"byte_end":361311,"line_start":1612,"line_end":1612,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361313,"byte_end":361326,"line_start":1613,"line_end":1613,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361328,"byte_end":361331,"line_start":1614,"line_end":1614,"column_start":2,"column_end":5}},{"value":"/ The caller must ensure that `index` is not out of bounds.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361333,"byte_end":361394,"line_start":1615,"line_end":1615,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361396,"byte_end":361399,"line_start":1616,"line_end":1616,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361401,"byte_end":361416,"line_start":1617,"line_end":1617,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361418,"byte_end":361421,"line_start":1618,"line_end":1618,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361423,"byte_end":361434,"line_start":1619,"line_end":1619,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361436,"byte_end":361463,"line_start":1620,"line_end":1620,"column_start":2,"column_end":29}},{"value":"/ use core::cell::Cell;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361465,"byte_end":361490,"line_start":1621,"line_end":1621,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361492,"byte_end":361495,"line_start":1622,"line_end":1622,"column_start":2,"column_end":5}},{"value":"/ let data = Cell::new(0u8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361497,"byte_end":361527,"line_start":1623,"line_end":1623,"column_start":2,"column_end":32}},{"value":"/ let bits = &data.view_bits::<Lsb0>()[.. 2];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361529,"byte_end":361576,"line_start":1624,"line_end":1624,"column_start":2,"column_end":49}},{"value":"/ unsafe {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361578,"byte_end":361590,"line_start":1625,"line_end":1625,"column_start":2,"column_end":14}},{"value":"/   bits.set_aliased_unchecked(3, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361592,"byte_end":361634,"line_start":1626,"line_end":1626,"column_start":2,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361636,"byte_end":361641,"line_start":1627,"line_end":1627,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(data.get(), 8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361643,"byte_end":361673,"line_start":1628,"line_end":1628,"column_start":2,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361675,"byte_end":361682,"line_start":1629,"line_end":1629,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361684,"byte_end":361687,"line_start":1630,"line_end":1630,"column_start":2,"column_end":5}},{"value":"/ [`.set_unchecked()`]: Self::set_unchecked","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361689,"byte_end":361734,"line_start":1631,"line_end":1631,"column_start":2,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":4252},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362332,"byte_end":362340,"line_start":1652,"line_end":1652,"column_start":12,"column_end":20},"name":"MAX_BITS","qualname":"::slice::BitSlice::<T, O>::MAX_BITS","value":"usize","parent":{"krate":0,"index":4249},"children":[],"decl_id":null,"docs":" The inclusive maximum length of a `BitSlice<_, T>`.","sig":null,"attributes":[{"value":"/ The inclusive maximum length of a `BitSlice<_, T>`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361972,"byte_end":362027,"line_start":1643,"line_end":1643,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362029,"byte_end":362032,"line_start":1644,"line_end":1644,"column_start":2,"column_end":5}},{"value":"/ As `BitSlice` is zero-indexed, the largest possible *index* is one less","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362034,"byte_end":362109,"line_start":1645,"line_end":1645,"column_start":2,"column_end":77}},{"value":"/ than this value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362111,"byte_end":362131,"line_start":1646,"line_end":1646,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362133,"byte_end":362136,"line_start":1647,"line_end":1647,"column_start":2,"column_end":5}},{"value":"/ |CPU word width|         Value         |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362138,"byte_end":362182,"line_start":1648,"line_end":1648,"column_start":2,"column_end":46}},{"value":"/ |-------------:|----------------------:|","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362184,"byte_end":362228,"line_start":1649,"line_end":1649,"column_start":2,"column_end":46}},{"value":"/ |   32 bits    |     `0x1fff_ffff`     |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362230,"byte_end":362274,"line_start":1650,"line_end":1650,"column_start":2,"column_end":46}},{"value":"/ |   64 bits    |`0x1fff_ffff_ffff_ffff`|","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362276,"byte_end":362320,"line_start":1651,"line_end":1651,"column_start":2,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":4253},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363198,"byte_end":363206,"line_start":1668,"line_end":1668,"column_start":12,"column_end":20},"name":"MAX_ELTS","qualname":"::slice::BitSlice::<T, O>::MAX_ELTS","value":"usize","parent":{"krate":0,"index":4249},"children":[],"decl_id":null,"docs":" The inclusive maximum length that a `[T]` slice can be for\n  `BitSlice<_, T>` to cover it.","sig":null,"attributes":[{"value":"/ The inclusive maximum length that a `[T]` slice can be for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362392,"byte_end":362454,"line_start":1653,"line_end":1653,"column_start":2,"column_end":64}},{"value":"/  `BitSlice<_, T>` to cover it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362456,"byte_end":362490,"line_start":1654,"line_end":1654,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362492,"byte_end":362495,"line_start":1655,"line_end":1655,"column_start":2,"column_end":5}},{"value":"/ A `BitSlice<_, T>` that begins in the interior of an element and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362497,"byte_end":362565,"line_start":1656,"line_end":1656,"column_start":2,"column_end":70}},{"value":"/ contains the maximum number of bits will extend one element past the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362567,"byte_end":362639,"line_start":1657,"line_end":1657,"column_start":2,"column_end":74}},{"value":"/ cutoff that would occur if the bit-slice began at the zeroth bit. Such a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362641,"byte_end":362717,"line_start":1658,"line_end":1658,"column_start":2,"column_end":78}},{"value":"/ bit-slice is difficult to manually construct, but would not otherwise","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362719,"byte_end":362792,"line_start":1659,"line_end":1659,"column_start":2,"column_end":75}},{"value":"/ fail.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362794,"byte_end":362803,"line_start":1660,"line_end":1660,"column_start":2,"column_end":11}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362805,"byte_end":362808,"line_start":1661,"line_end":1661,"column_start":2,"column_end":5}},{"value":"/ |Type Bits|Max Elements (32-bit)| Max Elements (64-bit) |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362810,"byte_end":362871,"line_start":1662,"line_end":1662,"column_start":2,"column_end":63}},{"value":"/ |--------:|--------------------:|----------------------:|","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362873,"byte_end":362934,"line_start":1663,"line_end":1663,"column_start":2,"column_end":63}},{"value":"/ |        8|    `0x0400_0001`    |`0x0400_0000_0000_0001`|","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362936,"byte_end":362997,"line_start":1664,"line_end":1664,"column_start":2,"column_end":63}},{"value":"/ |       16|    `0x0200_0001`    |`0x0200_0000_0000_0001`|","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":362999,"byte_end":363060,"line_start":1665,"line_end":1665,"column_start":2,"column_end":63}},{"value":"/ |       32|    `0x0100_0001`    |`0x0100_0000_0000_0001`|","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363062,"byte_end":363123,"line_start":1666,"line_end":1666,"column_start":2,"column_end":63}},{"value":"/ |       64|    `0x0080_0001`    |`0x0080_0000_0000_0001`|","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363125,"byte_end":363186,"line_start":1667,"line_end":1667,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4257},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":364000,"byte_end":364009,"line_start":1699,"line_end":1699,"column_start":9,"column_end":18},"name":"to_bitvec","qualname":"<BitSlice<T, O>>::to_bitvec","value":"pub fn to_bitvec(&Self) -> BitVec<T::Unalias, O>","parent":null,"children":[],"decl_id":null,"docs":" Copies a bit-slice into an owned bit-vector.","sig":null,"attributes":[{"value":"/ Copies a bit-slice into an owned bit-vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363349,"byte_end":363397,"line_start":1677,"line_end":1677,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363399,"byte_end":363402,"line_start":1678,"line_end":1678,"column_start":2,"column_end":5}},{"value":"/ Since the new vector is freshly owned, this gets marked as `::Unalias`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363404,"byte_end":363478,"line_start":1679,"line_end":1679,"column_start":2,"column_end":76}},{"value":"/ to remove any guards that may have been inserted by the bit-slice’s","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363480,"byte_end":363553,"line_start":1680,"line_end":1680,"column_start":2,"column_end":73}},{"value":"/ history.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363555,"byte_end":363567,"line_start":1681,"line_end":1681,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363569,"byte_end":363572,"line_start":1682,"line_end":1682,"column_start":2,"column_end":5}},{"value":"/ It does *not* use the underlying memory type, so that a `BitSlice<_,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363574,"byte_end":363646,"line_start":1683,"line_end":1683,"column_start":2,"column_end":74}},{"value":"/ Cell<_>>` will produce a `BitVec<_, Cell<_>>`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363648,"byte_end":363698,"line_start":1684,"line_end":1684,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363700,"byte_end":363703,"line_start":1685,"line_end":1685,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363705,"byte_end":363720,"line_start":1686,"line_end":1686,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363722,"byte_end":363725,"line_start":1687,"line_end":1687,"column_start":2,"column_end":5}},{"value":"/ [`slice::to_vec`](https://doc.rust-lang.org/std/primitive.slice.html#method.to_vec)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363727,"byte_end":363814,"line_start":1688,"line_end":1688,"column_start":2,"column_end":89}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363816,"byte_end":363819,"line_start":1689,"line_end":1689,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363821,"byte_end":363836,"line_start":1690,"line_end":1690,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363838,"byte_end":363841,"line_start":1691,"line_end":1691,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363843,"byte_end":363854,"line_start":1692,"line_end":1692,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363856,"byte_end":363883,"line_start":1693,"line_end":1693,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363885,"byte_end":363888,"line_start":1694,"line_end":1694,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363890,"byte_end":363923,"line_start":1695,"line_end":1695,"column_start":2,"column_end":35}},{"value":"/ let bv = bits.to_bitvec();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363925,"byte_end":363955,"line_start":1696,"line_end":1696,"column_start":2,"column_end":32}},{"value":"/ assert_eq!(bits, bv);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363957,"byte_end":363982,"line_start":1697,"line_end":1697,"column_start":2,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363984,"byte_end":363991,"line_start":1698,"line_end":1698,"column_start":2,"column_end":9}}]},{"kind":"Function","id":{"krate":0,"index":4259},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":364339,"byte_end":364363,"line_start":1712,"line_end":1712,"column_start":15,"column_end":39},"name":"from_raw_parts_unchecked","qualname":"::slice::from_raw_parts_unchecked","value":"pub unsafe fn from_raw_parts_unchecked<'a, T, O>(BitPtr<Const, T, O>, usize)\n-> &'a BitSlice<T, O> where O: BitOrder, T: 'a + BitStore","parent":null,"children":[],"decl_id":null,"docs":"# Raw Bit-Slice Construction","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4263},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":364612,"byte_end":364640,"line_start":1724,"line_end":1724,"column_start":15,"column_end":43},"name":"from_raw_parts_unchecked_mut","qualname":"::slice::from_raw_parts_unchecked_mut","value":"pub unsafe fn from_raw_parts_unchecked_mut<'a, T, O>(BitPtr<Mut, T, O>, usize)\n-> &'a mut BitSlice<T, O> where O: BitOrder, T: 'a + BitStore","parent":null,"children":[],"decl_id":null,"docs":"# Raw Bit-Slice Construction","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4267},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"store","qualname":"::store","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","parent":null,"children":[{"krate":0,"index":4268},{"krate":0,"index":4269},{"krate":0,"index":4272},{"krate":0,"index":4273},{"krate":0,"index":4275},{"krate":0,"index":4278},{"krate":0,"index":4279},{"krate":0,"index":4280},{"krate":0,"index":4283},{"krate":0,"index":4284},{"krate":0,"index":4287},{"krate":0,"index":4290},{"krate":0,"index":4293},{"krate":0,"index":4308},{"krate":0,"index":7485},{"krate":0,"index":7500},{"krate":0,"index":7514},{"krate":0,"index":7528},{"krate":0,"index":7543},{"krate":0,"index":7557},{"krate":0,"index":7571},{"krate":0,"index":7586},{"krate":0,"index":7600},{"krate":0,"index":7614},{"krate":0,"index":7629},{"krate":0,"index":7643},{"krate":0,"index":7657},{"krate":0,"index":7672},{"krate":0,"index":7686},{"krate":0,"index":4309},{"krate":0,"index":7700},{"krate":0,"index":7703},{"krate":0,"index":7717},{"krate":0,"index":7720},{"krate":0,"index":7734},{"krate":0,"index":7737},{"krate":0,"index":7751},{"krate":0,"index":7754},{"krate":0,"index":7768},{"krate":0,"index":7771}],"decl_id":null,"docs":"# Storage Memory Description","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4293},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":549450,"byte_end":549458,"line_start":21,"line_end":21,"column_start":11,"column_end":19},"name":"BitStore","qualname":"::store::BitStore","value":"BitStore: 'static + Debug","parent":null,"children":[{"krate":0,"index":4294},{"krate":0,"index":4295},{"krate":0,"index":4296},{"krate":0,"index":4297},{"krate":0,"index":4298},{"krate":0,"index":4299},{"krate":0,"index":4300},{"krate":0,"index":4301},{"krate":0,"index":4302},{"krate":0,"index":4304},{"krate":0,"index":4306}],"decl_id":null,"docs":"# Bit Storage","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4294},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":549619,"byte_end":549622,"line_start":24,"line_end":24,"column_start":7,"column_end":10},"name":"Mem","qualname":"::store::BitStore::Mem","value":"type Mem: BitRegister + BitStore<Mem = Self::Mem>;","parent":{"krate":0,"index":4293},"children":[],"decl_id":null,"docs":" The element type used in the memory region underlying a `BitSlice`. It\n is *always* one of the unsigned integer fundamentals.\n","sig":null,"attributes":[{"value":"/ The element type used in the memory region underlying a `BitSlice`. It","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":549479,"byte_end":549553,"line_start":22,"line_end":22,"column_start":2,"column_end":76}},{"value":"/ is *always* one of the unsigned integer fundamentals.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":549555,"byte_end":549612,"line_start":23,"line_end":23,"column_start":2,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":4295},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":549954,"byte_end":549960,"line_start":30,"line_end":30,"column_start":7,"column_end":13},"name":"Access","qualname":"::store::BitStore::Access","value":"type Access: BitAccess<Item = Self::Mem> + BitStore<Mem = Self::Mem>;","parent":{"krate":0,"index":4293},"children":[],"decl_id":null,"docs":" A type that selects the appropriate load/store instructions when\n accessing the memory bus. It determines what instructions are used when\n moving a `Self::Mem` value between the processor and the memory system.","sig":null,"attributes":[{"value":"/ A type that selects the appropriate load/store instructions when","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":549666,"byte_end":549734,"line_start":25,"line_end":25,"column_start":2,"column_end":70}},{"value":"/ accessing the memory bus. It determines what instructions are used when","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":549736,"byte_end":549811,"line_start":26,"line_end":26,"column_start":2,"column_end":77}},{"value":"/ moving a `Self::Mem` value between the processor and the memory system.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":549813,"byte_end":549888,"line_start":27,"line_end":27,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":549890,"byte_end":549893,"line_start":28,"line_end":28,"column_start":2,"column_end":5}},{"value":"/ This must be *at least* able to manage aliasing.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":549895,"byte_end":549947,"line_start":29,"line_end":29,"column_start":2,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":4296},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550369,"byte_end":550374,"line_start":36,"line_end":36,"column_start":7,"column_end":12},"name":"Alias","qualname":"::store::BitStore::Alias","value":"type Alias: BitStore<Mem = Self::Mem>;","parent":{"krate":0,"index":4293},"children":[],"decl_id":null,"docs":" A sibling `BitStore` implementor that is known to be alias-safe. It is\n used when a `BitSlice` introduces multiple handles that view the same\n memory location, and at least one of them has write capabilities to it.\n It must have the same underlying memory type, and can only change access\n patterns or public-facing usage.\n","sig":null,"attributes":[{"value":"/ A sibling `BitStore` implementor that is known to be alias-safe. It is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550020,"byte_end":550094,"line_start":31,"line_end":31,"column_start":2,"column_end":76}},{"value":"/ used when a `BitSlice` introduces multiple handles that view the same","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550096,"byte_end":550169,"line_start":32,"line_end":32,"column_start":2,"column_end":75}},{"value":"/ memory location, and at least one of them has write capabilities to it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550171,"byte_end":550246,"line_start":33,"line_end":33,"column_start":2,"column_end":77}},{"value":"/ It must have the same underlying memory type, and can only change access","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550248,"byte_end":550324,"line_start":34,"line_end":34,"column_start":2,"column_end":78}},{"value":"/ patterns or public-facing usage.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550326,"byte_end":550362,"line_start":35,"line_end":35,"column_start":2,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":4297},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550541,"byte_end":550548,"line_start":39,"line_end":39,"column_start":7,"column_end":14},"name":"Unalias","qualname":"::store::BitStore::Unalias","value":"type Unalias: BitStore<Mem = Self::Mem>;","parent":{"krate":0,"index":4293},"children":[],"decl_id":null,"docs":" The inverse of `::Alias`. It is used when a `BitSlice` removes the\n conditions that required a `T -> T::Alias` transition.\n","sig":null,"attributes":[{"value":"/ The inverse of `::Alias`. It is used when a `BitSlice` removes the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550404,"byte_end":550474,"line_start":37,"line_end":37,"column_start":2,"column_end":72}},{"value":"/ conditions that required a `T -> T::Alias` transition.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550476,"byte_end":550534,"line_start":38,"line_end":38,"column_start":2,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":4298},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550609,"byte_end":550613,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"ZERO","qualname":"::store::BitStore::ZERO","value":"Self","parent":{"krate":0,"index":4293},"children":[],"decl_id":null,"docs":" The zero constant.\n","sig":null,"attributes":[{"value":"/ The zero constant.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550579,"byte_end":550601,"line_start":41,"line_end":41,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4299},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550678,"byte_end":550681,"line_start":45,"line_end":45,"column_start":5,"column_end":8},"name":"new","qualname":"::store::BitStore::new","value":"pub fn new(Self::Mem) -> Self","parent":{"krate":0,"index":4293},"children":[],"decl_id":null,"docs":" Wraps a raw memory value as a `BitStore` type.\n","sig":null,"attributes":[{"value":"/ Wraps a raw memory value as a `BitStore` type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550623,"byte_end":550673,"line_start":44,"line_end":44,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4300},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550878,"byte_end":550888,"line_start":50,"line_end":50,"column_start":5,"column_end":15},"name":"load_value","qualname":"::store::BitStore::load_value","value":"pub fn load_value(&Self) -> Self::Mem","parent":{"krate":0,"index":4293},"children":[],"decl_id":null,"docs":" Loads a value out of the memory system according to the `::Access`\n rules. This may be called when the value is aliased by a write-capable\n reference.\n","sig":null,"attributes":[{"value":"/ Loads a value out of the memory system according to the `::Access`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550711,"byte_end":550781,"line_start":47,"line_end":47,"column_start":2,"column_end":72}},{"value":"/ rules. This may be called when the value is aliased by a write-capable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550783,"byte_end":550857,"line_start":48,"line_end":48,"column_start":2,"column_end":76}},{"value":"/ reference.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550859,"byte_end":550873,"line_start":49,"line_end":49,"column_start":2,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4301},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551077,"byte_end":551088,"line_start":55,"line_end":55,"column_start":5,"column_end":16},"name":"store_value","qualname":"::store::BitStore::store_value","value":"pub fn store_value(&mut Self, Self::Mem)","parent":{"krate":0,"index":4293},"children":[],"decl_id":null,"docs":" Stores a value into the memory system. This is only called when there\n are no other handles to the value, and it may bypass `::Access`\n constraints.\n","sig":null,"attributes":[{"value":"/ Stores a value into the memory system. This is only called when there","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550912,"byte_end":550985,"line_start":52,"line_end":52,"column_start":2,"column_end":75}},{"value":"/ are no other handles to the value, and it may bypass `::Access`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":550987,"byte_end":551054,"line_start":53,"line_end":53,"column_start":2,"column_end":69}},{"value":"/ constraints.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551056,"byte_end":551072,"line_start":54,"line_end":54,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4302},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551643,"byte_end":551650,"line_start":74,"line_end":74,"column_start":5,"column_end":12},"name":"get_bit","qualname":"::store::BitStore::get_bit","value":"pub fn get_bit<O>(&Self, BitIdx<Self::Mem>) -> bool where O: BitOrder","parent":{"krate":0,"index":4293},"children":[],"decl_id":null,"docs":" Reads a single bit out of the memory system according to the `::Access`\n rules. This is lifted from [`BitAccess`] so that it can be used\n elsewhere without additional casts.","sig":null,"attributes":[{"value":"/ Reads a single bit out of the memory system according to the `::Access`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551121,"byte_end":551196,"line_start":57,"line_end":57,"column_start":2,"column_end":77}},{"value":"/ rules. This is lifted from [`BitAccess`] so that it can be used","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551198,"byte_end":551265,"line_start":58,"line_end":58,"column_start":2,"column_end":69}},{"value":"/ elsewhere without additional casts.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551267,"byte_end":551306,"line_start":59,"line_end":59,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551308,"byte_end":551311,"line_start":60,"line_end":60,"column_start":2,"column_end":5}},{"value":"/ ## Type Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551313,"byte_end":551335,"line_start":61,"line_end":61,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551337,"byte_end":551340,"line_start":62,"line_end":62,"column_start":2,"column_end":5}},{"value":"/ - `O`: The ordering of bits within `Self::Mem` governing the lookup.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551342,"byte_end":551414,"line_start":63,"line_end":63,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551416,"byte_end":551419,"line_start":64,"line_end":64,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551421,"byte_end":551438,"line_start":65,"line_end":65,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551440,"byte_end":551443,"line_start":66,"line_end":66,"column_start":2,"column_end":5}},{"value":"/ - `index`: The semantic index of a bit in `*self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551445,"byte_end":551499,"line_start":67,"line_end":67,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551501,"byte_end":551504,"line_start":68,"line_end":68,"column_start":2,"column_end":5}},{"value":"/ ## Returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551506,"byte_end":551520,"line_start":69,"line_end":69,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551522,"byte_end":551525,"line_start":70,"line_end":70,"column_start":2,"column_end":5}},{"value":"/ The value of the bit in `*self` at `BitOrder::at(index)`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551527,"byte_end":551588,"line_start":71,"line_end":71,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551590,"byte_end":551593,"line_start":72,"line_end":72,"column_start":2,"column_end":5}},{"value":"/ [`BitAccess`]: crate::access::BitAccess","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551595,"byte_end":551638,"line_start":73,"line_end":73,"column_start":2,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":4304},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":552005,"byte_end":552020,"line_start":85,"line_end":85,"column_start":8,"column_end":23},"name":"ALIGNED_TO_SIZE","qualname":"::store::BitStore::ALIGNED_TO_SIZE","value":"[(); ]","parent":{"krate":0,"index":4293},"children":[],"decl_id":null,"docs":" All implementors are required to have their alignment match their size.","sig":null,"attributes":[{"value":"/ All implementors are required to have their alignment match their size.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551812,"byte_end":551887,"line_start":80,"line_end":80,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551889,"byte_end":551892,"line_start":81,"line_end":81,"column_start":2,"column_end":5}},{"value":"/ Use [`mem::aligned_to_size::<Self>()`][0] to prove this.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551894,"byte_end":551954,"line_start":82,"line_end":82,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551956,"byte_end":551959,"line_start":83,"line_end":83,"column_start":2,"column_end":5}},{"value":"/ [0]: crate::mem::aligned_to_size","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":551961,"byte_end":551997,"line_start":84,"line_end":84,"column_start":2,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":4306},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":552321,"byte_end":552332,"line_start":94,"line_end":94,"column_start":8,"column_end":19},"name":"ALIAS_WIDTH","qualname":"::store::BitStore::ALIAS_WIDTH","value":"[(); ]","parent":{"krate":0,"index":4293},"children":[],"decl_id":null,"docs":" All implementors are required to have `Self` and `Self::Alias` be equal\n in representation. This is true by fiat for all types except the\n unsigned integers.","sig":null,"attributes":[{"value":"/ All implementors are required to have `Self` and `Self::Alias` be equal","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":552033,"byte_end":552108,"line_start":87,"line_end":87,"column_start":2,"column_end":77}},{"value":"/ in representation. This is true by fiat for all types except the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":552110,"byte_end":552178,"line_start":88,"line_end":88,"column_start":2,"column_end":70}},{"value":"/ unsigned integers.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":552180,"byte_end":552202,"line_start":89,"line_end":89,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":552204,"byte_end":552207,"line_start":90,"line_end":90,"column_start":2,"column_end":5}},{"value":"/ Use [`mem::layout_eq::<Self, Self::Alias>()`][0] to prove this.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":552209,"byte_end":552276,"line_start":91,"line_end":91,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":552278,"byte_end":552281,"line_start":92,"line_end":92,"column_start":2,"column_end":5}},{"value":"/ [0]: crate::mem::layout_eq","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":552283,"byte_end":552313,"line_start":93,"line_end":93,"column_start":2,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":4310},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::vec","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","parent":null,"children":[{"krate":0,"index":4311},{"krate":0,"index":4314},{"krate":0,"index":4315},{"krate":0,"index":4316},{"krate":0,"index":4319},{"krate":0,"index":4322},{"krate":0,"index":4325},{"krate":0,"index":4328},{"krate":0,"index":4331},{"krate":0,"index":4332},{"krate":0,"index":4333},{"krate":0,"index":4335},{"krate":0,"index":4336},{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4342},{"krate":0,"index":4345},{"krate":0,"index":4348},{"krate":0,"index":4349},{"krate":0,"index":4352},{"krate":0,"index":4355},{"krate":0,"index":4358},{"krate":0,"index":4359},{"krate":0,"index":4362},{"krate":0,"index":4363},{"krate":0,"index":4365},{"krate":0,"index":4366},{"krate":0,"index":4369},{"krate":0,"index":4372},{"krate":0,"index":4375},{"krate":0,"index":4378},{"krate":0,"index":4381},{"krate":0,"index":4384},{"krate":0,"index":4387},{"krate":0,"index":4500},{"krate":0,"index":4759},{"krate":0,"index":4904},{"krate":0,"index":5110},{"krate":0,"index":5115},{"krate":0,"index":5133},{"krate":0,"index":5144}],"decl_id":null,"docs":"# Dynamically-Allocated, Adjustable-Size, Bit Buffer","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":558098,"byte_end":558124,"line_start":2,"line_end":2,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4454},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576811,"byte_end":576814,"line_start":63,"line_end":63,"column_start":9,"column_end":12},"name":"new","qualname":"<BitVec<T, O>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty, bit-vector.","sig":null,"attributes":[{"value":"/ Constructs a new, empty, bit-vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576357,"byte_end":576397,"line_start":43,"line_end":43,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576399,"byte_end":576402,"line_start":44,"line_end":44,"column_start":2,"column_end":5}},{"value":"/ This does not allocate until bits are [`.push()`]ed into it, or space is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576404,"byte_end":576480,"line_start":45,"line_end":45,"column_start":2,"column_end":78}},{"value":"/ explicitly [`.reserve()`]d.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576482,"byte_end":576513,"line_start":46,"line_end":46,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576515,"byte_end":576518,"line_start":47,"line_end":47,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576520,"byte_end":576535,"line_start":48,"line_end":48,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576537,"byte_end":576540,"line_start":49,"line_end":49,"column_start":2,"column_end":5}},{"value":"/ [`Vec::new`](alloc::vec::Vec::new)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576542,"byte_end":576580,"line_start":50,"line_end":50,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576582,"byte_end":576585,"line_start":51,"line_end":51,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576587,"byte_end":576602,"line_start":52,"line_end":52,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576604,"byte_end":576607,"line_start":53,"line_end":53,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576609,"byte_end":576620,"line_start":54,"line_end":54,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576622,"byte_end":576649,"line_start":55,"line_end":55,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576651,"byte_end":576654,"line_start":56,"line_end":56,"column_start":2,"column_end":5}},{"value":"/ let bv = BitVec::<u8, Msb0>::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576656,"byte_end":576695,"line_start":57,"line_end":57,"column_start":2,"column_end":41}},{"value":"/ assert!(bv.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576697,"byte_end":576724,"line_start":58,"line_end":58,"column_start":2,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576726,"byte_end":576733,"line_start":59,"line_end":59,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576735,"byte_end":576738,"line_start":60,"line_end":60,"column_start":2,"column_end":5}},{"value":"/ [`.push()`]: Self::push","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576740,"byte_end":576767,"line_start":61,"line_end":61,"column_start":2,"column_end":29}},{"value":"/ [`.reserve()`]: Self::reserve","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576769,"byte_end":576802,"line_start":62,"line_end":62,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4455},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577701,"byte_end":577714,"line_start":101,"line_end":101,"column_start":9,"column_end":22},"name":"with_capacity","qualname":"<BitVec<T, O>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new, empty, bit-vector with space for at least `capacity`\n bits before reallocating.","sig":null,"attributes":[{"value":"/ Allocates a new, empty, bit-vector with space for at least `capacity`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576846,"byte_end":576919,"line_start":67,"line_end":67,"column_start":2,"column_end":75}},{"value":"/ bits before reallocating.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576921,"byte_end":576950,"line_start":68,"line_end":68,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576952,"byte_end":576955,"line_start":69,"line_end":69,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576957,"byte_end":576972,"line_start":70,"line_end":70,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576974,"byte_end":576977,"line_start":71,"line_end":71,"column_start":2,"column_end":5}},{"value":"/ [`Vec::with_capacity`](alloc::vec::Vec::with_capacity)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576979,"byte_end":577037,"line_start":72,"line_end":72,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577039,"byte_end":577042,"line_start":73,"line_end":73,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577044,"byte_end":577057,"line_start":74,"line_end":74,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577059,"byte_end":577062,"line_start":75,"line_end":75,"column_start":2,"column_end":5}},{"value":"/ This panics if the requested capacity is longer than what the bit-vector","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577064,"byte_end":577140,"line_start":76,"line_end":76,"column_start":2,"column_end":78}},{"value":"/ can represent. See [`BitSlice::MAX_BITS`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577142,"byte_end":577188,"line_start":77,"line_end":77,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577190,"byte_end":577193,"line_start":78,"line_end":78,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577195,"byte_end":577210,"line_start":79,"line_end":79,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577212,"byte_end":577215,"line_start":80,"line_end":80,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577217,"byte_end":577228,"line_start":81,"line_end":81,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577230,"byte_end":577257,"line_start":82,"line_end":82,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577259,"byte_end":577262,"line_start":83,"line_end":83,"column_start":2,"column_end":5}},{"value":"/ let mut bv: BitVec = BitVec::with_capacity(128);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577264,"byte_end":577316,"line_start":84,"line_end":84,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577318,"byte_end":577321,"line_start":85,"line_end":85,"column_start":2,"column_end":5}},{"value":"/ assert!(bv.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577323,"byte_end":577350,"line_start":86,"line_end":86,"column_start":2,"column_end":29}},{"value":"/ assert!(bv.capacity() >= 128);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577352,"byte_end":577386,"line_start":87,"line_end":87,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577388,"byte_end":577391,"line_start":88,"line_end":88,"column_start":2,"column_end":5}},{"value":"/ for i in 0 .. 128 {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577393,"byte_end":577416,"line_start":89,"line_end":89,"column_start":2,"column_end":25}},{"value":"/   bv.push(i & 0xC0 == i);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577418,"byte_end":577447,"line_start":90,"line_end":90,"column_start":2,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577449,"byte_end":577454,"line_start":91,"line_end":91,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(bv.len(), 128);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577456,"byte_end":577486,"line_start":92,"line_end":92,"column_start":2,"column_end":32}},{"value":"/ assert!(bv.capacity() >= 128);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577488,"byte_end":577522,"line_start":93,"line_end":93,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577524,"byte_end":577527,"line_start":94,"line_end":94,"column_start":2,"column_end":5}},{"value":"/ bv.push(false);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577529,"byte_end":577548,"line_start":95,"line_end":95,"column_start":2,"column_end":21}},{"value":"/ assert_eq!(bv.len(), 129);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577550,"byte_end":577580,"line_start":96,"line_end":96,"column_start":2,"column_end":32}},{"value":"/ assert!(bv.capacity() >= 129);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577582,"byte_end":577616,"line_start":97,"line_end":97,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577618,"byte_end":577625,"line_start":98,"line_end":98,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577627,"byte_end":577630,"line_start":99,"line_end":99,"column_start":2,"column_end":5}},{"value":"/ [`BitSlice::MAX_BITS`]: crate::slice::BitSlice::MAX_BITS","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":577632,"byte_end":577692,"line_start":100,"line_end":100,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4456},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579079,"byte_end":579093,"line_start":143,"line_end":143,"column_start":16,"column_end":30},"name":"from_raw_parts","qualname":"<BitVec<T, O>>::from_raw_parts","value":"pub unsafe fn from_raw_parts(BitPtr<Mut, T, O>, usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a bit-vector handle from its constituent fields.","sig":null,"attributes":[{"value":"/ Constructs a bit-vector handle from its constituent fields.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578067,"byte_end":578130,"line_start":112,"line_end":112,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578132,"byte_end":578135,"line_start":113,"line_end":113,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578137,"byte_end":578152,"line_start":114,"line_end":114,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578154,"byte_end":578157,"line_start":115,"line_end":115,"column_start":2,"column_end":5}},{"value":"/ [`Vec::from_raw_parts`](alloc::vec::Vec::from_raw_parts)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578159,"byte_end":578219,"line_start":116,"line_end":116,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578221,"byte_end":578224,"line_start":117,"line_end":117,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578226,"byte_end":578239,"line_start":118,"line_end":118,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578241,"byte_end":578244,"line_start":119,"line_end":119,"column_start":2,"column_end":5}},{"value":"/ The **only** acceptable argument values for this function are those that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578246,"byte_end":578322,"line_start":120,"line_end":120,"column_start":2,"column_end":78}},{"value":"/ were previously produced by calling [`.into_raw_parts()`]. Furthermore,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578324,"byte_end":578399,"line_start":121,"line_end":121,"column_start":2,"column_end":77}},{"value":"/ you may only call this **at most once** on any set of arguments. Using","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578401,"byte_end":578475,"line_start":122,"line_end":122,"column_start":2,"column_end":76}},{"value":"/ the same arguments in more than one call to this function will result in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578477,"byte_end":578553,"line_start":123,"line_end":123,"column_start":2,"column_end":78}},{"value":"/ a double- or use-after free error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578555,"byte_end":578593,"line_start":124,"line_end":124,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578595,"byte_end":578598,"line_start":125,"line_end":125,"column_start":2,"column_end":5}},{"value":"/ Attempting to conjure your own values and pass them into this function","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578600,"byte_end":578674,"line_start":126,"line_end":126,"column_start":2,"column_end":76}},{"value":"/ will break the allocator state.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578676,"byte_end":578711,"line_start":127,"line_end":127,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578713,"byte_end":578716,"line_start":128,"line_end":128,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578718,"byte_end":578733,"line_start":129,"line_end":129,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578735,"byte_end":578738,"line_start":130,"line_end":130,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578740,"byte_end":578751,"line_start":131,"line_end":131,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578753,"byte_end":578780,"line_start":132,"line_end":132,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578782,"byte_end":578785,"line_start":133,"line_end":133,"column_start":2,"column_end":5}},{"value":"/ let bv = bitvec![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578787,"byte_end":578823,"line_start":134,"line_end":134,"column_start":2,"column_end":38}},{"value":"/ let (bitptr, len, capa) = bv.into_raw_parts();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578825,"byte_end":578875,"line_start":135,"line_end":135,"column_start":2,"column_end":52}},{"value":"/ let bv2 = unsafe {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578877,"byte_end":578899,"line_start":136,"line_end":136,"column_start":2,"column_end":24}},{"value":"/   BitVec::from_raw_parts(bitptr, len, capa)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578901,"byte_end":578948,"line_start":137,"line_end":137,"column_start":2,"column_end":49}},{"value":"/ };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578950,"byte_end":578956,"line_start":138,"line_end":138,"column_start":2,"column_end":8}},{"value":"/ assert_eq!(bv2, bits![0, 1, 0, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":578958,"byte_end":579000,"line_start":139,"line_end":139,"column_start":2,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579002,"byte_end":579009,"line_start":140,"line_end":140,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579011,"byte_end":579014,"line_start":141,"line_end":141,"column_start":2,"column_end":5}},{"value":"/ [`.into_raw_parts()`]: Self::into_raw_parts","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579016,"byte_end":579063,"line_start":142,"line_end":142,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4457},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579924,"byte_end":579938,"line_start":173,"line_end":173,"column_start":9,"column_end":23},"name":"into_raw_parts","qualname":"<BitVec<T, O>>::into_raw_parts","value":"pub fn into_raw_parts(Self) -> (BitPtr<Mut, T, O>, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Decomposes a bit-vector into its constituent member fields.","sig":null,"attributes":[{"value":"/ Decomposes a bit-vector into its constituent member fields.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579352,"byte_end":579415,"line_start":157,"line_end":157,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579417,"byte_end":579420,"line_start":158,"line_end":158,"column_start":2,"column_end":5}},{"value":"/ This disarms the destructor. In order to prevent a memory leak, you must","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579422,"byte_end":579498,"line_start":159,"line_end":159,"column_start":2,"column_end":78}},{"value":"/ pass **these exact values** back into [`::from_raw_parts()`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579500,"byte_end":579565,"line_start":160,"line_end":160,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579567,"byte_end":579570,"line_start":161,"line_end":161,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579572,"byte_end":579587,"line_start":162,"line_end":162,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579589,"byte_end":579592,"line_start":163,"line_end":163,"column_start":2,"column_end":5}},{"value":"/ [`Vec::into_raw_parts`](alloc::vec::Vec::into_raw_parts)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579594,"byte_end":579654,"line_start":164,"line_end":164,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579656,"byte_end":579659,"line_start":165,"line_end":165,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579661,"byte_end":579683,"line_start":166,"line_end":166,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579685,"byte_end":579688,"line_start":167,"line_end":167,"column_start":2,"column_end":5}},{"value":"/ This method is still unstable as of 1.54. It is provided here as a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579690,"byte_end":579760,"line_start":168,"line_end":168,"column_start":2,"column_end":72}},{"value":"/ convenience, under the expectation that the standard-library method will","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579762,"byte_end":579838,"line_start":169,"line_end":169,"column_start":2,"column_end":78}},{"value":"/ stabilize as-is.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579840,"byte_end":579860,"line_start":170,"line_end":170,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579862,"byte_end":579865,"line_start":171,"line_end":171,"column_start":2,"column_end":5}},{"value":"/ [`::from_raw_parts()`]: Self::from_raw_parts","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":579867,"byte_end":579915,"line_start":172,"line_end":172,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4458},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580639,"byte_end":580647,"line_start":203,"line_end":203,"column_start":9,"column_end":17},"name":"capacity","qualname":"<BitVec<T, O>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the allocation capacity, measured in bits.","sig":null,"attributes":[{"value":"/ Gets the allocation capacity, measured in bits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580107,"byte_end":580158,"line_start":182,"line_end":182,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580160,"byte_end":580163,"line_start":183,"line_end":183,"column_start":2,"column_end":5}},{"value":"/ This counts how many total bits the bit-vector can store before it must","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580165,"byte_end":580240,"line_start":184,"line_end":184,"column_start":2,"column_end":77}},{"value":"/ perform a reällocation to acquire more memory.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580242,"byte_end":580293,"line_start":185,"line_end":185,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580295,"byte_end":580298,"line_start":186,"line_end":186,"column_start":2,"column_end":5}},{"value":"/ If the capacity is not a multiple of 8, you should call","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580300,"byte_end":580359,"line_start":187,"line_end":187,"column_start":2,"column_end":61}},{"value":"/ [`.force_align()`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580361,"byte_end":580384,"line_start":188,"line_end":188,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580386,"byte_end":580389,"line_start":189,"line_end":189,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580391,"byte_end":580406,"line_start":190,"line_end":190,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580408,"byte_end":580411,"line_start":191,"line_end":191,"column_start":2,"column_end":5}},{"value":"/ [`Vec::capacity`](alloc::vec::Vec::capacity)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580413,"byte_end":580461,"line_start":192,"line_end":192,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580463,"byte_end":580466,"line_start":193,"line_end":193,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580468,"byte_end":580483,"line_start":194,"line_end":194,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580485,"byte_end":580488,"line_start":195,"line_end":195,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580490,"byte_end":580501,"line_start":196,"line_end":196,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580503,"byte_end":580530,"line_start":197,"line_end":197,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580532,"byte_end":580535,"line_start":198,"line_end":198,"column_start":2,"column_end":5}},{"value":"/ let bv = bitvec![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580537,"byte_end":580573,"line_start":199,"line_end":199,"column_start":2,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580575,"byte_end":580582,"line_start":200,"line_end":200,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580584,"byte_end":580587,"line_start":201,"line_end":201,"column_start":2,"column_end":5}},{"value":"/ [`.force_align()`]: Self::force_align","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580589,"byte_end":580630,"line_start":202,"line_end":202,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4459},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581821,"byte_end":581828,"line_start":240,"line_end":240,"column_start":9,"column_end":16},"name":"reserve","qualname":"<BitVec<T, O>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Ensures that the bit-vector has allocation capacity for *at least*\n `additional` more bits to be appended to it.","sig":null,"attributes":[{"value":"/ Ensures that the bit-vector has allocation capacity for *at least*","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580829,"byte_end":580899,"line_start":210,"line_end":210,"column_start":2,"column_end":72}},{"value":"/ `additional` more bits to be appended to it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580901,"byte_end":580949,"line_start":211,"line_end":211,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580951,"byte_end":580954,"line_start":212,"line_end":212,"column_start":2,"column_end":5}},{"value":"/ For convenience, this method *guarantees* that the underlying memory for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":580956,"byte_end":581032,"line_start":213,"line_end":213,"column_start":2,"column_end":78}},{"value":"/ `self[.. self.len() + additional]` is initialized, and may be safely","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581034,"byte_end":581106,"line_start":214,"line_end":214,"column_start":2,"column_end":74}},{"value":"/ accessed directly without requiring use of `.push()` or `.extend()` to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581108,"byte_end":581182,"line_start":215,"line_end":215,"column_start":2,"column_end":76}},{"value":"/ initialize it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581184,"byte_end":581202,"line_start":216,"line_end":216,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581204,"byte_end":581207,"line_start":217,"line_end":217,"column_start":2,"column_end":5}},{"value":"/ Newly-allocated memory is always initialized to zero. It is still *dead*","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581209,"byte_end":581285,"line_start":218,"line_end":218,"column_start":2,"column_end":78}},{"value":"/ until the bit-vector is grown (by `.push()`, `.extend()`, or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581287,"byte_end":581351,"line_start":219,"line_end":219,"column_start":2,"column_end":66}},{"value":"/ `.set_len()`), but direct access will not trigger UB.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581353,"byte_end":581410,"line_start":220,"line_end":220,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581412,"byte_end":581415,"line_start":221,"line_end":221,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581417,"byte_end":581432,"line_start":222,"line_end":222,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581434,"byte_end":581437,"line_start":223,"line_end":223,"column_start":2,"column_end":5}},{"value":"/ [`Vec::reserve`](alloc::vec::Vec::reserve)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581439,"byte_end":581485,"line_start":224,"line_end":224,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581487,"byte_end":581490,"line_start":225,"line_end":225,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581492,"byte_end":581505,"line_start":226,"line_end":226,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581507,"byte_end":581510,"line_start":227,"line_end":227,"column_start":2,"column_end":5}},{"value":"/ This panics if the new capacity exceeds the bit-vector’s maximum.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581512,"byte_end":581583,"line_start":228,"line_end":228,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581585,"byte_end":581588,"line_start":229,"line_end":229,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581590,"byte_end":581605,"line_start":230,"line_end":230,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581607,"byte_end":581610,"line_start":231,"line_end":231,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581612,"byte_end":581623,"line_start":232,"line_end":232,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581625,"byte_end":581652,"line_start":233,"line_end":233,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581654,"byte_end":581657,"line_start":234,"line_end":234,"column_start":2,"column_end":5}},{"value":"/ let mut bv: BitVec = BitVec::with_capacity(80);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581659,"byte_end":581710,"line_start":235,"line_end":235,"column_start":2,"column_end":53}},{"value":"/ assert!(bv.capacity() >= 80);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581712,"byte_end":581745,"line_start":236,"line_end":236,"column_start":2,"column_end":35}},{"value":"/ bv.reserve(800);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581747,"byte_end":581767,"line_start":237,"line_end":237,"column_start":2,"column_end":22}},{"value":"/ assert!(bv.capacity() >= 800);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581769,"byte_end":581803,"line_start":238,"line_end":238,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581805,"byte_end":581812,"line_start":239,"line_end":239,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4460},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583045,"byte_end":583058,"line_start":277,"line_end":277,"column_start":9,"column_end":22},"name":"reserve_exact","qualname":"<BitVec<T, O>>::reserve_exact","value":"pub fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Ensures that the bit-vector has allocation capacity for *at least*\n `additional` more bits to be appended to it.","sig":null,"attributes":[{"value":"/ Ensures that the bit-vector has allocation capacity for *at least*","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":581975,"byte_end":582045,"line_start":245,"line_end":245,"column_start":2,"column_end":72}},{"value":"/ `additional` more bits to be appended to it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582047,"byte_end":582095,"line_start":246,"line_end":246,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582097,"byte_end":582100,"line_start":247,"line_end":247,"column_start":2,"column_end":5}},{"value":"/ This differs from [`.reserve()`] by requesting that the allocator","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582102,"byte_end":582171,"line_start":248,"line_end":248,"column_start":2,"column_end":71}},{"value":"/ provide the minimum capacity necessary, rather than a potentially larger","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582173,"byte_end":582249,"line_start":249,"line_end":249,"column_start":2,"column_end":78}},{"value":"/ amount that the allocator may find more convenient.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582251,"byte_end":582306,"line_start":250,"line_end":250,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582308,"byte_end":582311,"line_start":251,"line_end":251,"column_start":2,"column_end":5}},{"value":"/ Remember that this is a *request*: the allocator provides what it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582313,"byte_end":582382,"line_start":252,"line_end":252,"column_start":2,"column_end":71}},{"value":"/ provides, and you cannot rely on the new capacity to be exactly minimal.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582384,"byte_end":582460,"line_start":253,"line_end":253,"column_start":2,"column_end":78}},{"value":"/ You should still prefer `.reserve()`, especially if you expect to append","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582462,"byte_end":582538,"line_start":254,"line_end":254,"column_start":2,"column_end":78}},{"value":"/ to the bit-vector in the future.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582540,"byte_end":582576,"line_start":255,"line_end":255,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582578,"byte_end":582581,"line_start":256,"line_end":256,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582583,"byte_end":582598,"line_start":257,"line_end":257,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582600,"byte_end":582603,"line_start":258,"line_end":258,"column_start":2,"column_end":5}},{"value":"/ [`Vec::reserve_exact`](alloc::vec::Vec::reserve_exact)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582605,"byte_end":582663,"line_start":259,"line_end":259,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582665,"byte_end":582668,"line_start":260,"line_end":260,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582670,"byte_end":582683,"line_start":261,"line_end":261,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582685,"byte_end":582688,"line_start":262,"line_end":262,"column_start":2,"column_end":5}},{"value":"/ This panics if the new capacity exceeds the bit-vector’s maximum.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582690,"byte_end":582761,"line_start":263,"line_end":263,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582763,"byte_end":582766,"line_start":264,"line_end":264,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582768,"byte_end":582783,"line_start":265,"line_end":265,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582785,"byte_end":582788,"line_start":266,"line_end":266,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582790,"byte_end":582801,"line_start":267,"line_end":267,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582803,"byte_end":582830,"line_start":268,"line_end":268,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582832,"byte_end":582835,"line_start":269,"line_end":269,"column_start":2,"column_end":5}},{"value":"/ let mut bv: BitVec = BitVec::with_capacity(80);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582837,"byte_end":582888,"line_start":270,"line_end":270,"column_start":2,"column_end":53}},{"value":"/ assert!(bv.capacity() >= 80);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582890,"byte_end":582923,"line_start":271,"line_end":271,"column_start":2,"column_end":35}},{"value":"/ bv.reserve_exact(800);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582925,"byte_end":582951,"line_start":272,"line_end":272,"column_start":2,"column_end":28}},{"value":"/ assert!(bv.capacity() >= 800);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582953,"byte_end":582987,"line_start":273,"line_end":273,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582989,"byte_end":582996,"line_start":274,"line_end":274,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":582998,"byte_end":583001,"line_start":275,"line_end":275,"column_start":2,"column_end":5}},{"value":"/ [`.reserve()`]: Self::reserve","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583003,"byte_end":583036,"line_start":276,"line_end":276,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4461},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583685,"byte_end":583698,"line_start":301,"line_end":301,"column_start":9,"column_end":22},"name":"shrink_to_fit","qualname":"<BitVec<T, O>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Releases excess capacity back to the allocator.","sig":null,"attributes":[{"value":"/ Releases excess capacity back to the allocator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583156,"byte_end":583207,"line_start":281,"line_end":281,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583209,"byte_end":583212,"line_start":282,"line_end":282,"column_start":2,"column_end":5}},{"value":"/ Like [`.reserve_exact()`], this is a *request* to the allocator, not a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583214,"byte_end":583288,"line_start":283,"line_end":283,"column_start":2,"column_end":76}},{"value":"/ command. The allocator may reclaim excess memory or may not.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583290,"byte_end":583354,"line_start":284,"line_end":284,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583356,"byte_end":583359,"line_start":285,"line_end":285,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583361,"byte_end":583376,"line_start":286,"line_end":286,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583378,"byte_end":583381,"line_start":287,"line_end":287,"column_start":2,"column_end":5}},{"value":"/ [`Vec::reserve_exact`](alloc::vec::Vec::reserve_exact)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583383,"byte_end":583441,"line_start":288,"line_end":288,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583443,"byte_end":583446,"line_start":289,"line_end":289,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583448,"byte_end":583463,"line_start":290,"line_end":290,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583465,"byte_end":583468,"line_start":291,"line_end":291,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583470,"byte_end":583481,"line_start":292,"line_end":292,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583483,"byte_end":583510,"line_start":293,"line_end":293,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583512,"byte_end":583515,"line_start":294,"line_end":294,"column_start":2,"column_end":5}},{"value":"/ let mut bv: BitVec = BitVec::with_capacity(1000);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583517,"byte_end":583570,"line_start":295,"line_end":295,"column_start":2,"column_end":55}},{"value":"/ bv.push(true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583572,"byte_end":583590,"line_start":296,"line_end":296,"column_start":2,"column_end":20}},{"value":"/ bv.shrink_to_fit();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583592,"byte_end":583615,"line_start":297,"line_end":297,"column_start":2,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583617,"byte_end":583624,"line_start":298,"line_end":298,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583626,"byte_end":583629,"line_start":299,"line_end":299,"column_start":2,"column_end":5}},{"value":"/ [`.reserve_exact()`]: Self::reserve_exact","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583631,"byte_end":583676,"line_start":300,"line_end":300,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4463},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583921,"byte_end":583937,"line_start":308,"line_end":308,"column_start":9,"column_end":25},"name":"into_boxed_slice","qualname":"<BitVec<T, O>>::into_boxed_slice","value":"pub fn into_boxed_slice(Self) -> BitBox<T, O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583761,"byte_end":583791,"line_start":305,"line_end":305,"column_start":2,"column_end":32}},{"value":"deprecated = \"prefer `.into_boxed_bitslice() instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583793,"byte_end":583849,"line_start":306,"line_end":306,"column_start":2,"column_end":58}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583851,"byte_end":583912,"line_start":307,"line_end":307,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4464},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585195,"byte_end":585203,"line_start":349,"line_end":349,"column_start":9,"column_end":17},"name":"truncate","qualname":"<BitVec<T, O>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the bit-vector, keeping the first `new_len` bits and discarding\n the rest.","sig":null,"attributes":[{"value":"/ Shortens the bit-vector, keeping the first `new_len` bits and discarding","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":583996,"byte_end":584072,"line_start":312,"line_end":312,"column_start":2,"column_end":78}},{"value":"/ the rest.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584074,"byte_end":584087,"line_start":313,"line_end":313,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584089,"byte_end":584092,"line_start":314,"line_end":314,"column_start":2,"column_end":5}},{"value":"/ If `len` is greater than the bit-vector’s current length, this has no","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584094,"byte_end":584169,"line_start":315,"line_end":315,"column_start":2,"column_end":75}},{"value":"/ effect.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584171,"byte_end":584182,"line_start":316,"line_end":316,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584184,"byte_end":584187,"line_start":317,"line_end":317,"column_start":2,"column_end":5}},{"value":"/ The [`.drain()`] method can emulate `.truncate()`, except that it yields","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584189,"byte_end":584265,"line_start":318,"line_end":318,"column_start":2,"column_end":78}},{"value":"/ the excess bits rather than discarding them.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584267,"byte_end":584315,"line_start":319,"line_end":319,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584317,"byte_end":584320,"line_start":320,"line_end":320,"column_start":2,"column_end":5}},{"value":"/ Note that this has no effect on the allocated capacity of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584322,"byte_end":584387,"line_start":321,"line_end":321,"column_start":2,"column_end":67}},{"value":"/ bit-vector, **nor does it erase truncated memory**. Bits in the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584389,"byte_end":584456,"line_start":322,"line_end":322,"column_start":2,"column_end":69}},{"value":"/ allocated memory that are outside of the [`.as_bitslice()`] view are","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584458,"byte_end":584530,"line_start":323,"line_end":323,"column_start":2,"column_end":74}},{"value":"/ always considered to have *initialized*, but **unspecified**, values,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584532,"byte_end":584605,"line_start":324,"line_end":324,"column_start":2,"column_end":75}},{"value":"/ and you cannot rely on them to be zero.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584607,"byte_end":584650,"line_start":325,"line_end":325,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584652,"byte_end":584655,"line_start":326,"line_end":326,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584657,"byte_end":584672,"line_start":327,"line_end":327,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584674,"byte_end":584677,"line_start":328,"line_end":328,"column_start":2,"column_end":5}},{"value":"/ [`Vec::truncate`](alloc::vec::Vec::truncate)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584679,"byte_end":584727,"line_start":329,"line_end":329,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584729,"byte_end":584732,"line_start":330,"line_end":330,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584734,"byte_end":584749,"line_start":331,"line_end":331,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584751,"byte_end":584754,"line_start":332,"line_end":332,"column_start":2,"column_end":5}},{"value":"/ Truncating a five-bit vector to two bits:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584756,"byte_end":584801,"line_start":333,"line_end":333,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584803,"byte_end":584806,"line_start":334,"line_end":334,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584808,"byte_end":584819,"line_start":335,"line_end":335,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584821,"byte_end":584848,"line_start":336,"line_end":336,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584850,"byte_end":584853,"line_start":337,"line_end":337,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584855,"byte_end":584895,"line_start":338,"line_end":338,"column_start":2,"column_end":42}},{"value":"/ bv.truncate(2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584897,"byte_end":584916,"line_start":339,"line_end":339,"column_start":2,"column_end":21}},{"value":"/ assert_eq!(bv.len(), 2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584918,"byte_end":584946,"line_start":340,"line_end":340,"column_start":2,"column_end":30}},{"value":"/ assert!(bv.as_raw_slice()[0].count_ones() >= 2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":584948,"byte_end":585000,"line_start":341,"line_end":341,"column_start":2,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585002,"byte_end":585009,"line_start":342,"line_end":342,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585011,"byte_end":585014,"line_start":343,"line_end":343,"column_start":2,"column_end":5}},{"value":"/ No truncation occurs when `len` is greater than the bit-vector’s current","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585016,"byte_end":585094,"line_start":344,"line_end":344,"column_start":2,"column_end":78}},{"value":"/ length:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585096,"byte_end":585107,"line_start":345,"line_end":345,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585109,"byte_end":585112,"line_start":346,"line_end":346,"column_start":2,"column_end":5}},{"value":"/ [`.as_bitslice()`]: Self::as_bitslice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585114,"byte_end":585155,"line_start":347,"line_end":347,"column_start":2,"column_end":43}},{"value":"/ [`.drain()`]: Self::drain","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585157,"byte_end":585186,"line_start":348,"line_end":348,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4465},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585474,"byte_end":585482,"line_start":360,"line_end":360,"column_start":9,"column_end":17},"name":"as_slice","qualname":"<BitVec<T, O>>::as_slice","value":"pub fn as_slice(&Self) -> &BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585324,"byte_end":585354,"line_start":357,"line_end":357,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.as_bitslice()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585356,"byte_end":585402,"line_start":358,"line_end":358,"column_start":2,"column_end":48}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585404,"byte_end":585465,"line_start":359,"line_end":359,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4466},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585691,"byte_end":585703,"line_start":367,"line_end":367,"column_start":9,"column_end":21},"name":"as_mut_slice","qualname":"<BitVec<T, O>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585537,"byte_end":585567,"line_start":364,"line_end":364,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.as_mut_bitslice()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585569,"byte_end":585619,"line_start":365,"line_end":365,"column_start":2,"column_end":52}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585621,"byte_end":585682,"line_start":366,"line_end":366,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4467},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585918,"byte_end":585924,"line_start":374,"line_end":374,"column_start":9,"column_end":15},"name":"as_ptr","qualname":"<BitVec<T, O>>::as_ptr","value":"pub fn as_ptr(&Self) -> BitPtr<Const, T, O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585770,"byte_end":585800,"line_start":371,"line_end":371,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.as_bitptr()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585802,"byte_end":585846,"line_start":372,"line_end":372,"column_start":2,"column_end":46}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585848,"byte_end":585909,"line_start":373,"line_end":373,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4468},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586133,"byte_end":586143,"line_start":381,"line_end":381,"column_start":9,"column_end":19},"name":"as_mut_ptr","qualname":"<BitVec<T, O>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> BitPtr<Mut, T, O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":585981,"byte_end":586011,"line_start":378,"line_end":378,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.as_mut_bitptr()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586013,"byte_end":586061,"line_start":379,"line_end":379,"column_start":2,"column_end":50}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586063,"byte_end":586124,"line_start":380,"line_end":380,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4469},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587534,"byte_end":587541,"line_start":430,"line_end":430,"column_start":16,"column_end":23},"name":"set_len","qualname":"<BitVec<T, O>>::set_len","value":"pub unsafe fn set_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Resizes a bit-vector to a new length.","sig":null,"attributes":[{"value":"/ Resizes a bit-vector to a new length.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586206,"byte_end":586247,"line_start":385,"line_end":385,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586249,"byte_end":586252,"line_start":386,"line_end":386,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586254,"byte_end":586269,"line_start":387,"line_end":387,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586271,"byte_end":586274,"line_start":388,"line_end":388,"column_start":2,"column_end":5}},{"value":"/ [`Vec::set_len`](alloc::vec::Vec::set_len)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586276,"byte_end":586322,"line_start":389,"line_end":389,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586324,"byte_end":586327,"line_start":390,"line_end":390,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586329,"byte_end":586342,"line_start":391,"line_end":391,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586344,"byte_end":586347,"line_start":392,"line_end":392,"column_start":2,"column_end":5}},{"value":"/ **NOT ALL MEMORY IN THE ALLOCATION IS INITIALIZED!**","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586349,"byte_end":586405,"line_start":393,"line_end":393,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586407,"byte_end":586410,"line_start":394,"line_end":394,"column_start":2,"column_end":5}},{"value":"/ Memory in a bit-vector’s allocation is only initialized when the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586412,"byte_end":586482,"line_start":395,"line_end":395,"column_start":2,"column_end":70}},{"value":"/ bit-vector grows into it normally (through [`.push()`] or one of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586484,"byte_end":586556,"line_start":396,"line_end":396,"column_start":2,"column_end":74}},{"value":"/ various `.extend*()` methods). Setting the length to a value beyond what","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586558,"byte_end":586634,"line_start":397,"line_end":397,"column_start":2,"column_end":78}},{"value":"/ was previously initialized, but still within the allocation, is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586636,"byte_end":586703,"line_start":398,"line_end":398,"column_start":2,"column_end":69}},{"value":"/ undefined behavior.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586705,"byte_end":586728,"line_start":399,"line_end":399,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586730,"byte_end":586733,"line_start":400,"line_end":400,"column_start":2,"column_end":5}},{"value":"/ The caller is responsible for ensuring that all memory up to (but not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586735,"byte_end":586808,"line_start":401,"line_end":401,"column_start":2,"column_end":75}},{"value":"/ including) the new length has already been initialized.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586810,"byte_end":586869,"line_start":402,"line_end":402,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586871,"byte_end":586874,"line_start":403,"line_end":403,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586876,"byte_end":586889,"line_start":404,"line_end":404,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586891,"byte_end":586894,"line_start":405,"line_end":405,"column_start":2,"column_end":5}},{"value":"/ This panics if `new_len` exceeds the capacity as reported by","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586896,"byte_end":586960,"line_start":406,"line_end":406,"column_start":2,"column_end":66}},{"value":"/ [`.capacity()`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586962,"byte_end":586982,"line_start":407,"line_end":407,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586984,"byte_end":586987,"line_start":408,"line_end":408,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":586989,"byte_end":587004,"line_start":409,"line_end":409,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587006,"byte_end":587009,"line_start":410,"line_end":410,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587011,"byte_end":587022,"line_start":411,"line_end":411,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587024,"byte_end":587051,"line_start":412,"line_end":412,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587053,"byte_end":587056,"line_start":413,"line_end":413,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587058,"byte_end":587098,"line_start":414,"line_end":414,"column_start":2,"column_end":42}},{"value":"/ unsafe {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587100,"byte_end":587112,"line_start":415,"line_end":415,"column_start":2,"column_end":14}},{"value":"/   // The default storage type, `usize`, is at least 32 bits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587114,"byte_end":587178,"line_start":416,"line_end":416,"column_start":2,"column_end":66}},{"value":"/   bv.set_len(32);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587180,"byte_end":587201,"line_start":417,"line_end":417,"column_start":2,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587203,"byte_end":587208,"line_start":418,"line_end":418,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(bv, bits![","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587210,"byte_end":587235,"line_start":419,"line_end":419,"column_start":2,"column_end":27}},{"value":"/   0, 1, 0, 0, 1, 0, 0, 0,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587237,"byte_end":587266,"line_start":420,"line_end":420,"column_start":2,"column_end":31}},{"value":"/   0, 0, 0, 0, 0, 0, 0, 0,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587268,"byte_end":587297,"line_start":421,"line_end":421,"column_start":2,"column_end":31}},{"value":"/   0, 0, 0, 0, 0, 0, 0, 0,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587299,"byte_end":587328,"line_start":422,"line_end":422,"column_start":2,"column_end":31}},{"value":"/   0, 0, 0, 0, 0, 0, 0, 0,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587330,"byte_end":587359,"line_start":423,"line_end":423,"column_start":2,"column_end":31}},{"value":"/ ]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587361,"byte_end":587368,"line_start":424,"line_end":424,"column_start":2,"column_end":9}},{"value":"/ //  `BitVec` guarantees that newly-initialized memory is zeroed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587370,"byte_end":587438,"line_start":425,"line_end":425,"column_start":2,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587440,"byte_end":587447,"line_start":426,"line_end":426,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587449,"byte_end":587452,"line_start":427,"line_end":427,"column_start":2,"column_end":5}},{"value":"/ [`.push()`]: Self::push","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587454,"byte_end":587481,"line_start":428,"line_end":428,"column_start":2,"column_end":29}},{"value":"/ [`.capacity()`]: Self::capacity","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587483,"byte_end":587518,"line_start":429,"line_end":429,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4470},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588305,"byte_end":588316,"line_start":463,"line_end":463,"column_start":9,"column_end":20},"name":"swap_remove","qualname":"<BitVec<T, O>>::swap_remove","value":"pub fn swap_remove(&mut Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Takes a bit out of the bit-vector.","sig":null,"attributes":[{"value":"/ Takes a bit out of the bit-vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587742,"byte_end":587780,"line_start":441,"line_end":441,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587782,"byte_end":587785,"line_start":442,"line_end":442,"column_start":2,"column_end":5}},{"value":"/ The empty slot is filled with the last bit in the bit-vector, rather","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587787,"byte_end":587859,"line_start":443,"line_end":443,"column_start":2,"column_end":74}},{"value":"/ than shunting `index + 1 .. self.len()` down by one.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587861,"byte_end":587917,"line_start":444,"line_end":444,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587919,"byte_end":587922,"line_start":445,"line_end":445,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587924,"byte_end":587939,"line_start":446,"line_end":446,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587941,"byte_end":587944,"line_start":447,"line_end":447,"column_start":2,"column_end":5}},{"value":"/ [`Vec::swap_remove`](alloc::vec::Vec::swap_remove)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":587946,"byte_end":588000,"line_start":448,"line_end":448,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588002,"byte_end":588005,"line_start":449,"line_end":449,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588007,"byte_end":588020,"line_start":450,"line_end":450,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588022,"byte_end":588025,"line_start":451,"line_end":451,"column_start":2,"column_end":5}},{"value":"/ This panics if `index` is out of bounds (`self.len()` or greater).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588027,"byte_end":588097,"line_start":452,"line_end":452,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588099,"byte_end":588102,"line_start":453,"line_end":453,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588104,"byte_end":588119,"line_start":454,"line_end":454,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588121,"byte_end":588124,"line_start":455,"line_end":455,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588126,"byte_end":588137,"line_start":456,"line_end":456,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588139,"byte_end":588166,"line_start":457,"line_end":457,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588168,"byte_end":588171,"line_start":458,"line_end":458,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588173,"byte_end":588213,"line_start":459,"line_end":459,"column_start":2,"column_end":42}},{"value":"/ assert!(!bv.swap_remove(2));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588215,"byte_end":588247,"line_start":460,"line_end":460,"column_start":2,"column_end":34}},{"value":"/ assert_eq!(bv, bits![0, 1, 1, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588249,"byte_end":588287,"line_start":461,"line_end":461,"column_start":2,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588289,"byte_end":588296,"line_start":462,"line_end":462,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4471},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588947,"byte_end":588953,"line_start":486,"line_end":486,"column_start":9,"column_end":15},"name":"insert","qualname":"<BitVec<T, O>>::insert","value":"pub fn insert(&mut Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a bit at a given position, shifting all bits after it one spot\n to the right.","sig":null,"attributes":[{"value":"/ Inserts a bit at a given position, shifting all bits after it one spot","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588539,"byte_end":588613,"line_start":473,"line_end":473,"column_start":2,"column_end":76}},{"value":"/ to the right.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588615,"byte_end":588632,"line_start":474,"line_end":474,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588634,"byte_end":588637,"line_start":475,"line_end":475,"column_start":2,"column_end":5}},{"value":"/ `index` may be any value up to *and including* `self.len()`. If it is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588639,"byte_end":588712,"line_start":476,"line_end":476,"column_start":2,"column_end":75}},{"value":"/ `self.len()`, it behaves equivalently to `.push()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588714,"byte_end":588769,"line_start":477,"line_end":477,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588771,"byte_end":588774,"line_start":478,"line_end":478,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588776,"byte_end":588791,"line_start":479,"line_end":479,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588793,"byte_end":588796,"line_start":480,"line_end":480,"column_start":2,"column_end":5}},{"value":"/ [`Vec::insert`](alloc::vec::Vec::insert)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588798,"byte_end":588842,"line_start":481,"line_end":481,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588844,"byte_end":588847,"line_start":482,"line_end":482,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588849,"byte_end":588862,"line_start":483,"line_end":483,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588864,"byte_end":588867,"line_start":484,"line_end":484,"column_start":2,"column_end":5}},{"value":"/ This panics if `index` is out of bounds (including `self.len()`).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":588869,"byte_end":588938,"line_start":485,"line_end":485,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4472},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589481,"byte_end":589487,"line_start":504,"line_end":504,"column_start":9,"column_end":15},"name":"remove","qualname":"<BitVec<T, O>>::remove","value":"pub fn remove(&mut Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes a bit at a given position, shifting all bits after it one spot\n to the left.","sig":null,"attributes":[{"value":"/ Removes a bit at a given position, shifting all bits after it one spot","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589132,"byte_end":589206,"line_start":492,"line_end":492,"column_start":2,"column_end":76}},{"value":"/ to the left.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589208,"byte_end":589224,"line_start":493,"line_end":493,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589226,"byte_end":589229,"line_start":494,"line_end":494,"column_start":2,"column_end":5}},{"value":"/ `index` may be any value up to, but **not** including, `self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589231,"byte_end":589303,"line_start":495,"line_end":495,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589305,"byte_end":589308,"line_start":496,"line_end":496,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589310,"byte_end":589325,"line_start":497,"line_end":497,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589327,"byte_end":589330,"line_start":498,"line_end":498,"column_start":2,"column_end":5}},{"value":"/ [`Vec::remove`](alloc::vec::Vec::remove)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589332,"byte_end":589376,"line_start":499,"line_end":499,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589378,"byte_end":589381,"line_start":500,"line_end":500,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589383,"byte_end":589396,"line_start":501,"line_end":501,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589398,"byte_end":589401,"line_start":502,"line_end":502,"column_start":2,"column_end":5}},{"value":"/ This panics if `index` is out of bounds (excluding `self.len()`).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589403,"byte_end":589472,"line_start":503,"line_end":503,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4473},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":590423,"byte_end":590429,"line_start":539,"line_end":539,"column_start":9,"column_end":15},"name":"retain","qualname":"<BitVec<T, O>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(usize, &bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retains only the bits that the predicate allows.","sig":null,"attributes":[{"value":"/ Retains only the bits that the predicate allows.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589743,"byte_end":589795,"line_start":515,"line_end":515,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589797,"byte_end":589800,"line_start":516,"line_end":516,"column_start":2,"column_end":5}},{"value":"/ Bits are deleted from the vector when the predicate function returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589802,"byte_end":589874,"line_start":517,"line_end":517,"column_start":2,"column_end":74}},{"value":"/ false. This function is linear in `self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589876,"byte_end":589927,"line_start":518,"line_end":518,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589929,"byte_end":589932,"line_start":519,"line_end":519,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589934,"byte_end":589949,"line_start":520,"line_end":520,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589951,"byte_end":589954,"line_start":521,"line_end":521,"column_start":2,"column_end":5}},{"value":"/ [`Vec::retain`](alloc::vec::Vec::retain)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":589956,"byte_end":590000,"line_start":522,"line_end":522,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":590002,"byte_end":590005,"line_start":523,"line_end":523,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":590007,"byte_end":590029,"line_start":524,"line_end":524,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":590031,"byte_end":590034,"line_start":525,"line_end":525,"column_start":2,"column_end":5}},{"value":"/ The predicate receives both the index of the bit as well as its value,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":590036,"byte_end":590110,"line_start":526,"line_end":526,"column_start":2,"column_end":76}},{"value":"/ in order to allow the predicate to have more than one bit of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":590112,"byte_end":590176,"line_start":527,"line_end":527,"column_start":2,"column_end":66}},{"value":"/ keep/discard information.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":590178,"byte_end":590207,"line_start":528,"line_end":528,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":590209,"byte_end":590212,"line_start":529,"line_end":529,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":590214,"byte_end":590229,"line_start":530,"line_end":530,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":590231,"byte_end":590234,"line_start":531,"line_end":531,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":590236,"byte_end":590247,"line_start":532,"line_end":532,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":590249,"byte_end":590276,"line_start":533,"line_end":533,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":590278,"byte_end":590281,"line_start":534,"line_end":534,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":590283,"byte_end":590323,"line_start":535,"line_end":535,"column_start":2,"column_end":42}},{"value":"/ bv.retain(|idx, _| idx % 2 == 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":590325,"byte_end":590362,"line_start":536,"line_end":536,"column_start":2,"column_end":39}},{"value":"/ assert_eq!(bv, bits![0,    0,    1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":590364,"byte_end":590405,"line_start":537,"line_end":537,"column_start":2,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":590407,"byte_end":590414,"line_start":538,"line_end":538,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4475},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591781,"byte_end":591785,"line_start":597,"line_end":597,"column_start":9,"column_end":13},"name":"push","qualname":"<BitVec<T, O>>::push","value":"pub fn push(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Appends a single bit to the vector.","sig":null,"attributes":[{"value":"/ Appends a single bit to the vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591359,"byte_end":591398,"line_start":577,"line_end":577,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591400,"byte_end":591403,"line_start":578,"line_end":578,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591405,"byte_end":591420,"line_start":579,"line_end":579,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591422,"byte_end":591425,"line_start":580,"line_end":580,"column_start":2,"column_end":5}},{"value":"/ [`Vec::push`](alloc::vec::Vec::push)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591427,"byte_end":591467,"line_start":581,"line_end":581,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591469,"byte_end":591472,"line_start":582,"line_end":582,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591474,"byte_end":591487,"line_start":583,"line_end":583,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591489,"byte_end":591492,"line_start":584,"line_end":584,"column_start":2,"column_end":5}},{"value":"/ This panics if the push would cause the bit-vector to exceed its maximum","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591494,"byte_end":591570,"line_start":585,"line_end":585,"column_start":2,"column_end":78}},{"value":"/ capacity.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591572,"byte_end":591585,"line_start":586,"line_end":586,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591587,"byte_end":591590,"line_start":587,"line_end":587,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591592,"byte_end":591607,"line_start":588,"line_end":588,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591609,"byte_end":591612,"line_start":589,"line_end":589,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591614,"byte_end":591625,"line_start":590,"line_end":590,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591627,"byte_end":591654,"line_start":591,"line_end":591,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591656,"byte_end":591659,"line_start":592,"line_end":592,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![0, 0];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591661,"byte_end":591692,"line_start":593,"line_end":593,"column_start":2,"column_end":33}},{"value":"/ bv.push(true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591694,"byte_end":591712,"line_start":594,"line_end":594,"column_start":2,"column_end":20}},{"value":"/ assert_eq!(bv.as_bitslice(), bits![0, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591714,"byte_end":591763,"line_start":595,"line_end":595,"column_start":2,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":591765,"byte_end":591772,"line_start":596,"line_end":596,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4477},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592624,"byte_end":592627,"line_start":630,"line_end":630,"column_start":9,"column_end":12},"name":"pop","qualname":"<BitVec<T, O>>::pop","value":"pub fn pop(&mut Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to remove the trailing bit from the bit-vector.","sig":null,"attributes":[{"value":"/ Attempts to remove the trailing bit from the bit-vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592213,"byte_end":592273,"line_start":612,"line_end":612,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592275,"byte_end":592278,"line_start":613,"line_end":613,"column_start":2,"column_end":5}},{"value":"/ This returns `None` if the bit-vector is empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592280,"byte_end":592331,"line_start":614,"line_end":614,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592333,"byte_end":592336,"line_start":615,"line_end":615,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592338,"byte_end":592353,"line_start":616,"line_end":616,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592355,"byte_end":592358,"line_start":617,"line_end":617,"column_start":2,"column_end":5}},{"value":"/ [`Vec::pop`](alloc::vec::Vec::pop)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592360,"byte_end":592398,"line_start":618,"line_end":618,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592400,"byte_end":592403,"line_start":619,"line_end":619,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592405,"byte_end":592420,"line_start":620,"line_end":620,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592422,"byte_end":592425,"line_start":621,"line_end":621,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592427,"byte_end":592438,"line_start":622,"line_end":622,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592440,"byte_end":592467,"line_start":623,"line_end":623,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592469,"byte_end":592472,"line_start":624,"line_end":624,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592474,"byte_end":592505,"line_start":625,"line_end":625,"column_start":2,"column_end":33}},{"value":"/ assert!(bv.pop().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592507,"byte_end":592538,"line_start":626,"line_end":626,"column_start":2,"column_end":33}},{"value":"/ assert!(!bv.pop().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592540,"byte_end":592572,"line_start":627,"line_end":627,"column_start":2,"column_end":34}},{"value":"/ assert!(bv.pop().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592574,"byte_end":592606,"line_start":628,"line_end":628,"column_start":2,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592608,"byte_end":592615,"line_start":629,"line_end":629,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4478},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593657,"byte_end":593663,"line_start":674,"line_end":674,"column_start":9,"column_end":15},"name":"append","qualname":"<BitVec<T, O>>::append","value":"pub fn append<T2, O2>(&mut Self, &mut BitVec<T2, O2>) where T2: BitStore,\nO2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Moves all the bits out of `other` into the back of `self`.","sig":null,"attributes":[{"value":"/ Moves all the bits out of `other` into the back of `self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592844,"byte_end":592906,"line_start":642,"line_end":642,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592908,"byte_end":592911,"line_start":643,"line_end":643,"column_start":2,"column_end":5}},{"value":"/ The `other` bit-vector is emptied after this occurs.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592913,"byte_end":592969,"line_start":644,"line_end":644,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592971,"byte_end":592974,"line_start":645,"line_end":645,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592976,"byte_end":592991,"line_start":646,"line_end":646,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592993,"byte_end":592996,"line_start":647,"line_end":647,"column_start":2,"column_end":5}},{"value":"/ [`Vec::append`](alloc::vec::Vec::append)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":592998,"byte_end":593042,"line_start":648,"line_end":648,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593044,"byte_end":593047,"line_start":649,"line_end":649,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593049,"byte_end":593071,"line_start":650,"line_end":650,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593073,"byte_end":593076,"line_start":651,"line_end":651,"column_start":2,"column_end":5}},{"value":"/ This permits `other` to have different type parameters than `self`, and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593078,"byte_end":593153,"line_start":652,"line_end":652,"column_start":2,"column_end":77}},{"value":"/ does not require that it be literally `Self`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593155,"byte_end":593204,"line_start":653,"line_end":653,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593206,"byte_end":593209,"line_start":654,"line_end":654,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593211,"byte_end":593224,"line_start":655,"line_end":655,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593226,"byte_end":593229,"line_start":656,"line_end":656,"column_start":2,"column_end":5}},{"value":"/ This panics if `self.len() + other.len()` exceeds the maximum capacity","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593231,"byte_end":593305,"line_start":657,"line_end":657,"column_start":2,"column_end":76}},{"value":"/ of a bit-vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593307,"byte_end":593327,"line_start":658,"line_end":658,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593329,"byte_end":593332,"line_start":659,"line_end":659,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593334,"byte_end":593349,"line_start":660,"line_end":660,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593351,"byte_end":593354,"line_start":661,"line_end":661,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593356,"byte_end":593367,"line_start":662,"line_end":662,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593369,"byte_end":593396,"line_start":663,"line_end":663,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593398,"byte_end":593401,"line_start":664,"line_end":664,"column_start":2,"column_end":5}},{"value":"/ let mut bv1 = bitvec![u16, Msb0; 0; 10];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593403,"byte_end":593447,"line_start":665,"line_end":665,"column_start":2,"column_end":46}},{"value":"/ let mut bv2 = bitvec![u32, Lsb0; 1; 10];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593449,"byte_end":593493,"line_start":666,"line_end":666,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593495,"byte_end":593498,"line_start":667,"line_end":667,"column_start":2,"column_end":5}},{"value":"/ bv1.append(&mut bv2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593500,"byte_end":593525,"line_start":668,"line_end":668,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593527,"byte_end":593530,"line_start":669,"line_end":669,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(bv1.count_ones(), 10);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593532,"byte_end":593569,"line_start":670,"line_end":670,"column_start":2,"column_end":39}},{"value":"/ assert_eq!(bv1.count_zeros(), 10);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593571,"byte_end":593609,"line_start":671,"line_end":671,"column_start":2,"column_end":40}},{"value":"/ assert!(bv2.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593611,"byte_end":593639,"line_start":672,"line_end":672,"column_start":2,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593641,"byte_end":593648,"line_start":673,"line_end":673,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4481},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594732,"byte_end":594737,"line_start":714,"line_end":714,"column_start":9,"column_end":14},"name":"drain","qualname":"<BitVec<T, O>>::drain","value":"pub fn drain<R>(&mut Self, R) -> Drain<, T, O> where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Iterates over a portion of the bit-vector, *removing* all yielded bits\n from it.","sig":null,"attributes":[{"value":"/ Iterates over a portion of the bit-vector, *removing* all yielded bits","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593811,"byte_end":593885,"line_start":683,"line_end":683,"column_start":2,"column_end":76}},{"value":"/ from it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593887,"byte_end":593899,"line_start":684,"line_end":684,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593901,"byte_end":593904,"line_start":685,"line_end":685,"column_start":2,"column_end":5}},{"value":"/ When the iterator drops, *all* bits in its coverage are removed from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593906,"byte_end":593978,"line_start":686,"line_end":686,"column_start":2,"column_end":74}},{"value":"/ `self`, even if the iterator did not yield them. If the iterator is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":593980,"byte_end":594051,"line_start":687,"line_end":687,"column_start":2,"column_end":73}},{"value":"/ leaked or otherwise forgotten, and its destructor never runs, then the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594053,"byte_end":594127,"line_start":688,"line_end":688,"column_start":2,"column_end":76}},{"value":"/ amount of un-yielded bits removed from the bit-vector is not specified.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594129,"byte_end":594204,"line_start":689,"line_end":689,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594206,"byte_end":594209,"line_start":690,"line_end":690,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594211,"byte_end":594226,"line_start":691,"line_end":691,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594228,"byte_end":594231,"line_start":692,"line_end":692,"column_start":2,"column_end":5}},{"value":"/ [`Vec::drain`](alloc::vec::Vec::drain)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594233,"byte_end":594275,"line_start":693,"line_end":693,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594277,"byte_end":594280,"line_start":694,"line_end":694,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594282,"byte_end":594295,"line_start":695,"line_end":695,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594297,"byte_end":594300,"line_start":696,"line_end":696,"column_start":2,"column_end":5}},{"value":"/ This panics if `range` departs `0 .. self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594302,"byte_end":594355,"line_start":697,"line_end":697,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594357,"byte_end":594360,"line_start":698,"line_end":698,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594362,"byte_end":594377,"line_start":699,"line_end":699,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594379,"byte_end":594382,"line_start":700,"line_end":700,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594384,"byte_end":594395,"line_start":701,"line_end":701,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594397,"byte_end":594424,"line_start":702,"line_end":702,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594426,"byte_end":594429,"line_start":703,"line_end":703,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594431,"byte_end":594471,"line_start":704,"line_end":704,"column_start":2,"column_end":42}},{"value":"/ let bv2 = bv.drain(1 ..= 3).collect::<BitVec>();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594473,"byte_end":594525,"line_start":705,"line_end":705,"column_start":2,"column_end":54}},{"value":"/ assert_eq!(bv, bits![0,          1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594527,"byte_end":594568,"line_start":706,"line_end":706,"column_start":2,"column_end":43}},{"value":"/ assert_eq!(bv2, bits![1, 0, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594570,"byte_end":594606,"line_start":707,"line_end":707,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594608,"byte_end":594611,"line_start":708,"line_end":708,"column_start":2,"column_end":5}},{"value":"/ // A full range clears the bit-vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594613,"byte_end":594655,"line_start":709,"line_end":709,"column_start":2,"column_end":44}},{"value":"/ bv.drain(..);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594657,"byte_end":594674,"line_start":710,"line_end":710,"column_start":2,"column_end":19}},{"value":"/ assert!(bv.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594676,"byte_end":594703,"line_start":711,"line_end":711,"column_start":2,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594705,"byte_end":594712,"line_start":712,"line_end":712,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594714,"byte_end":594723,"line_start":713,"line_end":713,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":4483},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595172,"byte_end":595177,"line_start":736,"line_end":736,"column_start":9,"column_end":14},"name":"clear","qualname":"<BitVec<T, O>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Empties the bit-vector.","sig":null,"attributes":[{"value":"/ Empties the bit-vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594839,"byte_end":594866,"line_start":719,"line_end":719,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594868,"byte_end":594871,"line_start":720,"line_end":720,"column_start":2,"column_end":5}},{"value":"/ This does not affect the allocated capacity.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594873,"byte_end":594921,"line_start":721,"line_end":721,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594923,"byte_end":594926,"line_start":722,"line_end":722,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594928,"byte_end":594943,"line_start":723,"line_end":723,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594945,"byte_end":594948,"line_start":724,"line_end":724,"column_start":2,"column_end":5}},{"value":"/ [`Vec::clear`](alloc::vec::Vec::clear)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594950,"byte_end":594992,"line_start":725,"line_end":725,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594994,"byte_end":594997,"line_start":726,"line_end":726,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":594999,"byte_end":595014,"line_start":727,"line_end":727,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595016,"byte_end":595019,"line_start":728,"line_end":728,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595021,"byte_end":595032,"line_start":729,"line_end":729,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595034,"byte_end":595061,"line_start":730,"line_end":730,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595063,"byte_end":595066,"line_start":731,"line_end":731,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595068,"byte_end":595108,"line_start":732,"line_end":732,"column_start":2,"column_end":42}},{"value":"/ bv.clear();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595110,"byte_end":595125,"line_start":733,"line_end":733,"column_start":2,"column_end":17}},{"value":"/ assert!(bv.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595127,"byte_end":595154,"line_start":734,"line_end":734,"column_start":2,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595156,"byte_end":595163,"line_start":735,"line_end":735,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4484},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595567,"byte_end":595570,"line_start":750,"line_end":750,"column_start":9,"column_end":12},"name":"len","qualname":"<BitVec<T, O>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the length of the bit-vector.","sig":null,"attributes":[{"value":"/ Gets the length of the bit-vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595216,"byte_end":595254,"line_start":740,"line_end":740,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595256,"byte_end":595259,"line_start":741,"line_end":741,"column_start":2,"column_end":5}},{"value":"/ This is equivalent to `BitSlice::len`; it is provided as an inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595261,"byte_end":595333,"line_start":742,"line_end":742,"column_start":2,"column_end":74}},{"value":"/ method here rather than relying on `Deref` forwarding so that you can","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595335,"byte_end":595408,"line_start":743,"line_end":743,"column_start":2,"column_end":75}},{"value":"/ write `BitVec::len` as a named function item.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595410,"byte_end":595459,"line_start":744,"line_end":744,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595461,"byte_end":595464,"line_start":745,"line_end":745,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595466,"byte_end":595481,"line_start":746,"line_end":746,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595483,"byte_end":595486,"line_start":747,"line_end":747,"column_start":2,"column_end":5}},{"value":"/ [`Vec::len`](alloc::vec::Vec::len)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595488,"byte_end":595526,"line_start":748,"line_end":748,"column_start":2,"column_end":40}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595528,"byte_end":595558,"line_start":749,"line_end":749,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4485},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595985,"byte_end":595993,"line_start":764,"line_end":764,"column_start":9,"column_end":17},"name":"is_empty","qualname":"<BitVec<T, O>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the bit-vector is empty.","sig":null,"attributes":[{"value":"/ Tests if the bit-vector is empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595615,"byte_end":595652,"line_start":754,"line_end":754,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595654,"byte_end":595657,"line_start":755,"line_end":755,"column_start":2,"column_end":5}},{"value":"/ This is equivalent to `BitSlice::is_empty`; it is provided as an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595659,"byte_end":595727,"line_start":756,"line_end":756,"column_start":2,"column_end":70}},{"value":"/ inherent method here rather than relying on `Deref` forwarding so that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595729,"byte_end":595803,"line_start":757,"line_end":757,"column_start":2,"column_end":76}},{"value":"/ you can write `BitVec::is_empty` as a named function item.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595805,"byte_end":595867,"line_start":758,"line_end":758,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595869,"byte_end":595872,"line_start":759,"line_end":759,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595874,"byte_end":595889,"line_start":760,"line_end":760,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595891,"byte_end":595894,"line_start":761,"line_end":761,"column_start":2,"column_end":5}},{"value":"/ [`Vec::is_empty`](alloc::vec::Vec::is_empty)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595896,"byte_end":595944,"line_start":762,"line_end":762,"column_start":2,"column_end":50}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":595946,"byte_end":595976,"line_start":763,"line_end":763,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4486},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596449,"byte_end":596458,"line_start":784,"line_end":784,"column_start":9,"column_end":18},"name":"split_off","qualname":"<BitVec<T, O>>::split_off","value":"pub fn split_off(&mut Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splits the bit-vector in half at an index, moving `self[at ..]` out into\n a new bit-vector.","sig":null,"attributes":[{"value":"/ Splits the bit-vector in half at an index, moving `self[at ..]` out into","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596042,"byte_end":596118,"line_start":768,"line_end":768,"column_start":2,"column_end":78}},{"value":"/ a new bit-vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596120,"byte_end":596141,"line_start":769,"line_end":769,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596143,"byte_end":596146,"line_start":770,"line_end":770,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596148,"byte_end":596163,"line_start":771,"line_end":771,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596165,"byte_end":596168,"line_start":772,"line_end":772,"column_start":2,"column_end":5}},{"value":"/ [`Vec::split_off`](alloc::vec::Vec::split_off)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596170,"byte_end":596220,"line_start":773,"line_end":773,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596222,"byte_end":596225,"line_start":774,"line_end":774,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596227,"byte_end":596242,"line_start":775,"line_end":775,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596244,"byte_end":596247,"line_start":776,"line_end":776,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596249,"byte_end":596260,"line_start":777,"line_end":777,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596262,"byte_end":596289,"line_start":778,"line_end":778,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596291,"byte_end":596294,"line_start":779,"line_end":779,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596296,"byte_end":596336,"line_start":780,"line_end":780,"column_start":2,"column_end":42}},{"value":"/ let bv2 = bv.split_off(2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596338,"byte_end":596368,"line_start":781,"line_end":781,"column_start":2,"column_end":32}},{"value":"/ assert_eq!((&*bv, &*bv2), (bits![0, 1], bits![0, 0, 1]));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596370,"byte_end":596431,"line_start":782,"line_end":782,"column_start":2,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596433,"byte_end":596440,"line_start":783,"line_end":783,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4487},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597414,"byte_end":597425,"line_start":820,"line_end":820,"column_start":9,"column_end":20},"name":"resize_with","qualname":"<BitVec<T, O>>::resize_with","value":"pub fn resize_with<F>(&mut Self, usize, F) where F: FnMut(usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Resizes the bit-vector to a new length, using a function to produce each\n inserted bit.","sig":null,"attributes":[{"value":"/ Resizes the bit-vector to a new length, using a function to produce each","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596744,"byte_end":596820,"line_start":796,"line_end":796,"column_start":2,"column_end":78}},{"value":"/ inserted bit.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596822,"byte_end":596839,"line_start":797,"line_end":797,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596841,"byte_end":596844,"line_start":798,"line_end":798,"column_start":2,"column_end":5}},{"value":"/ If `new_len` is less than `self.len()`, this is a truncate operation; if","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596846,"byte_end":596922,"line_start":799,"line_end":799,"column_start":2,"column_end":78}},{"value":"/ it is greater, then `self` is extended by repeatedly pushing `func()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":596924,"byte_end":596998,"line_start":800,"line_end":800,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597000,"byte_end":597003,"line_start":801,"line_end":801,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597005,"byte_end":597020,"line_start":802,"line_end":802,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597022,"byte_end":597025,"line_start":803,"line_end":803,"column_start":2,"column_end":5}},{"value":"/ [`Vec::resize_with`](alloc::vec::Vec::resize_with)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597027,"byte_end":597081,"line_start":804,"line_end":804,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597083,"byte_end":597086,"line_start":805,"line_end":805,"column_start":2,"column_end":5}},{"value":"/ ## API Differences","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597088,"byte_end":597110,"line_start":806,"line_end":806,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597112,"byte_end":597115,"line_start":807,"line_end":807,"column_start":2,"column_end":5}},{"value":"/ The generator function receives the index into which its bit will be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597117,"byte_end":597189,"line_start":808,"line_end":808,"column_start":2,"column_end":74}},{"value":"/ placed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597191,"byte_end":597202,"line_start":809,"line_end":809,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597204,"byte_end":597207,"line_start":810,"line_end":810,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597209,"byte_end":597224,"line_start":811,"line_end":811,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597226,"byte_end":597229,"line_start":812,"line_end":812,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597231,"byte_end":597242,"line_start":813,"line_end":813,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597244,"byte_end":597271,"line_start":814,"line_end":814,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597273,"byte_end":597276,"line_start":815,"line_end":815,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![1; 2];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597278,"byte_end":597309,"line_start":816,"line_end":816,"column_start":2,"column_end":33}},{"value":"/ bv.resize_with(5, |idx| idx % 2 == 1);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597311,"byte_end":597353,"line_start":817,"line_end":817,"column_start":2,"column_end":44}},{"value":"/ assert_eq!(bv, bits![1, 1, 0, 1, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597355,"byte_end":597396,"line_start":818,"line_end":818,"column_start":2,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597398,"byte_end":597405,"line_start":819,"line_end":819,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4489},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598856,"byte_end":598860,"line_start":867,"line_end":867,"column_start":9,"column_end":13},"name":"leak","qualname":"<BitVec<T, O>>::leak","value":"pub fn leak<'a>(Self) -> &'a mut BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":" Destroys the `BitVec` handle without destroying the bit-vector\n allocation. The allocation is returned as an `&mut BitSlice` that lasts\n for the remaining program lifetime.","sig":null,"attributes":[{"value":"/ Destroys the `BitVec` handle without destroying the bit-vector","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597772,"byte_end":597838,"line_start":836,"line_end":836,"column_start":2,"column_end":68}},{"value":"/ allocation. The allocation is returned as an `&mut BitSlice` that lasts","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597840,"byte_end":597915,"line_start":837,"line_end":837,"column_start":2,"column_end":77}},{"value":"/ for the remaining program lifetime.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597917,"byte_end":597956,"line_start":838,"line_end":838,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597958,"byte_end":597961,"line_start":839,"line_end":839,"column_start":2,"column_end":5}},{"value":"/ You *may* call [`BitBox::from_raw`] on this slice handle exactly once in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":597963,"byte_end":598039,"line_start":840,"line_end":840,"column_start":2,"column_end":78}},{"value":"/ order to reap the allocation before program exit. That function takes a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598041,"byte_end":598116,"line_start":841,"line_end":841,"column_start":2,"column_end":77}},{"value":"/ mutable pointer, not a mutable reference, so you must ensure that the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598118,"byte_end":598191,"line_start":842,"line_end":842,"column_start":2,"column_end":75}},{"value":"/ returned reference is never used again after restoring the allocation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598193,"byte_end":598266,"line_start":843,"line_end":843,"column_start":2,"column_end":75}},{"value":"/ handle.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598268,"byte_end":598279,"line_start":844,"line_end":844,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598281,"byte_end":598284,"line_start":845,"line_end":845,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598286,"byte_end":598301,"line_start":846,"line_end":846,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598303,"byte_end":598306,"line_start":847,"line_end":847,"column_start":2,"column_end":5}},{"value":"/ [`Vec::len`](alloc::vec::Vec::len)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598308,"byte_end":598346,"line_start":848,"line_end":848,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598348,"byte_end":598351,"line_start":849,"line_end":849,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598353,"byte_end":598368,"line_start":850,"line_end":850,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598370,"byte_end":598373,"line_start":851,"line_end":851,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598375,"byte_end":598386,"line_start":852,"line_end":852,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598388,"byte_end":598415,"line_start":853,"line_end":853,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598417,"byte_end":598420,"line_start":854,"line_end":854,"column_start":2,"column_end":5}},{"value":"/ let bv = bitvec![0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598422,"byte_end":598452,"line_start":855,"line_end":855,"column_start":2,"column_end":32}},{"value":"/ let static_bits: &'static mut BitSlice = bv.leak();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598454,"byte_end":598509,"line_start":856,"line_end":856,"column_start":2,"column_end":57}},{"value":"/ static_bits.set(0, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598511,"byte_end":598540,"line_start":857,"line_end":857,"column_start":2,"column_end":31}},{"value":"/ assert_eq!(static_bits, bits![1, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598542,"byte_end":598586,"line_start":858,"line_end":858,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598588,"byte_end":598591,"line_start":859,"line_end":859,"column_start":2,"column_end":5}},{"value":"/ let bb = unsafe { BitBox::from_raw(static_bits) };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598593,"byte_end":598647,"line_start":860,"line_end":860,"column_start":2,"column_end":56}},{"value":"/ // static_bits may no longer be used.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598649,"byte_end":598690,"line_start":861,"line_end":861,"column_start":2,"column_end":43}},{"value":"/ drop(bb); // explicitly reap memory before program exit","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598692,"byte_end":598751,"line_start":862,"line_end":862,"column_start":2,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598753,"byte_end":598760,"line_start":863,"line_end":863,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598762,"byte_end":598765,"line_start":864,"line_end":864,"column_start":2,"column_end":5}},{"value":"/ [`BitBox::leak`]: crate::boxed::BitBox::leak","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598767,"byte_end":598815,"line_start":865,"line_end":865,"column_start":2,"column_end":50}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598817,"byte_end":598847,"line_start":866,"line_end":866,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4491},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599303,"byte_end":599309,"line_start":887,"line_end":887,"column_start":9,"column_end":15},"name":"resize","qualname":"<BitVec<T, O>>::resize","value":"pub fn resize(&mut Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Resizes the bit-vector to a new length. New bits are initialized to\n `value`.","sig":null,"attributes":[{"value":"/ Resizes the bit-vector to a new length. New bits are initialized to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":598952,"byte_end":599023,"line_start":871,"line_end":871,"column_start":2,"column_end":73}},{"value":"/ `value`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599025,"byte_end":599037,"line_start":872,"line_end":872,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599039,"byte_end":599042,"line_start":873,"line_end":873,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599044,"byte_end":599059,"line_start":874,"line_end":874,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599061,"byte_end":599064,"line_start":875,"line_end":875,"column_start":2,"column_end":5}},{"value":"/ [`Vec::resize`](alloc::vec::Vec::resize)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599066,"byte_end":599110,"line_start":876,"line_end":876,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599112,"byte_end":599115,"line_start":877,"line_end":877,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599117,"byte_end":599132,"line_start":878,"line_end":878,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599134,"byte_end":599137,"line_start":879,"line_end":879,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599139,"byte_end":599150,"line_start":880,"line_end":880,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599152,"byte_end":599179,"line_start":881,"line_end":881,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599181,"byte_end":599184,"line_start":882,"line_end":882,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![0; 2];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599186,"byte_end":599217,"line_start":883,"line_end":883,"column_start":2,"column_end":33}},{"value":"/ bv.resize(5, true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599219,"byte_end":599242,"line_start":884,"line_end":884,"column_start":2,"column_end":25}},{"value":"/ assert_eq!(bv, bits![0, 0, 1, 1, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599244,"byte_end":599285,"line_start":885,"line_end":885,"column_start":2,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599287,"byte_end":599294,"line_start":886,"line_end":886,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4492},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599786,"byte_end":599803,"line_start":905,"line_end":905,"column_start":9,"column_end":26},"name":"extend_from_slice","qualname":"<BitVec<T, O>>::extend_from_slice","value":"pub fn extend_from_slice<T2, O2>(&mut Self, &BitSlice<T2, O2>) where\nT2: BitStore, O2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599578,"byte_end":599608,"line_start":901,"line_end":901,"column_start":2,"column_end":32}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599610,"byte_end":599671,"line_start":902,"line_end":902,"column_start":2,"column_end":63}},{"value":"deprecated =\n\"use `.extend_from_bitslice()` or `.extend_from_raw_slice()` \\\n\t                instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599673,"byte_end":599777,"line_start":903,"line_end":904,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4495},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600429,"byte_end":600447,"line_start":933,"line_end":933,"column_start":9,"column_end":27},"name":"extend_from_within","qualname":"<BitVec<T, O>>::extend_from_within","value":"pub fn extend_from_within<R>(&mut Self, R) where R: RangeExt<usize>","parent":null,"children":[],"decl_id":null,"docs":" Extends `self` by copying an internal range of its bit-slice as the\n region to append.","sig":null,"attributes":[{"value":"/ Extends `self` by copying an internal range of its bit-slice as the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":599932,"byte_end":600003,"line_start":913,"line_end":913,"column_start":2,"column_end":73}},{"value":"/ region to append.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600005,"byte_end":600026,"line_start":914,"line_end":914,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600028,"byte_end":600031,"line_start":915,"line_end":915,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600033,"byte_end":600048,"line_start":916,"line_end":916,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600050,"byte_end":600053,"line_start":917,"line_end":917,"column_start":2,"column_end":5}},{"value":"/ [`Vec::extend_from_within`](alloc::vec::Vec::extend_from_within)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600055,"byte_end":600123,"line_start":918,"line_end":918,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600125,"byte_end":600128,"line_start":919,"line_end":919,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600130,"byte_end":600143,"line_start":920,"line_end":920,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600145,"byte_end":600148,"line_start":921,"line_end":921,"column_start":2,"column_end":5}},{"value":"/ This panics if `src` is not within `0 .. self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600150,"byte_end":600207,"line_start":922,"line_end":922,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600209,"byte_end":600212,"line_start":923,"line_end":923,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600214,"byte_end":600229,"line_start":924,"line_end":924,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600231,"byte_end":600234,"line_start":925,"line_end":925,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600236,"byte_end":600247,"line_start":926,"line_end":926,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600249,"byte_end":600276,"line_start":927,"line_end":927,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600278,"byte_end":600281,"line_start":928,"line_end":928,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600283,"byte_end":600323,"line_start":929,"line_end":929,"column_start":2,"column_end":42}},{"value":"/ bv.extend_from_within(1 .. 4);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600325,"byte_end":600359,"line_start":930,"line_end":930,"column_start":2,"column_end":36}},{"value":"/ assert_eq!(bv, bits![0, 1, 0, 0, 1, 1, 0, 0]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600361,"byte_end":600411,"line_start":931,"line_end":931,"column_start":2,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600413,"byte_end":600420,"line_start":932,"line_end":932,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":4497},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":602124,"byte_end":602130,"line_start":988,"line_end":988,"column_start":9,"column_end":15},"name":"splice","qualname":"<BitVec<T, O>>::splice","value":"pub fn splice<R, I>(&mut Self, R, I) -> Splice<, T, O, I::IntoIter> where\nR: RangeBounds<usize>, I: IntoIterator<Item = bool>","parent":null,"children":[],"decl_id":null,"docs":" Modifies [`self.drain()`] so that the removed bit-slice is instead\n replaced with the contents of another bit-stream.","sig":null,"attributes":[{"value":"/ Modifies [`self.drain()`] so that the removed bit-slice is instead","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600721,"byte_end":600791,"line_start":944,"line_end":944,"column_start":2,"column_end":72}},{"value":"/ replaced with the contents of another bit-stream.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600793,"byte_end":600846,"line_start":945,"line_end":945,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600848,"byte_end":600851,"line_start":946,"line_end":946,"column_start":2,"column_end":5}},{"value":"/ As with `.drain()`, the specified range is always removed from the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600853,"byte_end":600923,"line_start":947,"line_end":947,"column_start":2,"column_end":72}},{"value":"/ bit-vector even if the splicer is not fully consumed, and the splicer","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":600925,"byte_end":600998,"line_start":948,"line_end":948,"column_start":2,"column_end":75}},{"value":"/ does not specify how many bits are removed if it leaks.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601000,"byte_end":601059,"line_start":949,"line_end":949,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601061,"byte_end":601064,"line_start":950,"line_end":950,"column_start":2,"column_end":5}},{"value":"/ The replacement source is only consumed when the splicer drops; however,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601066,"byte_end":601142,"line_start":951,"line_end":951,"column_start":2,"column_end":78}},{"value":"/ it may be pulled before then. The replacement source cannot assume that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601144,"byte_end":601219,"line_start":952,"line_end":952,"column_start":2,"column_end":77}},{"value":"/ there will be a delay between creation of the splicer and when it must","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601221,"byte_end":601295,"line_start":953,"line_end":953,"column_start":2,"column_end":76}},{"value":"/ begin producing bits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601297,"byte_end":601322,"line_start":954,"line_end":954,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601324,"byte_end":601327,"line_start":955,"line_end":955,"column_start":2,"column_end":5}},{"value":"/ This copies the `Vec::splice` implementation; see its documentation for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601329,"byte_end":601404,"line_start":956,"line_end":956,"column_start":2,"column_end":77}},{"value":"/ more details about how the replacement should act.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601406,"byte_end":601460,"line_start":957,"line_end":957,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601462,"byte_end":601465,"line_start":958,"line_end":958,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601467,"byte_end":601482,"line_start":959,"line_end":959,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601484,"byte_end":601487,"line_start":960,"line_end":960,"column_start":2,"column_end":5}},{"value":"/ [`Vec::splice`](alloc::vec::Vec::splice)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601489,"byte_end":601533,"line_start":961,"line_end":961,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601535,"byte_end":601538,"line_start":962,"line_end":962,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601540,"byte_end":601553,"line_start":963,"line_end":963,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601555,"byte_end":601558,"line_start":964,"line_end":964,"column_start":2,"column_end":5}},{"value":"/ This panics if `range` departs `0 .. self.len()`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601560,"byte_end":601613,"line_start":965,"line_end":965,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601615,"byte_end":601618,"line_start":966,"line_end":966,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601620,"byte_end":601635,"line_start":967,"line_end":967,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601637,"byte_end":601640,"line_start":968,"line_end":968,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601642,"byte_end":601653,"line_start":969,"line_end":969,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601655,"byte_end":601682,"line_start":970,"line_end":970,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601684,"byte_end":601687,"line_start":971,"line_end":971,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![0, 1, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601689,"byte_end":601723,"line_start":972,"line_end":972,"column_start":2,"column_end":36}},{"value":"/ //                   a  b  c","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601725,"byte_end":601757,"line_start":973,"line_end":973,"column_start":2,"column_end":34}},{"value":"/ let mut yank = bv.splice(","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601759,"byte_end":601788,"line_start":974,"line_end":974,"column_start":2,"column_end":31}},{"value":"/   .. 2,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601790,"byte_end":601801,"line_start":975,"line_end":975,"column_start":2,"column_end":13}},{"value":"/   bits![static 1, 1, 0].iter().by_vals(),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601803,"byte_end":601848,"line_start":976,"line_end":976,"column_start":2,"column_end":47}},{"value":"/ //             d  e  f","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601850,"byte_end":601876,"line_start":977,"line_end":977,"column_start":2,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601878,"byte_end":601884,"line_start":978,"line_end":978,"column_start":2,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601886,"byte_end":601889,"line_start":979,"line_end":979,"column_start":2,"column_end":5}},{"value":"/ assert!(!yank.next().unwrap()); // a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601891,"byte_end":601931,"line_start":980,"line_end":980,"column_start":2,"column_end":42}},{"value":"/ assert!(yank.next().unwrap()); // b","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601933,"byte_end":601972,"line_start":981,"line_end":981,"column_start":2,"column_end":41}},{"value":"/ drop(yank);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601974,"byte_end":601989,"line_start":982,"line_end":982,"column_start":2,"column_end":17}},{"value":"/ assert_eq!(bv, bits![1, 1, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":601991,"byte_end":602029,"line_start":983,"line_end":983,"column_start":2,"column_end":40}},{"value":"/ //                   d  e  f  c","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":602031,"byte_end":602066,"line_start":984,"line_end":984,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":602068,"byte_end":602075,"line_start":985,"line_end":985,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":602077,"byte_end":602080,"line_start":986,"line_end":986,"column_start":2,"column_end":5}},{"value":"/ [`self.drain()`]: Self::drain","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":602082,"byte_end":602115,"line_start":987,"line_end":987,"column_start":2,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4666},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":607876,"byte_end":607881,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"name":"Drain","qualname":"::vec::iter::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":4670},{"krate":0,"index":4671},{"krate":0,"index":4672}],"decl_id":null,"docs":"# Draining Iteration","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4679},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":609394,"byte_end":609405,"line_start":310,"line_end":310,"column_start":9,"column_end":20},"name":"as_bitslice","qualname":"<Drain>::as_bitslice","value":"pub fn as_bitslice(&Self) -> &'a BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":" Views the unyielded bits remaining in the drain.","sig":null,"attributes":[{"value":"/ Views the unyielded bits remaining in the drain.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":609220,"byte_end":609272,"line_start":304,"line_end":304,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":609274,"byte_end":609277,"line_start":305,"line_end":305,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":609279,"byte_end":609294,"line_start":306,"line_end":306,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":609296,"byte_end":609299,"line_start":307,"line_end":307,"column_start":2,"column_end":5}},{"value":"/ [`Drain::as_slice`](alloc::vec::Drain::as_slice)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":609301,"byte_end":609353,"line_start":308,"line_end":308,"column_start":2,"column_end":54}},{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":609355,"byte_end":609385,"line_start":309,"line_end":309,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4680},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":609659,"byte_end":609667,"line_start":317,"line_end":317,"column_start":9,"column_end":17},"name":"as_slice","qualname":"<Drain>::as_slice","value":"pub fn as_slice(&Self) -> &'a BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(tarpaulin_include))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":609509,"byte_end":609539,"line_start":314,"line_end":314,"column_start":2,"column_end":32}},{"value":"deprecated = \"use `.as_bitslice()` instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":609541,"byte_end":609587,"line_start":315,"line_end":315,"column_start":2,"column_end":48}},{"value":"allow(missing_docs, clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":609589,"byte_end":609650,"line_start":316,"line_end":316,"column_start":2,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":7813},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":614907,"byte_end":614913,"line_start":526,"line_end":526,"column_start":12,"column_end":18},"name":"Splice","qualname":"::vec::iter::Splice","value":"Splice {  }","parent":null,"children":[{"krate":0,"index":7818},{"krate":0,"index":7819}],"decl_id":null,"docs":"# Splicing Iteration","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5110},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":558715,"byte_end":558721,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"BitVec","qualname":"::vec::BitVec","value":"BitVec {  }","parent":null,"children":[{"krate":0,"index":5113},{"krate":0,"index":5114}],"decl_id":null,"docs":"# Bit-Precision Dynamic Array","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":558647,"byte_end":558657,"line_start":52,"line_end":52,"column_start":1,"column_end":11}}]},{"kind":"Const","id":{"krate":0,"index":5118},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559083,"byte_end":559088,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"EMPTY","qualname":"::vec::BitVec::<T, O>::EMPTY","value":"Self","parent":{"krate":0,"index":5115},"children":[],"decl_id":null,"docs":" An empty bit-vector with no backing allocation.\n","sig":null,"attributes":[{"value":"/ An empty bit-vector with no backing allocation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559020,"byte_end":559071,"line_start":71,"line_end":71,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":5119},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559427,"byte_end":559433,"line_start":87,"line_end":87,"column_start":9,"column_end":15},"name":"repeat","qualname":"<BitVec<T, O>>::repeat","value":"pub fn repeat(bool, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new bit-vector by repeating a bit for the desired length.","sig":null,"attributes":[{"value":"/ Creates a new bit-vector by repeating a bit for the desired length.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559153,"byte_end":559224,"line_start":77,"line_end":77,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559226,"byte_end":559229,"line_start":78,"line_end":78,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559231,"byte_end":559246,"line_start":79,"line_end":79,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559248,"byte_end":559251,"line_start":80,"line_end":80,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559253,"byte_end":559264,"line_start":81,"line_end":81,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559266,"byte_end":559293,"line_start":82,"line_end":82,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559295,"byte_end":559298,"line_start":83,"line_end":83,"column_start":2,"column_end":5}},{"value":"/ let zeros = BitVec::<u8, Msb0>::repeat(false, 50);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559300,"byte_end":559354,"line_start":84,"line_end":84,"column_start":2,"column_end":56}},{"value":"/ let ones = BitVec::<u16, Lsb0>::repeat(true, 50);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559356,"byte_end":559409,"line_start":85,"line_end":85,"column_start":2,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559411,"byte_end":559418,"line_start":86,"line_end":86,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":5121},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560395,"byte_end":560408,"line_start":119,"line_end":119,"column_start":9,"column_end":22},"name":"from_bitslice","qualname":"<BitVec<T, O>>::from_bitslice","value":"pub fn from_bitslice(&BitSlice<T, O>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents of a bit-slice into a new heap allocation.","sig":null,"attributes":[{"value":"/ Copies the contents of a bit-slice into a new heap allocation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559674,"byte_end":559740,"line_start":98,"line_end":98,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559742,"byte_end":559745,"line_start":99,"line_end":99,"column_start":2,"column_end":5}},{"value":"/ This copies the raw underlying elements into a new allocation, and sets","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559747,"byte_end":559822,"line_start":100,"line_end":100,"column_start":2,"column_end":77}},{"value":"/ the produced bit-vector to use the same memory layout as the originating","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559824,"byte_end":559900,"line_start":101,"line_end":101,"column_start":2,"column_end":78}},{"value":"/ bit-slice. This means that it may begin at any bit in the first element,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559902,"byte_end":559978,"line_start":102,"line_end":102,"column_start":2,"column_end":78}},{"value":"/ not just the zeroth bit. If you require this property, call","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":559980,"byte_end":560043,"line_start":103,"line_end":103,"column_start":2,"column_end":65}},{"value":"/ [`.force_align()`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560045,"byte_end":560068,"line_start":104,"line_end":104,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560070,"byte_end":560073,"line_start":105,"line_end":105,"column_start":2,"column_end":5}},{"value":"/ Dead bits in the copied memory elements are guaranteed to be zeroed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560075,"byte_end":560147,"line_start":106,"line_end":106,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560149,"byte_end":560152,"line_start":107,"line_end":107,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560154,"byte_end":560169,"line_start":108,"line_end":108,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560171,"byte_end":560174,"line_start":109,"line_end":109,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560176,"byte_end":560187,"line_start":110,"line_end":110,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560189,"byte_end":560216,"line_start":111,"line_end":111,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560218,"byte_end":560221,"line_start":112,"line_end":112,"column_start":2,"column_end":5}},{"value":"/ let bits = bits![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560223,"byte_end":560259,"line_start":113,"line_end":113,"column_start":2,"column_end":38}},{"value":"/ let bv = BitVec::from_bitslice(bits);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560261,"byte_end":560302,"line_start":114,"line_end":114,"column_start":2,"column_end":43}},{"value":"/ assert_eq!(bv, bits);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560304,"byte_end":560329,"line_start":115,"line_end":115,"column_start":2,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560331,"byte_end":560338,"line_start":116,"line_end":116,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560340,"byte_end":560343,"line_start":117,"line_end":117,"column_start":2,"column_end":5}},{"value":"/ [`.force_align()`]: Self::force_align","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560345,"byte_end":560386,"line_start":118,"line_end":118,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5122},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561152,"byte_end":561164,"line_start":152,"line_end":152,"column_start":9,"column_end":21},"name":"from_element","qualname":"<BitVec<T, O>>::from_element","value":"pub fn from_element(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new bit-vector from a single element.","sig":null,"attributes":[{"value":"/ Constructs a new bit-vector from a single element.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560825,"byte_end":560879,"line_start":139,"line_end":139,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560881,"byte_end":560884,"line_start":140,"line_end":140,"column_start":2,"column_end":5}},{"value":"/ This copies `elem` into a new heap allocation, and sets the bit-vector","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560886,"byte_end":560960,"line_start":141,"line_end":141,"column_start":2,"column_end":76}},{"value":"/ to cover it entirely.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560962,"byte_end":560987,"line_start":142,"line_end":142,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560989,"byte_end":560992,"line_start":143,"line_end":143,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":560994,"byte_end":561009,"line_start":144,"line_end":144,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561011,"byte_end":561014,"line_start":145,"line_end":145,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561016,"byte_end":561027,"line_start":146,"line_end":146,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561029,"byte_end":561056,"line_start":147,"line_end":147,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561058,"byte_end":561061,"line_start":148,"line_end":148,"column_start":2,"column_end":5}},{"value":"/ let bv = BitVec::<_, Msb0>::from_element(1u8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561063,"byte_end":561113,"line_start":149,"line_end":149,"column_start":2,"column_end":52}},{"value":"/ assert!(bv[7]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561115,"byte_end":561134,"line_start":150,"line_end":150,"column_start":2,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561136,"byte_end":561143,"line_start":151,"line_end":151,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":5123},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561682,"byte_end":561692,"line_start":174,"line_end":174,"column_start":9,"column_end":19},"name":"from_slice","qualname":"<BitVec<T, O>>::from_slice","value":"pub fn from_slice(&[T]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new bit-vector from a slice of memory elements.","sig":null,"attributes":[{"value":"/ Constructs a new bit-vector from a slice of memory elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561218,"byte_end":561282,"line_start":156,"line_end":156,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561284,"byte_end":561287,"line_start":157,"line_end":157,"column_start":2,"column_end":5}},{"value":"/ This copies `slice` into a new heap allocation, and sets the bit-vector","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561289,"byte_end":561364,"line_start":158,"line_end":158,"column_start":2,"column_end":77}},{"value":"/ to cover it entirely.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561366,"byte_end":561391,"line_start":159,"line_end":159,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561393,"byte_end":561396,"line_start":160,"line_end":160,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561398,"byte_end":561411,"line_start":161,"line_end":161,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561413,"byte_end":561416,"line_start":162,"line_end":162,"column_start":2,"column_end":5}},{"value":"/ This panics if `slice` exceeds bit-vector capacity.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561418,"byte_end":561473,"line_start":163,"line_end":163,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561475,"byte_end":561478,"line_start":164,"line_end":164,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561480,"byte_end":561495,"line_start":165,"line_end":165,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561497,"byte_end":561500,"line_start":166,"line_end":166,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561502,"byte_end":561513,"line_start":167,"line_end":167,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561515,"byte_end":561542,"line_start":168,"line_end":168,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561544,"byte_end":561547,"line_start":169,"line_end":169,"column_start":2,"column_end":5}},{"value":"/ let slice = &[0u8, 1, 2, 3];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561549,"byte_end":561581,"line_start":170,"line_end":170,"column_start":2,"column_end":34}},{"value":"/ let bv = BitVec::<_, Lsb0>::from_slice(slice);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561583,"byte_end":561633,"line_start":171,"line_end":171,"column_start":2,"column_end":52}},{"value":"/ assert_eq!(bv.len(), 32);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561635,"byte_end":561664,"line_start":172,"line_end":172,"column_start":2,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561666,"byte_end":561673,"line_start":173,"line_end":173,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":5124},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562242,"byte_end":562256,"line_start":193,"line_end":193,"column_start":9,"column_end":23},"name":"try_from_slice","qualname":"<BitVec<T, O>>::try_from_slice","value":"pub fn try_from_slice(&[T]) -> Result<Self, BitSpanError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Fallibly constructs a new bit-vector from a slice of memory elements.","sig":null,"attributes":[{"value":"/ Fallibly constructs a new bit-vector from a slice of memory elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561760,"byte_end":561833,"line_start":178,"line_end":178,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561835,"byte_end":561838,"line_start":179,"line_end":179,"column_start":2,"column_end":5}},{"value":"/ This fails early if `slice` exceeds bit-vector capacity. If it is not,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561840,"byte_end":561914,"line_start":180,"line_end":180,"column_start":2,"column_end":76}},{"value":"/ then `slice` is copied into a new heap allocation and fully spanned by","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561916,"byte_end":561990,"line_start":181,"line_end":181,"column_start":2,"column_end":76}},{"value":"/ the returned bit-vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":561992,"byte_end":562020,"line_start":182,"line_end":182,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562022,"byte_end":562025,"line_start":183,"line_end":183,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562027,"byte_end":562042,"line_start":184,"line_end":184,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562044,"byte_end":562047,"line_start":185,"line_end":185,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562049,"byte_end":562060,"line_start":186,"line_end":186,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562062,"byte_end":562089,"line_start":187,"line_end":187,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562091,"byte_end":562094,"line_start":188,"line_end":188,"column_start":2,"column_end":5}},{"value":"/ let slice = &[0u8, 1, 2, 3];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562096,"byte_end":562128,"line_start":189,"line_end":189,"column_start":2,"column_end":34}},{"value":"/ let bv = BitVec::<_, Lsb0>::try_from_slice(slice).unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562130,"byte_end":562193,"line_start":190,"line_end":190,"column_start":2,"column_end":65}},{"value":"/ assert_eq!(bv.len(), 32);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562195,"byte_end":562224,"line_start":191,"line_end":191,"column_start":2,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562226,"byte_end":562233,"line_start":192,"line_end":192,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":5125},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562881,"byte_end":562889,"line_start":215,"line_end":215,"column_start":9,"column_end":17},"name":"from_vec","qualname":"<BitVec<T, O>>::from_vec","value":"pub fn from_vec(Vec<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a regular vector in-place into a bit-vector.","sig":null,"attributes":[{"value":"/ Converts a regular vector in-place into a bit-vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562377,"byte_end":562434,"line_start":197,"line_end":197,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562436,"byte_end":562439,"line_start":198,"line_end":198,"column_start":2,"column_end":5}},{"value":"/ The produced bit-vector spans every bit in the original vector. No","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562441,"byte_end":562511,"line_start":199,"line_end":199,"column_start":2,"column_end":72}},{"value":"/ reällocation occurs; this is purely a transform of the handle.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562513,"byte_end":562580,"line_start":200,"line_end":200,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562582,"byte_end":562585,"line_start":201,"line_end":201,"column_start":2,"column_end":5}},{"value":"/ ## Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562587,"byte_end":562600,"line_start":202,"line_end":202,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562602,"byte_end":562605,"line_start":203,"line_end":203,"column_start":2,"column_end":5}},{"value":"/ This panics if the source vector is too long to view as a bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562607,"byte_end":562679,"line_start":204,"line_end":204,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562681,"byte_end":562684,"line_start":205,"line_end":205,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562686,"byte_end":562701,"line_start":206,"line_end":206,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562703,"byte_end":562706,"line_start":207,"line_end":207,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562708,"byte_end":562719,"line_start":208,"line_end":208,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562721,"byte_end":562748,"line_start":209,"line_end":209,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562750,"byte_end":562753,"line_start":210,"line_end":210,"column_start":2,"column_end":5}},{"value":"/ let v = vec![0u8, 1, 2, 3];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562755,"byte_end":562786,"line_start":211,"line_end":211,"column_start":2,"column_end":33}},{"value":"/ let bv = BitVec::<_, Msb0>::from_vec(v);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562788,"byte_end":562832,"line_start":212,"line_end":212,"column_start":2,"column_end":46}},{"value":"/ assert_eq!(bv.len(), 32);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562834,"byte_end":562863,"line_start":213,"line_end":213,"column_start":2,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":562865,"byte_end":562872,"line_start":214,"line_end":214,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":5126},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563585,"byte_end":563597,"line_start":236,"line_end":236,"column_start":9,"column_end":21},"name":"try_from_vec","qualname":"<BitVec<T, O>>::try_from_vec","value":"pub fn try_from_vec(Vec<T>) -> Result<Self, Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert a regular vector in-place into a bit-vector.","sig":null,"attributes":[{"value":"/ Attempts to convert a regular vector in-place into a bit-vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563010,"byte_end":563078,"line_start":220,"line_end":220,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563080,"byte_end":563083,"line_start":221,"line_end":221,"column_start":2,"column_end":5}},{"value":"/ This fails if the source vector is too long to view as a bit-slice. On","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563085,"byte_end":563159,"line_start":222,"line_end":222,"column_start":2,"column_end":76}},{"value":"/ success, the produced bit-vector spans every bit in the original vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563161,"byte_end":563237,"line_start":223,"line_end":223,"column_start":2,"column_end":78}},{"value":"/ No reällocation occurs; this is purely a transform of the handle.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563239,"byte_end":563309,"line_start":224,"line_end":224,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563311,"byte_end":563314,"line_start":225,"line_end":225,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563316,"byte_end":563331,"line_start":226,"line_end":226,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563333,"byte_end":563336,"line_start":227,"line_end":227,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563338,"byte_end":563349,"line_start":228,"line_end":228,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563351,"byte_end":563378,"line_start":229,"line_end":229,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563380,"byte_end":563383,"line_start":230,"line_end":230,"column_start":2,"column_end":5}},{"value":"/ let v = vec![0u8; 20];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563385,"byte_end":563411,"line_start":231,"line_end":231,"column_start":2,"column_end":28}},{"value":"/ assert_eq!(BitVec::<_, Msb0>::try_from_vec(v).unwrap().len(), 160);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563413,"byte_end":563484,"line_start":232,"line_end":232,"column_start":2,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563486,"byte_end":563493,"line_start":233,"line_end":233,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563495,"byte_end":563498,"line_start":234,"line_end":234,"column_start":2,"column_end":5}},{"value":"/ It is not practical to allocate a vector that will fail this conversion.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563500,"byte_end":563576,"line_start":235,"line_end":235,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":5129},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564991,"byte_end":565011,"line_start":274,"line_end":274,"column_start":9,"column_end":29},"name":"extend_from_bitslice","qualname":"<BitVec<T, O>>::extend_from_bitslice","value":"pub fn extend_from_bitslice<T2, O2>(&mut Self, &BitSlice<T2, O2>) where\nT2: BitStore, O2: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Appends the contents of a bit-slice to a bit-vector.","sig":null,"attributes":[{"value":"/ Appends the contents of a bit-slice to a bit-vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563896,"byte_end":563952,"line_start":246,"line_end":246,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563954,"byte_end":563957,"line_start":247,"line_end":247,"column_start":2,"column_end":5}},{"value":"/ This can extend from a bit-slice of any type parameters; it is not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":563959,"byte_end":564029,"line_start":248,"line_end":248,"column_start":2,"column_end":72}},{"value":"/ restricted to using the same parameters as `self`. However, when the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564031,"byte_end":564103,"line_start":249,"line_end":249,"column_start":2,"column_end":74}},{"value":"/ type parameters *do* match, it is possible for this to use a batch-copy","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564105,"byte_end":564180,"line_start":250,"line_end":250,"column_start":2,"column_end":77}},{"value":"/ optimization to go faster than the individual-bit crawl that is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564182,"byte_end":564249,"line_start":251,"line_end":251,"column_start":2,"column_end":69}},{"value":"/ necessary when they differ.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564251,"byte_end":564282,"line_start":252,"line_end":252,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564284,"byte_end":564287,"line_start":253,"line_end":253,"column_start":2,"column_end":5}},{"value":"/ Until Rust provides extensive support for specialization in trait","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564289,"byte_end":564358,"line_start":254,"line_end":254,"column_start":2,"column_end":71}},{"value":"/ implementations, you should use this method whenever you are extending","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564360,"byte_end":564434,"line_start":255,"line_end":255,"column_start":2,"column_end":76}},{"value":"/ from a `BitSlice` proper, and only use the general [`.extend()`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564436,"byte_end":564504,"line_start":256,"line_end":256,"column_start":2,"column_end":70}},{"value":"/ implementation if you are required to use a generic `bool` source.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564506,"byte_end":564576,"line_start":257,"line_end":257,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564578,"byte_end":564581,"line_start":258,"line_end":258,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564583,"byte_end":564598,"line_start":259,"line_end":259,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564600,"byte_end":564603,"line_start":260,"line_end":260,"column_start":2,"column_end":5}},{"value":"/ [`Vec::extend_from_slice`](alloc::vec::Vec::extend_from_slice)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564605,"byte_end":564671,"line_start":261,"line_end":261,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564673,"byte_end":564676,"line_start":262,"line_end":262,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564678,"byte_end":564693,"line_start":263,"line_end":263,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564695,"byte_end":564698,"line_start":264,"line_end":264,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564700,"byte_end":564711,"line_start":265,"line_end":265,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564713,"byte_end":564740,"line_start":266,"line_end":266,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564742,"byte_end":564745,"line_start":267,"line_end":267,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564747,"byte_end":564778,"line_start":268,"line_end":268,"column_start":2,"column_end":33}},{"value":"/ bv.extend_from_bitslice(bits![0, 1, 0, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564780,"byte_end":564830,"line_start":269,"line_end":269,"column_start":2,"column_end":52}},{"value":"/ assert_eq!(bv, bits![0, 1, 0, 1, 0, 0, 1]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564832,"byte_end":564879,"line_start":270,"line_end":270,"column_start":2,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564881,"byte_end":564888,"line_start":271,"line_end":271,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564890,"byte_end":564893,"line_start":272,"line_end":272,"column_start":2,"column_end":5}},{"value":"/ [`.extend()`]: https://docs.rs/bitvec/latest/bitvec/vec/struct.Vec.html#impl-Extend","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":564895,"byte_end":564982,"line_start":273,"line_end":273,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":5132},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":565516,"byte_end":565537,"line_start":293,"line_end":293,"column_start":9,"column_end":30},"name":"extend_from_raw_slice","qualname":"<BitVec<T, O>>::extend_from_raw_slice","value":"pub fn extend_from_raw_slice(&mut Self, &[T])","parent":null,"children":[],"decl_id":null,"docs":" Appends a slice of `T` elements to a bit-vector.","sig":null,"attributes":[{"value":"/ Appends a slice of `T` elements to a bit-vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":565260,"byte_end":565312,"line_start":285,"line_end":285,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":565314,"byte_end":565317,"line_start":286,"line_end":286,"column_start":2,"column_end":5}},{"value":"/ The slice is viewed as a `BitSlice<T, O>`, then appended directly to the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":565319,"byte_end":565395,"line_start":287,"line_end":287,"column_start":2,"column_end":78}},{"value":"/ bit-vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":565397,"byte_end":565412,"line_start":288,"line_end":288,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":565414,"byte_end":565417,"line_start":289,"line_end":289,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":565419,"byte_end":565434,"line_start":290,"line_end":290,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":565436,"byte_end":565439,"line_start":291,"line_end":291,"column_start":2,"column_end":5}},{"value":"/ [`Vec::extend_from_slice`](alloc::vec::Vec::extend_from_slice)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":565441,"byte_end":565507,"line_start":292,"line_end":292,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5136},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":565760,"byte_end":565771,"line_start":305,"line_end":305,"column_start":9,"column_end":20},"name":"as_bitslice","qualname":"<BitVec<T, O>>::as_bitslice","value":"pub fn as_bitslice(&Self) -> &BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":" Explicitly views the bit-vector as a bit-slice.\n","sig":null,"attributes":[{"value":"/ Explicitly views the bit-vector as a bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":565700,"byte_end":565751,"line_start":304,"line_end":304,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":5137},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":565919,"byte_end":565934,"line_start":310,"line_end":310,"column_start":9,"column_end":24},"name":"as_mut_bitslice","qualname":"<BitVec<T, O>>::as_mut_bitslice","value":"pub fn as_mut_bitslice(&mut Self) -> &mut BitSlice<T, O>","parent":null,"children":[],"decl_id":null,"docs":" Explicitly views the bit-vector as a mutable bit-slice.\n","sig":null,"attributes":[{"value":"/ Explicitly views the bit-vector as a mutable bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":565851,"byte_end":565910,"line_start":309,"line_end":309,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5138},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566101,"byte_end":566113,"line_start":315,"line_end":315,"column_start":9,"column_end":21},"name":"as_raw_slice","qualname":"<BitVec<T, O>>::as_raw_slice","value":"pub fn as_raw_slice(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Views the bit-vector as a slice of its underlying memory elements.\n","sig":null,"attributes":[{"value":"/ Views the bit-vector as a slice of its underlying memory elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566022,"byte_end":566092,"line_start":314,"line_end":314,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5139},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566359,"byte_end":566375,"line_start":323,"line_end":323,"column_start":9,"column_end":25},"name":"as_raw_mut_slice","qualname":"<BitVec<T, O>>::as_raw_mut_slice","value":"pub fn as_raw_mut_slice(&mut Self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Views the bit-vector as a mutable slice of its underlying memory\n elements.\n","sig":null,"attributes":[{"value":"/ Views the bit-vector as a mutable slice of its underlying memory","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566267,"byte_end":566335,"line_start":321,"line_end":321,"column_start":2,"column_end":70}},{"value":"/ elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566337,"byte_end":566350,"line_start":322,"line_end":322,"column_start":2,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":5140},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566882,"byte_end":566891,"line_start":340,"line_end":340,"column_start":9,"column_end":18},"name":"as_bitptr","qualname":"<BitVec<T, O>>::as_bitptr","value":"pub fn as_bitptr(&Self) -> BitPtr<Const, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unsafe shared bit-pointer to the start of the buffer.","sig":null,"attributes":[{"value":"/ Creates an unsafe shared bit-pointer to the start of the buffer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566539,"byte_end":566607,"line_start":329,"line_end":329,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566609,"byte_end":566612,"line_start":330,"line_end":330,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566614,"byte_end":566629,"line_start":331,"line_end":331,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566631,"byte_end":566634,"line_start":332,"line_end":332,"column_start":2,"column_end":5}},{"value":"/ [`Vec::as_ptr`](alloc::vec::Vec::as_ptr)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566636,"byte_end":566680,"line_start":333,"line_end":333,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566682,"byte_end":566685,"line_start":334,"line_end":334,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566687,"byte_end":566700,"line_start":335,"line_end":335,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566702,"byte_end":566705,"line_start":336,"line_end":336,"column_start":2,"column_end":5}},{"value":"/ You must initialize the contents of the underlying buffer before","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566707,"byte_end":566775,"line_start":337,"line_end":337,"column_start":2,"column_end":70}},{"value":"/ accessing memory through this pointer. See the `BitPtr` documentation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566777,"byte_end":566850,"line_start":338,"line_end":338,"column_start":2,"column_end":75}},{"value":"/ for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566852,"byte_end":566873,"line_start":339,"line_end":339,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":5141},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567320,"byte_end":567333,"line_start":355,"line_end":355,"column_start":9,"column_end":22},"name":"as_mut_bitptr","qualname":"<BitVec<T, O>>::as_mut_bitptr","value":"pub fn as_mut_bitptr(&mut Self) -> BitPtr<Mut, T, O>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unsafe writable bit-pointer to the start of the buffer.","sig":null,"attributes":[{"value":"/ Creates an unsafe writable bit-pointer to the start of the buffer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":566967,"byte_end":567037,"line_start":344,"line_end":344,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567039,"byte_end":567042,"line_start":345,"line_end":345,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567044,"byte_end":567059,"line_start":346,"line_end":346,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567061,"byte_end":567064,"line_start":347,"line_end":347,"column_start":2,"column_end":5}},{"value":"/ [`Vec::as_mut_ptr`](alloc::vec::Vec::as_mut_ptr)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567066,"byte_end":567118,"line_start":348,"line_end":348,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567120,"byte_end":567123,"line_start":349,"line_end":349,"column_start":2,"column_end":5}},{"value":"/ ## Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567125,"byte_end":567138,"line_start":350,"line_end":350,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567140,"byte_end":567143,"line_start":351,"line_end":351,"column_start":2,"column_end":5}},{"value":"/ You must initialize the contents of the underlying buffer before","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567145,"byte_end":567213,"line_start":352,"line_end":352,"column_start":2,"column_end":70}},{"value":"/ accessing memory through this pointer. See the `BitPtr` documentation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567215,"byte_end":567288,"line_start":353,"line_end":353,"column_start":2,"column_end":75}},{"value":"/ for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567290,"byte_end":567311,"line_start":354,"line_end":354,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":5142},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567782,"byte_end":567801,"line_start":375,"line_end":375,"column_start":9,"column_end":28},"name":"into_boxed_bitslice","qualname":"<BitVec<T, O>>::into_boxed_bitslice","value":"pub fn into_boxed_bitslice(Self) -> BitBox<T, O>","parent":null,"children":[],"decl_id":null,"docs":" Converts a bit-vector into a boxed bit-slice.","sig":null,"attributes":[{"value":"/ Converts a bit-vector into a boxed bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567400,"byte_end":567449,"line_start":359,"line_end":359,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567451,"byte_end":567454,"line_start":360,"line_end":360,"column_start":2,"column_end":5}},{"value":"/ This may cause a reällocation to drop any excess capacity.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567456,"byte_end":567519,"line_start":361,"line_end":361,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567521,"byte_end":567524,"line_start":362,"line_end":362,"column_start":2,"column_end":5}},{"value":"/ ## Original","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567526,"byte_end":567541,"line_start":363,"line_end":363,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567543,"byte_end":567546,"line_start":364,"line_end":364,"column_start":2,"column_end":5}},{"value":"/ [`Vec::into_boxed_slice`](alloc::vec::Vec::into_boxed_slice)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567548,"byte_end":567612,"line_start":365,"line_end":365,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567614,"byte_end":567617,"line_start":366,"line_end":366,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567619,"byte_end":567634,"line_start":367,"line_end":367,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567636,"byte_end":567639,"line_start":368,"line_end":368,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567641,"byte_end":567652,"line_start":369,"line_end":369,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567654,"byte_end":567681,"line_start":370,"line_end":370,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567683,"byte_end":567686,"line_start":371,"line_end":371,"column_start":2,"column_end":5}},{"value":"/ let bv = bitvec![0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567688,"byte_end":567724,"line_start":372,"line_end":372,"column_start":2,"column_end":38}},{"value":"/ let bb = bv.into_boxed_bitslice();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567726,"byte_end":567764,"line_start":373,"line_end":373,"column_start":2,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":567766,"byte_end":567773,"line_start":374,"line_end":374,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":5143},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568707,"byte_end":568715,"line_start":405,"line_end":405,"column_start":9,"column_end":17},"name":"into_vec","qualname":"<BitVec<T, O>>::into_vec","value":"pub fn into_vec(Self) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts a bit-vector into a `Vec` of its underlying storage.","sig":null,"attributes":[{"value":"/ Converts a bit-vector into a `Vec` of its underlying storage.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568073,"byte_end":568138,"line_start":385,"line_end":385,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568140,"byte_end":568143,"line_start":386,"line_end":386,"column_start":2,"column_end":5}},{"value":"/ The produced vector contains all elements that contained live bits. Dead","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568145,"byte_end":568221,"line_start":387,"line_end":387,"column_start":2,"column_end":78}},{"value":"/ bits have an unspecified value; you should call [`.set_uninitialized()`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568223,"byte_end":568299,"line_start":388,"line_end":388,"column_start":2,"column_end":78}},{"value":"/ before converting into a vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568301,"byte_end":568337,"line_start":389,"line_end":389,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568339,"byte_end":568342,"line_start":390,"line_end":390,"column_start":2,"column_end":5}},{"value":"/ This does not affect the allocated memory; it is purely a conversion of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568344,"byte_end":568419,"line_start":391,"line_end":391,"column_start":2,"column_end":77}},{"value":"/ the handle.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568421,"byte_end":568436,"line_start":392,"line_end":392,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568438,"byte_end":568441,"line_start":393,"line_end":393,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568443,"byte_end":568458,"line_start":394,"line_end":394,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568460,"byte_end":568463,"line_start":395,"line_end":395,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568465,"byte_end":568476,"line_start":396,"line_end":396,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568478,"byte_end":568505,"line_start":397,"line_end":397,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568507,"byte_end":568510,"line_start":398,"line_end":398,"column_start":2,"column_end":5}},{"value":"/ let bv = bitvec![u8, Msb0; 0, 1, 0, 0, 1];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568512,"byte_end":568558,"line_start":399,"line_end":399,"column_start":2,"column_end":48}},{"value":"/ let v = bv.into_vec();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568560,"byte_end":568586,"line_start":400,"line_end":400,"column_start":2,"column_end":28}},{"value":"/ assert_eq!(v[0] & 0xF8, 0b01001_000);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568588,"byte_end":568629,"line_start":401,"line_end":401,"column_start":2,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568631,"byte_end":568638,"line_start":402,"line_end":402,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568640,"byte_end":568643,"line_start":403,"line_end":403,"column_start":2,"column_end":5}},{"value":"/ [`.set_uninitialized()`]: Self::set_uninitialized","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568645,"byte_end":568698,"line_start":404,"line_end":404,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5147},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570169,"byte_end":570181,"line_start":456,"line_end":456,"column_start":9,"column_end":21},"name":"set_elements","qualname":"<BitVec<T, O>>::set_elements","value":"pub fn set_elements(&mut Self, T::Mem)","parent":null,"children":[],"decl_id":null,"docs":" Overwrites each element (visible in [`.as_raw_mut_slice()`]) with a new\n bit-pattern.","sig":null,"attributes":[{"value":"/ Overwrites each element (visible in [`.as_raw_mut_slice()`]) with a new","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569010,"byte_end":569085,"line_start":424,"line_end":424,"column_start":2,"column_end":77}},{"value":"/ bit-pattern.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569087,"byte_end":569103,"line_start":425,"line_end":425,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569105,"byte_end":569108,"line_start":426,"line_end":426,"column_start":2,"column_end":5}},{"value":"/ This unconditionally writes `element` into each element in the backing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569110,"byte_end":569184,"line_start":427,"line_end":427,"column_start":2,"column_end":76}},{"value":"/ slice, without altering the bit-vector’s length or capacity.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569186,"byte_end":569252,"line_start":428,"line_end":428,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569254,"byte_end":569257,"line_start":429,"line_end":429,"column_start":2,"column_end":5}},{"value":"/ This guarantees that dead bits visible in [`.as_raw_slice()`] but not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569259,"byte_end":569332,"line_start":430,"line_end":430,"column_start":2,"column_end":75}},{"value":"/ [`.as_bitslice()`] are initialized according to the bit-pattern of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569334,"byte_end":569404,"line_start":431,"line_end":431,"column_start":2,"column_end":72}},{"value":"/ `element.` The elements not visible in the raw slice, but present in the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569406,"byte_end":569482,"line_start":432,"line_end":432,"column_start":2,"column_end":78}},{"value":"/ allocation, do *not* specify a value. You may not rely on them being","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569484,"byte_end":569556,"line_start":433,"line_end":433,"column_start":2,"column_end":74}},{"value":"/ zeroed *or* being set to the `element` bit-pattern.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569558,"byte_end":569613,"line_start":434,"line_end":434,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569615,"byte_end":569618,"line_start":435,"line_end":435,"column_start":2,"column_end":5}},{"value":"/ ## Parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569620,"byte_end":569637,"line_start":436,"line_end":436,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569639,"byte_end":569642,"line_start":437,"line_end":437,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569644,"byte_end":569661,"line_start":438,"line_end":438,"column_start":2,"column_end":19}},{"value":"/ - `element`: The bit-pattern with which each live element in the backing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569663,"byte_end":569739,"line_start":439,"line_end":439,"column_start":2,"column_end":78}},{"value":"/   store is initialized.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569741,"byte_end":569768,"line_start":440,"line_end":440,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569770,"byte_end":569773,"line_start":441,"line_end":441,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569775,"byte_end":569790,"line_start":442,"line_end":442,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569792,"byte_end":569795,"line_start":443,"line_end":443,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569797,"byte_end":569808,"line_start":444,"line_end":444,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569810,"byte_end":569837,"line_start":445,"line_end":445,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569839,"byte_end":569842,"line_start":446,"line_end":446,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![u8, Msb0; 0; 20];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569844,"byte_end":569886,"line_start":447,"line_end":447,"column_start":2,"column_end":44}},{"value":"/ assert_eq!(bv.as_raw_slice(), [0; 3]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569888,"byte_end":569930,"line_start":448,"line_end":448,"column_start":2,"column_end":44}},{"value":"/ bv.set_elements(0xA5);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569932,"byte_end":569958,"line_start":449,"line_end":449,"column_start":2,"column_end":28}},{"value":"/ assert_eq!(bv.as_raw_slice(), [0xA5; 3]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":569960,"byte_end":570005,"line_start":450,"line_end":450,"column_start":2,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570007,"byte_end":570014,"line_start":451,"line_end":451,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570016,"byte_end":570019,"line_start":452,"line_end":452,"column_start":2,"column_end":5}},{"value":"/ [`.as_bitslice()`]: Self::as_bitslice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570021,"byte_end":570062,"line_start":453,"line_end":453,"column_start":2,"column_end":43}},{"value":"/ [`.as_raw_mut_slice()`]: Self::as_raw_mut_slice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570064,"byte_end":570115,"line_start":454,"line_end":454,"column_start":2,"column_end":53}},{"value":"/ [`.as_raw_slice()`]: Self::as_raw_slice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570117,"byte_end":570160,"line_start":455,"line_end":455,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5149},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571397,"byte_end":571414,"line_start":493,"line_end":493,"column_start":9,"column_end":26},"name":"set_uninitialized","qualname":"<BitVec<T, O>>::set_uninitialized","value":"pub fn set_uninitialized(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the uninitialized bits of a bit-vector to a known value.","sig":null,"attributes":[{"value":"/ Sets the uninitialized bits of a bit-vector to a known value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570304,"byte_end":570369,"line_start":462,"line_end":462,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570371,"byte_end":570374,"line_start":463,"line_end":463,"column_start":2,"column_end":5}},{"value":"/ This method modifies all bits that are observable in [`.as_raw_slice()`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570376,"byte_end":570452,"line_start":464,"line_end":464,"column_start":2,"column_end":78}},{"value":"/ but *not* observable in [`.as_bitslice()`] to a known value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570454,"byte_end":570518,"line_start":465,"line_end":465,"column_start":2,"column_end":66}},{"value":"/ Memory beyond the raw-slice view, but still within the allocation, is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570520,"byte_end":570593,"line_start":466,"line_end":466,"column_start":2,"column_end":75}},{"value":"/ considered fully dead and will never be seen.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570595,"byte_end":570644,"line_start":467,"line_end":467,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570646,"byte_end":570649,"line_start":468,"line_end":468,"column_start":2,"column_end":5}},{"value":"/ This can be used to zero the unused memory so that when viewed as a raw","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570651,"byte_end":570726,"line_start":469,"line_end":469,"column_start":2,"column_end":77}},{"value":"/ slice, unused bits have a consistent and predictable value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570728,"byte_end":570791,"line_start":470,"line_end":470,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570793,"byte_end":570796,"line_start":471,"line_end":471,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570798,"byte_end":570813,"line_start":472,"line_end":472,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570815,"byte_end":570818,"line_start":473,"line_end":473,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570820,"byte_end":570831,"line_start":474,"line_end":474,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570833,"byte_end":570860,"line_start":475,"line_end":475,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570862,"byte_end":570865,"line_start":476,"line_end":476,"column_start":2,"column_end":5}},{"value":"/ let mut bv = 0b1101_1100u8.view_bits::<Lsb0>().to_bitvec();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570867,"byte_end":570930,"line_start":477,"line_end":477,"column_start":2,"column_end":65}},{"value":"/ assert_eq!(bv.as_raw_slice()[0], 0b1101_1100u8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570932,"byte_end":570984,"line_start":478,"line_end":478,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570986,"byte_end":570989,"line_start":479,"line_end":479,"column_start":2,"column_end":5}},{"value":"/ bv.truncate(4);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":570991,"byte_end":571010,"line_start":480,"line_end":480,"column_start":2,"column_end":21}},{"value":"/ assert_eq!(bv.count_ones(), 2);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571012,"byte_end":571047,"line_start":481,"line_end":481,"column_start":2,"column_end":37}},{"value":"/ assert_eq!(bv.as_raw_slice()[0], 0b1101_1100u8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571049,"byte_end":571101,"line_start":482,"line_end":482,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571103,"byte_end":571106,"line_start":483,"line_end":483,"column_start":2,"column_end":5}},{"value":"/ bv.set_uninitialized(false);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571108,"byte_end":571140,"line_start":484,"line_end":484,"column_start":2,"column_end":34}},{"value":"/ assert_eq!(bv.as_raw_slice()[0], 0b0000_1100u8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571142,"byte_end":571194,"line_start":485,"line_end":485,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571196,"byte_end":571199,"line_start":486,"line_end":486,"column_start":2,"column_end":5}},{"value":"/ bv.set_uninitialized(true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571201,"byte_end":571232,"line_start":487,"line_end":487,"column_start":2,"column_end":33}},{"value":"/ assert_eq!(bv.as_raw_slice()[0], 0b1111_1100u8);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571234,"byte_end":571286,"line_start":488,"line_end":488,"column_start":2,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571288,"byte_end":571295,"line_start":489,"line_end":489,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571297,"byte_end":571300,"line_start":490,"line_end":490,"column_start":2,"column_end":5}},{"value":"/ [`.as_bitslice()`]: Self::as_bitslice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571302,"byte_end":571343,"line_start":491,"line_end":491,"column_start":2,"column_end":43}},{"value":"/ [`.as_raw_slice()`]: Self::as_raw_slice","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571345,"byte_end":571388,"line_start":492,"line_end":492,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5150},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572626,"byte_end":572637,"line_start":529,"line_end":529,"column_start":9,"column_end":20},"name":"force_align","qualname":"<BitVec<T, O>>::force_align","value":"pub fn force_align(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Ensures that the live region of the bit-vector’s contents begin at the\n front edge of the buffer.","sig":null,"attributes":[{"value":"/ Ensures that the live region of the bit-vector’s contents begin at the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571701,"byte_end":571777,"line_start":503,"line_end":503,"column_start":2,"column_end":76}},{"value":"/ front edge of the buffer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571779,"byte_end":571808,"line_start":504,"line_end":504,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571810,"byte_end":571813,"line_start":505,"line_end":505,"column_start":2,"column_end":5}},{"value":"/ `BitVec` has performance optimizations where it moves its view of its","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571815,"byte_end":571888,"line_start":506,"line_end":506,"column_start":2,"column_end":75}},{"value":"/ buffer contents in order to avoid needless moves of its data within the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571890,"byte_end":571965,"line_start":507,"line_end":507,"column_start":2,"column_end":77}},{"value":"/ buffer. This can lead to unexpected contents of the raw memory values,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":571967,"byte_end":572041,"line_start":508,"line_end":508,"column_start":2,"column_end":76}},{"value":"/ so this method ensures that the semantic contents of the bit-vector","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572043,"byte_end":572114,"line_start":509,"line_end":509,"column_start":2,"column_end":73}},{"value":"/ match its in-memory storage.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572116,"byte_end":572148,"line_start":510,"line_end":510,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572150,"byte_end":572153,"line_start":511,"line_end":511,"column_start":2,"column_end":5}},{"value":"/ ## Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572155,"byte_end":572170,"line_start":512,"line_end":512,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572172,"byte_end":572175,"line_start":513,"line_end":513,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572177,"byte_end":572188,"line_start":514,"line_end":514,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572190,"byte_end":572217,"line_start":515,"line_end":515,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572219,"byte_end":572222,"line_start":516,"line_end":516,"column_start":2,"column_end":5}},{"value":"/ let data = 0b00_1111_00u8;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572224,"byte_end":572254,"line_start":517,"line_end":517,"column_start":2,"column_end":32}},{"value":"/ let bits = data.view_bits::<Msb0>();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572256,"byte_end":572296,"line_start":518,"line_end":518,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572298,"byte_end":572301,"line_start":519,"line_end":519,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bits[2 .. 6].to_bitvec();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572303,"byte_end":572345,"line_start":520,"line_end":520,"column_start":2,"column_end":44}},{"value":"/ assert_eq!(bv, bits![1; 4]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572347,"byte_end":572379,"line_start":521,"line_end":521,"column_start":2,"column_end":34}},{"value":"/ assert_eq!(bv.as_raw_slice()[0], data);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572381,"byte_end":572424,"line_start":522,"line_end":522,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572426,"byte_end":572429,"line_start":523,"line_end":523,"column_start":2,"column_end":5}},{"value":"/ bv.force_align();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572431,"byte_end":572452,"line_start":524,"line_end":524,"column_start":2,"column_end":23}},{"value":"/ assert_eq!(bv, bits![1; 4]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572454,"byte_end":572486,"line_start":525,"line_end":525,"column_start":2,"column_end":34}},{"value":"/ // BitVec does not specify the value of dead bits in its buffer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572488,"byte_end":572556,"line_start":526,"line_end":526,"column_start":2,"column_end":70}},{"value":"/ assert_eq!(bv.as_raw_slice()[0] & 0xF0, 0xF0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572558,"byte_end":572608,"line_start":527,"line_end":527,"column_start":2,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":572610,"byte_end":572617,"line_start":528,"line_end":528,"column_start":2,"column_end":9}}]},{"kind":"Mod","id":{"krate":0,"index":5161},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"view","qualname":"::view","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","parent":null,"children":[{"krate":0,"index":5162},{"krate":0,"index":5165},{"krate":0,"index":5166},{"krate":0,"index":5169},{"krate":0,"index":5172},{"krate":0,"index":5175},{"krate":0,"index":5178},{"krate":0,"index":5181},{"krate":0,"index":5191},{"krate":0,"index":5202},{"krate":0,"index":5213},{"krate":0,"index":5226},{"krate":0,"index":5232},{"krate":0,"index":5237},{"krate":0,"index":5245},{"krate":0,"index":5251},{"krate":0,"index":5257},{"krate":0,"index":5264}],"decl_id":null,"docs":"# Bit View Adapters","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5181},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":630761,"byte_end":630768,"line_start":14,"line_end":14,"column_start":11,"column_end":18},"name":"BitView","qualname":"::view::BitView","value":"BitView","parent":null,"children":[{"krate":0,"index":5182},{"krate":0,"index":5183},{"krate":0,"index":5185},{"krate":0,"index":5187},{"krate":0,"index":5189}],"decl_id":null,"docs":"# Bit View","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5182},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":630811,"byte_end":630816,"line_start":16,"line_end":16,"column_start":7,"column_end":12},"name":"Store","qualname":"::view::BitView::Store","value":"type Store: BitStore;","parent":{"krate":0,"index":5181},"children":[],"decl_id":null,"docs":" The underlying element type.\n","sig":null,"attributes":[{"value":"/ The underlying element type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":630772,"byte_end":630804,"line_start":15,"line_end":15,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5183},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":630887,"byte_end":630896,"line_start":19,"line_end":19,"column_start":5,"column_end":14},"name":"view_bits","qualname":"::view::BitView::view_bits","value":"pub fn view_bits<O>(&Self) -> &BitSlice<Self::Store, O> where O: BitOrder","parent":{"krate":0,"index":5181},"children":[],"decl_id":null,"docs":" Views a memory region as an immutable bit-slice.\n","sig":null,"attributes":[{"value":"/ Views a memory region as an immutable bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":630830,"byte_end":630882,"line_start":18,"line_end":18,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5185},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":631107,"byte_end":631120,"line_start":25,"line_end":25,"column_start":5,"column_end":18},"name":"try_view_bits","qualname":"::view::BitView::try_view_bits","value":"pub fn try_view_bits<O>(&Self)\n-> Result<&BitSlice<Self::Store, O>, BitSpanError<Self::Store>> where\nO: BitOrder","parent":{"krate":0,"index":5181},"children":[],"decl_id":null,"docs":" Attempts to view a memory region as an immutable bit-slice.","sig":null,"attributes":[{"value":"/ Attempts to view a memory region as an immutable bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":630958,"byte_end":631021,"line_start":22,"line_end":22,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":631023,"byte_end":631026,"line_start":23,"line_end":23,"column_start":2,"column_end":5}},{"value":"/ This may return an error if `self` is too long to view as a bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":631028,"byte_end":631102,"line_start":24,"line_end":24,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5187},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":631277,"byte_end":631290,"line_start":31,"line_end":31,"column_start":5,"column_end":18},"name":"view_bits_mut","qualname":"::view::BitView::view_bits_mut","value":"pub fn view_bits_mut<O>(&mut Self) -> &mut BitSlice<Self::Store, O> where\nO: BitOrder","parent":{"krate":0,"index":5181},"children":[],"decl_id":null,"docs":" Views a memory region as a mutable bit-slice.\n","sig":null,"attributes":[{"value":"/ Views a memory region as a mutable bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":631223,"byte_end":631272,"line_start":30,"line_end":30,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":5189},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":631506,"byte_end":631523,"line_start":37,"line_end":37,"column_start":5,"column_end":22},"name":"try_view_bits_mut","qualname":"::view::BitView::try_view_bits_mut","value":"pub fn try_view_bits_mut<O>(&mut Self)\n-> Result<&mut BitSlice<Self::Store, O>, BitSpanError<Self::Store>> where\nO: BitOrder","parent":{"krate":0,"index":5181},"children":[],"decl_id":null,"docs":" Attempts to view a memory region as a mutable bit-slice.","sig":null,"attributes":[{"value":"/ Attempts to view a memory region as a mutable bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":631360,"byte_end":631420,"line_start":34,"line_end":34,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":631422,"byte_end":631425,"line_start":35,"line_end":35,"column_start":2,"column_end":5}},{"value":"/ This may return an error if `self` is too long to view as a bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":631427,"byte_end":631501,"line_start":36,"line_end":36,"column_start":2,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":5226},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":633629,"byte_end":633641,"line_start":133,"line_end":133,"column_start":11,"column_end":23},"name":"BitViewSized","qualname":"::view::BitViewSized","value":"BitViewSized: BitView + Sized","parent":null,"children":[{"krate":0,"index":5227},{"krate":0,"index":5228},{"krate":0,"index":5230},{"krate":0,"index":5231}],"decl_id":null,"docs":" Helper trait for scalars and arrays, but not slices.\n","sig":null,"attributes":[{"value":"/ Helper trait for scalars and arrays, but not slices.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":633562,"byte_end":633618,"line_start":132,"line_end":132,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":5227},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":633692,"byte_end":633696,"line_start":135,"line_end":135,"column_start":8,"column_end":12},"name":"ZERO","qualname":"::view::BitViewSized::ZERO","value":"Self","parent":{"krate":0,"index":5226},"children":[],"decl_id":null,"docs":" The zero constant.\n","sig":null,"attributes":[{"value":"/ The zero constant.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":633662,"byte_end":633684,"line_start":134,"line_end":134,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5228},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":633744,"byte_end":633757,"line_start":138,"line_end":138,"column_start":5,"column_end":18},"name":"into_bitarray","qualname":"::view::BitViewSized::into_bitarray","value":"pub fn into_bitarray<O>(Self) -> BitArray<Self, O> where O: BitOrder","parent":{"krate":0,"index":5226},"children":[],"decl_id":null,"docs":" Wraps `self` in a `BitArray`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` in a `BitArray`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":633706,"byte_end":633739,"line_start":137,"line_end":137,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5230},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":633887,"byte_end":633899,"line_start":144,"line_end":144,"column_start":5,"column_end":17},"name":"as_raw_slice","qualname":"::view::BitViewSized::as_raw_slice","value":"pub fn as_raw_slice(&Self) -> &[Self::Store]","parent":{"krate":0,"index":5226},"children":[],"decl_id":null,"docs":" Views the type as a slice of its elements.\n","sig":null,"attributes":[{"value":"/ Views the type as a slice of its elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":633836,"byte_end":633882,"line_start":143,"line_end":143,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5231},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":633987,"byte_end":634003,"line_start":147,"line_end":147,"column_start":5,"column_end":21},"name":"as_raw_mut_slice","qualname":"::view::BitViewSized::as_raw_mut_slice","value":"pub fn as_raw_mut_slice(&mut Self) -> &mut [Self::Store]","parent":{"krate":0,"index":5226},"children":[],"decl_id":null,"docs":" Views the type as a mutable slice of its elements.\n","sig":null,"attributes":[{"value":"/ Views the type as a mutable slice of its elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":633928,"byte_end":633982,"line_start":146,"line_end":146,"column_start":2,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":5245},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":634588,"byte_end":634594,"line_start":179,"line_end":179,"column_start":11,"column_end":17},"name":"AsBits","qualname":"::view::AsBits","value":"AsBits<T>","parent":null,"children":[{"krate":0,"index":5247},{"krate":0,"index":5249}],"decl_id":null,"docs":"# Immutable Bit View","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5247},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":634696,"byte_end":634703,"line_start":183,"line_end":183,"column_start":5,"column_end":12},"name":"as_bits","qualname":"::view::AsBits::as_bits","value":"pub fn as_bits<O>(&Self) -> &BitSlice<T, O> where O: BitOrder","parent":{"krate":0,"index":5245},"children":[],"decl_id":null,"docs":" Views `self` as an immutable bit-slice region with the `O` ordering.\n","sig":null,"attributes":[{"value":"/ Views `self` as an immutable bit-slice region with the `O` ordering.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":634619,"byte_end":634691,"line_start":182,"line_end":182,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":5249},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":634929,"byte_end":634940,"line_start":190,"line_end":190,"column_start":5,"column_end":16},"name":"try_as_bits","qualname":"::view::AsBits::try_as_bits","value":"pub fn try_as_bits<O>(&Self) -> Result<&BitSlice<T, O>, BitSpanError<T>> where\nO: BitOrder","parent":{"krate":0,"index":5245},"children":[],"decl_id":null,"docs":" Attempts to view `self` as an immutable bit-slice region with the `O`\n ordering.","sig":null,"attributes":[{"value":"/ Attempts to view `self` as an immutable bit-slice region with the `O`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":634755,"byte_end":634828,"line_start":186,"line_end":186,"column_start":2,"column_end":75}},{"value":"/ ordering.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":634830,"byte_end":634843,"line_start":187,"line_end":187,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":634845,"byte_end":634848,"line_start":188,"line_end":188,"column_start":2,"column_end":5}},{"value":"/ This may return an error if `self` is too long to view as a bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":634850,"byte_end":634924,"line_start":189,"line_end":189,"column_start":2,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":5251},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":635078,"byte_end":635087,"line_start":195,"line_end":195,"column_start":11,"column_end":20},"name":"AsMutBits","qualname":"::view::AsMutBits","value":"AsMutBits<T>","parent":null,"children":[{"krate":0,"index":5253},{"krate":0,"index":5255}],"decl_id":null,"docs":"# Mutable Bit View","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5253},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":635186,"byte_end":635197,"line_start":199,"line_end":199,"column_start":5,"column_end":16},"name":"as_mut_bits","qualname":"::view::AsMutBits::as_mut_bits","value":"pub fn as_mut_bits<O>(&mut Self) -> &mut BitSlice<T, O> where O: BitOrder","parent":{"krate":0,"index":5251},"children":[],"decl_id":null,"docs":" Views `self` as a mutable bit-slice region with the `O` ordering.\n","sig":null,"attributes":[{"value":"/ Views `self` as a mutable bit-slice region with the `O` ordering.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":635112,"byte_end":635181,"line_start":198,"line_end":198,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":5255},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":635428,"byte_end":635443,"line_start":206,"line_end":206,"column_start":5,"column_end":20},"name":"try_as_mut_bits","qualname":"::view::AsMutBits::try_as_mut_bits","value":"pub fn try_as_mut_bits<O>(&mut Self)\n-> Result<&mut BitSlice<T, O>, BitSpanError<T>> where O: BitOrder","parent":{"krate":0,"index":5251},"children":[],"decl_id":null,"docs":" Attempts to view `self` as a mutable bit-slice region with the `O`\n ordering.","sig":null,"attributes":[{"value":"/ Attempts to view `self` as a mutable bit-slice region with the `O`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":635257,"byte_end":635327,"line_start":202,"line_end":202,"column_start":2,"column_end":72}},{"value":"/ ordering.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":635329,"byte_end":635342,"line_start":203,"line_end":203,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":635344,"byte_end":635347,"line_start":204,"line_end":204,"column_start":2,"column_end":5}},{"value":"/ This may return an error if `self` is too long to view as a bit-slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":635349,"byte_end":635423,"line_start":205,"line_end":205,"column_start":2,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":5271},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":761,"byte_end":768,"line_start":43,"line_end":43,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":5272},{"krate":0,"index":5273},{"krate":0,"index":5276},{"krate":0,"index":5279},{"krate":0,"index":5282},{"krate":0,"index":5285},{"krate":0,"index":5286},{"krate":0,"index":5289},{"krate":0,"index":5290},{"krate":0,"index":5292},{"krate":0,"index":5293},{"krate":0,"index":5295},{"krate":0,"index":5296},{"krate":0,"index":5298},{"krate":0,"index":5299},{"krate":0,"index":5302},{"krate":0,"index":5305},{"krate":0,"index":5308},{"krate":0,"index":5311},{"krate":0,"index":5314},{"krate":0,"index":5315},{"krate":0,"index":5318},{"krate":0,"index":5321},{"krate":0,"index":5324},{"krate":0,"index":5327},{"krate":0,"index":5330},{"krate":0,"index":5331},{"krate":0,"index":5334},{"krate":0,"index":5337},{"krate":0,"index":5340}],"decl_id":null,"docs":"# Symbol Export","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56370,"byte_end":56371,"line_start":163,"line_end":163,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":61688,"byte_end":61696,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":63612,"byte_end":63620,"line_start":26,"line_end":26,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65061,"byte_end":65069,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":66944,"byte_end":66952,"line_start":155,"line_end":155,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":67156,"byte_end":67164,"line_start":167,"line_end":167,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":5407},{"krate":0,"index":5408},{"krate":0,"index":5409},{"krate":0,"index":217},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":67479,"byte_end":67487,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":67784,"byte_end":67792,"line_start":199,"line_end":199,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":67919,"byte_end":67927,"line_start":209,"line_end":209,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":68352,"byte_end":68360,"line_start":26,"line_end":26,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":68577,"byte_end":68585,"line_start":37,"line_end":37,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":68759,"byte_end":68767,"line_start":47,"line_end":47,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":68994,"byte_end":69002,"line_start":61,"line_end":61,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":69247,"byte_end":69255,"line_start":73,"line_end":73,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":69470,"byte_end":69478,"line_start":84,"line_end":84,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":69650,"byte_end":69658,"line_start":94,"line_end":94,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":69882,"byte_end":69890,"line_start":108,"line_end":108,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":70134,"byte_end":70142,"line_start":120,"line_end":120,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":70359,"byte_end":70367,"line_start":131,"line_end":131,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":70541,"byte_end":70549,"line_start":141,"line_end":141,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":70776,"byte_end":70784,"line_start":155,"line_end":155,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":70976,"byte_end":70984,"line_start":166,"line_end":166,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":71157,"byte_end":71165,"line_start":178,"line_end":178,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":71322,"byte_end":71330,"line_start":188,"line_end":188,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":71593,"byte_end":71601,"line_start":201,"line_end":201,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":71809,"byte_end":71817,"line_start":212,"line_end":212,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":76015,"byte_end":76023,"line_start":36,"line_end":36,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":76222,"byte_end":76230,"line_start":47,"line_end":47,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":76387,"byte_end":76395,"line_start":57,"line_end":57,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":76655,"byte_end":76663,"line_start":73,"line_end":73,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":76763,"byte_end":76771,"line_start":81,"line_end":81,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":76999,"byte_end":77007,"line_start":92,"line_end":92,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":77236,"byte_end":77244,"line_start":105,"line_end":105,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":77494,"byte_end":77502,"line_start":118,"line_end":118,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":77750,"byte_end":77758,"line_start":130,"line_end":130,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":78044,"byte_end":78052,"line_start":143,"line_end":143,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":78247,"byte_end":78255,"line_start":154,"line_end":154,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":78441,"byte_end":78449,"line_start":165,"line_end":165,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":78595,"byte_end":78603,"line_start":175,"line_end":175,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":79600,"byte_end":79608,"line_start":223,"line_end":223,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":79719,"byte_end":79727,"line_start":233,"line_end":233,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":80080,"byte_end":80088,"line_start":255,"line_end":255,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":80250,"byte_end":80258,"line_start":266,"line_end":266,"column_start":21,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":80336,"byte_end":80344,"line_start":273,"line_end":273,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":80586,"byte_end":80606,"line_start":285,"line_end":285,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":80846,"byte_end":80866,"line_start":296,"line_end":296,"column_start":16,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":81215,"byte_end":81235,"line_start":309,"line_end":309,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":81711,"byte_end":81731,"line_start":327,"line_end":327,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":82192,"byte_end":82202,"line_start":343,"line_end":343,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":59825,"byte_end":59833,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94164,"byte_end":94170,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":98196,"byte_end":98202,"line_start":24,"line_end":24,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":98757,"byte_end":98765,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":100404,"byte_end":100412,"line_start":117,"line_end":117,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":100573,"byte_end":100581,"line_start":128,"line_end":128,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":100862,"byte_end":100870,"line_start":143,"line_end":143,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":101070,"byte_end":101078,"line_start":155,"line_end":155,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":5470},{"krate":0,"index":5471},{"krate":0,"index":5472},{"krate":0,"index":713},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":101473,"byte_end":101481,"line_start":177,"line_end":177,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":101858,"byte_end":101866,"line_start":195,"line_end":195,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":101988,"byte_end":101996,"line_start":205,"line_end":205,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":102200,"byte_end":102208,"line_start":214,"line_end":214,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":102371,"byte_end":102379,"line_start":222,"line_end":222,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":102826,"byte_end":102834,"line_start":28,"line_end":28,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":103036,"byte_end":103044,"line_start":39,"line_end":39,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":103205,"byte_end":103211,"line_start":49,"line_end":49,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":103427,"byte_end":103433,"line_start":63,"line_end":63,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":103665,"byte_end":103673,"line_start":75,"line_end":75,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":103873,"byte_end":103881,"line_start":86,"line_end":86,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":104040,"byte_end":104046,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":104259,"byte_end":104265,"line_start":110,"line_end":110,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":104496,"byte_end":104504,"line_start":122,"line_end":122,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":104706,"byte_end":104714,"line_start":133,"line_end":133,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":104875,"byte_end":104881,"line_start":143,"line_end":143,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":105097,"byte_end":105103,"line_start":157,"line_end":157,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":105284,"byte_end":105290,"line_start":168,"line_end":168,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":105452,"byte_end":105458,"line_start":180,"line_end":180,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":105600,"byte_end":105606,"line_start":190,"line_end":190,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":105793,"byte_end":105799,"line_start":201,"line_end":201,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":106075,"byte_end":106081,"line_start":215,"line_end":215,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":106278,"byte_end":106284,"line_start":226,"line_end":226,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":110824,"byte_end":110830,"line_start":40,"line_end":40,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":111011,"byte_end":111017,"line_start":51,"line_end":51,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":111194,"byte_end":111200,"line_start":62,"line_end":62,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":111372,"byte_end":111378,"line_start":73,"line_end":73,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":111474,"byte_end":111480,"line_start":81,"line_end":81,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":111705,"byte_end":111713,"line_start":92,"line_end":92,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":112451,"byte_end":112457,"line_start":131,"line_end":131,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":112698,"byte_end":112706,"line_start":143,"line_end":143,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":112970,"byte_end":112976,"line_start":156,"line_end":156,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":113835,"byte_end":113841,"line_start":194,"line_end":194,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":114018,"byte_end":114024,"line_start":205,"line_end":205,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":114185,"byte_end":114191,"line_start":215,"line_end":215,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":114353,"byte_end":114359,"line_start":225,"line_end":225,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":114537,"byte_end":114543,"line_start":235,"line_end":235,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":114788,"byte_end":114794,"line_start":248,"line_end":248,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":114967,"byte_end":114973,"line_start":258,"line_end":258,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":115120,"byte_end":115123,"line_start":268,"line_end":268,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":115265,"byte_end":115271,"line_start":278,"line_end":278,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":115465,"byte_end":115471,"line_start":290,"line_end":290,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":115614,"byte_end":115620,"line_start":300,"line_end":300,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":115988,"byte_end":115994,"line_start":323,"line_end":323,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":116246,"byte_end":116252,"line_start":336,"line_end":336,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":116414,"byte_end":116420,"line_start":347,"line_end":347,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":116493,"byte_end":116499,"line_start":354,"line_end":354,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":116566,"byte_end":116572,"line_start":361,"line_end":361,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83361,"byte_end":83367,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1097},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":119476,"byte_end":119485,"line_start":114,"line_end":114,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1243},{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":120415,"byte_end":120424,"line_start":151,"line_end":151,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":120859,"byte_end":120868,"line_start":170,"line_end":170,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":121637,"byte_end":121646,"line_start":203,"line_end":203,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":121761,"byte_end":121770,"line_start":213,"line_end":213,"column_start":21,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":123582,"byte_end":123588,"line_start":260,"line_end":260,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":125664,"byte_end":125670,"line_start":335,"line_end":335,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":129275,"byte_end":129281,"line_start":483,"line_end":483,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":129635,"byte_end":129641,"line_start":501,"line_end":501,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":130330,"byte_end":130336,"line_start":533,"line_end":533,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":130455,"byte_end":130461,"line_start":543,"line_end":543,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1315},{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":131077,"byte_end":131083,"line_start":572,"line_end":572,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":131679,"byte_end":131685,"line_start":599,"line_end":599,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":131960,"byte_end":131966,"line_start":614,"line_end":614,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":132043,"byte_end":132049,"line_start":621,"line_end":621,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":133593,"byte_end":133607,"line_start":682,"line_end":682,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":135694,"byte_end":135708,"line_start":766,"line_end":766,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":137475,"byte_end":137489,"line_start":829,"line_end":829,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":137984,"byte_end":137998,"line_start":846,"line_end":846,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":138158,"byte_end":138172,"line_start":857,"line_end":857,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":138688,"byte_end":138702,"line_start":881,"line_end":881,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1391}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":138965,"byte_end":138979,"line_start":896,"line_end":896,"column_start":21,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field/io.rs","byte_start":159864,"byte_end":159870,"line_start":68,"line_end":68,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field/io.rs","byte_start":160257,"byte_end":160263,"line_start":84,"line_end":84,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1514},{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":145883,"byte_end":145891,"line_start":98,"line_end":98,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1531},{"krate":0,"index":1534},{"krate":0,"index":1537},{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":149152,"byte_end":149160,"line_start":230,"line_end":230,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1546},{"krate":0,"index":1549},{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":152670,"byte_end":152678,"line_start":368,"line_end":368,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":153887,"byte_end":153893,"line_start":421,"line_end":421,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1569},{"krate":0,"index":1571},{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":154494,"byte_end":154500,"line_start":454,"line_end":454,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":168589,"byte_end":168595,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1671},{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1678},{"krate":0,"index":1680},{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":175985,"byte_end":175991,"line_start":290,"line_end":290,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":176149,"byte_end":176155,"line_start":298,"line_end":298,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":176322,"byte_end":176328,"line_start":306,"line_end":306,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":176815,"byte_end":176826,"line_start":328,"line_end":328,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":177599,"byte_end":177610,"line_start":365,"line_end":365,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":177817,"byte_end":177828,"line_start":374,"line_end":374,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":178112,"byte_end":178123,"line_start":389,"line_end":389,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":178511,"byte_end":178517,"line_start":404,"line_end":404,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":182588,"byte_end":182594,"line_start":550,"line_end":550,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":182756,"byte_end":182762,"line_start":558,"line_end":558,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1719}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":182929,"byte_end":182935,"line_start":566,"line_end":566,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":183454,"byte_end":183460,"line_start":588,"line_end":588,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":185868,"byte_end":185874,"line_start":683,"line_end":683,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186032,"byte_end":186038,"line_start":691,"line_end":691,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1740}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186205,"byte_end":186211,"line_start":699,"line_end":699,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1743}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186615,"byte_end":186621,"line_start":718,"line_end":718,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":188387,"byte_end":188393,"line_start":784,"line_end":784,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":188558,"byte_end":188564,"line_start":792,"line_end":792,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1757}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":188731,"byte_end":188737,"line_start":800,"line_end":800,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189107,"byte_end":189114,"line_start":818,"line_end":818,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":191173,"byte_end":191180,"line_start":904,"line_end":904,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1772}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":191346,"byte_end":191353,"line_start":912,"line_end":912,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":191521,"byte_end":191528,"line_start":920,"line_end":920,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":191666,"byte_end":191673,"line_start":928,"line_end":928,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":191834,"byte_end":191841,"line_start":937,"line_end":937,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":191999,"byte_end":192006,"line_start":949,"line_end":949,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1789},{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":192158,"byte_end":192165,"line_start":961,"line_end":961,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1793},{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":209215,"byte_end":209219,"line_start":122,"line_end":122,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1861},{"krate":0,"index":1863},{"krate":0,"index":1865}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":210456,"byte_end":210460,"line_start":166,"line_end":166,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":228469,"byte_end":228482,"line_start":130,"line_end":130,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1997},{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":228819,"byte_end":228832,"line_start":139,"line_end":139,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":229055,"byte_end":229068,"line_start":149,"line_end":149,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":229366,"byte_end":229379,"line_start":162,"line_end":162,"column_start":25,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":229411,"byte_end":229424,"line_start":164,"line_end":164,"column_start":25,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":229486,"byte_end":229499,"line_start":167,"line_end":167,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":230594,"byte_end":230600,"line_start":63,"line_end":63,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":231947,"byte_end":231953,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2104},{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":233138,"byte_end":233144,"line_start":167,"line_end":167,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2109}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":233271,"byte_end":233277,"line_start":177,"line_end":177,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":233399,"byte_end":233405,"line_start":186,"line_end":186,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2118}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":233653,"byte_end":233659,"line_start":199,"line_end":199,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2126}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":233950,"byte_end":233956,"line_start":215,"line_end":215,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":234385,"byte_end":234391,"line_start":240,"line_end":240,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":234858,"byte_end":234864,"line_start":266,"line_end":266,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2154}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":235182,"byte_end":235188,"line_start":284,"line_end":284,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2159}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":235422,"byte_end":235428,"line_start":296,"line_end":296,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":235658,"byte_end":235664,"line_start":308,"line_end":308,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2169}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":235836,"byte_end":235842,"line_start":320,"line_end":320,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2173}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":235978,"byte_end":235984,"line_start":330,"line_end":330,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2178}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":236270,"byte_end":236276,"line_start":343,"line_end":343,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2183}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":236490,"byte_end":236496,"line_start":355,"line_end":355,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2188}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":236709,"byte_end":236715,"line_start":367,"line_end":367,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2193}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":236972,"byte_end":236978,"line_start":380,"line_end":380,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":237084,"byte_end":237090,"line_start":388,"line_end":388,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":237359,"byte_end":237365,"line_start":401,"line_end":401,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2207},{"krate":0,"index":2208}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":237532,"byte_end":237538,"line_start":414,"line_end":414,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2212}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":237684,"byte_end":237690,"line_start":424,"line_end":424,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2217}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":238004,"byte_end":238010,"line_start":441,"line_end":441,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2222},{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":239416,"byte_end":239427,"line_start":62,"line_end":62,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":243285,"byte_end":243296,"line_start":198,"line_end":198,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":243431,"byte_end":243442,"line_start":209,"line_end":209,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":243570,"byte_end":243581,"line_start":218,"line_end":218,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2319}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":243959,"byte_end":243970,"line_start":235,"line_end":235,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2324}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":244154,"byte_end":244165,"line_start":247,"line_end":247,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2329}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":244385,"byte_end":244390,"line_start":259,"line_end":259,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2334}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":244590,"byte_end":244601,"line_start":271,"line_end":271,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2339}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":244952,"byte_end":244963,"line_start":286,"line_end":286,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2344}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":245161,"byte_end":245172,"line_start":299,"line_end":299,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":5879},{"krate":0,"index":5880},{"krate":0,"index":5881},{"krate":0,"index":2351},{"krate":0,"index":2352}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":245642,"byte_end":245653,"line_start":326,"line_end":326,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2357},{"krate":0,"index":2358}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":246098,"byte_end":246109,"line_start":350,"line_end":350,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2363}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":246292,"byte_end":246303,"line_start":361,"line_end":361,"column_start":33,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":246446,"byte_end":246457,"line_start":370,"line_end":370,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2372},{"krate":0,"index":2373}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":247882,"byte_end":247888,"line_start":79,"line_end":79,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":254376,"byte_end":254382,"line_start":309,"line_end":309,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":255305,"byte_end":255311,"line_start":339,"line_end":339,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":256847,"byte_end":256853,"line_start":383,"line_end":383,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2550},{"krate":0,"index":2553}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274858,"byte_end":274864,"line_start":907,"line_end":907,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2557},{"krate":0,"index":2559},{"krate":0,"index":2562},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":282306,"byte_end":282312,"line_start":1148,"line_end":1148,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2577}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":282819,"byte_end":282825,"line_start":1166,"line_end":1166,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2582}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":282990,"byte_end":282996,"line_start":1180,"line_end":1180,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":283083,"byte_end":283089,"line_start":1188,"line_end":1188,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2591}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":283369,"byte_end":283375,"line_start":1201,"line_end":1201,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2598}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":283802,"byte_end":283808,"line_start":1220,"line_end":1220,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2605}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":284333,"byte_end":284339,"line_start":1244,"line_end":1244,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2609}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":284506,"byte_end":284512,"line_start":1255,"line_end":1255,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":284655,"byte_end":284661,"line_start":1265,"line_end":1265,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2617},{"krate":0,"index":2618}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":284937,"byte_end":284943,"line_start":1279,"line_end":1279,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2623},{"krate":0,"index":2624}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":285206,"byte_end":285212,"line_start":1293,"line_end":1293,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2630}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":285496,"byte_end":285502,"line_start":1311,"line_end":1311,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2635}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":285788,"byte_end":285794,"line_start":1326,"line_end":1326,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2640}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":285993,"byte_end":285999,"line_start":1339,"line_end":1339,"column_start":24,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":286522,"byte_end":286533,"line_start":1360,"line_end":1360,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2648}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":286691,"byte_end":286702,"line_start":1369,"line_end":1369,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2651}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":286839,"byte_end":286850,"line_start":1378,"line_end":1378,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2654}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":287115,"byte_end":287126,"line_start":1391,"line_end":1391,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":288349,"byte_end":288356,"line_start":77,"line_end":77,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":2782},{"krate":0,"index":2783}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":290429,"byte_end":290436,"line_start":125,"line_end":125,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2790}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":293710,"byte_end":293717,"line_start":234,"line_end":234,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2795},{"krate":0,"index":2796},{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":297605,"byte_end":297612,"line_start":381,"line_end":381,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2806},{"krate":0,"index":2807}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":298668,"byte_end":298675,"line_start":425,"line_end":425,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2826}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":303116,"byte_end":303123,"line_start":569,"line_end":569,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2831}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":303606,"byte_end":303613,"line_start":591,"line_end":591,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2835},{"krate":0,"index":2836}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":304310,"byte_end":304317,"line_start":617,"line_end":617,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2842},{"krate":0,"index":2843}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":306304,"byte_end":306311,"line_start":686,"line_end":686,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2850}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":306472,"byte_end":306479,"line_start":697,"line_end":697,"column_start":59,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":306957,"byte_end":306964,"line_start":715,"line_end":715,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2861}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":307135,"byte_end":307142,"line_start":725,"line_end":725,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2865}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":307335,"byte_end":307342,"line_start":736,"line_end":736,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2870}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":307472,"byte_end":307479,"line_start":747,"line_end":747,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2875}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":307659,"byte_end":307666,"line_start":758,"line_end":758,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2880}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":307987,"byte_end":307994,"line_start":774,"line_end":774,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":308590,"byte_end":308602,"line_start":798,"line_end":798,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2887}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":308860,"byte_end":308872,"line_start":810,"line_end":810,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2890}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":309017,"byte_end":309029,"line_start":819,"line_end":819,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":309566,"byte_end":309578,"line_start":838,"line_end":838,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2896}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":310157,"byte_end":310169,"line_start":862,"line_end":862,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":310219,"byte_end":310231,"line_start":864,"line_end":864,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":310311,"byte_end":310323,"line_start":867,"line_end":867,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365553,"byte_end":365561,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":3233},{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3237},{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3244},{"krate":0,"index":3247},{"krate":0,"index":3250},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3255},{"krate":0,"index":3256},{"krate":0,"index":3257},{"krate":0,"index":3258},{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3261},{"krate":0,"index":3262},{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3274},{"krate":0,"index":3276},{"krate":0,"index":3278},{"krate":0,"index":3280},{"krate":0,"index":3282},{"krate":0,"index":3284},{"krate":0,"index":3286},{"krate":0,"index":3288},{"krate":0,"index":3290},{"krate":0,"index":3292},{"krate":0,"index":3296},{"krate":0,"index":3300},{"krate":0,"index":3304},{"krate":0,"index":3307},{"krate":0,"index":3310},{"krate":0,"index":3311},{"krate":0,"index":3312},{"krate":0,"index":3313},{"krate":0,"index":3315},{"krate":0,"index":3318},{"krate":0,"index":3319},{"krate":0,"index":3321},{"krate":0,"index":3324},{"krate":0,"index":3326}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434938,"byte_end":434946,"line_start":2286,"line_end":2286,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3331},{"krate":0,"index":3332}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":444203,"byte_end":444212,"line_start":2649,"line_end":2649,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3380},{"krate":0,"index":3381},{"krate":0,"index":3382},{"krate":0,"index":3383},{"krate":0,"index":3384},{"krate":0,"index":3385},{"krate":0,"index":3386},{"krate":0,"index":3387}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":446408,"byte_end":446412,"line_start":84,"line_end":84,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3477},{"krate":0,"index":3480}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":450858,"byte_end":450862,"line_start":236,"line_end":236,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3485}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":451158,"byte_end":451162,"line_start":251,"line_end":251,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3489}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":451408,"byte_end":451412,"line_start":263,"line_end":263,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3493}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452173,"byte_end":452180,"line_start":290,"line_end":290,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3508}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454873,"byte_end":454880,"line_start":379,"line_end":379,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3512}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":455136,"byte_end":455143,"line_start":391,"line_end":391,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3516}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":464928,"byte_end":464939,"line_start":809,"line_end":809,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3523},{"krate":0,"index":3524}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":467309,"byte_end":467323,"line_start":910,"line_end":910,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3529},{"krate":0,"index":3530},{"krate":0,"index":3531}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":475259,"byte_end":475271,"line_start":1218,"line_end":1218,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3536},{"krate":0,"index":3537}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":477745,"byte_end":477760,"line_start":1319,"line_end":1319,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":3544}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":494505,"byte_end":494513,"line_start":2053,"line_end":2053,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3592}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":494756,"byte_end":494764,"line_start":2067,"line_end":2067,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3596}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":494921,"byte_end":494929,"line_start":2080,"line_end":2080,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3600},{"krate":0,"index":6910},{"krate":0,"index":6911},{"krate":0,"index":6912},{"krate":0,"index":3601}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":495795,"byte_end":495803,"line_start":2119,"line_end":2119,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3606}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":496391,"byte_end":496399,"line_start":2149,"line_end":2149,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3611}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":496533,"byte_end":496541,"line_start":2159,"line_end":2159,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":496993,"byte_end":497002,"line_start":2180,"line_end":2180,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3619}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":497245,"byte_end":497254,"line_start":2194,"line_end":2194,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3623}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":497411,"byte_end":497420,"line_start":2207,"line_end":2207,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3627},{"krate":0,"index":6962},{"krate":0,"index":6963},{"krate":0,"index":6964},{"krate":0,"index":3628}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":498095,"byte_end":498104,"line_start":2243,"line_end":2243,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3633}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":498695,"byte_end":498704,"line_start":2273,"line_end":2273,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3638}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":498850,"byte_end":498859,"line_start":2284,"line_end":2284,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":504377,"byte_end":504398,"line_start":2470,"line_end":2470,"column_start":16,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3647},{"krate":0,"index":3648}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":504941,"byte_end":504963,"line_start":2490,"line_end":2490,"column_start":16,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3653},{"krate":0,"index":3654}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/ops.rs","byte_start":505933,"byte_end":505941,"line_start":35,"line_end":35,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3731}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/ops.rs","byte_start":506761,"byte_end":506769,"line_start":66,"line_end":66,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3737}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/ops.rs","byte_start":507507,"byte_end":507515,"line_start":94,"line_end":94,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3743}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/ops.rs","byte_start":508233,"byte_end":508241,"line_start":122,"line_end":122,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3747},{"krate":0,"index":3748}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/specialization/lsb0.rs","byte_start":512691,"byte_end":512699,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3821},{"krate":0,"index":3822},{"krate":0,"index":3823},{"krate":0,"index":3827},{"krate":0,"index":3829},{"krate":0,"index":3830},{"krate":0,"index":3831},{"krate":0,"index":3832},{"krate":0,"index":3833}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/specialization/msb0.rs","byte_start":520947,"byte_end":520955,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3885},{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3891}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/specialization.rs","byte_start":511029,"byte_end":511037,"line_start":31,"line_end":31,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3900},{"krate":0,"index":3901},{"krate":0,"index":3904}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":537737,"byte_end":537745,"line_start":44,"line_end":44,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3991}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":537948,"byte_end":537956,"line_start":55,"line_end":55,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3995}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":538142,"byte_end":538150,"line_start":66,"line_end":66,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":538291,"byte_end":538299,"line_start":74,"line_end":74,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4002}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":538893,"byte_end":538901,"line_start":94,"line_end":94,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4008}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":539945,"byte_end":539953,"line_start":151,"line_end":151,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4027}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":540160,"byte_end":540168,"line_start":163,"line_end":163,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4033}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":540827,"byte_end":540835,"line_start":184,"line_end":184,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4039}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":541858,"byte_end":541866,"line_start":231,"line_end":231,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4057}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":542113,"byte_end":542121,"line_start":243,"line_end":243,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4063}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":544442,"byte_end":544450,"line_start":344,"line_end":344,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4101}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":544673,"byte_end":544681,"line_start":356,"line_end":356,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4105}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":544904,"byte_end":544912,"line_start":368,"line_end":368,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4110}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":548264,"byte_end":548272,"line_start":509,"line_end":509,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4122}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":548515,"byte_end":548523,"line_start":521,"line_end":521,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":548658,"byte_end":548666,"line_start":529,"line_end":529,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":548818,"byte_end":548826,"line_start":537,"line_end":537,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":549032,"byte_end":549040,"line_start":547,"line_end":547,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4137},{"krate":0,"index":4138}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":318691,"byte_end":318699,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4151},{"krate":0,"index":4153},{"krate":0,"index":4155},{"krate":0,"index":4156},{"krate":0,"index":4157},{"krate":0,"index":4158},{"krate":0,"index":4159},{"krate":0,"index":4160},{"krate":0,"index":4161},{"krate":0,"index":4162}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328330,"byte_end":328338,"line_start":423,"line_end":423,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4166},{"krate":0,"index":4167},{"krate":0,"index":4168},{"krate":0,"index":4169},{"krate":0,"index":4170},{"krate":0,"index":4173},{"krate":0,"index":4174}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":335996,"byte_end":336004,"line_start":704,"line_end":704,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":4184},{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4190}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":342971,"byte_end":342979,"line_start":960,"line_end":960,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4195},{"krate":0,"index":4196},{"krate":0,"index":4197},{"krate":0,"index":4198}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345048,"byte_end":345056,"line_start":1014,"line_end":1014,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4202},{"krate":0,"index":4206},{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4215},{"krate":0,"index":4216},{"krate":0,"index":4218},{"krate":0,"index":4220},{"krate":0,"index":4222},{"krate":0,"index":4224},{"krate":0,"index":4225},{"krate":0,"index":4226},{"krate":0,"index":4227},{"krate":0,"index":4228}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355008,"byte_end":355016,"line_start":1386,"line_end":1386,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4232},{"krate":0,"index":4233}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":357027,"byte_end":357035,"line_start":1475,"line_end":1475,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4237},{"krate":0,"index":4238},{"krate":0,"index":4239},{"krate":0,"index":4241},{"krate":0,"index":4242},{"krate":0,"index":4243}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":359545,"byte_end":359553,"line_start":1556,"line_end":1556,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4247},{"krate":0,"index":4248}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361920,"byte_end":361928,"line_start":1638,"line_end":1638,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4252},{"krate":0,"index":4253}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363297,"byte_end":363305,"line_start":1672,"line_end":1672,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4257}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576307,"byte_end":576313,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4454},{"krate":0,"index":4455},{"krate":0,"index":4456},{"krate":0,"index":4457},{"krate":0,"index":4458},{"krate":0,"index":4459},{"krate":0,"index":4460},{"krate":0,"index":4461},{"krate":0,"index":4463},{"krate":0,"index":4464},{"krate":0,"index":4465},{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4468},{"krate":0,"index":4469},{"krate":0,"index":4470},{"krate":0,"index":4471},{"krate":0,"index":4472},{"krate":0,"index":4473},{"krate":0,"index":4475},{"krate":0,"index":4477},{"krate":0,"index":4478},{"krate":0,"index":4481},{"krate":0,"index":4483},{"krate":0,"index":4484},{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4487},{"krate":0,"index":4489},{"krate":0,"index":4491},{"krate":0,"index":4492},{"krate":0,"index":4495},{"krate":0,"index":4497}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":602896,"byte_end":602902,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4581}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":603849,"byte_end":603855,"line_start":81,"line_end":81,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4589}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":604176,"byte_end":604182,"line_start":94,"line_end":94,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":4598}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":604444,"byte_end":604450,"line_start":108,"line_end":108,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4604}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":604895,"byte_end":604901,"line_start":125,"line_end":125,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4611}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":605256,"byte_end":605262,"line_start":142,"line_end":142,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4616}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":605500,"byte_end":605506,"line_start":154,"line_end":154,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4623}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":605844,"byte_end":605850,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4632}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":606155,"byte_end":606161,"line_start":183,"line_end":183,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4638}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":606409,"byte_end":606415,"line_start":195,"line_end":195,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4644}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":606733,"byte_end":606739,"line_start":210,"line_end":210,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4649},{"krate":0,"index":4650},{"krate":0,"index":4651}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":608354,"byte_end":608359,"line_start":269,"line_end":269,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4677},{"krate":0,"index":4679},{"krate":0,"index":4680},{"krate":0,"index":4681},{"krate":0,"index":4683}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":611967,"byte_end":611972,"line_start":395,"line_end":395,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4687}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":612137,"byte_end":612142,"line_start":406,"line_end":406,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4691}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":612450,"byte_end":612455,"line_start":418,"line_end":418,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4695},{"krate":0,"index":7785},{"krate":0,"index":7786},{"krate":0,"index":7787},{"krate":0,"index":4696},{"krate":0,"index":4698}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":612908,"byte_end":612913,"line_start":438,"line_end":438,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4703},{"krate":0,"index":4705}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":613346,"byte_end":613351,"line_start":454,"line_end":454,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4710}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":613567,"byte_end":613572,"line_start":465,"line_end":465,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":613777,"byte_end":613782,"line_start":474,"line_end":474,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":613978,"byte_end":613983,"line_start":483,"line_end":483,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":614156,"byte_end":614161,"line_start":492,"line_end":492,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4724}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":615150,"byte_end":615156,"line_start":538,"line_end":538,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4730}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":615512,"byte_end":615518,"line_start":554,"line_end":554,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4736},{"krate":0,"index":7826},{"krate":0,"index":7827},{"krate":0,"index":7828},{"krate":0,"index":4737}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":615974,"byte_end":615980,"line_start":577,"line_end":577,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4743},{"krate":0,"index":4744}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":616291,"byte_end":616297,"line_start":593,"line_end":593,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4749}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":616457,"byte_end":616463,"line_start":604,"line_end":604,"column_start":33,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":616646,"byte_end":616652,"line_start":613,"line_end":613,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4758}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":618190,"byte_end":618198,"line_start":31,"line_end":31,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4820}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":618400,"byte_end":618408,"line_start":42,"line_end":42,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4824}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":618600,"byte_end":618606,"line_start":53,"line_end":53,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4829},{"krate":0,"index":4830}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":618853,"byte_end":618859,"line_start":68,"line_end":68,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4835}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":619091,"byte_end":619099,"line_start":80,"line_end":80,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4839}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":619299,"byte_end":619307,"line_start":91,"line_end":91,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4843}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":619497,"byte_end":619503,"line_start":102,"line_end":102,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4848},{"krate":0,"index":4849}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":619747,"byte_end":619753,"line_start":117,"line_end":117,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4854}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":619984,"byte_end":619992,"line_start":129,"line_end":129,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4858}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":620194,"byte_end":620202,"line_start":140,"line_end":140,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4862}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":620394,"byte_end":620400,"line_start":151,"line_end":151,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4867},{"krate":0,"index":4868}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":620647,"byte_end":620653,"line_start":166,"line_end":166,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4873}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":620834,"byte_end":620840,"line_start":177,"line_end":177,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4877},{"krate":0,"index":4878}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":621002,"byte_end":621008,"line_start":189,"line_end":189,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4882}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":621150,"byte_end":621156,"line_start":199,"line_end":199,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4886}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":621406,"byte_end":621412,"line_start":212,"line_end":212,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4892},{"krate":0,"index":4893}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":621688,"byte_end":621694,"line_start":226,"line_end":226,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4898}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":622071,"byte_end":622077,"line_start":241,"line_end":241,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4902},{"krate":0,"index":4903}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":624576,"byte_end":624582,"line_start":41,"line_end":41,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4978}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":624763,"byte_end":624769,"line_start":52,"line_end":52,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4982}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":624946,"byte_end":624952,"line_start":63,"line_end":63,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4986}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":625088,"byte_end":625094,"line_start":73,"line_end":73,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":625190,"byte_end":625196,"line_start":81,"line_end":81,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4993}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":625421,"byte_end":625429,"line_start":92,"line_end":92,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4999}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":626167,"byte_end":626173,"line_start":131,"line_end":131,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5016}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":626414,"byte_end":626422,"line_start":143,"line_end":143,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5022}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":627282,"byte_end":627288,"line_start":182,"line_end":182,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5041}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":627551,"byte_end":627557,"line_start":194,"line_end":194,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5045}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":627734,"byte_end":627740,"line_start":205,"line_end":205,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5049}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":627927,"byte_end":627933,"line_start":216,"line_end":216,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5053}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":628084,"byte_end":628090,"line_start":227,"line_end":227,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5057}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":628254,"byte_end":628260,"line_start":238,"line_end":238,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5061}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":628456,"byte_end":628462,"line_start":249,"line_end":249,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5065}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":628654,"byte_end":628660,"line_start":260,"line_end":260,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5069}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":628860,"byte_end":628866,"line_start":271,"line_end":271,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5073}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":629042,"byte_end":629045,"line_start":282,"line_end":282,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5077}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":629224,"byte_end":629230,"line_start":293,"line_end":293,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5082}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":629414,"byte_end":629420,"line_start":304,"line_end":304,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5086},{"krate":0,"index":5087}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":629629,"byte_end":629635,"line_start":317,"line_end":317,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5091}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":629743,"byte_end":629749,"line_start":327,"line_end":327,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5095}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":630162,"byte_end":630168,"line_start":353,"line_end":353,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5099}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":630330,"byte_end":630336,"line_start":364,"line_end":364,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":630409,"byte_end":630415,"line_start":371,"line_end":371,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":630482,"byte_end":630488,"line_start":378,"line_end":378,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":558970,"byte_end":558976,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5118},{"krate":0,"index":5119},{"krate":0,"index":5121},{"krate":0,"index":5122},{"krate":0,"index":5123},{"krate":0,"index":5124},{"krate":0,"index":5125},{"krate":0,"index":5126},{"krate":0,"index":5129},{"krate":0,"index":5132}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":565650,"byte_end":565656,"line_start":299,"line_end":299,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5136},{"krate":0,"index":5137},{"krate":0,"index":5138},{"krate":0,"index":5139},{"krate":0,"index":5140},{"krate":0,"index":5141},{"krate":0,"index":5142},{"krate":0,"index":5143}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568960,"byte_end":568966,"line_start":419,"line_end":419,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5147},{"krate":0,"index":5149},{"krate":0,"index":5150},{"krate":0,"index":5151},{"krate":0,"index":5152},{"krate":0,"index":5153},{"krate":0,"index":5154},{"krate":0,"index":5158}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":631686,"byte_end":631687,"line_start":44,"line_end":44,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5193},{"krate":0,"index":5194},{"krate":0,"index":5196},{"krate":0,"index":5198},{"krate":0,"index":5200}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":634066,"byte_end":634067,"line_start":150,"line_end":150,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5234},{"krate":0,"index":5235},{"krate":0,"index":5236}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":635591,"byte_end":635592,"line_start":213,"line_end":213,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5260},{"krate":0,"index":5262}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":635923,"byte_end":635924,"line_start":230,"line_end":230,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5267},{"krate":0,"index":5269}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":498,"byte_end":504,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":33}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/macros.rs","byte_start":3586,"byte_end":3594,"line_start":6,"line_end":6,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":34}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":515,"byte_end":521,"line_start":27,"line_end":27,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":57}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":531,"byte_end":536,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":97}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":546,"byte_end":551,"line_start":29,"line_end":29,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":554}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":561,"byte_end":567,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1110}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":577,"byte_end":582,"line_start":31,"line_end":31,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1396}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":592,"byte_end":597,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1608}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":607,"byte_end":610,"line_start":33,"line_end":33,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1795}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":620,"byte_end":625,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1826}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":635,"byte_end":638,"line_start":35,"line_end":35,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1889}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":660,"byte_end":665,"line_start":37,"line_end":37,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3020}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":675,"byte_end":680,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4267}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":690,"byte_end":693,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4310}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/lib.rs","byte_start":703,"byte_end":707,"line_start":40,"line_end":40,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":5161}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":51720,"byte_end":51726,"line_start":18,"line_end":18,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":21,"index":31},"to":{"krate":0,"index":81}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/access.rs","byte_start":56370,"byte_end":56371,"line_start":163,"line_end":163,"column_start":23,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":90},"to":{"krate":0,"index":81}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/api.rs","byte_start":61688,"byte_end":61696,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":63612,"byte_end":63620,"line_start":26,"line_end":26,"column_start":29,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":7783}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":65061,"byte_end":65069,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":5398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":66944,"byte_end":66952,"line_start":155,"line_end":155,"column_start":22,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":5398},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":67156,"byte_end":67164,"line_start":167,"line_end":167,"column_start":25,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":5398},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":67479,"byte_end":67487,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":5398},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":67784,"byte_end":67792,"line_start":199,"line_end":199,"column_start":34,"column_end":42},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":5398},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/iter.rs","byte_start":67919,"byte_end":67927,"line_start":209,"line_end":209,"column_start":30,"column_end":38},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":5398},"to":{"krate":2,"index":8253}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":68352,"byte_end":68360,"line_start":26,"line_end":26,"column_start":45,"column_end":53},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3211}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":68577,"byte_end":68585,"line_start":37,"line_end":37,"column_start":46,"column_end":54},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3211}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":68759,"byte_end":68767,"line_start":47,"line_end":47,"column_start":33,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":3184}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":68994,"byte_end":69002,"line_start":61,"line_end":61,"column_start":39,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":3211}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":69247,"byte_end":69255,"line_start":73,"line_end":73,"column_start":44,"column_end":52},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":69470,"byte_end":69478,"line_start":84,"line_end":84,"column_start":45,"column_end":53},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":69650,"byte_end":69658,"line_start":94,"line_end":94,"column_start":32,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":69882,"byte_end":69890,"line_start":108,"line_end":108,"column_start":38,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":70134,"byte_end":70142,"line_start":120,"line_end":120,"column_start":45,"column_end":53},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3219}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":70359,"byte_end":70367,"line_start":131,"line_end":131,"column_start":46,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3219}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":70541,"byte_end":70549,"line_start":141,"line_end":141,"column_start":33,"column_end":41},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":3194}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":70776,"byte_end":70784,"line_start":155,"line_end":155,"column_start":39,"column_end":47},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":3219}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":70976,"byte_end":70984,"line_start":166,"line_end":166,"column_start":22,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":71157,"byte_end":71165,"line_start":178,"line_end":178,"column_start":25,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":71322,"byte_end":71330,"line_start":188,"line_end":188,"column_start":32,"column_end":40},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":3361}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":71593,"byte_end":71601,"line_start":201,"line_end":201,"column_start":35,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":3365}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/ops.rs","byte_start":71809,"byte_end":71817,"line_start":212,"line_end":212,"column_start":20,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":3177}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":76015,"byte_end":76023,"line_start":36,"line_end":36,"column_start":46,"column_end":54},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":2654}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":76222,"byte_end":76230,"line_start":47,"line_end":47,"column_start":49,"column_end":57},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":2657}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":76387,"byte_end":76395,"line_start":57,"line_end":57,"column_start":22,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":76655,"byte_end":76663,"line_start":73,"line_end":73,"column_start":19,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":76763,"byte_end":76771,"line_start":81,"line_end":81,"column_start":20,"column_end":28},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":2745}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":76999,"byte_end":77007,"line_start":92,"line_end":92,"column_start":51,"column_end":59},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":77236,"byte_end":77244,"line_start":105,"line_end":105,"column_start":36,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":77494,"byte_end":77502,"line_start":118,"line_end":118,"column_start":46,"column_end":54},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":77750,"byte_end":77758,"line_start":130,"line_end":130,"column_start":37,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":78044,"byte_end":78052,"line_start":143,"line_end":143,"column_start":45,"column_end":53},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":78247,"byte_end":78255,"line_start":154,"line_end":154,"column_start":45,"column_end":53},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":2957}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":78441,"byte_end":78449,"line_start":165,"line_end":165,"column_start":24,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":78595,"byte_end":78603,"line_start":175,"line_end":175,"column_start":48,"column_end":56},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":79600,"byte_end":79608,"line_start":223,"line_end":223,"column_start":24,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":79719,"byte_end":79727,"line_start":233,"line_end":233,"column_start":22,"column_end":30},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":80080,"byte_end":80088,"line_start":255,"line_end":255,"column_start":21,"column_end":29},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":9885}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":80250,"byte_end":80258,"line_start":266,"line_end":266,"column_start":21,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":3067}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":80336,"byte_end":80344,"line_start":273,"line_end":273,"column_start":22,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":80586,"byte_end":80606,"line_start":285,"line_end":285,"column_start":6,"column_end":26},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":80846,"byte_end":80866,"line_start":296,"line_end":296,"column_start":16,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5430},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":81215,"byte_end":81235,"line_start":309,"line_end":309,"column_start":18,"column_end":38},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":5430},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":81711,"byte_end":81731,"line_start":327,"line_end":327,"column_start":28,"column_end":48},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":5430},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array/traits.rs","byte_start":82192,"byte_end":82202,"line_start":343,"line_end":343,"column_start":6,"column_end":16},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":5447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/array.rs","byte_start":59825,"byte_end":59833,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/api.rs","byte_start":94164,"byte_end":94170,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":98196,"byte_end":98202,"line_start":24,"line_end":24,"column_start":29,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":7783}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":98757,"byte_end":98765,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":100404,"byte_end":100412,"line_start":117,"line_end":117,"column_start":38,"column_end":46},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":684},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":100573,"byte_end":100581,"line_start":128,"line_end":128,"column_start":22,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":684},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":100862,"byte_end":100870,"line_start":143,"line_end":143,"column_start":22,"column_end":30},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":684},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":101070,"byte_end":101078,"line_start":155,"line_end":155,"column_start":25,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":684},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":101473,"byte_end":101481,"line_start":177,"line_end":177,"column_start":36,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":684},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":101858,"byte_end":101866,"line_start":195,"line_end":195,"column_start":34,"column_end":42},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":684},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":101988,"byte_end":101996,"line_start":205,"line_end":205,"column_start":30,"column_end":38},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":684},"to":{"krate":2,"index":8253}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":102200,"byte_end":102208,"line_start":214,"line_end":214,"column_start":28,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":684},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/iter.rs","byte_start":102371,"byte_end":102379,"line_start":222,"line_end":222,"column_start":28,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":684},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":102826,"byte_end":102834,"line_start":28,"line_end":28,"column_start":43,"column_end":51},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3211}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":103036,"byte_end":103044,"line_start":39,"line_end":39,"column_start":44,"column_end":52},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3211}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":103205,"byte_end":103211,"line_start":49,"line_end":49,"column_start":33,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":3184}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":103427,"byte_end":103433,"line_start":63,"line_end":63,"column_start":39,"column_end":45},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":3211}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":103665,"byte_end":103673,"line_start":75,"line_end":75,"column_start":42,"column_end":50},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":103873,"byte_end":103881,"line_start":86,"line_end":86,"column_start":43,"column_end":51},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":104040,"byte_end":104046,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":104259,"byte_end":104265,"line_start":110,"line_end":110,"column_start":38,"column_end":44},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":104496,"byte_end":104504,"line_start":122,"line_end":122,"column_start":43,"column_end":51},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3219}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":104706,"byte_end":104714,"line_start":133,"line_end":133,"column_start":44,"column_end":52},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3219}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":104875,"byte_end":104881,"line_start":143,"line_end":143,"column_start":33,"column_end":39},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":3194}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":105097,"byte_end":105103,"line_start":157,"line_end":157,"column_start":39,"column_end":45},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":3219}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":105284,"byte_end":105290,"line_start":168,"line_end":168,"column_start":22,"column_end":28},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":105452,"byte_end":105458,"line_start":180,"line_end":180,"column_start":25,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":105600,"byte_end":105606,"line_start":190,"line_end":190,"column_start":21,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":105793,"byte_end":105799,"line_start":201,"line_end":201,"column_start":32,"column_end":38},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":3361}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":106075,"byte_end":106081,"line_start":215,"line_end":215,"column_start":35,"column_end":41},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":3365}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/ops.rs","byte_start":106278,"byte_end":106284,"line_start":226,"line_end":226,"column_start":20,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":3177}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":110824,"byte_end":110830,"line_start":40,"line_end":40,"column_start":39,"column_end":45},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2654}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":111011,"byte_end":111017,"line_start":51,"line_end":51,"column_start":42,"column_end":48},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2657}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":111194,"byte_end":111200,"line_start":62,"line_end":62,"column_start":22,"column_end":28},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":111372,"byte_end":111378,"line_start":73,"line_end":73,"column_start":19,"column_end":25},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":111474,"byte_end":111480,"line_start":81,"line_end":81,"column_start":20,"column_end":26},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2745}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":111705,"byte_end":111713,"line_start":92,"line_end":92,"column_start":52,"column_end":60},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":112451,"byte_end":112457,"line_start":131,"line_end":131,"column_start":36,"column_end":42},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":112698,"byte_end":112706,"line_start":143,"line_end":143,"column_start":53,"column_end":61},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":112970,"byte_end":112976,"line_start":156,"line_end":156,"column_start":37,"column_end":43},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":113835,"byte_end":113841,"line_start":194,"line_end":194,"column_start":38,"column_end":44},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":114018,"byte_end":114024,"line_start":205,"line_end":205,"column_start":38,"column_end":44},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2957}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":114185,"byte_end":114191,"line_start":215,"line_end":215,"column_start":41,"column_end":47},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":114353,"byte_end":114359,"line_start":225,"line_end":225,"column_start":37,"column_end":43},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":114537,"byte_end":114543,"line_start":235,"line_end":235,"column_start":29,"column_end":35},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":114788,"byte_end":114794,"line_start":248,"line_end":248,"column_start":50,"column_end":56},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":114967,"byte_end":114973,"line_start":258,"line_end":258,"column_start":35,"column_end":41},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":115120,"byte_end":115123,"line_start":268,"line_end":268,"column_start":35,"column_end":38},"kind":{"Impl":{"id":96}},"from":{"krate":5,"index":321},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":115265,"byte_end":115271,"line_start":278,"line_end":278,"column_start":34,"column_end":40},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":115465,"byte_end":115471,"line_start":290,"line_end":290,"column_start":24,"column_end":30},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":115614,"byte_end":115620,"line_start":300,"line_end":300,"column_start":22,"column_end":28},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":115988,"byte_end":115994,"line_start":323,"line_end":323,"column_start":35,"column_end":41},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":7779}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":116246,"byte_end":116252,"line_start":336,"line_end":336,"column_start":21,"column_end":27},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":9885}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":116414,"byte_end":116420,"line_start":347,"line_end":347,"column_start":28,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":116493,"byte_end":116499,"line_start":354,"line_end":354,"column_start":28,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed/traits.rs","byte_start":116566,"byte_end":116572,"line_start":361,"line_end":361,"column_start":22,"column_end":28},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/boxed.rs","byte_start":83361,"byte_end":83367,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":119476,"byte_end":119485,"line_start":114,"line_end":114,"column_start":19,"column_end":28},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":120415,"byte_end":120424,"line_start":151,"line_end":151,"column_start":31,"column_end":40},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1226},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":120859,"byte_end":120868,"line_start":170,"line_end":170,"column_start":29,"column_end":38},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1226},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":121637,"byte_end":121646,"line_start":203,"line_end":203,"column_start":22,"column_end":31},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1226},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":121761,"byte_end":121770,"line_start":213,"line_end":213,"column_start":21,"column_end":30},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1226},"to":{"krate":2,"index":3067}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":123582,"byte_end":123588,"line_start":260,"line_end":260,"column_start":19,"column_end":25},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":125664,"byte_end":125670,"line_start":335,"line_end":335,"column_start":19,"column_end":25},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":129275,"byte_end":129281,"line_start":483,"line_end":483,"column_start":31,"column_end":37},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":129635,"byte_end":129641,"line_start":501,"line_end":501,"column_start":29,"column_end":35},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":130330,"byte_end":130336,"line_start":533,"line_end":533,"column_start":22,"column_end":28},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":130455,"byte_end":130461,"line_start":543,"line_end":543,"column_start":25,"column_end":31},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":131077,"byte_end":131083,"line_start":572,"line_end":572,"column_start":36,"column_end":42},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":131679,"byte_end":131685,"line_start":599,"line_end":599,"column_start":34,"column_end":40},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":131960,"byte_end":131966,"line_start":614,"line_end":614,"column_start":30,"column_end":36},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":8253}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":132043,"byte_end":132049,"line_start":621,"line_end":621,"column_start":21,"column_end":27},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":3067}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":133593,"byte_end":133607,"line_start":682,"line_end":682,"column_start":19,"column_end":33},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":135694,"byte_end":135708,"line_start":766,"line_end":766,"column_start":16,"column_end":30},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":137475,"byte_end":137489,"line_start":829,"line_end":829,"column_start":19,"column_end":33},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":137984,"byte_end":137998,"line_start":846,"line_end":846,"column_start":26,"column_end":40},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1334},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":138158,"byte_end":138172,"line_start":857,"line_end":857,"column_start":29,"column_end":43},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1334},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":138688,"byte_end":138702,"line_start":881,"line_end":881,"column_start":28,"column_end":42},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1334},"to":{"krate":2,"index":9885}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/domain.rs","byte_start":138965,"byte_end":138979,"line_start":896,"line_end":896,"column_start":21,"column_end":35},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1334},"to":{"krate":2,"index":3067}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field/io.rs","byte_start":159864,"byte_end":159870,"line_start":68,"line_end":68,"column_start":21,"column_end":27},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":5110},"to":{"krate":1,"index":4726}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field/io.rs","byte_start":160257,"byte_end":160263,"line_start":84,"line_end":84,"column_start":22,"column_end":28},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":5110},"to":{"krate":1,"index":4783}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":145883,"byte_end":145891,"line_start":98,"line_end":98,"column_start":22,"column_end":30},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4142},"to":{"krate":0,"index":1516}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":149152,"byte_end":149160,"line_start":230,"line_end":230,"column_start":22,"column_end":30},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4142},"to":{"krate":0,"index":1516}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":152670,"byte_end":152678,"line_start":368,"line_end":368,"column_start":25,"column_end":33},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":536},"to":{"krate":0,"index":1516}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":153887,"byte_end":153893,"line_start":421,"line_end":421,"column_start":25,"column_end":31},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1083},"to":{"krate":0,"index":1516}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/field.rs","byte_start":154494,"byte_end":154500,"line_start":454,"line_end":454,"column_start":25,"column_end":31},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5110},"to":{"krate":0,"index":1516}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":168589,"byte_end":168595,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":175985,"byte_end":175991,"line_start":290,"line_end":290,"column_start":20,"column_end":26},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":5522},"to":{"krate":2,"index":9689}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":176149,"byte_end":176155,"line_start":298,"line_end":298,"column_start":19,"column_end":25},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5522},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":176322,"byte_end":176328,"line_start":306,"line_end":306,"column_start":21,"column_end":27},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5522},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":176815,"byte_end":176826,"line_start":328,"line_end":328,"column_start":9,"column_end":20},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":177599,"byte_end":177610,"line_start":365,"line_end":365,"column_start":19,"column_end":30},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":5555},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":177817,"byte_end":177828,"line_start":374,"line_end":374,"column_start":21,"column_end":32},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":5555},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":178112,"byte_end":178123,"line_start":389,"line_end":389,"column_start":31,"column_end":42},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":5555},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":178511,"byte_end":178517,"line_start":404,"line_end":404,"column_start":9,"column_end":15},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":5588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":182588,"byte_end":182594,"line_start":550,"line_end":550,"column_start":20,"column_end":26},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5588},"to":{"krate":2,"index":9689}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":182756,"byte_end":182762,"line_start":558,"line_end":558,"column_start":19,"column_end":25},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5588},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":182929,"byte_end":182935,"line_start":566,"line_end":566,"column_start":21,"column_end":27},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":5588},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":183454,"byte_end":183460,"line_start":588,"line_end":588,"column_start":9,"column_end":15},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":5621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":185868,"byte_end":185874,"line_start":683,"line_end":683,"column_start":20,"column_end":26},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":5621},"to":{"krate":2,"index":9689}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186032,"byte_end":186038,"line_start":691,"line_end":691,"column_start":19,"column_end":25},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":5621},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186205,"byte_end":186211,"line_start":699,"line_end":699,"column_start":21,"column_end":27},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":5621},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":186615,"byte_end":186621,"line_start":718,"line_end":718,"column_start":9,"column_end":15},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":5654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":188387,"byte_end":188393,"line_start":784,"line_end":784,"column_start":20,"column_end":26},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":5654},"to":{"krate":2,"index":9689}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":188558,"byte_end":188564,"line_start":792,"line_end":792,"column_start":19,"column_end":25},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":5654},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":188731,"byte_end":188737,"line_start":800,"line_end":800,"column_start":21,"column_end":27},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5654},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":189107,"byte_end":189114,"line_start":818,"line_end":818,"column_start":9,"column_end":16},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":191173,"byte_end":191180,"line_start":904,"line_end":904,"column_start":20,"column_end":27},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":5686},"to":{"krate":2,"index":9689}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":191346,"byte_end":191353,"line_start":912,"line_end":912,"column_start":19,"column_end":26},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":5686},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":191521,"byte_end":191528,"line_start":920,"line_end":920,"column_start":21,"column_end":28},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":5686},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":191666,"byte_end":191673,"line_start":928,"line_end":928,"column_start":28,"column_end":35},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":5686},"to":{"krate":2,"index":7742}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":191834,"byte_end":191841,"line_start":937,"line_end":937,"column_start":23,"column_end":30},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":5686},"to":{"krate":2,"index":3184}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":191999,"byte_end":192006,"line_start":949,"line_end":949,"column_start":22,"column_end":29},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":5686},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/index.rs","byte_start":192158,"byte_end":192165,"line_start":961,"line_end":961,"column_start":17,"column_end":24},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":5686},"to":{"krate":2,"index":3177}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":201288,"byte_end":201296,"line_start":12,"line_end":12,"column_start":24,"column_end":32},"kind":"SuperTrait","from":{"krate":20,"index":290},"to":{"krate":0,"index":1809}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/mem.rs","byte_start":201299,"byte_end":201305,"line_start":12,"line_end":12,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":21,"index":52},"to":{"krate":0,"index":1809}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":209215,"byte_end":209219,"line_start":122,"line_end":122,"column_start":26,"column_end":30},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":5806},"to":{"krate":0,"index":1851}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/order.rs","byte_start":210456,"byte_end":210460,"line_start":166,"line_end":166,"column_start":26,"column_end":30},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":5828},"to":{"krate":0,"index":1851}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":228469,"byte_end":228482,"line_start":130,"line_end":130,"column_start":9,"column_end":22},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":228819,"byte_end":228832,"line_start":139,"line_end":139,"column_start":19,"column_end":32},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5850},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":229055,"byte_end":229068,"line_start":149,"line_end":149,"column_start":21,"column_end":34},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":5850},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":229366,"byte_end":229379,"line_start":162,"line_end":162,"column_start":25,"column_end":38},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5850},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":229411,"byte_end":229424,"line_start":164,"line_end":164,"column_start":25,"column_end":38},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5850},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/addr.rs","byte_start":229486,"byte_end":229499,"line_start":167,"line_end":167,"column_start":31,"column_end":44},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5850},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":230594,"byte_end":230600,"line_start":63,"line_end":63,"column_start":15,"column_end":21},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":231947,"byte_end":231953,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":233138,"byte_end":233144,"line_start":167,"line_end":167,"column_start":22,"column_end":28},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":233271,"byte_end":233277,"line_start":177,"line_end":177,"column_start":22,"column_end":28},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":233399,"byte_end":233405,"line_start":186,"line_end":186,"column_start":23,"column_end":29},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":2745}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":233653,"byte_end":233659,"line_start":199,"line_end":199,"column_start":6,"column_end":12},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":233950,"byte_end":233956,"line_start":215,"line_end":215,"column_start":35,"column_end":41},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":234385,"byte_end":234391,"line_start":240,"line_end":240,"column_start":36,"column_end":42},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":234858,"byte_end":234864,"line_start":266,"line_end":266,"column_start":6,"column_end":12},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":235182,"byte_end":235188,"line_start":284,"line_end":284,"column_start":36,"column_end":42},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":235422,"byte_end":235428,"line_start":296,"line_end":296,"column_start":37,"column_end":43},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":235658,"byte_end":235664,"line_start":308,"line_end":308,"column_start":31,"column_end":37},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":235836,"byte_end":235842,"line_start":320,"line_end":320,"column_start":28,"column_end":34},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":2957}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":235978,"byte_end":235984,"line_start":330,"line_end":330,"column_start":25,"column_end":31},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":236270,"byte_end":236276,"line_start":343,"line_end":343,"column_start":27,"column_end":33},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":236490,"byte_end":236496,"line_start":355,"line_end":355,"column_start":27,"column_end":33},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":9695}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":236709,"byte_end":236715,"line_start":367,"line_end":367,"column_start":24,"column_end":30},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":9885}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":236972,"byte_end":236978,"line_start":380,"line_end":380,"column_start":31,"column_end":37},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":237084,"byte_end":237090,"line_start":388,"line_end":388,"column_start":31,"column_end":37},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":237359,"byte_end":237365,"line_start":401,"line_end":401,"column_start":25,"column_end":31},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":237532,"byte_end":237538,"line_start":414,"line_end":414,"column_start":25,"column_end":31},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":237684,"byte_end":237690,"line_start":424,"line_end":424,"column_start":24,"column_end":30},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/proxy.rs","byte_start":238004,"byte_end":238010,"line_start":441,"line_end":441,"column_start":23,"column_end":29},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":3177}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":239416,"byte_end":239427,"line_start":62,"line_end":62,"column_start":15,"column_end":26},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":243285,"byte_end":243296,"line_start":198,"line_end":198,"column_start":25,"column_end":36},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2284},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":243431,"byte_end":243442,"line_start":209,"line_end":209,"column_start":22,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2284},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":243570,"byte_end":243581,"line_start":218,"line_end":218,"column_start":6,"column_end":17},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2284},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":243959,"byte_end":243970,"line_start":235,"line_end":235,"column_start":27,"column_end":38},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2284},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":244154,"byte_end":244165,"line_start":247,"line_end":247,"column_start":48,"column_end":59},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2284},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":244385,"byte_end":244390,"line_start":259,"line_end":259,"column_start":46,"column_end":51},"kind":{"Impl":{"id":206}},"from":{"krate":2,"index":44761},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":244590,"byte_end":244601,"line_start":271,"line_end":271,"column_start":25,"column_end":36},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2284},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":244952,"byte_end":244963,"line_start":286,"line_end":286,"column_start":24,"column_end":35},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2284},"to":{"krate":2,"index":9885}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":245161,"byte_end":245172,"line_start":299,"line_end":299,"column_start":28,"column_end":39},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2284},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":245642,"byte_end":245653,"line_start":326,"line_end":326,"column_start":39,"column_end":50},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2284},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":246098,"byte_end":246109,"line_start":350,"line_end":350,"column_start":37,"column_end":48},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2284},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":246292,"byte_end":246303,"line_start":361,"line_end":361,"column_start":33,"column_end":44},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2284},"to":{"krate":2,"index":8253}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/range.rs","byte_start":246446,"byte_end":246457,"line_start":370,"line_end":370,"column_start":48,"column_end":59},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2284},"to":{"krate":2,"index":3432}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":247882,"byte_end":247888,"line_start":79,"line_end":79,"column_start":15,"column_end":21},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":254376,"byte_end":254382,"line_start":309,"line_end":309,"column_start":12,"column_end":18},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":255305,"byte_end":255311,"line_start":339,"line_end":339,"column_start":12,"column_end":18},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":256847,"byte_end":256853,"line_start":383,"line_end":383,"column_start":15,"column_end":21},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":274858,"byte_end":274864,"line_start":907,"line_end":907,"column_start":12,"column_end":18},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":282306,"byte_end":282312,"line_start":1148,"line_end":1148,"column_start":15,"column_end":21},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":282819,"byte_end":282825,"line_start":1166,"line_end":1166,"column_start":25,"column_end":31},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":282990,"byte_end":282996,"line_start":1180,"line_end":1180,"column_start":22,"column_end":28},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":283083,"byte_end":283089,"line_start":1188,"line_end":1188,"column_start":23,"column_end":29},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2745}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":283369,"byte_end":283375,"line_start":1201,"line_end":1201,"column_start":58,"column_end":64},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":283802,"byte_end":283808,"line_start":1220,"line_end":1220,"column_start":59,"column_end":65},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":284333,"byte_end":284339,"line_start":1244,"line_end":1244,"column_start":25,"column_end":31},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":284506,"byte_end":284512,"line_start":1255,"line_end":1255,"column_start":29,"column_end":35},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":284655,"byte_end":284661,"line_start":1265,"line_end":1265,"column_start":34,"column_end":40},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":284937,"byte_end":284943,"line_start":1279,"line_end":1279,"column_start":32,"column_end":38},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":285206,"byte_end":285212,"line_start":1293,"line_end":1293,"column_start":25,"column_end":31},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":285496,"byte_end":285502,"line_start":1311,"line_end":1311,"column_start":27,"column_end":33},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":9695}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":285788,"byte_end":285794,"line_start":1326,"line_end":1326,"column_start":24,"column_end":30},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":9885}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":285993,"byte_end":285999,"line_start":1339,"line_end":1339,"column_start":24,"column_end":30},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":3067}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":286522,"byte_end":286533,"line_start":1360,"line_end":1360,"column_start":36,"column_end":47},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":286691,"byte_end":286702,"line_start":1369,"line_end":1369,"column_start":32,"column_end":43},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":286839,"byte_end":286850,"line_start":1378,"line_end":1378,"column_start":21,"column_end":32},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/single.rs","byte_start":287115,"byte_end":287126,"line_start":1391,"line_end":1391,"column_start":31,"column_end":42},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":5882},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":288349,"byte_end":288356,"line_start":77,"line_end":77,"column_start":15,"column_end":22},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":290429,"byte_end":290436,"line_start":125,"line_end":125,"column_start":15,"column_end":22},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":293710,"byte_end":293717,"line_start":234,"line_end":234,"column_start":15,"column_end":22},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":297605,"byte_end":297612,"line_start":381,"line_end":381,"column_start":15,"column_end":22},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":298668,"byte_end":298675,"line_start":425,"line_end":425,"column_start":15,"column_end":22},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":303116,"byte_end":303123,"line_start":569,"line_end":569,"column_start":12,"column_end":19},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":303606,"byte_end":303613,"line_start":591,"line_end":591,"column_start":12,"column_end":19},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":304310,"byte_end":304317,"line_start":617,"line_end":617,"column_start":15,"column_end":22},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":306304,"byte_end":306311,"line_start":686,"line_end":686,"column_start":25,"column_end":32},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2764},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":306472,"byte_end":306479,"line_start":697,"line_end":697,"column_start":59,"column_end":66},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2764},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":306957,"byte_end":306964,"line_start":715,"line_end":715,"column_start":38,"column_end":45},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2764},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":307135,"byte_end":307142,"line_start":725,"line_end":725,"column_start":42,"column_end":49},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2764},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":307335,"byte_end":307342,"line_start":736,"line_end":736,"column_start":27,"column_end":34},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2764},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":307472,"byte_end":307479,"line_start":747,"line_end":747,"column_start":25,"column_end":32},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2764},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":307659,"byte_end":307666,"line_start":758,"line_end":758,"column_start":27,"column_end":34},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2764},"to":{"krate":2,"index":9695}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":307987,"byte_end":307994,"line_start":774,"line_end":774,"column_start":24,"column_end":31},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2764},"to":{"krate":2,"index":3067}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":308590,"byte_end":308602,"line_start":798,"line_end":798,"column_start":34,"column_end":46},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5919},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":308860,"byte_end":308872,"line_start":810,"line_end":810,"column_start":36,"column_end":48},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5919},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":309017,"byte_end":309029,"line_start":819,"line_end":819,"column_start":19,"column_end":31},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5919},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":309566,"byte_end":309578,"line_start":838,"line_end":838,"column_start":21,"column_end":33},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5919},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":310157,"byte_end":310169,"line_start":862,"line_end":862,"column_start":25,"column_end":37},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5919},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":310219,"byte_end":310231,"line_start":864,"line_end":864,"column_start":25,"column_end":37},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5919},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/ptr/span.rs","byte_start":310311,"byte_end":310323,"line_start":867,"line_end":867,"column_start":31,"column_end":43},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5919},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":365553,"byte_end":365561,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":434938,"byte_end":434946,"line_start":2286,"line_end":2286,"column_start":12,"column_end":20},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/api.rs","byte_start":444203,"byte_end":444212,"line_start":2649,"line_end":2649,"column_start":44,"column_end":53},"kind":{"Impl":{"id":268}},"from":{"krate":2,"index":44745},"to":{"krate":0,"index":3349}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":446408,"byte_end":446412,"line_start":84,"line_end":84,"column_start":16,"column_end":20},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":450858,"byte_end":450862,"line_start":236,"line_end":236,"column_start":22,"column_end":26},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3461},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":451158,"byte_end":451162,"line_start":251,"line_end":251,"column_start":38,"column_end":42},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3461},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":451408,"byte_end":451412,"line_start":263,"line_end":263,"column_start":22,"column_end":26},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3461},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":452173,"byte_end":452180,"line_start":290,"line_end":290,"column_start":16,"column_end":23},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":454873,"byte_end":454880,"line_start":379,"line_end":379,"column_start":45,"column_end":52},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3494},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":455136,"byte_end":455143,"line_start":391,"line_end":391,"column_start":22,"column_end":29},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3494},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":464928,"byte_end":464939,"line_start":809,"line_end":809,"column_start":16,"column_end":27},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":6227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":467309,"byte_end":467323,"line_start":910,"line_end":910,"column_start":16,"column_end":30},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":6266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":475259,"byte_end":475271,"line_start":1218,"line_end":1218,"column_start":16,"column_end":28},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":6371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":477745,"byte_end":477760,"line_start":1319,"line_end":1319,"column_start":16,"column_end":31},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":6410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":490736,"byte_end":490755,"line_start":1893,"line_end":1893,"column_start":18,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":7827},"to":{"krate":0,"index":3571}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":494505,"byte_end":494513,"line_start":2053,"line_end":2053,"column_start":16,"column_end":24},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":6861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":494756,"byte_end":494764,"line_start":2067,"line_end":2067,"column_start":24,"column_end":32},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":6861},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":494921,"byte_end":494929,"line_start":2080,"line_end":2080,"column_start":25,"column_end":33},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":6861},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":495795,"byte_end":495803,"line_start":2119,"line_end":2119,"column_start":36,"column_end":44},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":6861},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":496391,"byte_end":496399,"line_start":2149,"line_end":2149,"column_start":34,"column_end":42},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":6861},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":496533,"byte_end":496541,"line_start":2159,"line_end":2159,"column_start":30,"column_end":38},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":6861},"to":{"krate":2,"index":8253}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":496993,"byte_end":497002,"line_start":2180,"line_end":2180,"column_start":16,"column_end":25},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":6913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":497245,"byte_end":497254,"line_start":2194,"line_end":2194,"column_start":24,"column_end":33},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":6913},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":497411,"byte_end":497420,"line_start":2207,"line_end":2207,"column_start":25,"column_end":34},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":6913},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":498095,"byte_end":498104,"line_start":2243,"line_end":2243,"column_start":36,"column_end":45},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6913},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":498695,"byte_end":498704,"line_start":2273,"line_end":2273,"column_start":34,"column_end":43},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6913},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":498850,"byte_end":498859,"line_start":2284,"line_end":2284,"column_start":30,"column_end":39},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6913},"to":{"krate":2,"index":8253}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":504377,"byte_end":504398,"line_start":2470,"line_end":2470,"column_start":16,"column_end":37},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":7045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/iter.rs","byte_start":504941,"byte_end":504963,"line_start":2490,"line_end":2490,"column_start":16,"column_end":38},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":7125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/ops.rs","byte_start":505933,"byte_end":505941,"line_start":35,"line_end":35,"column_start":58,"column_end":66},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3211}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/ops.rs","byte_start":506761,"byte_end":506769,"line_start":66,"line_end":66,"column_start":57,"column_end":65},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/ops.rs","byte_start":507507,"byte_end":507515,"line_start":94,"line_end":94,"column_start":58,"column_end":66},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3219}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/ops.rs","byte_start":508233,"byte_end":508241,"line_start":122,"line_end":122,"column_start":29,"column_end":37},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3361}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/specialization/lsb0.rs","byte_start":512691,"byte_end":512699,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/specialization/msb0.rs","byte_start":520947,"byte_end":520955,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/specialization.rs","byte_start":511029,"byte_end":511037,"line_start":31,"line_end":31,"column_start":12,"column_end":20},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":537737,"byte_end":537745,"line_start":44,"line_end":44,"column_start":28,"column_end":36},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":537948,"byte_end":537956,"line_start":55,"line_end":55,"column_start":28,"column_end":36},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":2957}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":538142,"byte_end":538150,"line_start":66,"line_end":66,"column_start":19,"column_end":27},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":538291,"byte_end":538299,"line_start":74,"line_end":74,"column_start":20,"column_end":28},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":2745}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":538893,"byte_end":538901,"line_start":94,"line_end":94,"column_start":54,"column_end":62},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":539945,"byte_end":539953,"line_start":151,"line_end":151,"column_start":55,"column_end":63},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":540160,"byte_end":540168,"line_start":163,"line_end":163,"column_start":59,"column_end":67},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":540827,"byte_end":540835,"line_start":184,"line_end":184,"column_start":55,"column_end":63},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":541858,"byte_end":541866,"line_start":231,"line_end":231,"column_start":56,"column_end":64},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":542113,"byte_end":542121,"line_start":243,"line_end":243,"column_start":60,"column_end":68},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":544442,"byte_end":544450,"line_start":344,"line_end":344,"column_start":22,"column_end":30},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":544673,"byte_end":544681,"line_start":356,"line_end":356,"column_start":24,"column_end":32},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":544904,"byte_end":544912,"line_start":368,"line_end":368,"column_start":24,"column_end":32},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":9695}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":548264,"byte_end":548272,"line_start":509,"line_end":509,"column_start":21,"column_end":29},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":9885}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":548515,"byte_end":548523,"line_start":521,"line_end":521,"column_start":28,"column_end":36},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":548658,"byte_end":548666,"line_start":529,"line_end":529,"column_start":28,"column_end":36},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":548818,"byte_end":548826,"line_start":537,"line_end":537,"column_start":22,"column_end":30},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice/traits.rs","byte_start":549032,"byte_end":549040,"line_start":547,"line_end":547,"column_start":24,"column_end":32},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4142},"to":{"krate":5,"index":669}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":318691,"byte_end":318699,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":328330,"byte_end":328338,"line_start":423,"line_end":423,"column_start":12,"column_end":20},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":335996,"byte_end":336004,"line_start":704,"line_end":704,"column_start":12,"column_end":20},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":342971,"byte_end":342979,"line_start":960,"line_end":960,"column_start":12,"column_end":20},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":345048,"byte_end":345056,"line_start":1014,"line_end":1014,"column_start":12,"column_end":20},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":355008,"byte_end":355016,"line_start":1386,"line_end":1386,"column_start":12,"column_end":20},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":357027,"byte_end":357035,"line_start":1475,"line_end":1475,"column_start":12,"column_end":20},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":359545,"byte_end":359553,"line_start":1556,"line_end":1556,"column_start":12,"column_end":20},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":361920,"byte_end":361928,"line_start":1638,"line_end":1638,"column_start":12,"column_end":20},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/slice.rs","byte_start":363297,"byte_end":363305,"line_start":1672,"line_end":1672,"column_start":12,"column_end":20},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/store.rs","byte_start":549470,"byte_end":549475,"line_start":21,"line_end":21,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":9678},"to":{"krate":0,"index":4293}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/api.rs","byte_start":576307,"byte_end":576313,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":5110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":602896,"byte_end":602902,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":7792}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":603849,"byte_end":603855,"line_start":81,"line_end":81,"column_start":37,"column_end":43},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":7792}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":604176,"byte_end":604182,"line_start":94,"line_end":94,"column_start":63,"column_end":69},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":7792}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":604444,"byte_end":604450,"line_start":108,"line_end":108,"column_start":26,"column_end":32},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":7792}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":604895,"byte_end":604901,"line_start":125,"line_end":125,"column_start":34,"column_end":40},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":7792}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":605256,"byte_end":605262,"line_start":142,"line_end":142,"column_start":35,"column_end":41},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":7779}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":605500,"byte_end":605506,"line_start":154,"line_end":154,"column_start":43,"column_end":49},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":7779}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":605844,"byte_end":605850,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":7779}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":606155,"byte_end":606161,"line_start":183,"line_end":183,"column_start":32,"column_end":38},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":7779}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":606409,"byte_end":606415,"line_start":195,"line_end":195,"column_start":40,"column_end":46},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":7779}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":606733,"byte_end":606739,"line_start":210,"line_end":210,"column_start":29,"column_end":35},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":7783}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":608354,"byte_end":608359,"line_start":269,"line_end":269,"column_start":16,"column_end":21},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":611967,"byte_end":611972,"line_start":395,"line_end":395,"column_start":38,"column_end":43},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4666},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":612137,"byte_end":612142,"line_start":406,"line_end":406,"column_start":22,"column_end":27},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4666},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":612450,"byte_end":612455,"line_start":418,"line_end":418,"column_start":25,"column_end":30},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4666},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":612908,"byte_end":612913,"line_start":438,"line_end":438,"column_start":36,"column_end":41},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4666},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":613346,"byte_end":613351,"line_start":454,"line_end":454,"column_start":34,"column_end":39},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4666},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":613567,"byte_end":613572,"line_start":465,"line_end":465,"column_start":30,"column_end":35},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":4666},"to":{"krate":2,"index":8253}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":613777,"byte_end":613782,"line_start":474,"line_end":474,"column_start":28,"column_end":33},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":4666},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":613978,"byte_end":613983,"line_start":483,"line_end":483,"column_start":28,"column_end":33},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4666},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":614156,"byte_end":614161,"line_start":492,"line_end":492,"column_start":21,"column_end":26},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4666},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":615150,"byte_end":615156,"line_start":538,"line_end":538,"column_start":19,"column_end":25},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":7813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":615512,"byte_end":615518,"line_start":554,"line_end":554,"column_start":28,"column_end":34},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":7813},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":615974,"byte_end":615980,"line_start":577,"line_end":577,"column_start":39,"column_end":45},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":7813},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":616291,"byte_end":616297,"line_start":593,"line_end":593,"column_start":37,"column_end":43},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":7813},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":616457,"byte_end":616463,"line_start":604,"line_end":604,"column_start":33,"column_end":39},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":7813},"to":{"krate":2,"index":8253}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/iter.rs","byte_start":616646,"byte_end":616652,"line_start":613,"line_end":613,"column_start":24,"column_end":30},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":7813},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":618190,"byte_end":618198,"line_start":31,"line_end":31,"column_start":43,"column_end":51},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3211}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":618400,"byte_end":618408,"line_start":42,"line_end":42,"column_start":44,"column_end":52},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3211}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":618600,"byte_end":618606,"line_start":53,"line_end":53,"column_start":33,"column_end":39},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":3184}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":618853,"byte_end":618859,"line_start":68,"line_end":68,"column_start":39,"column_end":45},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":3211}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":619091,"byte_end":619099,"line_start":80,"line_end":80,"column_start":42,"column_end":50},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":619299,"byte_end":619307,"line_start":91,"line_end":91,"column_start":43,"column_end":51},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":619497,"byte_end":619503,"line_start":102,"line_end":102,"column_start":32,"column_end":38},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":619747,"byte_end":619753,"line_start":117,"line_end":117,"column_start":38,"column_end":44},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":619984,"byte_end":619992,"line_start":129,"line_end":129,"column_start":43,"column_end":51},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3219}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":620194,"byte_end":620202,"line_start":140,"line_end":140,"column_start":44,"column_end":52},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":3219}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":620394,"byte_end":620400,"line_start":151,"line_end":151,"column_start":33,"column_end":39},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":3194}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":620647,"byte_end":620653,"line_start":166,"line_end":166,"column_start":39,"column_end":45},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":3219}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":620834,"byte_end":620840,"line_start":177,"line_end":177,"column_start":22,"column_end":28},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":621002,"byte_end":621008,"line_start":189,"line_end":189,"column_start":25,"column_end":31},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":621150,"byte_end":621156,"line_start":199,"line_end":199,"column_start":21,"column_end":27},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":621406,"byte_end":621412,"line_start":212,"line_end":212,"column_start":32,"column_end":38},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":3361}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":621688,"byte_end":621694,"line_start":226,"line_end":226,"column_start":35,"column_end":41},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":3365}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/ops.rs","byte_start":622071,"byte_end":622077,"line_start":241,"line_end":241,"column_start":20,"column_end":26},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":3177}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":624576,"byte_end":624582,"line_start":41,"line_end":41,"column_start":39,"column_end":45},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":2654}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":624763,"byte_end":624769,"line_start":52,"line_end":52,"column_start":42,"column_end":48},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":2657}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":624946,"byte_end":624952,"line_start":63,"line_end":63,"column_start":22,"column_end":28},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":625088,"byte_end":625094,"line_start":73,"line_end":73,"column_start":19,"column_end":25},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":625190,"byte_end":625196,"line_start":81,"line_end":81,"column_start":20,"column_end":26},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":2745}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":625421,"byte_end":625429,"line_start":92,"line_end":92,"column_start":52,"column_end":60},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":626167,"byte_end":626173,"line_start":131,"line_end":131,"column_start":36,"column_end":42},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":626414,"byte_end":626422,"line_start":143,"line_end":143,"column_start":53,"column_end":61},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":627282,"byte_end":627288,"line_start":182,"line_end":182,"column_start":37,"column_end":43},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":627551,"byte_end":627557,"line_start":194,"line_end":194,"column_start":38,"column_end":44},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":627734,"byte_end":627740,"line_start":205,"line_end":205,"column_start":38,"column_end":44},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":2957}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":627927,"byte_end":627933,"line_start":216,"line_end":216,"column_start":36,"column_end":42},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":628084,"byte_end":628090,"line_start":227,"line_end":227,"column_start":36,"column_end":42},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":2957}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":628254,"byte_end":628260,"line_start":238,"line_end":238,"column_start":41,"column_end":47},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":628456,"byte_end":628462,"line_start":249,"line_end":249,"column_start":45,"column_end":51},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":628654,"byte_end":628660,"line_start":260,"line_end":260,"column_start":37,"column_end":43},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":628860,"byte_end":628866,"line_start":271,"line_end":271,"column_start":35,"column_end":41},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":629042,"byte_end":629045,"line_start":282,"line_end":282,"column_start":35,"column_end":38},"kind":{"Impl":{"id":402}},"from":{"krate":5,"index":7089},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":629224,"byte_end":629230,"line_start":293,"line_end":293,"column_start":50,"column_end":56},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":629414,"byte_end":629420,"line_start":304,"line_end":304,"column_start":32,"column_end":38},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":629629,"byte_end":629635,"line_start":317,"line_end":317,"column_start":24,"column_end":30},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":629743,"byte_end":629749,"line_start":327,"line_end":327,"column_start":22,"column_end":28},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":630162,"byte_end":630168,"line_start":353,"line_end":353,"column_start":21,"column_end":27},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":9885}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":630330,"byte_end":630336,"line_start":364,"line_end":364,"column_start":28,"column_end":34},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":630409,"byte_end":630415,"line_start":371,"line_end":371,"column_start":28,"column_end":34},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec/traits.rs","byte_start":630482,"byte_end":630488,"line_start":378,"line_end":378,"column_start":22,"column_end":28},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5110},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":558970,"byte_end":558976,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":565650,"byte_end":565656,"line_start":299,"line_end":299,"column_start":12,"column_end":18},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/vec.rs","byte_start":568960,"byte_end":568966,"line_start":419,"line_end":419,"column_start":12,"column_end":18},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":631686,"byte_end":631687,"line_start":44,"line_end":44,"column_start":21,"column_end":22},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5192},"to":{"krate":0,"index":5181}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":633643,"byte_end":633650,"line_start":133,"line_end":133,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":5181},"to":{"krate":0,"index":5226}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":633653,"byte_end":633658,"line_start":133,"line_end":133,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":5226}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":634066,"byte_end":634067,"line_start":150,"line_end":150,"column_start":26,"column_end":27},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5233},"to":{"krate":0,"index":5226}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":635591,"byte_end":635592,"line_start":213,"line_end":213,"column_start":26,"column_end":27},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5258},"to":{"krate":0,"index":5245}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-1.0.0/src/view.rs","byte_start":635923,"byte_end":635924,"line_start":230,"line_end":230,"column_start":29,"column_end":30},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5265},"to":{"krate":0,"index":5251}}]}