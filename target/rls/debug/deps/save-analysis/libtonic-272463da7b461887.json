{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2","program":"/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tonic","--edition=2018","/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"async-trait\"","--cfg","feature=\"axum\"","--cfg","feature=\"channel\"","--cfg","feature=\"codegen\"","--cfg","feature=\"default\"","--cfg","feature=\"h2\"","--cfg","feature=\"hyper\"","--cfg","feature=\"hyper-timeout\"","--cfg","feature=\"prost\"","--cfg","feature=\"prost-derive\"","--cfg","feature=\"prost1\"","--cfg","feature=\"tokio\"","--cfg","feature=\"tower\"","--cfg","feature=\"tracing-futures\"","--cfg","feature=\"transport\"","-C","metadata=272463da7b461887","-C","extra-filename=-272463da7b461887","--out-dir","/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","-L","dependency=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","--extern","async_stream=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libasync_stream-b70e4d01b488d471.rmeta","--extern","async_trait=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libasync_trait-d13f7cbce4a0c79a.so","--extern","axum=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libaxum-90130dc6f1b639b4.rmeta","--extern","base64=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libbase64-8bcb81a96746c276.rmeta","--extern","bytes=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libbytes-57de1f6d7c9c6f6c.rmeta","--extern","futures_core=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libfutures_core-60458e76f3df90f4.rmeta","--extern","futures_util=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libfutures_util-5633cf663f09987a.rmeta","--extern","h2=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libh2-22ee79f22d9537fa.rmeta","--extern","http=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libhttp-8a47b5b804f7af9e.rmeta","--extern","http_body=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libhttp_body-9fb7d6e7ec24c890.rmeta","--extern","hyper=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libhyper-8682285d495b3915.rmeta","--extern","hyper_timeout=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libhyper_timeout-537e1c7645313a22.rmeta","--extern","percent_encoding=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libpercent_encoding-34a4ccf2494fe9ba.rmeta","--extern","pin_project=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libpin_project-939b9b662b7d255b.rmeta","--extern","prost1=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libprost-60ba1c0b85d79f6e.rmeta","--extern","prost_derive=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libprost_derive-d2d30d581daf91b7.so","--extern","tokio=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libtokio-d602d97b92b353c1.rmeta","--extern","tokio_stream=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libtokio_stream-8c19fdf952809834.rmeta","--extern","tokio_util=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libtokio_util-68efaaed057060ed.rmeta","--extern","tower=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libtower-261c596f6f68d118.rmeta","--extern","tower_layer=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libtower_layer-45359bca8c554c9a.rmeta","--extern","tower_service=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libtower_service-3730c7375171f9fc.rmeta","--extern","tracing=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libtracing-034cca3a0b19ba44.rmeta","--extern","tracing_futures=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libtracing_futures-8142bce57ecbeadb.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libtonic-272463da7b461887.rmeta"},"prelude":{"crate_id":{"name":"tonic","disambiguator":[6125161680880426421,0]},"crate_root":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src","external_crates":[{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/async-stream-0.3.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/body.rs","num":20,"id":{"name":"http_body","disambiguator":[16466314367043830236,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","num":21,"id":{"name":"bytes","disambiguator":[11709949483292364592,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","num":22,"id":{"name":"http","disambiguator":[2805664433737079123,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/body.rs","num":23,"id":{"name":"fnv","disambiguator":[9182829020882932385,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/body.rs","num":24,"id":{"name":"itoa","disambiguator":[13487529298765147476,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/body.rs","num":25,"id":{"name":"pin_project_lite","disambiguator":[2300276943370094789,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","num":26,"id":{"name":"futures_core","disambiguator":[9655805743935561678,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","num":27,"id":{"name":"futures_util","disambiguator":[8511995853558977994,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","num":28,"id":{"name":"pin_utils","disambiguator":[7302173720166050639,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","num":29,"id":{"name":"futures_task","disambiguator":[15221942715748759160,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","num":30,"id":{"name":"tower_service","disambiguator":[1512126508270653424,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","num":31,"id":{"name":"tracing","disambiguator":[4628147495003110912,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","num":32,"id":{"name":"tracing_core","disambiguator":[15136083852490091090,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","num":33,"id":{"name":"once_cell","disambiguator":[18281702906408608498,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","num":34,"id":{"name":"tracing_attributes","disambiguator":[14860577967675576648,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","num":35,"id":{"name":"log","disambiguator":[14764303238413466947,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","num":36,"id":{"name":"cfg_if","disambiguator":[243630855546215384,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/util.rs","num":37,"id":{"name":"pin_project","disambiguator":[12585159627482118171,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/util.rs","num":38,"id":{"name":"pin_project_internal","disambiguator":[5427229042794348984,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/prost.rs","num":39,"id":{"name":"prost","disambiguator":[7070778590843721139,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/prost.rs","num":40,"id":{"name":"prost_derive","disambiguator":[4935838461103341083,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","num":41,"id":{"name":"tower_layer","disambiguator":[4349094680328930295,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":42,"id":{"name":"tower","disambiguator":[7302225461745141391,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":43,"id":{"name":"rand","disambiguator":[16714645692976620564,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":44,"id":{"name":"rand_core","disambiguator":[14749913703318114235,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":45,"id":{"name":"getrandom","disambiguator":[3704475170953657525,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":46,"id":{"name":"libc","disambiguator":[7983304030901990540,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":47,"id":{"name":"rand_chacha","disambiguator":[1284742611360700140,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":48,"id":{"name":"ppv_lite86","disambiguator":[7632408639151574742,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","num":49,"id":{"name":"tokio","disambiguator":[10827909416771941175,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":50,"id":{"name":"mio","disambiguator":[8414556319833190433,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":51,"id":{"name":"tokio_macros","disambiguator":[6305541439644613688,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":52,"id":{"name":"memchr","disambiguator":[2097954395300491601,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":53,"id":{"name":"socket2","disambiguator":[18430510122980896358,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":54,"id":{"name":"num_cpus","disambiguator":[14258575253603779479,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":55,"id":{"name":"slab","disambiguator":[6653587815988834765,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":56,"id":{"name":"tokio_util","disambiguator":[6499539309367376641,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":57,"id":{"name":"futures_sink","disambiguator":[10576276462658899617,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":58,"id":{"name":"indexmap","disambiguator":[9707397654688209924,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":59,"id":{"name":"hashbrown","disambiguator":[15369292542720527974,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","num":60,"id":{"name":"hyper","disambiguator":[10661965028021476006,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","num":61,"id":{"name":"httpdate","disambiguator":[192152001877275152,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","num":62,"id":{"name":"futures_channel","disambiguator":[9094744010715121786,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","num":63,"id":{"name":"h2","disambiguator":[8188193760870014094,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","num":64,"id":{"name":"httparse","disambiguator":[923552570413939876,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","num":65,"id":{"name":"want","disambiguator":[17435727545651587787,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","num":66,"id":{"name":"try_lock","disambiguator":[9325182054968893827,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/discover.rs","num":67,"id":{"name":"tokio_stream","disambiguator":[12026233531460517793,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","num":68,"id":{"name":"axum","disambiguator":[15968424509931669888,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","num":69,"id":{"name":"async_trait","disambiguator":[17601124172724775679,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","num":70,"id":{"name":"axum_core","disambiguator":[5012346632295968722,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","num":71,"id":{"name":"mime","disambiguator":[6371041994920312389,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","num":72,"id":{"name":"sync_wrapper","disambiguator":[6051673612993781385,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","num":73,"id":{"name":"serde","disambiguator":[11647282566521558373,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","num":74,"id":{"name":"serde_derive","disambiguator":[14559522823022789307,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","num":75,"id":{"name":"tower_http","disambiguator":[17020590001435956029,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","num":76,"id":{"name":"bitflags","disambiguator":[13756065713963907163,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","num":77,"id":{"name":"matchit","disambiguator":[13493116629596304747,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","num":78,"id":{"name":"percent_encoding","disambiguator":[829164021475040648,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/encode.rs","num":79,"id":{"name":"async_stream","disambiguator":[10142429729989310805,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/encode.rs","num":80,"id":{"name":"async_stream_impl","disambiguator":[16784352092001444417,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","num":81,"id":{"name":"base64","disambiguator":[5300500336962509114,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":82,"id":{"name":"hyper_timeout","disambiguator":[2068041893575825650,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","num":83,"id":{"name":"tokio_io_timeout","disambiguator":[9473087136506951171,0]}}],"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":0,"byte_end":4885,"line_start":1,"line_end":124,"column_start":1,"column_end":17}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":86},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":6490,"byte_end":6494,"line_start":22,"line_end":22,"column_start":21,"column_end":25},"alias_span":null,"name":"Grpc","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":6519,"byte_end":6530,"line_start":23,"line_end":23,"column_start":24,"column_end":35},"alias_span":null,"name":"GrpcService","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3449},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":20230,"byte_end":20239,"line_start":19,"line_end":19,"column_start":24,"column_end":33},"alias_span":null,"name":"DecodeBuf","value":"","parent":{"krate":0,"index":176}},{"kind":"Use","ref_id":{"krate":0,"index":3456},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":20241,"byte_end":20250,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"alias_span":null,"name":"EncodeBuf","value":"","parent":{"krate":0,"index":176}},{"kind":"Use","ref_id":{"krate":0,"index":279},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":20441,"byte_end":20450,"line_start":23,"line_end":23,"column_start":23,"column_end":32},"alias_span":null,"name":"Streaming","value":"","parent":{"krate":0,"index":176}},{"kind":"Use","ref_id":{"krate":0,"index":3671},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":20548,"byte_end":20558,"line_start":26,"line_end":26,"column_start":22,"column_end":32},"alias_span":null,"name":"ProstCodec","value":"","parent":{"krate":0,"index":176}},{"kind":"Use","ref_id":{"krate":0,"index":3716},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52467,"byte_end":52472,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"alias_span":null,"name":"Ascii","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3730},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52498,"byte_end":52504,"line_start":9,"line_end":9,"column_start":25,"column_end":31},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":620},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52525,"byte_end":52541,"line_start":10,"line_end":10,"column_start":20,"column_end":36},"alias_span":null,"name":"AsciiMetadataKey","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":621},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52562,"byte_end":52579,"line_start":11,"line_end":11,"column_start":20,"column_end":37},"alias_span":null,"name":"BinaryMetadataKey","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3752},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52600,"byte_end":52611,"line_start":12,"line_end":12,"column_start":20,"column_end":31},"alias_span":null,"name":"MetadataKey","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3911},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52632,"byte_end":52637,"line_start":13,"line_end":13,"column_start":20,"column_end":25},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3902},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52658,"byte_end":52664,"line_start":14,"line_end":14,"column_start":20,"column_end":26},"alias_span":null,"name":"GetAll","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3786},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52685,"byte_end":52689,"line_start":15,"line_end":15,"column_start":20,"column_end":24},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3818},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52710,"byte_end":52717,"line_start":16,"line_end":16,"column_start":20,"column_end":27},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3805},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52738,"byte_end":52755,"line_start":17,"line_end":17,"column_start":20,"column_end":37},"alias_span":null,"name":"KeyAndMutValueRef","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3792},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52776,"byte_end":52790,"line_start":18,"line_end":18,"column_start":20,"column_end":34},"alias_span":null,"name":"KeyAndValueRef","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3839},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52811,"byte_end":52817,"line_start":19,"line_end":19,"column_start":20,"column_end":26},"alias_span":null,"name":"KeyRef","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3833},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52838,"byte_end":52842,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"alias_span":null,"name":"Keys","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3778},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52863,"byte_end":52874,"line_start":21,"line_end":21,"column_start":20,"column_end":31},"alias_span":null,"name":"MetadataMap","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3933},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52895,"byte_end":52908,"line_start":22,"line_end":22,"column_start":20,"column_end":33},"alias_span":null,"name":"OccupiedEntry","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3924},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52929,"byte_end":52940,"line_start":23,"line_end":23,"column_start":20,"column_end":31},"alias_span":null,"name":"VacantEntry","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3824},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52961,"byte_end":52971,"line_start":24,"line_end":24,"column_start":20,"column_end":30},"alias_span":null,"name":"ValueDrain","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3884},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52992,"byte_end":53001,"line_start":25,"line_end":25,"column_start":20,"column_end":29},"alias_span":null,"name":"ValueIter","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3856},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":53022,"byte_end":53030,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"alias_span":null,"name":"ValueRef","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3873},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":53051,"byte_end":53062,"line_start":27,"line_end":27,"column_start":20,"column_end":31},"alias_span":null,"name":"ValueRefMut","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3850},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":53083,"byte_end":53089,"line_start":28,"line_end":28,"column_start":20,"column_end":26},"alias_span":null,"name":"Values","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3867},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":53110,"byte_end":53119,"line_start":29,"line_end":29,"column_start":20,"column_end":29},"alias_span":null,"name":"ValuesMut","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":1127},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":53142,"byte_end":53160,"line_start":30,"line_end":30,"column_start":22,"column_end":40},"alias_span":null,"name":"AsciiMetadataValue","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":1128},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":53183,"byte_end":53202,"line_start":31,"line_end":31,"column_start":22,"column_end":41},"alias_span":null,"name":"BinaryMetadataValue","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3942},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":53225,"byte_end":53238,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"alias_span":null,"name":"MetadataValue","value":"","parent":{"krate":0,"index":510}},{"kind":"Use","ref_id":{"krate":0,"index":3709},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":53449,"byte_end":53469,"line_start":39,"line_end":39,"column_start":30,"column_end":50},"alias_span":null,"name":"InvalidMetadataValue","value":"","parent":{"krate":0,"index":1371}},{"kind":"Use","ref_id":{"krate":0,"index":3744},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":53500,"byte_end":53525,"line_start":40,"line_end":40,"column_start":30,"column_end":55},"alias_span":null,"name":"InvalidMetadataValueBytes","value":"","parent":{"krate":0,"index":1371}},{"kind":"Use","ref_id":{"krate":0,"index":3774},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":53551,"byte_end":53569,"line_start":41,"line_end":41,"column_start":25,"column_end":43},"alias_span":null,"name":"InvalidMetadataKey","value":"","parent":{"krate":0,"index":1371}},{"kind":"Use","ref_id":{"krate":0,"index":3949},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":53597,"byte_end":53607,"line_start":42,"line_end":42,"column_start":27,"column_end":37},"alias_span":null,"name":"ToStrError","value":"","parent":{"krate":0,"index":1371}},{"kind":"Use","ref_id":{"krate":0,"index":1442},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/mod.rs","byte_start":188278,"byte_end":188282,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"alias_span":null,"name":"Grpc","value":"","parent":{"krate":0,"index":1384}},{"kind":"Use","ref_id":{"krate":0,"index":1538},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/mod.rs","byte_start":188313,"byte_end":188335,"line_start":16,"line_end":16,"column_start":5,"column_end":27},"alias_span":null,"name":"ClientStreamingService","value":"","parent":{"krate":0,"index":1384}},{"kind":"Use","ref_id":{"krate":0,"index":1523},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/mod.rs","byte_start":188337,"byte_end":188359,"line_start":16,"line_end":16,"column_start":29,"column_end":51},"alias_span":null,"name":"ServerStreamingService","value":"","parent":{"krate":0,"index":1384}},{"kind":"Use","ref_id":{"krate":0,"index":1550},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/mod.rs","byte_start":188361,"byte_end":188377,"line_start":16,"line_end":16,"column_start":53,"column_end":69},"alias_span":null,"name":"StreamingService","value":"","parent":{"krate":0,"index":1384}},{"kind":"Use","ref_id":{"krate":0,"index":1511},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/mod.rs","byte_start":188379,"byte_end":188391,"line_start":16,"line_end":16,"column_start":71,"column_end":83},"alias_span":null,"name":"UnaryService","value":"","parent":{"krate":0,"index":1384}},{"kind":"Use","ref_id":{"krate":0,"index":1631},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/mod.rs","byte_start":206782,"byte_end":206793,"line_start":7,"line_end":7,"column_start":29,"column_end":40},"alias_span":null,"name":"interceptor","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":0,"index":1633},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/mod.rs","byte_start":206795,"byte_end":206809,"line_start":7,"line_end":7,"column_start":42,"column_end":56},"alias_span":null,"name":"interceptor_fn","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":0,"index":1626},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/mod.rs","byte_start":206811,"byte_end":206822,"line_start":7,"line_end":7,"column_start":58,"column_end":69},"alias_span":null,"name":"Interceptor","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":0,"index":4080},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":221576,"byte_end":221584,"line_start":8,"line_end":8,"column_start":19,"column_end":27},"alias_span":null,"name":"Endpoint","value":"","parent":{"krate":0,"index":1688}},{"kind":"Use","ref_id":{"krate":0,"index":4887},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":244099,"byte_end":244105,"line_start":12,"line_end":12,"column_start":25,"column_end":31},"alias_span":null,"name":"Routes","value":"","parent":{"krate":0,"index":1938}},{"kind":"Use","ref_id":{"krate":0,"index":1949},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":244122,"byte_end":244131,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"alias_span":null,"name":"Connected","value":"","parent":{"krate":0,"index":1938}},{"kind":"Use","ref_id":{"krate":0,"index":4103},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":244133,"byte_end":244147,"line_start":13,"line_end":13,"column_start":27,"column_end":41},"alias_span":null,"name":"TcpConnectInfo","value":"","parent":{"krate":0,"index":1938}},{"kind":"Use","ref_id":{"krate":0,"index":4199},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":244345,"byte_end":244359,"line_start":24,"line_end":24,"column_start":15,"column_end":29},"alias_span":null,"name":"UdsConnectInfo","value":"","parent":{"krate":0,"index":1938}},{"kind":"Use","ref_id":{"krate":0,"index":4887},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/mod.rs","byte_start":287846,"byte_end":287852,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"alias_span":null,"name":"Routes","value":"","parent":{"krate":0,"index":2387}},{"kind":"Use","ref_id":{"krate":0,"index":4099},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220699,"byte_end":220706,"line_start":99,"line_end":99,"column_start":25,"column_end":32},"alias_span":null,"name":"Channel","value":"","parent":{"krate":0,"index":1687}},{"kind":"Use","ref_id":{"krate":0,"index":4080},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220708,"byte_end":220716,"line_start":99,"line_end":99,"column_start":34,"column_end":42},"alias_span":null,"name":"Endpoint","value":"","parent":{"krate":0,"index":1687}},{"kind":"Use","ref_id":{"krate":0,"index":2366},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220740,"byte_end":220745,"line_start":100,"line_end":100,"column_start":22,"column_end":27},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":1687}},{"kind":"Use","ref_id":{"krate":0,"index":2235},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220785,"byte_end":220797,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"alias_span":null,"name":"NamedService","value":"","parent":{"krate":0,"index":1687}},{"kind":"Use","ref_id":{"krate":0,"index":4206},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220799,"byte_end":220805,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"alias_span":null,"name":"Server","value":"","parent":{"krate":0,"index":1687}},{"kind":"Use","ref_id":{"krate":0,"index":4390},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220860,"byte_end":220874,"line_start":104,"line_end":104,"column_start":38,"column_end":52},"alias_span":null,"name":"TimeoutExpired","value":"","parent":{"krate":0,"index":1687}},{"kind":"Use","ref_id":{"krate":0,"index":4935},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220895,"byte_end":220906,"line_start":105,"line_end":105,"column_start":20,"column_end":31},"alias_span":null,"name":"Certificate","value":"","parent":{"krate":0,"index":1687}},{"kind":"Use","ref_id":{"krate":60,"index":547},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220924,"byte_end":220928,"line_start":106,"line_end":106,"column_start":17,"column_end":21},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":1687}},{"kind":"Use","ref_id":{"krate":22,"index":3227},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220930,"byte_end":220933,"line_start":106,"line_end":106,"column_start":23,"column_end":26},"alias_span":null,"name":"Uri","value":"","parent":{"krate":0,"index":1687}},{"kind":"Use","ref_id":{"krate":69,"index":423},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4497,"byte_end":4508,"line_start":110,"line_end":110,"column_start":22,"column_end":33},"alias_span":null,"name":"async_trait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":279},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4541,"byte_end":4550,"line_start":113,"line_end":113,"column_start":16,"column_end":25},"alias_span":null,"name":"Streaming","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3057},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4572,"byte_end":4582,"line_start":114,"line_end":114,"column_start":21,"column_end":31},"alias_span":null,"name":"Extensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3108},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4602,"byte_end":4613,"line_start":115,"line_end":115,"column_start":19,"column_end":30},"alias_span":null,"name":"IntoRequest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3111},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4615,"byte_end":4635,"line_start":115,"line_end":115,"column_start":32,"column_end":52},"alias_span":null,"name":"IntoStreamingRequest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4941},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4637,"byte_end":4644,"line_start":115,"line_end":115,"column_start":54,"column_end":61},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4949},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4665,"byte_end":4673,"line_start":116,"line_end":116,"column_start":19,"column_end":27},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4957},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4692,"byte_end":4696,"line_start":117,"line_end":117,"column_start":18,"column_end":22},"alias_span":null,"name":"Code","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3256},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4698,"byte_end":4704,"line_start":117,"line_end":117,"column_start":24,"column_end":30},"alias_span":null,"name":"Status","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":69,"index":423},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":383775,"byte_end":383786,"line_start":3,"line_end":3,"column_start":22,"column_end":33},"alias_span":null,"name":"async_trait","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":26,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":383796,"byte_end":383808,"line_start":4,"line_end":4,"column_start":9,"column_end":21},"alias_span":null,"name":"futures_core","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":27,"index":933},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":383841,"byte_end":383843,"line_start":5,"line_end":5,"column_start":32,"column_end":34},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":27,"index":830},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":383845,"byte_end":383852,"line_start":5,"line_end":5,"column_start":36,"column_end":43},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":27,"index":8252},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":383854,"byte_end":383859,"line_start":5,"line_end":5,"column_start":45,"column_end":50},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":2,"index":13091},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":383884,"byte_end":383890,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":2,"index":46405},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":383910,"byte_end":383913,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":5,"index":5980},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":383934,"byte_end":383937,"line_start":9,"line_end":9,"column_start":20,"column_end":23},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":2,"index":13393},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":383959,"byte_end":383966,"line_start":10,"line_end":10,"column_start":21,"column_end":28},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":2,"index":49135},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":383968,"byte_end":383972,"line_start":10,"line_end":10,"column_start":30,"column_end":34},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":30,"index":13},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":383998,"byte_end":384005,"line_start":11,"line_end":11,"column_start":24,"column_end":31},"alias_span":null,"name":"Service","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":0,"index":3980},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":384222,"byte_end":384240,"line_start":15,"line_end":15,"column_start":38,"column_end":56},"alias_span":null,"name":"InterceptedService","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":21,"index":526},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":384257,"byte_end":384262,"line_start":16,"line_end":16,"column_start":16,"column_end":21},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":20,"index":470},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":384283,"byte_end":384287,"line_start":17,"line_end":17,"column_start":20,"column_end":24},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":3394}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":384545,"byte_end":384546,"line_start":24,"line_end":24,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":3445}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":0,"byte_end":4885,"line_start":1,"line_end":124,"column_start":1,"column_end":17},"name":"","qualname":"::","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":12},{"krate":0,"index":176},{"krate":0,"index":510},{"krate":0,"index":1384},{"krate":0,"index":1581},{"krate":0,"index":1687},{"krate":0,"index":3053},{"krate":0,"index":3074},{"krate":0,"index":3077},{"krate":0,"index":3177},{"krate":0,"index":3202},{"krate":0,"index":3360},{"krate":0,"index":3364},{"krate":0,"index":3367},{"krate":0,"index":3370},{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3377},{"krate":0,"index":3380},{"krate":0,"index":3383},{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3390},{"krate":0,"index":3393},{"krate":0,"index":3394}],"decl_id":null,"docs":" A Rust implementation of [gRPC], a high performance, open source, general\n RPC framework that puts mobile and HTTP/2 first.","sig":null,"attributes":[{"value":"/ A Rust implementation of [gRPC], a high performance, open source, general","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ RPC framework that puts mobile and HTTP/2 first.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":78,"byte_end":130,"line_start":2,"line_end":2,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":131,"byte_end":134,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ [`tonic`] is a gRPC over HTTP/2 implementation focused on **high","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":135,"byte_end":203,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ performance**, **interoperability**, and **flexibility**. This library was","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":204,"byte_end":282,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ created to have first class support of async/await and to act as a core building","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":283,"byte_end":367,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/ block for production systems written in Rust.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":368,"byte_end":417,"line_start":7,"line_end":7,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":418,"byte_end":421,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":422,"byte_end":436,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":437,"byte_end":440,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Examples can be found in the [`tonic-examples`] crate.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":441,"byte_end":499,"line_start":11,"line_end":11,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":500,"byte_end":503,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Getting Started","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":504,"byte_end":525,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":526,"byte_end":529,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Follow the instructions in the [`tonic-build`] crate documentation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":530,"byte_end":601,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":602,"byte_end":605,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Feature Flags","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":606,"byte_end":625,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":626,"byte_end":629,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ - `transport`: Enables the fully featured, batteries included client and server","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":630,"byte_end":713,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/     implementation based on [`hyper`], [`tower`] and [`tokio`]. Enabled by default.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":714,"byte_end":801,"line_start":20,"line_end":20,"column_start":1,"column_end":88}},{"value":"/ - `channel`: Enables just the full featured channel/client portion of the `transport`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":802,"byte_end":891,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/     feature.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":892,"byte_end":908,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/ - `codegen`: Enables all the required exports and optional dependencies required","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":909,"byte_end":993,"line_start":23,"line_end":23,"column_start":1,"column_end":85}},{"value":"/ for [`tonic-build`]. Enabled by default.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":994,"byte_end":1038,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ - `tls`: Enables the `rustls` based TLS options for the `transport` feature. Not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1039,"byte_end":1123,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/ enabled by default.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1124,"byte_end":1147,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/ - `tls-roots`: Adds system trust roots to `rustls`-based gRPC clients using the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1148,"byte_end":1231,"line_start":27,"line_end":27,"column_start":1,"column_end":84}},{"value":"/ `rustls-native-certs` crate. Not enabled by default. `tls` must be enabled to use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1232,"byte_end":1317,"line_start":28,"line_end":28,"column_start":1,"column_end":86}},{"value":"/ `tls-roots`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1318,"byte_end":1334,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/ - `tls-webpki-roots`: Add the standard trust roots from the `webpki-roots` crate to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1335,"byte_end":1422,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"/ `rustls`-based gRPC clients. Not enabled by default.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1423,"byte_end":1479,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/ - `prost`: Enables the [`prost`] based gRPC [`Codec`] implementation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1480,"byte_end":1553,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ - `compression`: Enables compressing requests, responses, and streams. Note","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1554,"byte_end":1633,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ that you must enable the `compression` feature on both `tonic` and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1634,"byte_end":1704,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ `tonic-build` to use it. Depends on [flate2]. Not enabled by default.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1705,"byte_end":1778,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1779,"byte_end":1782,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Structure","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1783,"byte_end":1798,"line_start":37,"line_end":37,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1799,"byte_end":1802,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Generic implementation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1803,"byte_end":1832,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1833,"byte_end":1836,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The main goal of [`tonic`] is to provide a generic gRPC implementation over HTTP/2","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1837,"byte_end":1923,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"/ framing. This means at the lowest level this library provides the ability to use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":1924,"byte_end":2008,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"/ a generic HTTP/2 implementation with different types of gRPC encodings formats. Generally,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2009,"byte_end":2103,"line_start":43,"line_end":43,"column_start":1,"column_end":95}},{"value":"/ some form of codegen should be used instead of interacting directly with the items in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2104,"byte_end":2193,"line_start":44,"line_end":44,"column_start":1,"column_end":90}},{"value":"/ [`client`] and [`server`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2194,"byte_end":2224,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2225,"byte_end":2228,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Transport","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2229,"byte_end":2245,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2246,"byte_end":2249,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The [`transport`] module contains a fully featured HTTP/2.0 [`Channel`] (gRPC terminology)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2250,"byte_end":2344,"line_start":49,"line_end":49,"column_start":1,"column_end":95}},{"value":"/ and [`Server`]. These implementations are built on top of [`tokio`], [`hyper`] and [`tower`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2345,"byte_end":2442,"line_start":50,"line_end":50,"column_start":1,"column_end":98}},{"value":"/ It also provides many of the features that the core gRPC libraries provide such as load balancing,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2443,"byte_end":2545,"line_start":51,"line_end":51,"column_start":1,"column_end":103}},{"value":"/ tls, timeouts, and many more. This implementation can also be used as a reference implementation","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2546,"byte_end":2646,"line_start":52,"line_end":52,"column_start":1,"column_end":101}},{"value":"/ to build even more feature rich clients and servers. This module also provides the ability to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2647,"byte_end":2744,"line_start":53,"line_end":53,"column_start":1,"column_end":98}},{"value":"/ enable TLS using [`rustls`], via the `tls` feature flag.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2745,"byte_end":2805,"line_start":54,"line_end":54,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2806,"byte_end":2809,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ [gRPC]: https://grpc.io","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2810,"byte_end":2837,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ [`tonic`]: https://github.com/hyperium/tonic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2838,"byte_end":2886,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2887,"byte_end":2923,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/ [`prost`]: https://docs.rs/prost","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2924,"byte_end":2960,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [`hyper`]: https://docs.rs/hyper","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2961,"byte_end":2997,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/ [`tower`]: https://docs.rs/tower","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":2998,"byte_end":3034,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ [`tonic-build`]: https://docs.rs/tonic-build","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":3035,"byte_end":3083,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/ [`tonic-examples`]: https://github.com/hyperium/tonic/tree/master/examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":3084,"byte_end":3162,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ [`Codec`]: codec/trait.Codec.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":3163,"byte_end":3200,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ [`Channel`]: transport/struct.Channel.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":3201,"byte_end":3247,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/ [`Server`]: transport/struct.Server.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":3248,"byte_end":3292,"line_start":66,"line_end":66,"column_start":1,"column_end":45}},{"value":"/ [`rustls`]: https://docs.rs/rustls","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":3293,"byte_end":3331,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ [`client`]: client/index.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":3332,"byte_end":3365,"line_start":68,"line_end":68,"column_start":1,"column_end":34}},{"value":"/ [`transport`]: transport/index.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":3366,"byte_end":3405,"line_start":69,"line_end":69,"column_start":1,"column_end":40}},{"value":"/ [flate2]: https://crates.io/crates/flate2","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":3406,"byte_end":3451,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"recursion_limit = \"256\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":3453,"byte_end":3480,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"allow(clippy :: inconsistent_struct_constructor)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":3481,"byte_end":3531,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":3532,"byte_end":3638,"line_start":74,"line_end":79,"column_start":1,"column_end":3}},{"value":"deny(rustdoc :: broken_intra_doc_links)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":3639,"byte_end":3680,"line_start":80,"line_end":80,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/body.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"body","qualname":"::body","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/body.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":10}],"decl_id":null,"docs":" HTTP specific body utilities.\n","sig":null,"attributes":[{"value":"/ HTTP specific body utilities.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/body.rs","byte_start":4887,"byte_end":4920,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":7},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/body.rs","byte_start":5006,"byte_end":5013,"line_start":6,"line_end":6,"column_start":10,"column_end":17},"name":"BoxBody","qualname":"::body::BoxBody","value":"http_body::combinators::UnsyncBoxBody<bytes::Bytes, crate::Status>","parent":null,"children":[],"decl_id":null,"docs":" A type erased HTTP body used for tonic services.\n","sig":null,"attributes":[{"value":"/ A type erased HTTP body used for tonic services.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/body.rs","byte_start":4944,"byte_end":4996,"line_start":5,"line_end":5,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":10},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/body.rs","byte_start":5498,"byte_end":5508,"line_start":20,"line_end":20,"column_start":8,"column_end":18},"name":"empty_body","qualname":"::body::empty_body","value":"pub fn empty_body() -> BoxBody","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `BoxBody`\n","sig":null,"attributes":[{"value":"/ Create an empty `BoxBody`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/body.rs","byte_start":5461,"byte_end":5490,"line_start":19,"line_end":19,"column_start":1,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":137},{"krate":0,"index":170},{"krate":0,"index":173}],"decl_id":null,"docs":" Generic client implementation.","sig":null,"attributes":[{"value":"/ Generic client implementation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":5616,"byte_end":5650,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":5651,"byte_end":5654,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the low level components to build a gRPC client. It","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":5655,"byte_end":5731,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ provides a codec agnostic gRPC client dispatcher and a decorated tower","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":5732,"byte_end":5806,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ service trait.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":5807,"byte_end":5825,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":5826,"byte_end":5829,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This client is generally used by some code generation tool to provide stubs","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":5830,"byte_end":5909,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ for the gRPC service. Thusly, they are a bit cumbersome to use by hand.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":5910,"byte_end":5985,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":5986,"byte_end":5989,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## Concurrent usage","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":5990,"byte_end":6013,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":6014,"byte_end":6017,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Upon using the your generated client, you will discover all the functions","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":6018,"byte_end":6095,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ corresponding to your rpc methods take `&mut self`, making concurrent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":6096,"byte_end":6169,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ usage of the client difficult. The answer is simply to clone the client,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":6170,"byte_end":6246,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ which is cheap as all client instances will share the same channel for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":6247,"byte_end":6321,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ communication. For more details, see","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":6322,"byte_end":6362,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/ [transport::Channel](../transport/struct.Channel.html#multiplexing-requests).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/mod.rs","byte_start":6363,"byte_end":6444,"line_start":17,"line_end":17,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":86},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":7718,"byte_end":7722,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Grpc","qualname":"::client::grpc::Grpc","value":"Grpc {  }","parent":null,"children":[{"krate":0,"index":88}],"decl_id":null,"docs":" A gRPC client dispatcher.","sig":null,"attributes":[{"value":"/ A gRPC client dispatcher.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":7030,"byte_end":7059,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":7060,"byte_end":7063,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This will wrap some inner [`GrpcService`] and will encode/decode","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":7064,"byte_end":7132,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ messages via the provided codec.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":7133,"byte_end":7169,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":7170,"byte_end":7173,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Each request method takes a [`Request`], a [`PathAndQuery`], and a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":7174,"byte_end":7244,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ [`Codec`]. The request contains the message to send via the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":7245,"byte_end":7308,"line_start":25,"line_end":25,"column_start":1,"column_end":64}},{"value":"/ [`Codec::encoder`]. The path determines the fully qualified path","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":7309,"byte_end":7377,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ that will be append to the outgoing uri. The path must follow","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":7378,"byte_end":7443,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/ the conventions explained in the [gRPC protocol definition] under `Path →`. An","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":7444,"byte_end":7528,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ example of this path could look like `/greeter.Greeter/SayHello`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":7529,"byte_end":7598,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":7599,"byte_end":7602,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [gRPC protocol definition]: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#requests","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":7603,"byte_end":7706,"line_start":31,"line_end":31,"column_start":1,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":8166,"byte_end":8169,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Grpc<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new gRPC client with the provided [`GrpcService`].\n","sig":null,"attributes":[{"value":"/ Creates a new gRPC client with the provided [`GrpcService`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":8090,"byte_end":8154,"line_start":43,"line_end":43,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":9519,"byte_end":9528,"line_start":88,"line_end":88,"column_start":12,"column_end":21},"name":"send_gzip","qualname":"<Grpc<T>>::send_gzip","value":"pub fn send_gzip(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"compression\"))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":9471,"byte_end":9507,"line_start":87,"line_end":87,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":10736,"byte_end":10747,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"accept_gzip","qualname":"<Grpc<T>>::accept_gzip","value":"pub fn accept_gzip(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"compression\"))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":10688,"byte_end":10724,"line_start":127,"line_end":127,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":11167,"byte_end":11172,"line_start":137,"line_end":137,"column_start":18,"column_end":23},"name":"ready","qualname":"<Grpc<T>>::ready","value":"pub async fn ready<'_>(&'_ mut Self) -> /*impl Trait*/ where\nT: GrpcService<BoxBody>","parent":null,"children":[],"decl_id":null,"docs":" Check if the inner [`GrpcService`] is able to accept a  new request.","sig":null,"attributes":[{"value":"/ Check if the inner [`GrpcService`] is able to accept a  new request.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":10881,"byte_end":10953,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":10958,"byte_end":10961,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This will call [`GrpcService::poll_ready`] until it returns ready or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":10966,"byte_end":11038,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ an error. If this returns ready the inner [`GrpcService`] is ready to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":11043,"byte_end":11116,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ accept one more request.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":11121,"byte_end":11149,"line_start":136,"line_end":136,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":11385,"byte_end":11390,"line_start":145,"line_end":145,"column_start":18,"column_end":23},"name":"unary","qualname":"<Grpc<T>>::unary","value":"pub async fn unary<M1, M2, C, '_>(&'_ mut Self, Request<M1>, PathAndQuery, C)\n-> /*impl Trait*/ where T: GrpcService<BoxBody>, T::ResponseBody: Body +\nSend + 'static, <T::ResponseBody as Body>::Error: Into<crate::Error>,\nC: Codec<Encode = M1, Decode = M1>, M1: Send + Sync + 'static, M2: Send +\nSync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a single unary gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a single unary gRPC request.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":11330,"byte_end":11367,"line_start":144,"line_end":144,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":12013,"byte_end":12029,"line_start":164,"line_end":164,"column_start":18,"column_end":34},"name":"client_streaming","qualname":"<Grpc<T>>::client_streaming","value":"pub async fn client_streaming<S, M1, M2, C,\n'_>(&'_ mut Self, Request<S>, PathAndQuery, C) -> /*impl Trait*/ where\nT: GrpcService<BoxBody>, T::ResponseBody: Body + Send + 'static,\n<T::ResponseBody as Body>::Error: Into<crate::Error>, S: Stream<Item = M1> +\nSend + 'static, C: Codec<Encode = M1, Decode = M1>, M1: Send + Sync + 'static,\nM2: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a client side streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a client side streaming gRPC request.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":11949,"byte_end":11995,"line_start":163,"line_end":163,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":13183,"byte_end":13199,"line_start":201,"line_end":201,"column_start":18,"column_end":34},"name":"server_streaming","qualname":"<Grpc<T>>::server_streaming","value":"pub async fn server_streaming<M1, M2, C,\n'_>(&'_ mut Self, Request<M1>, PathAndQuery, C) -> /*impl Trait*/ where\nT: GrpcService<BoxBody>, T::ResponseBody: Body + Send + 'static,\n<T::ResponseBody as Body>::Error: Into<crate::Error>, C: Codec<Encode = M1,\nDecode = M1>, M1: Send + Sync + 'static, M2: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a server side streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a server side streaming gRPC request.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":13119,"byte_end":13165,"line_start":200,"line_end":200,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":13829,"byte_end":13838,"line_start":220,"line_end":220,"column_start":18,"column_end":27},"name":"streaming","qualname":"<Grpc<T>>::streaming","value":"pub async fn streaming<S, M1, M2, C,\n'_>(&'_ mut Self, Request<S>, PathAndQuery, C) -> /*impl Trait*/ where\nT: GrpcService<BoxBody>, T::ResponseBody: Body + Send + 'static,\n<T::ResponseBody as Body>::Error: Into<crate::Error>, S: Stream<Item = M1> +\nSend + 'static, C: Codec<Encode = M1, Decode = M1>, M1: Send + Sync + 'static,\nM2: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a bi-directional streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Send a bi-directional streaming gRPC request.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":13762,"byte_end":13811,"line_start":219,"line_end":219,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":154},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18543,"byte_end":18554,"line_start":13,"line_end":13,"column_start":11,"column_end":22},"name":"GrpcService","qualname":"::client::service::GrpcService","value":"GrpcService<ReqBody>","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"decl_id":null,"docs":" Definition of the gRPC trait alias for [`tower_service`].","sig":null,"attributes":[{"value":"/ Definition of the gRPC trait alias for [`tower_service`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18265,"byte_end":18326,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18327,"byte_end":18330,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait enforces that all tower services provided to [`Grpc`] implements","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18331,"byte_end":18410,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ the correct traits.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18411,"byte_end":18434,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18435,"byte_end":18438,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Grpc`]: ../client/struct.Grpc.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18439,"byte_end":18479,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/ [`tower_service`]: https://docs.rs/tower-service","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18480,"byte_end":18532,"line_start":12,"line_end":12,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":156},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18620,"byte_end":18632,"line_start":15,"line_end":15,"column_start":10,"column_end":22},"name":"ResponseBody","qualname":"::client::service::GrpcService::ResponseBody","value":"type ResponseBody: Body;","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" Responses body given by the service.\n","sig":null,"attributes":[{"value":"/ Responses body given by the service.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18570,"byte_end":18610,"line_start":14,"line_end":14,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":157},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18689,"byte_end":18694,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::client::service::GrpcService::Error","value":"type Error: Into<crate::Error>;","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" Errors produced by the service.\n","sig":null,"attributes":[{"value":"/ Errors produced by the service.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18644,"byte_end":18679,"line_start":16,"line_end":16,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":158},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18760,"byte_end":18766,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"name":"Future","qualname":"::client::service::GrpcService::Future","value":"type Future: Future<Output = Result<http::Response<Self::ResponseBody>, Self::Error>>;","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" The future response value.\n","sig":null,"attributes":[{"value":"/ The future response value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18720,"byte_end":18750,"line_start":18,"line_end":18,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18971,"byte_end":18981,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::client::service::GrpcService::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" Returns `Ready` when the service is able to process requests.","sig":null,"attributes":[{"value":"/ Returns `Ready` when the service is able to process requests.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18847,"byte_end":18912,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18917,"byte_end":18920,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Reference [`Service::poll_ready`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":18925,"byte_end":18963,"line_start":23,"line_end":23,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":19170,"byte_end":19174,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"call","qualname":"::client::service::GrpcService::call","value":"pub fn call(&mut Self, http::Request<ReqBody>) -> Self::Future","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" Process the request and return the response asynchronously.","sig":null,"attributes":[{"value":"/ Process the request and return the response asynchronously.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":19054,"byte_end":19117,"line_start":26,"line_end":26,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":19122,"byte_end":19125,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Reference [`Service::call`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":19130,"byte_end":19162,"line_start":28,"line_end":28,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":176},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":207},{"krate":0,"index":325},{"krate":0,"index":414},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":502},{"krate":0,"index":506}],"decl_id":null,"docs":" Generic encoding and decoding.","sig":null,"attributes":[{"value":"/ Generic encoding and decoding.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":19820,"byte_end":19854,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":19855,"byte_end":19858,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the generic `Codec`, `Encoder` and `Decoder` traits","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":19859,"byte_end":19935,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ and a protobuf codec based on prost.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":19936,"byte_end":19976,"line_start":4,"line_end":4,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3449},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":22362,"byte_end":22371,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DecodeBuf","qualname":"::codec::buffer::DecodeBuf","value":"DecodeBuf {  }","parent":null,"children":[{"krate":0,"index":3451},{"krate":0,"index":3452}],"decl_id":null,"docs":" A specialized buffer to decode gRPC messages from.\n","sig":null,"attributes":[{"value":"/ A specialized buffer to decode gRPC messages from.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":22279,"byte_end":22333,"line_start":4,"line_end":4,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3456},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":22507,"byte_end":22516,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"EncodeBuf","qualname":"::codec::buffer::EncodeBuf","value":"EncodeBuf {  }","parent":null,"children":[{"krate":0,"index":3458}],"decl_id":null,"docs":" A specialized buffer to encode gRPC messages into.\n","sig":null,"attributes":[{"value":"/ A specialized buffer to encode gRPC messages into.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":22424,"byte_end":22478,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":23559,"byte_end":23566,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"reserve","qualname":"<EncodeBuf>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted\n into the buffer.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more bytes to be inserted","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":23275,"byte_end":23348,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ into the buffer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":23353,"byte_end":23373,"line_start":56,"line_end":56,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":23378,"byte_end":23381,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ More than `additional` bytes may be reserved in order to avoid frequent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":23386,"byte_end":23461,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ reallocations. A call to `reserve` may result in an allocation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":23466,"byte_end":23533,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":23538,"byte_end":23547,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":279},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":25683,"byte_end":25692,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"Streaming","qualname":"::codec::decode::Streaming","value":"Streaming {  }","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"decl_id":null,"docs":" Streaming requests and responses.","sig":null,"attributes":[{"value":"/ Streaming requests and responses.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":25496,"byte_end":25533,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":25534,"byte_end":25537,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This will wrap some inner [`Body`] and [`Decoder`] and provide an interface","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":25538,"byte_end":25617,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ to fetch the message stream and trailing metadata","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":25618,"byte_end":25671,"line_start":22,"line_end":22,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":27256,"byte_end":27267,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"new_request","qualname":"<Streaming<T>>::new_request","value":"pub fn new_request<B, D>(D, B) -> Self where B: Body + Send + 'static,\nB::Error: Into<crate::Error>, D: Decoder<Item = T, Error = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29167,"byte_end":29174,"line_start":152,"line_end":152,"column_start":18,"column_end":25},"name":"message","qualname":"<Streaming<T>>::message","value":"pub async fn message<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Fetch the next message from this stream.\n ```rust\n # use tonic::{Streaming, Status, codec::Decoder};\n # use std::fmt::Debug;\n # async fn next_message_ex<T, D>(mut request: Streaming<T>) -> Result<(), Status>\n # where T: Debug,\n # D: Decoder<Item = T, Error = Status> + Send  + 'static,\n # {\n if let Some(next_message) = request.message().await? {\n     println!(\"{:?}\", next_message);\n }\n # Ok(())\n # }\n ```\n","sig":null,"attributes":[{"value":"/ Fetch the next message from this stream.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":28648,"byte_end":28692,"line_start":138,"line_end":138,"column_start":5,"column_end":49}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":28697,"byte_end":28708,"line_start":139,"line_end":139,"column_start":5,"column_end":16}},{"value":"/ # use tonic::{Streaming, Status, codec::Decoder};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":28713,"byte_end":28766,"line_start":140,"line_end":140,"column_start":5,"column_end":58}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":28771,"byte_end":28797,"line_start":141,"line_end":141,"column_start":5,"column_end":31}},{"value":"/ # async fn next_message_ex<T, D>(mut request: Streaming<T>) -> Result<(), Status>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":28802,"byte_end":28887,"line_start":142,"line_end":142,"column_start":5,"column_end":90}},{"value":"/ # where T: Debug,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":28892,"byte_end":28913,"line_start":143,"line_end":143,"column_start":5,"column_end":26}},{"value":"/ # D: Decoder<Item = T, Error = Status> + Send  + 'static,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":28918,"byte_end":28979,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/ # {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":28984,"byte_end":28991,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ if let Some(next_message) = request.message().await? {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":28996,"byte_end":29054,"line_start":146,"line_end":146,"column_start":5,"column_end":63}},{"value":"/     println!(\"{:?}\", next_message);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29059,"byte_end":29098,"line_start":147,"line_end":147,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29103,"byte_end":29108,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29113,"byte_end":29125,"line_start":149,"line_end":149,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29130,"byte_end":29137,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29142,"byte_end":29149,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":30020,"byte_end":30028,"line_start":175,"line_end":175,"column_start":18,"column_end":26},"name":"trailers","qualname":"<Streaming<T>>::trailers","value":"pub async fn trailers<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Fetch the trailing metadata.","sig":null,"attributes":[{"value":"/ Fetch the trailing metadata.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29423,"byte_end":29455,"line_start":160,"line_end":160,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29460,"byte_end":29463,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This will drain the stream of all its messages to receive the trailing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29468,"byte_end":29542,"line_start":162,"line_end":162,"column_start":5,"column_end":79}},{"value":"/ metadata. If [`Streaming::message`] returns `None` then this function","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29547,"byte_end":29620,"line_start":163,"line_end":163,"column_start":5,"column_end":78}},{"value":"/ will not need to poll for trailers since the body was totally consumed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29625,"byte_end":29700,"line_start":164,"line_end":164,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29705,"byte_end":29708,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29713,"byte_end":29724,"line_start":166,"line_end":166,"column_start":5,"column_end":16}},{"value":"/ # use tonic::{Streaming, Status};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29729,"byte_end":29766,"line_start":167,"line_end":167,"column_start":5,"column_end":42}},{"value":"/ # async fn trailers_ex<T>(mut request: Streaming<T>) -> Result<(), Status> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29771,"byte_end":29851,"line_start":168,"line_end":168,"column_start":5,"column_end":85}},{"value":"/ if let Some(metadata) = request.trailers().await? {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29856,"byte_end":29911,"line_start":169,"line_end":169,"column_start":5,"column_end":60}},{"value":"/     println!(\"{:?}\", metadata);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29916,"byte_end":29951,"line_start":170,"line_end":170,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29956,"byte_end":29961,"line_start":171,"line_end":171,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29966,"byte_end":29978,"line_start":172,"line_end":172,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29983,"byte_end":29990,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":29995,"byte_end":30002,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3671},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/prost.rs","byte_start":46101,"byte_end":46111,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ProstCodec","qualname":"::codec::prost::ProstCodec","value":"ProstCodec {  }","parent":null,"children":[{"krate":0,"index":3674}],"decl_id":null,"docs":" A [`Codec`] that implements `application/grpc+proto` via the prost library..\n","sig":null,"attributes":[{"value":"/ A [`Codec`] that implements `application/grpc+proto` via the prost library..","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/prost.rs","byte_start":45985,"byte_end":46065,"line_start":7,"line_end":7,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":3683},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/prost.rs","byte_start":46769,"byte_end":46781,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"ProstEncoder","qualname":"::codec::prost::ProstEncoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`Encoder`] that knows how to encode `T`.\n","sig":null,"attributes":[{"value":"/ A [`Encoder`] that knows how to encode `T`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/prost.rs","byte_start":46677,"byte_end":46724,"line_start":39,"line_end":39,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":3696},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/prost.rs","byte_start":47198,"byte_end":47210,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"ProstDecoder","qualname":"::codec::prost::ProstDecoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`Decoder`] that knows how to decode `U`.\n","sig":null,"attributes":[{"value":"/ A [`Decoder`] that knows how to decode `U`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/prost.rs","byte_start":47106,"byte_end":47153,"line_start":55,"line_end":55,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":495},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":20778,"byte_end":20783,"line_start":36,"line_end":36,"column_start":11,"column_end":16},"name":"Codec","qualname":"::codec::Codec","value":"Codec","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501}],"decl_id":null,"docs":" Trait that knows how to encode and decode gRPC messages.\n","sig":null,"attributes":[{"value":"/ Trait that knows how to encode and decode gRPC messages.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":20707,"byte_end":20767,"line_start":35,"line_end":35,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":496},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":20826,"byte_end":20832,"line_start":38,"line_end":38,"column_start":10,"column_end":16},"name":"Encode","qualname":"::codec::Codec::Encode","value":"type Encode: Send + 'static;","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" The encodable message.\n","sig":null,"attributes":[{"value":"/ The encodable message.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":20790,"byte_end":20816,"line_start":37,"line_end":37,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":497},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":20890,"byte_end":20896,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Decode","qualname":"::codec::Codec::Decode","value":"type Decode: Send + 'static;","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" The decodable message.\n","sig":null,"attributes":[{"value":"/ The decodable message.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":20854,"byte_end":20880,"line_start":39,"line_end":39,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":498},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":20971,"byte_end":20978,"line_start":43,"line_end":43,"column_start":10,"column_end":17},"name":"Encoder","qualname":"::codec::Codec::Encoder","value":"type Encoder: Encoder<Item = Self::Encode, Error = Status> + Send + 'static;","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" The encoder that can encode a message.\n","sig":null,"attributes":[{"value":"/ The encoder that can encode a message.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":20919,"byte_end":20961,"line_start":42,"line_end":42,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":499},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21099,"byte_end":21106,"line_start":45,"line_end":45,"column_start":10,"column_end":17},"name":"Decoder","qualname":"::codec::Codec::Decoder","value":"type Decoder: Decoder<Item = Self::Decode, Error = Status> + Send + 'static;","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" The encoder that can decode a message.\n","sig":null,"attributes":[{"value":"/ The encoder that can decode a message.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21047,"byte_end":21089,"line_start":44,"line_end":44,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21206,"byte_end":21213,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"encoder","qualname":"::codec::Codec::encoder","value":"pub fn encoder(&mut Self) -> Self::Encoder","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" Fetch the encoder.\n","sig":null,"attributes":[{"value":"/ Fetch the encoder.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21176,"byte_end":21198,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21277,"byte_end":21284,"line_start":50,"line_end":50,"column_start":8,"column_end":15},"name":"decoder","qualname":"::codec::Codec::decoder","value":"pub fn decoder(&mut Self) -> Self::Decoder","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" Fetch the decoder.\n","sig":null,"attributes":[{"value":"/ Fetch the decoder.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21247,"byte_end":21269,"line_start":49,"line_end":49,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":502},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21358,"byte_end":21365,"line_start":54,"line_end":54,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::Encoder","value":"Encoder","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505}],"decl_id":null,"docs":" Encodes gRPC message types\n","sig":null,"attributes":[{"value":"/ Encodes gRPC message types","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21317,"byte_end":21347,"line_start":53,"line_end":53,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":503},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21411,"byte_end":21415,"line_start":56,"line_end":56,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::Encoder::Item","value":"type Item;","parent":{"krate":0,"index":502},"children":[],"decl_id":null,"docs":" The type that is encoded.\n","sig":null,"attributes":[{"value":"/ The type that is encoded.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21372,"byte_end":21401,"line_start":55,"line_end":55,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":504},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21529,"byte_end":21534,"line_start":61,"line_end":61,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":502},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21422,"byte_end":21454,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21459,"byte_end":21462,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The type of unrecoverable frame encoding errors.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21467,"byte_end":21519,"line_start":60,"line_end":60,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21613,"byte_end":21619,"line_start":64,"line_end":64,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::Encoder::encode","value":"pub fn encode(&mut Self, Self::Item, &mut EncodeBuf)\n-> Result<(), Self::Error>","parent":{"krate":0,"index":502},"children":[],"decl_id":null,"docs":" Encodes a message into the provided buffer.\n","sig":null,"attributes":[{"value":"/ Encodes a message into the provided buffer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21558,"byte_end":21605,"line_start":63,"line_end":63,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":506},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21746,"byte_end":21753,"line_start":68,"line_end":68,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"decl_id":null,"docs":" Decodes gRPC message types\n","sig":null,"attributes":[{"value":"/ Decodes gRPC message types","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21705,"byte_end":21735,"line_start":67,"line_end":67,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":507},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21799,"byte_end":21803,"line_start":70,"line_end":70,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" The type that is decoded.\n","sig":null,"attributes":[{"value":"/ The type that is decoded.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21760,"byte_end":21789,"line_start":69,"line_end":69,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":508},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21872,"byte_end":21877,"line_start":73,"line_end":73,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.\n","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21810,"byte_end":21862,"line_start":72,"line_end":72,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":22123,"byte_end":22129,"line_start":80,"line_end":80,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::Decoder::decode","value":"pub fn decode(&mut Self, &mut DecodeBuf)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Decode a message from the buffer.","sig":null,"attributes":[{"value":"/ Decode a message from the buffer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21901,"byte_end":21938,"line_start":75,"line_end":75,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21943,"byte_end":21946,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The buffer will contain exactly the bytes of a full message. There","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":21951,"byte_end":22021,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ is no need to get the length from the bytes, gRPC framing is handled","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":22026,"byte_end":22098,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ for you.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/mod.rs","byte_start":22103,"byte_end":22115,"line_start":79,"line_end":79,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":510},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metadata","qualname":"::metadata","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":588},{"krate":0,"index":685},{"krate":0,"index":1075},{"krate":0,"index":1293},{"krate":0,"index":1296},{"krate":0,"index":1299},{"krate":0,"index":1302},{"krate":0,"index":1305},{"krate":0,"index":1308},{"krate":0,"index":1311},{"krate":0,"index":1314},{"krate":0,"index":1317},{"krate":0,"index":1320},{"krate":0,"index":1323},{"krate":0,"index":1326},{"krate":0,"index":1329},{"krate":0,"index":1332},{"krate":0,"index":1335},{"krate":0,"index":1338},{"krate":0,"index":1341},{"krate":0,"index":1344},{"krate":0,"index":1347},{"krate":0,"index":1350},{"krate":0,"index":1353},{"krate":0,"index":1356},{"krate":0,"index":1359},{"krate":0,"index":1362},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1371}],"decl_id":null,"docs":" Contains data structures and utilities for handling gRPC custom metadata.\n","sig":null,"attributes":[{"value":"/ Contains data structures and utilities for handling gRPC custom metadata.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":52320,"byte_end":52397,"line_start":1,"line_end":1,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":3709},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":53842,"byte_end":53862,"line_start":10,"line_end":10,"column_start":12,"column_end":32},"name":"InvalidMetadataValue","qualname":"::metadata::encoding::InvalidMetadataValue","value":"InvalidMetadataValue {  }","parent":null,"children":[{"krate":0,"index":3710}],"decl_id":null,"docs":" A possible error when converting a `MetadataValue` from a string or byte\n slice.\n","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataValue` from a string or byte","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":53720,"byte_end":53796,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":53797,"byte_end":53807,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":540},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":54036,"byte_end":54042,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::encoding::value_encoding::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":54079,"byte_end":54087,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"is_empty","qualname":"::metadata::encoding::value_encoding::Sealed::is_empty","value":"pub fn is_empty(&[u8]) -> bool","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":54146,"byte_end":54156,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"::metadata::encoding::value_encoding::Sealed::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<HeaderValue, InvalidMetadataValueBytes>","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":54257,"byte_end":54268,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"from_shared","qualname":"::metadata::encoding::value_encoding::Sealed::from_shared","value":"pub fn from_shared(Bytes) -> Result<HeaderValue, InvalidMetadataValueBytes>","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":54369,"byte_end":54380,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"from_static","qualname":"::metadata::encoding::value_encoding::Sealed::from_static","value":"pub fn from_static(&'static str) -> HeaderValue","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":54453,"byte_end":54459,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"decode","qualname":"::metadata::encoding::value_encoding::Sealed::decode","value":"pub fn decode(&[u8]) -> Result<Bytes, InvalidMetadataValueBytes>","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":54554,"byte_end":54560,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"equals","qualname":"::metadata::encoding::value_encoding::Sealed::equals","value":"pub fn equals(&HeaderValue, &[u8]) -> bool","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":54632,"byte_end":54644,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"values_equal","qualname":"::metadata::encoding::value_encoding::Sealed::values_equal","value":"pub fn values_equal(&HeaderValue, &HeaderValue) -> bool","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":54723,"byte_end":54726,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"fmt","qualname":"::metadata::encoding::value_encoding::Sealed::fmt","value":"pub fn fmt(&HeaderValue, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":549},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":54811,"byte_end":54824,"line_start":47,"line_end":47,"column_start":11,"column_end":24},"name":"ValueEncoding","qualname":"::metadata::encoding::ValueEncoding","value":"ValueEncoding: Clone + Eq + PartialEq + Hash + self::value_encoding::Sealed","parent":null,"children":[{"krate":0,"index":550}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55081,"byte_end":55093,"line_start":51,"line_end":51,"column_start":8,"column_end":20},"name":"is_valid_key","qualname":"::metadata::encoding::ValueEncoding::is_valid_key","value":"pub fn is_valid_key(&str) -> bool","parent":{"krate":0,"index":549},"children":[],"decl_id":null,"docs":" Returns true if the provided key is valid for this ValueEncoding type.\n For example, `Ascii::is_valid_key(\"a\") == true`,\n `Ascii::is_valid_key(\"a-bin\") == false`.\n","sig":null,"attributes":[{"value":"/ Returns true if the provided key is valid for this ValueEncoding type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":54893,"byte_end":54967,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ For example, `Ascii::is_valid_key(\"a\") == true`,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":54972,"byte_end":55024,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ `Ascii::is_valid_key(\"a-bin\") == false`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55029,"byte_end":55073,"line_start":50,"line_end":50,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":3716},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55633,"byte_end":55638,"line_start":64,"line_end":64,"column_start":10,"column_end":15},"name":"Ascii","qualname":"::metadata::encoding::Ascii","value":"pub enum Ascii { }","parent":null,"children":[],"decl_id":null,"docs":" gRPC metadata values can be either ASCII strings or binary. Note that only\n visible ASCII characters (32-127) are permitted.\n This type should never be instantiated -- in fact, it's impossible\n to, because there's no variants to instantiate. Instead, it's just used as\n a type parameter for [`MetadataKey`] and [`MetadataValue`].","sig":null,"attributes":[{"value":"/ gRPC metadata values can be either ASCII strings or binary. Note that only","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55117,"byte_end":55195,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/ visible ASCII characters (32-127) are permitted.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55196,"byte_end":55248,"line_start":55,"line_end":55,"column_start":1,"column_end":53}},{"value":"/ This type should never be instantiated -- in fact, it's impossible","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55249,"byte_end":55319,"line_start":56,"line_end":56,"column_start":1,"column_end":71}},{"value":"/ to, because there's no variants to instantiate. Instead, it's just used as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55320,"byte_end":55398,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/ a type parameter for [`MetadataKey`] and [`MetadataValue`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55399,"byte_end":55462,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55463,"byte_end":55466,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [`MetadataKey`]: struct.MetadataKey.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55467,"byte_end":55511,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ [`MetadataValue`]: struct.MetadataValue.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55512,"byte_end":55560,"line_start":61,"line_end":61,"column_start":1,"column_end":49}},{"value":"non_exhaustive","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55606,"byte_end":55623,"line_start":63,"line_end":63,"column_start":1,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":3730},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":56091,"byte_end":56097,"line_start":75,"line_end":75,"column_start":10,"column_end":16},"name":"Binary","qualname":"::metadata::encoding::Binary","value":"pub enum Binary { }","parent":null,"children":[],"decl_id":null,"docs":" gRPC metadata values can be either ASCII strings or binary.\n This type should never be instantiated -- in fact, it's impossible\n to, because there's no variants to instantiate. Instead, it's just used as\n a type parameter for [`MetadataKey`] and [`MetadataValue`].","sig":null,"attributes":[{"value":"/ gRPC metadata values can be either ASCII strings or binary.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55643,"byte_end":55706,"line_start":66,"line_end":66,"column_start":1,"column_end":64}},{"value":"/ This type should never be instantiated -- in fact, it's impossible","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55707,"byte_end":55777,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"/ to, because there's no variants to instantiate. Instead, it's just used as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55778,"byte_end":55856,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ a type parameter for [`MetadataKey`] and [`MetadataValue`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55857,"byte_end":55920,"line_start":69,"line_end":69,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55921,"byte_end":55924,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ [`MetadataKey`]: struct.MetadataKey.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55925,"byte_end":55969,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/ [`MetadataValue`]: struct.MetadataValue.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":55970,"byte_end":56018,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"non_exhaustive","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":56064,"byte_end":56081,"line_start":74,"line_end":74,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3744},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":59887,"byte_end":59912,"line_start":206,"line_end":206,"column_start":12,"column_end":37},"name":"InvalidMetadataValueBytes","qualname":"::metadata::encoding::InvalidMetadataValueBytes","value":"","parent":null,"children":[],"decl_id":null,"docs":" A possible error when converting a `MetadataValue` from a string or byte\n slice.\n","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataValue` from a string or byte","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":59765,"byte_end":59841,"line_start":203,"line_end":203,"column_start":1,"column_end":77}},{"value":"/ slice.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":59842,"byte_end":59852,"line_start":204,"line_end":204,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":3752},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":60793,"byte_end":60804,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"MetadataKey","qualname":"::metadata::key::MetadataKey","value":"MetadataKey {  }","parent":null,"children":[{"krate":0,"index":3754},{"krate":0,"index":3755}],"decl_id":null,"docs":" Represents a custom metadata field name.","sig":null,"attributes":[{"value":"/ Represents a custom metadata field name.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":60530,"byte_end":60574,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":60575,"byte_end":60578,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `MetadataKey` is used as the [`MetadataMap`] key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":60579,"byte_end":60632,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":60633,"byte_end":60636,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`HeaderMap`]: struct.HeaderMap.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":60637,"byte_end":60677,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/ [`MetadataMap`]: struct.MetadataMap.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":60678,"byte_end":60722,"line_start":16,"line_end":16,"column_start":1,"column_end":45}},{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":60761,"byte_end":60781,"line_start":18,"line_end":18,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":3774},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":61134,"byte_end":61152,"line_start":28,"line_end":28,"column_start":12,"column_end":30},"name":"InvalidMetadataKey","qualname":"::metadata::key::InvalidMetadataKey","value":"InvalidMetadataKey {  }","parent":null,"children":[{"krate":0,"index":3775}],"decl_id":null,"docs":" A possible error when converting a `MetadataKey` from another type.\n","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataKey` from another type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":61034,"byte_end":61105,"line_start":26,"line_end":26,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":620},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":61209,"byte_end":61225,"line_start":33,"line_end":33,"column_start":10,"column_end":26},"name":"AsciiMetadataKey","qualname":"::metadata::key::AsciiMetadataKey","value":"MetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" An ascii metadata key.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":61173,"byte_end":61199,"line_start":32,"line_end":32,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":621},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":61284,"byte_end":61301,"line_start":35,"line_end":35,"column_start":10,"column_end":27},"name":"BinaryMetadataKey","qualname":"::metadata::key::BinaryMetadataKey","value":"MetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" A binary metadata key.\n","sig":null,"attributes":[{"value":"/ A binary metadata key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":61248,"byte_end":61274,"line_start":34,"line_end":34,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":61485,"byte_end":61495,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<MetadataKey<VE>>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self, InvalidMetadataKey>","parent":null,"children":[],"decl_id":null,"docs":" Converts a slice of bytes to a `MetadataKey`.","sig":null,"attributes":[{"value":"/ Converts a slice of bytes to a `MetadataKey`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":61372,"byte_end":61421,"line_start":38,"line_end":38,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":61426,"byte_end":61429,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This function normalizes the input.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":61434,"byte_end":61473,"line_start":40,"line_end":40,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63632,"byte_end":63643,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"from_static","qualname":"<MetadataKey<VE>>::from_static","value":"pub fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a static string to a `MetadataKey`.","sig":null,"attributes":[{"value":"/ Converts a static string to a `MetadataKey`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":61956,"byte_end":62004,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62009,"byte_end":62012,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics when the static string is a invalid metadata key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62017,"byte_end":62091,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62096,"byte_end":62099,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ This function requires the static string to only contain lowercase","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62104,"byte_end":62174,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ characters, numerals and symbols, as per the HTTP/2.0 specification","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62179,"byte_end":62250,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/ and header names internal representation within this library.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62255,"byte_end":62320,"line_start":63,"line_end":63,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62325,"byte_end":62328,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62333,"byte_end":62336,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62341,"byte_end":62355,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62360,"byte_end":62363,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62368,"byte_end":62375,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62380,"byte_end":62409,"line_start":69,"line_end":69,"column_start":5,"column_end":34}},{"value":"/ // Parsing a metadata key","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62414,"byte_end":62443,"line_start":70,"line_end":70,"column_start":5,"column_end":34}},{"value":"/ let CUSTOM_KEY: &'static str = \"custom-key\";","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62448,"byte_end":62496,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62501,"byte_end":62504,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let a = AsciiMetadataKey::from_bytes(b\"custom-key\").unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62509,"byte_end":62574,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ let b = AsciiMetadataKey::from_static(CUSTOM_KEY);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62579,"byte_end":62633,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62638,"byte_end":62659,"line_start":75,"line_end":75,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62664,"byte_end":62671,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62676,"byte_end":62679,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62684,"byte_end":62703,"line_start":78,"line_end":78,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62708,"byte_end":62737,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"/ // Parsing a metadata key that contains invalid symbols(s):","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62742,"byte_end":62805,"line_start":80,"line_end":80,"column_start":5,"column_end":68}},{"value":"/ AsciiMetadataKey::from_static(\"content{}{}length\"); // This line panics!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62810,"byte_end":62886,"line_start":81,"line_end":81,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62891,"byte_end":62898,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62903,"byte_end":62906,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62911,"byte_end":62930,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62935,"byte_end":62964,"line_start":85,"line_end":85,"column_start":5,"column_end":34}},{"value":"/ // Parsing a metadata key that contains invalid uppercase characters.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":62969,"byte_end":63042,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ let a = AsciiMetadataKey::from_static(\"foobar\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63047,"byte_end":63099,"line_start":87,"line_end":87,"column_start":5,"column_end":57}},{"value":"/ let b = AsciiMetadataKey::from_static(\"FOOBAR\"); // This line panics!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63104,"byte_end":63177,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63182,"byte_end":63189,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63194,"byte_end":63197,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63202,"byte_end":63221,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63226,"byte_end":63255,"line_start":92,"line_end":92,"column_start":5,"column_end":34}},{"value":"/ // Parsing a -bin metadata key as an Ascii key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63260,"byte_end":63311,"line_start":93,"line_end":93,"column_start":5,"column_end":56}},{"value":"/ let b = AsciiMetadataKey::from_static(\"hello-bin\"); // This line panics!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63316,"byte_end":63392,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63397,"byte_end":63404,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63409,"byte_end":63412,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63417,"byte_end":63436,"line_start":97,"line_end":97,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63441,"byte_end":63470,"line_start":98,"line_end":98,"column_start":5,"column_end":34}},{"value":"/ // Parsing a non-bin metadata key as an Binary key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63475,"byte_end":63530,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/ let b = BinaryMetadataKey::from_static(\"hello\"); // This line panics!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63535,"byte_end":63608,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63613,"byte_end":63620,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":64068,"byte_end":64074,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"as_str","qualname":"<MetadataKey<VE>>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a `str` representation of the metadata key.","sig":null,"attributes":[{"value":"/ Returns a `str` representation of the metadata key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63924,"byte_end":63979,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63984,"byte_end":63987,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The returned string will always be lower case.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":63992,"byte_end":64042,"line_start":116,"line_end":116,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":64047,"byte_end":64056,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":65964,"byte_end":65967,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"new","qualname":"<InvalidMetadataKey>::new","value":"pub fn new() -> InvalidMetadataKey","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3778},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69766,"byte_end":69777,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"MetadataMap","qualname":"::metadata::map::MetadataMap","value":"MetadataMap {  }","parent":null,"children":[{"krate":0,"index":3779}],"decl_id":null,"docs":" A set of gRPC custom metadata entries.","sig":null,"attributes":[{"value":"/ A set of gRPC custom metadata entries.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69124,"byte_end":69166,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69167,"byte_end":69170,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69171,"byte_end":69185,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69186,"byte_end":69189,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69190,"byte_end":69205,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69206,"byte_end":69209,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69210,"byte_end":69217,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69218,"byte_end":69247,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69248,"byte_end":69285,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69286,"byte_end":69289,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ map.insert(\"x-host\", \"example.com\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69290,"byte_end":69347,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69348,"byte_end":69399,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"[binary data]\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69400,"byte_end":69483,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69484,"byte_end":69487,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ assert!(map.contains_key(\"x-host\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69488,"byte_end":69528,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/ assert!(!map.contains_key(\"x-location\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69529,"byte_end":69574,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69575,"byte_end":69578,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), \"example.com\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69579,"byte_end":69637,"line_start":28,"line_end":28,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69638,"byte_end":69641,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ map.remove(\"x-host\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69642,"byte_end":69667,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69668,"byte_end":69671,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ assert!(!map.contains_key(\"x-host\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69672,"byte_end":69713,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69714,"byte_end":69721,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3786},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70012,"byte_end":70016,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"Iter","qualname":"::metadata::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3788}],"decl_id":null,"docs":" `MetadataMap` entry iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` entry iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69813,"byte_end":69846,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69847,"byte_end":69850,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Yields `KeyAndValueRef` values. The same header name may be yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69851,"byte_end":69922,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ more than once if it has more than one associated value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":69923,"byte_end":69983,"line_start":42,"line_end":42,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3794},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70310,"byte_end":70315,"line_start":53,"line_end":53,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::KeyAndValueRef::Ascii","value":"KeyAndValueRef::Ascii(&'a MetadataKey<Ascii>, &'a MetadataValue<Ascii>)","parent":{"krate":0,"index":3792},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70269,"byte_end":70305,"line_start":52,"line_end":52,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3798},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70412,"byte_end":70418,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::KeyAndValueRef::Binary","value":"KeyAndValueRef::Binary(&'a MetadataKey<Binary>, &'a MetadataValue<Binary>)","parent":{"krate":0,"index":3792},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70371,"byte_end":70407,"line_start":54,"line_end":54,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3792},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70244,"byte_end":70258,"line_start":51,"line_end":51,"column_start":10,"column_end":24},"name":"KeyAndValueRef","qualname":"::metadata::map::KeyAndValueRef","value":"pub enum KeyAndValueRef<'a> {\n    Ascii(&'a MetadataKey<Ascii>, &'a MetadataValue<Ascii>),\n    Binary(&'a MetadataKey<Binary>, &'a MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":3794},{"krate":0,"index":3798}],"decl_id":null,"docs":" Reference to a key and an associated value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\") key.\n","sig":null,"attributes":[{"value":"/ Reference to a key and an associated value in a `MetadataMap`. It can point","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70088,"byte_end":70167,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ to either an ascii or a binary (\"*-bin\") key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70168,"byte_end":70217,"line_start":49,"line_end":49,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3807},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70700,"byte_end":70705,"line_start":63,"line_end":63,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::KeyAndMutValueRef::Ascii","value":"KeyAndMutValueRef::Ascii(&'a MetadataKey<Ascii>, &'a mut MetadataValue<Ascii>)","parent":{"krate":0,"index":3805},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70659,"byte_end":70695,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3811},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70806,"byte_end":70812,"line_start":65,"line_end":65,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::KeyAndMutValueRef::Binary","value":"KeyAndMutValueRef::Binary(&'a MetadataKey<Binary>, &'a mut MetadataValue<Binary>)","parent":{"krate":0,"index":3805},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70765,"byte_end":70801,"line_start":64,"line_end":64,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3805},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70631,"byte_end":70648,"line_start":61,"line_end":61,"column_start":10,"column_end":27},"name":"KeyAndMutValueRef","qualname":"::metadata::map::KeyAndMutValueRef","value":"pub enum KeyAndMutValueRef<'a> {\n    Ascii(&'a MetadataKey<Ascii>, &'a mut MetadataValue<Ascii>),\n    Binary(&'a MetadataKey<Binary>, &'a mut MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":3807},{"krate":0,"index":3811}],"decl_id":null,"docs":" Reference to a key and an associated value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\") key.\n","sig":null,"attributes":[{"value":"/ Reference to a key and an associated value in a `MetadataMap`. It can point","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70475,"byte_end":70554,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ to either an ascii or a binary (\"*-bin\") key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70555,"byte_end":70604,"line_start":59,"line_end":59,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3818},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":71084,"byte_end":71091,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::metadata::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":3820}],"decl_id":null,"docs":" `MetadataMap` entry iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` entry iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70873,"byte_end":70906,"line_start":68,"line_end":68,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70907,"byte_end":70910,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Yields `(&MetadataKey, &mut value)` tuples. The same header name may be yielded","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70911,"byte_end":70994,"line_start":70,"line_end":70,"column_start":1,"column_end":84}},{"value":"/ more than once if it has more than one associated value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":70995,"byte_end":71055,"line_start":71,"line_end":71,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3824},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":71268,"byte_end":71278,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"ValueDrain","qualname":"::metadata::map::ValueDrain","value":"ValueDrain {  }","parent":null,"children":[{"krate":0,"index":3827},{"krate":0,"index":3828}],"decl_id":null,"docs":" A drain iterator of all values associated with a single metadata key.\n","sig":null,"attributes":[{"value":"/ A drain iterator of all values associated with a single metadata key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":71166,"byte_end":71239,"line_start":77,"line_end":77,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3833},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":71596,"byte_end":71600,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"Keys","qualname":"::metadata::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":3835}],"decl_id":null,"docs":" An iterator over `MetadataMap` keys.","sig":null,"attributes":[{"value":"/ An iterator over `MetadataMap` keys.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":71405,"byte_end":71445,"line_start":84,"line_end":84,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":71446,"byte_end":71449,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Yields `KeyRef` values. Each header name is yielded only once, even if it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":71450,"byte_end":71527,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ has more than one associated value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":71528,"byte_end":71567,"line_start":87,"line_end":87,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3841},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":71862,"byte_end":71867,"line_start":98,"line_end":98,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::KeyRef::Ascii","value":"KeyRef::Ascii(&'a MetadataKey<Ascii>)","parent":{"krate":0,"index":3839},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":71821,"byte_end":71857,"line_start":97,"line_end":97,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3844},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":71938,"byte_end":71944,"line_start":100,"line_end":100,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::KeyRef::Binary","value":"KeyRef::Binary(&'a MetadataKey<Binary>)","parent":{"krate":0,"index":3839},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":71897,"byte_end":71933,"line_start":99,"line_end":99,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3839},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":71804,"byte_end":71810,"line_start":96,"line_end":96,"column_start":10,"column_end":16},"name":"KeyRef","qualname":"::metadata::map::KeyRef","value":"pub enum KeyRef<'a> {\n    Ascii(&'a MetadataKey<Ascii>),\n    Binary(&'a MetadataKey<Binary>),\n}","parent":null,"children":[{"krate":0,"index":3841},{"krate":0,"index":3844}],"decl_id":null,"docs":" Reference to a key in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\") key.\n","sig":null,"attributes":[{"value":"/ Reference to a key in a `MetadataMap`. It can point","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":71672,"byte_end":71727,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"/ to either an ascii or a binary (\"*-bin\") key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":71728,"byte_end":71777,"line_start":94,"line_end":94,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3850},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":72133,"byte_end":72139,"line_start":108,"line_end":108,"column_start":12,"column_end":18},"name":"Values","qualname":"::metadata::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":3852}],"decl_id":null,"docs":" `MetadataMap` value iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` value iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":71974,"byte_end":72007,"line_start":103,"line_end":103,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":72008,"byte_end":72011,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Yields `ValueRef` values. Each value contained in the `MetadataMap` will be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":72012,"byte_end":72091,"line_start":105,"line_end":105,"column_start":1,"column_end":80}},{"value":"/ yielded.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":72092,"byte_end":72104,"line_start":106,"line_end":106,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3858},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":72533,"byte_end":72538,"line_start":119,"line_end":119,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::ValueRef::Ascii","value":"ValueRef::Ascii(&'a MetadataValue<Ascii>)","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":72492,"byte_end":72528,"line_start":118,"line_end":118,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3861},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":72611,"byte_end":72617,"line_start":121,"line_end":121,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::ValueRef::Binary","value":"ValueRef::Binary(&'a MetadataValue<Binary>)","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":72570,"byte_end":72606,"line_start":120,"line_end":120,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3856},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":72473,"byte_end":72481,"line_start":117,"line_end":117,"column_start":10,"column_end":18},"name":"ValueRef","qualname":"::metadata::map::ValueRef","value":"pub enum ValueRef<'a> {\n    Ascii(&'a MetadataValue<Ascii>),\n    Binary(&'a MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":3858},{"krate":0,"index":3861}],"decl_id":null,"docs":" Reference to a value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\" key) value.\n","sig":null,"attributes":[{"value":"/ Reference to a value in a `MetadataMap`. It can point","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":72333,"byte_end":72390,"line_start":114,"line_end":114,"column_start":1,"column_end":58}},{"value":"/ to either an ascii or a binary (\"*-bin\" key) value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":72391,"byte_end":72446,"line_start":115,"line_end":115,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3867},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":72778,"byte_end":72787,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::metadata::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":3869}],"decl_id":null,"docs":" `MetadataMap` value iterator.","sig":null,"attributes":[{"value":"/ `MetadataMap` value iterator.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":72649,"byte_end":72682,"line_start":124,"line_end":124,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":72683,"byte_end":72686,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Each value contained in the `MetadataMap` will be yielded.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":72687,"byte_end":72749,"line_start":126,"line_end":126,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3875},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":73193,"byte_end":73198,"line_start":139,"line_end":139,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::metadata::map::ValueRefMut::Ascii","value":"ValueRefMut::Ascii(&'a mut MetadataValue<Ascii>)","parent":{"krate":0,"index":3873},"children":[],"decl_id":null,"docs":" An ascii metadata key and value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata key and value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":73152,"byte_end":73188,"line_start":138,"line_end":138,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3878},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":73275,"byte_end":73281,"line_start":141,"line_end":141,"column_start":5,"column_end":11},"name":"Binary","qualname":"::metadata::map::ValueRefMut::Binary","value":"ValueRefMut::Binary(&'a mut MetadataValue<Binary>)","parent":{"krate":0,"index":3873},"children":[],"decl_id":null,"docs":" A binary metadata key and value.\n","sig":null,"attributes":[{"value":"/ A binary metadata key and value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":73234,"byte_end":73270,"line_start":140,"line_end":140,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3873},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":73130,"byte_end":73141,"line_start":137,"line_end":137,"column_start":10,"column_end":21},"name":"ValueRefMut","qualname":"::metadata::map::ValueRefMut","value":"pub enum ValueRefMut<'a> {\n    Ascii(&'a mut MetadataValue<Ascii>),\n    Binary(&'a mut MetadataValue<Binary>),\n}","parent":null,"children":[{"krate":0,"index":3875},{"krate":0,"index":3878}],"decl_id":null,"docs":" Reference to a value in a `MetadataMap`. It can point\n to either an ascii or a binary (\"*-bin\" key) value.\n","sig":null,"attributes":[{"value":"/ Reference to a value in a `MetadataMap`. It can point","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":72990,"byte_end":73047,"line_start":134,"line_end":134,"column_start":1,"column_end":58}},{"value":"/ to either an ascii or a binary (\"*-bin\" key) value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":73048,"byte_end":73103,"line_start":135,"line_end":135,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3884},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":73414,"byte_end":73423,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"ValueIter","qualname":"::metadata::map::ValueIter","value":"ValueIter {  }","parent":null,"children":[{"krate":0,"index":3887},{"krate":0,"index":3888}],"decl_id":null,"docs":" An iterator of all values associated with a single metadata key.\n","sig":null,"attributes":[{"value":"/ An iterator of all values associated with a single metadata key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":73317,"byte_end":73385,"line_start":144,"line_end":144,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":3893},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":73654,"byte_end":73666,"line_start":153,"line_end":153,"column_start":12,"column_end":24},"name":"ValueIterMut","qualname":"::metadata::map::ValueIterMut","value":"ValueIterMut {  }","parent":null,"children":[{"krate":0,"index":3896},{"krate":0,"index":3897}],"decl_id":null,"docs":" An iterator of all values associated with a single metadata key.\n","sig":null,"attributes":[{"value":"/ An iterator of all values associated with a single metadata key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":73557,"byte_end":73625,"line_start":151,"line_end":151,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":3902},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":73968,"byte_end":73974,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"GetAll","qualname":"::metadata::map::GetAll","value":"GetAll {  }","parent":null,"children":[{"krate":0,"index":3905},{"krate":0,"index":3906}],"decl_id":null,"docs":" A view to all values stored in a single entry.","sig":null,"attributes":[{"value":"/ A view to all values stored in a single entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":73795,"byte_end":73845,"line_start":158,"line_end":158,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":73846,"byte_end":73849,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ This struct is returned by `MetadataMap::get_all` and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":73850,"byte_end":73907,"line_start":160,"line_end":160,"column_start":1,"column_end":58}},{"value":"/ `MetadataMap::get_all_bin`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":73908,"byte_end":73939,"line_start":161,"line_end":161,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3914},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":74283,"byte_end":74291,"line_start":173,"line_end":173,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::metadata::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":3911},"children":[],"decl_id":null,"docs":" An occupied entry\n","sig":null,"attributes":[{"value":"/ An occupied entry","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":74257,"byte_end":74278,"line_start":172,"line_end":172,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3917},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":74344,"byte_end":74350,"line_start":176,"line_end":176,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::metadata::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":3911},"children":[],"decl_id":null,"docs":" A vacant entry\n","sig":null,"attributes":[{"value":"/ A vacant entry","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":74321,"byte_end":74339,"line_start":175,"line_end":175,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":3911},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":74222,"byte_end":74227,"line_start":171,"line_end":171,"column_start":10,"column_end":15},"name":"Entry","qualname":"::metadata::map::Entry","value":"pub enum Entry<'a, VE: ValueEncoding> {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":3914},{"krate":0,"index":3917}],"decl_id":null,"docs":" A view into a single location in a `MetadataMap`, which may be vacant or\n occupied.\n","sig":null,"attributes":[{"value":"/ A view into a single location in a `MetadataMap`, which may be vacant or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":74105,"byte_end":74181,"line_start":168,"line_end":168,"column_start":1,"column_end":77}},{"value":"/ occupied.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":74182,"byte_end":74195,"line_start":169,"line_end":169,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3924},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":74525,"byte_end":74536,"line_start":183,"line_end":183,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::metadata::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":3927},{"krate":0,"index":3928}],"decl_id":null,"docs":" A view into a single empty location in a `MetadataMap`.","sig":null,"attributes":[{"value":"/ A view into a single empty location in a `MetadataMap`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":74376,"byte_end":74435,"line_start":179,"line_end":179,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":74436,"byte_end":74439,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ This struct is returned as part of the `Entry` enum.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":74440,"byte_end":74496,"line_start":181,"line_end":181,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3933},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":74816,"byte_end":74829,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::metadata::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":3936},{"krate":0,"index":3937}],"decl_id":null,"docs":" A view into a single occupied location in a `MetadataMap`.","sig":null,"attributes":[{"value":"/ A view into a single occupied location in a `MetadataMap`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":74664,"byte_end":74726,"line_start":188,"line_end":188,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":74727,"byte_end":74730,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ This struct is returned as part of the `Entry` enum.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":74731,"byte_end":74787,"line_start":190,"line_end":190,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75693,"byte_end":75696,"line_start":226,"line_end":226,"column_start":12,"column_end":15},"name":"new","qualname":"<MetadataMap>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `MetadataMap`.","sig":null,"attributes":[{"value":"/ Create an empty `MetadataMap`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75333,"byte_end":75367,"line_start":212,"line_end":212,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75372,"byte_end":75375,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The map will be created without any capacity. This function will not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75380,"byte_end":75452,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ allocate.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75457,"byte_end":75470,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75475,"byte_end":75478,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75483,"byte_end":75497,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75502,"byte_end":75505,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75510,"byte_end":75517,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75522,"byte_end":75551,"line_start":220,"line_end":220,"column_start":5,"column_end":34}},{"value":"/ let map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75556,"byte_end":75589,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75594,"byte_end":75597,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75602,"byte_end":75630,"line_start":223,"line_end":223,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(0, map.capacity());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75635,"byte_end":75669,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75674,"byte_end":75681,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75816,"byte_end":75828,"line_start":231,"line_end":231,"column_start":12,"column_end":24},"name":"from_headers","qualname":"<MetadataMap>::from_headers","value":"pub fn from_headers(http::HeaderMap) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an HTTP HeaderMap to a MetadataMap\n","sig":null,"attributes":[{"value":"/ Convert an HTTP HeaderMap to a MetadataMap","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75758,"byte_end":75804,"line_start":230,"line_end":230,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":76291,"byte_end":76303,"line_start":248,"line_end":248,"column_start":12,"column_end":24},"name":"into_headers","qualname":"<MetadataMap>::into_headers","value":"pub fn into_headers(Self) -> http::HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Convert a MetadataMap into a HTTP HeaderMap","sig":null,"attributes":[{"value":"/ Convert a MetadataMap into a HTTP HeaderMap","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75908,"byte_end":75955,"line_start":235,"line_end":235,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75960,"byte_end":75963,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75968,"byte_end":75982,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75987,"byte_end":75990,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75995,"byte_end":76002,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":76007,"byte_end":76036,"line_start":240,"line_end":240,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":76041,"byte_end":76078,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"example.com\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":76083,"byte_end":76140,"line_start":242,"line_end":242,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":76145,"byte_end":76148,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let http_map = map.into_headers();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":76153,"byte_end":76191,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":76196,"byte_end":76199,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(http_map.get(\"x-host\").unwrap(), \"example.com\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":76204,"byte_end":76267,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":76272,"byte_end":76279,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77243,"byte_end":77256,"line_start":277,"line_end":277,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<MetadataMap>::with_capacity","value":"pub fn with_capacity(usize) -> MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `MetadataMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Create an empty `MetadataMap` with the specified capacity.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":76558,"byte_end":76620,"line_start":259,"line_end":259,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":76625,"byte_end":76628,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ The returned map will allocate internal storage in order to hold about","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":76633,"byte_end":76707,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/ `capacity` elements without reallocating. However, this is a \"best","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":76712,"byte_end":76782,"line_start":262,"line_end":262,"column_start":5,"column_end":75}},{"value":"/ effort\" as there are usage patterns that could cause additional","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":76787,"byte_end":76854,"line_start":263,"line_end":263,"column_start":5,"column_end":72}},{"value":"/ allocations before `capacity` metadata entries are stored in the map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":76859,"byte_end":76932,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":76937,"byte_end":76940,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ More capacity than requested may be allocated.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":76945,"byte_end":76995,"line_start":266,"line_end":266,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77000,"byte_end":77003,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77008,"byte_end":77022,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77027,"byte_end":77030,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77035,"byte_end":77042,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77047,"byte_end":77076,"line_start":271,"line_end":271,"column_start":5,"column_end":34}},{"value":"/ let map: MetadataMap = MetadataMap::with_capacity(10);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77081,"byte_end":77139,"line_start":272,"line_end":272,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77144,"byte_end":77147,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77152,"byte_end":77180,"line_start":274,"line_end":274,"column_start":5,"column_end":33}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77185,"byte_end":77219,"line_start":275,"line_end":275,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77224,"byte_end":77231,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78228,"byte_end":78231,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"len","qualname":"<MetadataMap>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of metadata entries (ascii and binary) stored in the\n map.","sig":null,"attributes":[{"value":"/ Returns the number of metadata entries (ascii and binary) stored in the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77397,"byte_end":77472,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77477,"byte_end":77485,"line_start":284,"line_end":284,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77490,"byte_end":77493,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This number represents the total number of **values** stored in the map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77498,"byte_end":77574,"line_start":286,"line_end":286,"column_start":5,"column_end":81}},{"value":"/ This number can be greater than or equal to the number of **keys**","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77579,"byte_end":77649,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/ stored given that a single key may have more than one associated value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77654,"byte_end":77729,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77734,"byte_end":77737,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77742,"byte_end":77756,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77761,"byte_end":77764,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77769,"byte_end":77776,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77781,"byte_end":77810,"line_start":293,"line_end":293,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77815,"byte_end":77852,"line_start":294,"line_end":294,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77857,"byte_end":77860,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, map.len());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77865,"byte_end":77894,"line_start":296,"line_end":296,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77899,"byte_end":77902,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host-ip\", \"127.0.0.1\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77907,"byte_end":77965,"line_start":298,"line_end":298,"column_start":5,"column_end":63}},{"value":"/ map.insert_bin(\"x-host-name-bin\", MetadataValue::from_bytes(b\"localhost\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":77970,"byte_end":78049,"line_start":299,"line_end":299,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78054,"byte_end":78057,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, map.len());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78062,"byte_end":78091,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78096,"byte_end":78099,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host-ip\", \"text/html\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78104,"byte_end":78162,"line_start":303,"line_end":303,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78167,"byte_end":78170,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(3, map.len());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78175,"byte_end":78204,"line_start":305,"line_end":305,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78209,"byte_end":78216,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78997,"byte_end":79005,"line_start":333,"line_end":333,"column_start":12,"column_end":20},"name":"keys_len","qualname":"<MetadataMap>::keys_len","value":"pub fn keys_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of keys (ascii and binary) stored in the map.","sig":null,"attributes":[{"value":"/ Returns the number of keys (ascii and binary) stored in the map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78288,"byte_end":78356,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78361,"byte_end":78364,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This number will be less than or equal to `len()` as each key may have","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78369,"byte_end":78443,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ more than one associated value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78448,"byte_end":78483,"line_start":314,"line_end":314,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78488,"byte_end":78491,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78496,"byte_end":78510,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78515,"byte_end":78518,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78523,"byte_end":78530,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78535,"byte_end":78564,"line_start":319,"line_end":319,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78569,"byte_end":78606,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78611,"byte_end":78614,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, map.keys_len());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78619,"byte_end":78653,"line_start":322,"line_end":322,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78658,"byte_end":78661,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host-ip\", \"127.0.0.1\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78666,"byte_end":78724,"line_start":324,"line_end":324,"column_start":5,"column_end":63}},{"value":"/ map.insert_bin(\"x-host-name-bin\", MetadataValue::from_bytes(b\"localhost\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78729,"byte_end":78808,"line_start":325,"line_end":325,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78813,"byte_end":78816,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, map.keys_len());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78821,"byte_end":78855,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78860,"byte_end":78863,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host-ip\", \"text/html\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78868,"byte_end":78926,"line_start":329,"line_end":329,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78931,"byte_end":78934,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, map.keys_len());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78939,"byte_end":78973,"line_start":331,"line_end":331,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":78978,"byte_end":78985,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79416,"byte_end":79424,"line_start":351,"line_end":351,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MetadataMap>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79067,"byte_end":79116,"line_start":337,"line_end":337,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79121,"byte_end":79124,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79129,"byte_end":79143,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79148,"byte_end":79151,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79156,"byte_end":79163,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79168,"byte_end":79197,"line_start":342,"line_end":342,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79202,"byte_end":79239,"line_start":343,"line_end":343,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79244,"byte_end":79247,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79252,"byte_end":79280,"line_start":345,"line_end":345,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79285,"byte_end":79288,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79293,"byte_end":79350,"line_start":347,"line_end":347,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79355,"byte_end":79358,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79363,"byte_end":79392,"line_start":349,"line_end":349,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79397,"byte_end":79404,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79888,"byte_end":79893,"line_start":369,"line_end":369,"column_start":12,"column_end":17},"name":"clear","qualname":"<MetadataMap>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs. Keeps the allocated memory\n for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-value pairs. Keeps the allocated memory","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79485,"byte_end":79561,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/ for reuse.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79566,"byte_end":79580,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79585,"byte_end":79588,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79593,"byte_end":79607,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79612,"byte_end":79615,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79620,"byte_end":79627,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79632,"byte_end":79661,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79666,"byte_end":79703,"line_start":362,"line_end":362,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79708,"byte_end":79765,"line_start":363,"line_end":363,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79770,"byte_end":79773,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ map.clear();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79778,"byte_end":79794,"line_start":365,"line_end":365,"column_start":5,"column_end":21}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79799,"byte_end":79827,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/ assert!(map.capacity() > 0);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79832,"byte_end":79864,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79869,"byte_end":79876,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80504,"byte_end":80512,"line_start":390,"line_end":390,"column_start":12,"column_end":20},"name":"capacity","qualname":"<MetadataMap>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of custom metadata entries the map can hold without\n reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of custom metadata entries the map can hold without","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":79948,"byte_end":80022,"line_start":373,"line_end":373,"column_start":5,"column_end":79}},{"value":"/ reallocating.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80027,"byte_end":80044,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80049,"byte_end":80052,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This number is an approximation as certain usage patterns could cause","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80057,"byte_end":80130,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ additional allocations before the returned capacity is filled.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80135,"byte_end":80201,"line_start":377,"line_end":377,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80206,"byte_end":80209,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80214,"byte_end":80228,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80233,"byte_end":80236,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80241,"byte_end":80248,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80253,"byte_end":80282,"line_start":382,"line_end":382,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80287,"byte_end":80324,"line_start":383,"line_end":383,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80329,"byte_end":80332,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, map.capacity());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80337,"byte_end":80371,"line_start":385,"line_end":385,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80376,"byte_end":80379,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80384,"byte_end":80441,"line_start":387,"line_end":387,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(6, map.capacity());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80446,"byte_end":80480,"line_start":388,"line_end":388,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80485,"byte_end":80492,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81350,"byte_end":81357,"line_start":415,"line_end":415,"column_start":12,"column_end":19},"name":"reserve","qualname":"<MetadataMap>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more custom metadata to be\n inserted into the `MetadataMap`.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more custom metadata to be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80574,"byte_end":80648,"line_start":394,"line_end":394,"column_start":5,"column_end":79}},{"value":"/ inserted into the `MetadataMap`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80653,"byte_end":80689,"line_start":395,"line_end":395,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80694,"byte_end":80697,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The metadata map may reserve more space to avoid frequent reallocations.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80702,"byte_end":80778,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ Like with `with_capacity`, this will be a \"best effort\" to avoid","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80783,"byte_end":80851,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/ allocations until `additional` more custom metadata is inserted. Certain","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80856,"byte_end":80932,"line_start":399,"line_end":399,"column_start":5,"column_end":81}},{"value":"/ usage patterns could cause additional allocations before the number is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":80937,"byte_end":81011,"line_start":400,"line_end":400,"column_start":5,"column_end":79}},{"value":"/ reached.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81016,"byte_end":81028,"line_start":401,"line_end":401,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81033,"byte_end":81036,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81041,"byte_end":81053,"line_start":403,"line_end":403,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81058,"byte_end":81061,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows `usize`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81066,"byte_end":81122,"line_start":405,"line_end":405,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81127,"byte_end":81130,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81135,"byte_end":81149,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81154,"byte_end":81157,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81162,"byte_end":81169,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81174,"byte_end":81203,"line_start":410,"line_end":410,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81208,"byte_end":81245,"line_start":411,"line_end":411,"column_start":5,"column_end":42}},{"value":"/ map.reserve(10);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81250,"byte_end":81270,"line_start":412,"line_end":412,"column_start":5,"column_end":25}},{"value":"/ # map.insert(\"x-host\", \"bar\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81275,"byte_end":81326,"line_start":413,"line_end":413,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81331,"byte_end":81338,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82999,"byte_end":83002,"line_start":454,"line_end":454,"column_start":12,"column_end":15},"name":"get","qualname":"<MetadataMap>::get","value":"pub fn get<K>(&Self, K) -> Option<&MetadataValue<Ascii>> where\nK: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value associated with the key. This method\n is for ascii metadata entries (those whose names don't end with\n \"-bin\"). For binary entries, use get_bin.","sig":null,"attributes":[{"value":"/ Returns a reference to the value associated with the key. This method","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81443,"byte_end":81516,"line_start":419,"line_end":419,"column_start":5,"column_end":78}},{"value":"/ is for ascii metadata entries (those whose names don't end with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81521,"byte_end":81588,"line_start":420,"line_end":420,"column_start":5,"column_end":72}},{"value":"/ \"-bin\"). For binary entries, use get_bin.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81593,"byte_end":81638,"line_start":421,"line_end":421,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81643,"byte_end":81646,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ If there are multiple values associated with the key, then the first one","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81651,"byte_end":81727,"line_start":423,"line_end":423,"column_start":5,"column_end":81}},{"value":"/ is returned. Use `get_all` to get all values associated with a given","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81732,"byte_end":81804,"line_start":424,"line_end":424,"column_start":5,"column_end":77}},{"value":"/ key. Returns `None` if there are no values associated with the key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81809,"byte_end":81880,"line_start":425,"line_end":425,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81885,"byte_end":81888,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81893,"byte_end":81907,"line_start":427,"line_end":427,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81912,"byte_end":81915,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81920,"byte_end":81927,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81932,"byte_end":81961,"line_start":430,"line_end":430,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":81966,"byte_end":82003,"line_start":431,"line_end":431,"column_start":5,"column_end":42}},{"value":"/ assert!(map.get(\"x-host\").is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82008,"byte_end":82049,"line_start":432,"line_end":432,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82054,"byte_end":82057,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82062,"byte_end":82113,"line_start":434,"line_end":434,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), &\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82118,"byte_end":82171,"line_start":435,"line_end":435,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), &\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82176,"byte_end":82229,"line_start":436,"line_end":436,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82234,"byte_end":82237,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host\", \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82242,"byte_end":82293,"line_start":438,"line_end":438,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map.get(\"x-host\").unwrap(), &\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82298,"byte_end":82351,"line_start":439,"line_end":439,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82356,"byte_end":82359,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82364,"byte_end":82426,"line_start":441,"line_end":441,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82431,"byte_end":82455,"line_start":442,"line_end":442,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82460,"byte_end":82528,"line_start":443,"line_end":443,"column_start":5,"column_end":73}},{"value":"/ assert!(map.get(\"host-bin\").is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82533,"byte_end":82576,"line_start":444,"line_end":444,"column_start":5,"column_end":48}},{"value":"/ assert!(map.get(\"host-bin\".to_string()).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82581,"byte_end":82636,"line_start":445,"line_end":445,"column_start":5,"column_end":60}},{"value":"/ assert!(map.get(&(\"host-bin\".to_string())).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82641,"byte_end":82699,"line_start":446,"line_end":446,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82704,"byte_end":82707,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82712,"byte_end":82772,"line_start":448,"line_end":448,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82777,"byte_end":82801,"line_start":449,"line_end":449,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get(\"host{}bin\").is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82806,"byte_end":82850,"line_start":450,"line_end":450,"column_start":5,"column_end":49}},{"value":"/ assert!(map.get(\"host{}bin\".to_string()).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82855,"byte_end":82911,"line_start":451,"line_end":451,"column_start":5,"column_end":61}},{"value":"/ assert!(map.get(&(\"host{}bin\".to_string())).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82916,"byte_end":82975,"line_start":452,"line_end":452,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":82980,"byte_end":82987,"line_start":453,"line_end":453,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":84417,"byte_end":84424,"line_start":490,"line_end":490,"column_start":12,"column_end":19},"name":"get_bin","qualname":"<MetadataMap>::get_bin","value":"pub fn get_bin<K>(&Self, K) -> Option<&MetadataValue<Binary>> where\nK: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like get, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like get, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83136,"byte_end":83202,"line_start":461,"line_end":461,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83207,"byte_end":83210,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83215,"byte_end":83229,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83234,"byte_end":83237,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83242,"byte_end":83249,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83254,"byte_end":83283,"line_start":466,"line_end":466,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83288,"byte_end":83325,"line_start":467,"line_end":467,"column_start":5,"column_end":42}},{"value":"/ assert!(map.get_bin(\"trace-proto-bin\").is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83330,"byte_end":83384,"line_start":468,"line_end":468,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83389,"byte_end":83392,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83397,"byte_end":83472,"line_start":470,"line_end":470,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(map.get_bin(\"trace-proto-bin\").unwrap(), &\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83477,"byte_end":83543,"line_start":471,"line_end":471,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(map.get_bin(\"trace-proto-bin\").unwrap(), &\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83548,"byte_end":83614,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83619,"byte_end":83622,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ map.append_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83627,"byte_end":83702,"line_start":474,"line_end":474,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(map.get_bin(\"trace-proto-bin\").unwrap(), &\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83707,"byte_end":83773,"line_start":475,"line_end":475,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83778,"byte_end":83781,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83786,"byte_end":83848,"line_start":477,"line_end":477,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83853,"byte_end":83877,"line_start":478,"line_end":478,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83882,"byte_end":83931,"line_start":479,"line_end":479,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_bin(\"host\").is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83936,"byte_end":83979,"line_start":480,"line_end":480,"column_start":5,"column_end":48}},{"value":"/ assert!(map.get_bin(\"host\".to_string()).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":83984,"byte_end":84039,"line_start":481,"line_end":481,"column_start":5,"column_end":60}},{"value":"/ assert!(map.get_bin(&(\"host\".to_string())).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":84044,"byte_end":84102,"line_start":482,"line_end":482,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":84107,"byte_end":84110,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":84115,"byte_end":84175,"line_start":484,"line_end":484,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":84180,"byte_end":84204,"line_start":485,"line_end":485,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_bin(\"host{}-bin\").is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":84209,"byte_end":84258,"line_start":486,"line_end":486,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_bin(\"host{}-bin\".to_string()).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":84263,"byte_end":84324,"line_start":487,"line_end":487,"column_start":5,"column_end":66}},{"value":"/ assert!(map.get_bin(&(\"host{}-bin\".to_string())).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":84329,"byte_end":84393,"line_start":488,"line_end":488,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":84398,"byte_end":84405,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85981,"byte_end":85988,"line_start":528,"line_end":528,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MetadataMap>::get_mut","value":"pub fn get_mut<K>(&mut Self, K) -> Option<&mut MetadataValue<Ascii>> where\nK: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value associated with the key. This\n method is for ascii metadata entries (those whose names don't end with\n \"-bin\"). For binary entries, use get_mut_bin.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value associated with the key. This","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":84560,"byte_end":84634,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ method is for ascii metadata entries (those whose names don't end with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":84639,"byte_end":84713,"line_start":498,"line_end":498,"column_start":5,"column_end":79}},{"value":"/ \"-bin\"). For binary entries, use get_mut_bin.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":84718,"byte_end":84767,"line_start":499,"line_end":499,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":84772,"byte_end":84775,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ If there are multiple values associated with the key, then the first one","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":84780,"byte_end":84856,"line_start":501,"line_end":501,"column_start":5,"column_end":81}},{"value":"/ is returned. Use `entry` to get all values associated with a given","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":84861,"byte_end":84931,"line_start":502,"line_end":502,"column_start":5,"column_end":75}},{"value":"/ key. Returns `None` if there are no values associated with the key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":84936,"byte_end":85007,"line_start":503,"line_end":503,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85012,"byte_end":85015,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85020,"byte_end":85034,"line_start":505,"line_end":505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85039,"byte_end":85042,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85047,"byte_end":85054,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85059,"byte_end":85088,"line_start":508,"line_end":508,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85093,"byte_end":85134,"line_start":509,"line_end":509,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"x-host\", \"hello\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85139,"byte_end":85190,"line_start":510,"line_end":510,"column_start":5,"column_end":56}},{"value":"/ map.get_mut(\"x-host\").unwrap().set_sensitive(true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85195,"byte_end":85250,"line_start":511,"line_end":511,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85255,"byte_end":85258,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ assert!(map.get(\"x-host\").unwrap().is_sensitive());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85263,"byte_end":85318,"line_start":513,"line_end":513,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85323,"byte_end":85326,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85331,"byte_end":85393,"line_start":515,"line_end":515,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85398,"byte_end":85422,"line_start":516,"line_end":516,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85427,"byte_end":85495,"line_start":517,"line_end":517,"column_start":5,"column_end":73}},{"value":"/ assert!(map.get_mut(\"host-bin\").is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85500,"byte_end":85547,"line_start":518,"line_end":518,"column_start":5,"column_end":52}},{"value":"/ assert!(map.get_mut(\"host-bin\".to_string()).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85552,"byte_end":85611,"line_start":519,"line_end":519,"column_start":5,"column_end":64}},{"value":"/ assert!(map.get_mut(&(\"host-bin\".to_string())).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85616,"byte_end":85678,"line_start":520,"line_end":520,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85683,"byte_end":85686,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85691,"byte_end":85751,"line_start":522,"line_end":522,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85756,"byte_end":85780,"line_start":523,"line_end":523,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_mut(\"host{}\").is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85785,"byte_end":85830,"line_start":524,"line_end":524,"column_start":5,"column_end":50}},{"value":"/ assert!(map.get_mut(\"host{}\".to_string()).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85835,"byte_end":85892,"line_start":525,"line_end":525,"column_start":5,"column_end":62}},{"value":"/ assert!(map.get_mut(&(\"host{}\".to_string())).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85897,"byte_end":85957,"line_start":526,"line_end":526,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":85962,"byte_end":85969,"line_start":527,"line_end":527,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87233,"byte_end":87244,"line_start":560,"line_end":560,"column_start":12,"column_end":23},"name":"get_bin_mut","qualname":"<MetadataMap>::get_bin_mut","value":"pub fn get_bin_mut<K>(&mut Self, K) -> Option<&mut MetadataValue<Binary>>\nwhere K: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like get_mut, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like get_mut, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86134,"byte_end":86204,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86209,"byte_end":86212,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86217,"byte_end":86231,"line_start":537,"line_end":537,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86236,"byte_end":86239,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86244,"byte_end":86251,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86256,"byte_end":86285,"line_start":540,"line_end":540,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86290,"byte_end":86331,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86336,"byte_end":86411,"line_start":542,"line_end":542,"column_start":5,"column_end":80}},{"value":"/ map.get_bin_mut(\"trace-proto-bin\").unwrap().set_sensitive(true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86416,"byte_end":86484,"line_start":543,"line_end":543,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86489,"byte_end":86492,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(map.get_bin(\"trace-proto-bin\").unwrap().is_sensitive());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86497,"byte_end":86565,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86570,"byte_end":86573,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86578,"byte_end":86640,"line_start":547,"line_end":547,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86645,"byte_end":86669,"line_start":548,"line_end":548,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86674,"byte_end":86723,"line_start":549,"line_end":549,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_bin_mut(\"host\").is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86728,"byte_end":86775,"line_start":550,"line_end":550,"column_start":5,"column_end":52}},{"value":"/ assert!(map.get_bin_mut(\"host\".to_string()).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86780,"byte_end":86839,"line_start":551,"line_end":551,"column_start":5,"column_end":64}},{"value":"/ assert!(map.get_bin_mut(&(\"host\".to_string())).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86844,"byte_end":86906,"line_start":552,"line_end":552,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86911,"byte_end":86914,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86919,"byte_end":86979,"line_start":554,"line_end":554,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":86984,"byte_end":87008,"line_start":555,"line_end":555,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_bin_mut(\"host{}-bin\").is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87013,"byte_end":87066,"line_start":556,"line_end":556,"column_start":5,"column_end":58}},{"value":"/ assert!(map.get_bin_mut(\"host{}-bin\".to_string()).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87071,"byte_end":87136,"line_start":557,"line_end":557,"column_start":5,"column_end":70}},{"value":"/ assert!(map.get_bin_mut(&(\"host{}-bin\".to_string())).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87141,"byte_end":87209,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87214,"byte_end":87221,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89139,"byte_end":89146,"line_start":608,"line_end":608,"column_start":12,"column_end":19},"name":"get_all","qualname":"<MetadataMap>::get_all","value":"pub fn get_all<K>(&Self, K) -> GetAll<, Ascii> where K: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Returns a view of all values associated with a key. This method is for\n ascii metadata entries (those whose names don't end with \"-bin\"). For\n binary entries, use get_all_bin.","sig":null,"attributes":[{"value":"/ Returns a view of all values associated with a key. This method is for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87392,"byte_end":87466,"line_start":567,"line_end":567,"column_start":5,"column_end":79}},{"value":"/ ascii metadata entries (those whose names don't end with \"-bin\"). For","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87471,"byte_end":87544,"line_start":568,"line_end":568,"column_start":5,"column_end":78}},{"value":"/ binary entries, use get_all_bin.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87549,"byte_end":87585,"line_start":569,"line_end":569,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87590,"byte_end":87593,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ The returned view does not incur any allocations and allows iterating","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87598,"byte_end":87671,"line_start":571,"line_end":571,"column_start":5,"column_end":78}},{"value":"/ the values associated with the key.  See [`GetAll`] for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87676,"byte_end":87749,"line_start":572,"line_end":572,"column_start":5,"column_end":78}},{"value":"/ Returns `None` if there are no values associated with the key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87754,"byte_end":87820,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87825,"byte_end":87828,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ [`GetAll`]: struct.GetAll.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87833,"byte_end":87867,"line_start":575,"line_end":575,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87872,"byte_end":87875,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87880,"byte_end":87894,"line_start":577,"line_end":577,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87899,"byte_end":87902,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87907,"byte_end":87914,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87919,"byte_end":87948,"line_start":580,"line_end":580,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87953,"byte_end":87990,"line_start":581,"line_end":581,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":87995,"byte_end":87998,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-host\", \"hello\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88003,"byte_end":88054,"line_start":583,"line_end":583,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-host\", \"goodbye\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88059,"byte_end":88112,"line_start":584,"line_end":584,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88117,"byte_end":88120,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88125,"byte_end":88130,"line_start":586,"line_end":586,"column_start":5,"column_end":10}},{"value":"/     let view = map.get_all(\"x-host\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88135,"byte_end":88176,"line_start":587,"line_end":587,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88181,"byte_end":88184,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     let mut iter = view.iter();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88189,"byte_end":88224,"line_start":589,"line_end":589,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(&\"hello\", iter.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88229,"byte_end":88280,"line_start":590,"line_end":590,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(&\"goodbye\", iter.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88285,"byte_end":88338,"line_start":591,"line_end":591,"column_start":5,"column_end":58}},{"value":"/     assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88343,"byte_end":88382,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88387,"byte_end":88392,"line_start":593,"line_end":593,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88397,"byte_end":88400,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88405,"byte_end":88467,"line_start":595,"line_end":595,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88472,"byte_end":88496,"line_start":596,"line_end":596,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88501,"byte_end":88569,"line_start":597,"line_end":597,"column_start":5,"column_end":73}},{"value":"/ assert!(map.get_all(\"host-bin\").iter().next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88574,"byte_end":88635,"line_start":598,"line_end":598,"column_start":5,"column_end":66}},{"value":"/ assert!(map.get_all(\"host-bin\".to_string()).iter().next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88640,"byte_end":88713,"line_start":599,"line_end":599,"column_start":5,"column_end":78}},{"value":"/ assert!(map.get_all(&(\"host-bin\".to_string())).iter().next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88718,"byte_end":88794,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88799,"byte_end":88802,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88807,"byte_end":88867,"line_start":602,"line_end":602,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88872,"byte_end":88896,"line_start":603,"line_end":603,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_all(\"host{}\").iter().next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88901,"byte_end":88960,"line_start":604,"line_end":604,"column_start":5,"column_end":64}},{"value":"/ assert!(map.get_all(\"host{}\".to_string()).iter().next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":88965,"byte_end":89036,"line_start":605,"line_end":605,"column_start":5,"column_end":76}},{"value":"/ assert!(map.get_all(&(\"host{}\".to_string())).iter().next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89041,"byte_end":89115,"line_start":606,"line_end":606,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89120,"byte_end":89127,"line_start":607,"line_end":607,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":90753,"byte_end":90764,"line_start":651,"line_end":651,"column_start":12,"column_end":23},"name":"get_all_bin","qualname":"<MetadataMap>::get_all_bin","value":"pub fn get_all_bin<K>(&Self, K) -> GetAll<, Binary> where\nK: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like get_all, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like get_all, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89345,"byte_end":89415,"line_start":618,"line_end":618,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89420,"byte_end":89423,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89428,"byte_end":89442,"line_start":620,"line_end":620,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89447,"byte_end":89450,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89455,"byte_end":89462,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89467,"byte_end":89496,"line_start":623,"line_end":623,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89501,"byte_end":89538,"line_start":624,"line_end":624,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89543,"byte_end":89546,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89551,"byte_end":89626,"line_start":626,"line_end":626,"column_start":5,"column_end":80}},{"value":"/ map.append_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"goodbye\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89631,"byte_end":89708,"line_start":627,"line_end":627,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89713,"byte_end":89716,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89721,"byte_end":89726,"line_start":629,"line_end":629,"column_start":5,"column_end":10}},{"value":"/     let view = map.get_all_bin(\"trace-proto-bin\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89731,"byte_end":89785,"line_start":630,"line_end":630,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89790,"byte_end":89793,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/     let mut iter = view.iter();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89798,"byte_end":89833,"line_start":632,"line_end":632,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(&\"hello\", iter.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89838,"byte_end":89889,"line_start":633,"line_end":633,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(&\"goodbye\", iter.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89894,"byte_end":89947,"line_start":634,"line_end":634,"column_start":5,"column_end":58}},{"value":"/     assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89952,"byte_end":89991,"line_start":635,"line_end":635,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":89996,"byte_end":90001,"line_start":636,"line_end":636,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":90006,"byte_end":90009,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":90014,"byte_end":90076,"line_start":638,"line_end":638,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":90081,"byte_end":90105,"line_start":639,"line_end":639,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":90110,"byte_end":90159,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/ assert!(map.get_all_bin(\"host\").iter().next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":90164,"byte_end":90225,"line_start":641,"line_end":641,"column_start":5,"column_end":66}},{"value":"/ assert!(map.get_all_bin(\"host\".to_string()).iter().next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":90230,"byte_end":90303,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ assert!(map.get_all_bin(&(\"host\".to_string())).iter().next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":90308,"byte_end":90384,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":90389,"byte_end":90392,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":90397,"byte_end":90457,"line_start":645,"line_end":645,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":90462,"byte_end":90486,"line_start":646,"line_end":646,"column_start":5,"column_end":29}},{"value":"/ assert!(map.get_all_bin(\"host{}-bin\").iter().next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":90491,"byte_end":90558,"line_start":647,"line_end":647,"column_start":5,"column_end":72}},{"value":"/ assert!(map.get_all_bin(\"host{}-bin\".to_string()).iter().next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":90563,"byte_end":90642,"line_start":648,"line_end":648,"column_start":5,"column_end":84}},{"value":"/ assert!(map.get_all_bin(&(\"host{}-bin\".to_string())).iter().next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":90647,"byte_end":90729,"line_start":649,"line_end":649,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":90734,"byte_end":90741,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91696,"byte_end":91708,"line_start":681,"line_end":681,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<MetadataMap>::contains_key","value":"pub fn contains_key<K>(&Self, K) -> bool where\nK: AsEncodingAgnosticMetadataKey","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key. This\n method works for both ascii and binary entries.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key. This","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":90965,"byte_end":91037,"line_start":661,"line_end":661,"column_start":5,"column_end":77}},{"value":"/ method works for both ascii and binary entries.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91042,"byte_end":91093,"line_start":662,"line_end":662,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91098,"byte_end":91101,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91106,"byte_end":91120,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91125,"byte_end":91128,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91133,"byte_end":91140,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91145,"byte_end":91174,"line_start":667,"line_end":667,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91179,"byte_end":91216,"line_start":668,"line_end":668,"column_start":5,"column_end":42}},{"value":"/ assert!(!map.contains_key(\"x-host\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91221,"byte_end":91262,"line_start":669,"line_end":669,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91267,"byte_end":91270,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91275,"byte_end":91343,"line_start":671,"line_end":671,"column_start":5,"column_end":73}},{"value":"/ map.insert(\"x-host\", \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91348,"byte_end":91399,"line_start":672,"line_end":672,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91404,"byte_end":91407,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ // contains_key works for both Binary and Ascii keys:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91412,"byte_end":91469,"line_start":674,"line_end":674,"column_start":5,"column_end":62}},{"value":"/ assert!(map.contains_key(\"x-host\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91474,"byte_end":91514,"line_start":675,"line_end":675,"column_start":5,"column_end":45}},{"value":"/ assert!(map.contains_key(\"host-bin\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91519,"byte_end":91561,"line_start":676,"line_end":676,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91566,"byte_end":91569,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ // contains_key returns false for invalid keys:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91574,"byte_end":91625,"line_start":678,"line_end":678,"column_start":5,"column_end":56}},{"value":"/ assert!(!map.contains_key(\"x{}host\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91630,"byte_end":91672,"line_start":679,"line_end":679,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91677,"byte_end":91684,"line_start":680,"line_end":680,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92831,"byte_end":92835,"line_start":713,"line_end":713,"column_start":12,"column_end":16},"name":"iter","qualname":"<MetadataMap>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs (both ascii and binary).","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs (both ascii and binary).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91835,"byte_end":91904,"line_start":688,"line_end":688,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91909,"byte_end":91912,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91917,"byte_end":91990,"line_start":690,"line_end":690,"column_start":5,"column_end":78}},{"value":"/ the same crate version. Each key will be yielded once per associated","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":91995,"byte_end":92067,"line_start":691,"line_end":691,"column_start":5,"column_end":77}},{"value":"/ value. So, if a key has 3 associated values, it will be yielded 3 times.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92072,"byte_end":92148,"line_start":692,"line_end":692,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92153,"byte_end":92156,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92161,"byte_end":92175,"line_start":694,"line_end":694,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92180,"byte_end":92183,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92188,"byte_end":92195,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92200,"byte_end":92229,"line_start":697,"line_end":697,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92234,"byte_end":92271,"line_start":698,"line_end":698,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92276,"byte_end":92279,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92284,"byte_end":92335,"line_start":700,"line_end":700,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92340,"byte_end":92393,"line_start":701,"line_end":701,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92398,"byte_end":92449,"line_start":702,"line_end":702,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92454,"byte_end":92457,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ for key_and_value in map.iter() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92462,"byte_end":92499,"line_start":704,"line_end":704,"column_start":5,"column_end":42}},{"value":"/     match key_and_value {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92504,"byte_end":92533,"line_start":705,"line_end":705,"column_start":5,"column_end":34}},{"value":"/         KeyAndValueRef::Ascii(ref key, ref value) =>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92538,"byte_end":92594,"line_start":706,"line_end":706,"column_start":5,"column_end":61}},{"value":"/             println!(\"Ascii: {:?}: {:?}\", key, value),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92599,"byte_end":92657,"line_start":707,"line_end":707,"column_start":5,"column_end":63}},{"value":"/         KeyAndValueRef::Binary(ref key, ref value) =>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92662,"byte_end":92719,"line_start":708,"line_end":708,"column_start":5,"column_end":62}},{"value":"/             println!(\"Binary: {:?}: {:?}\", key, value),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92724,"byte_end":92783,"line_start":709,"line_end":709,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92788,"byte_end":92797,"line_start":710,"line_end":710,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92802,"byte_end":92807,"line_start":711,"line_end":711,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92812,"byte_end":92819,"line_start":712,"line_end":712,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93904,"byte_end":93912,"line_start":744,"line_end":744,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<MetadataMap>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs, with mutable value references.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs, with mutable value references.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":92933,"byte_end":93009,"line_start":719,"line_end":719,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93014,"byte_end":93017,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ The iterator order is arbitrary, but consistent across platforms for the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93022,"byte_end":93098,"line_start":721,"line_end":721,"column_start":5,"column_end":81}},{"value":"/ same crate version. Each key will be yielded once per associated value,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93103,"byte_end":93178,"line_start":722,"line_end":722,"column_start":5,"column_end":80}},{"value":"/ so if a key has 3 associated values, it will be yielded 3 times.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93183,"byte_end":93251,"line_start":723,"line_end":723,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93256,"byte_end":93259,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93264,"byte_end":93278,"line_start":725,"line_end":725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93283,"byte_end":93286,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93291,"byte_end":93298,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93303,"byte_end":93332,"line_start":728,"line_end":728,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93337,"byte_end":93374,"line_start":729,"line_end":729,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93379,"byte_end":93382,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93387,"byte_end":93438,"line_start":731,"line_end":731,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93443,"byte_end":93496,"line_start":732,"line_end":732,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93501,"byte_end":93552,"line_start":733,"line_end":733,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93557,"byte_end":93560,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ for key_and_value in map.iter_mut() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93565,"byte_end":93606,"line_start":735,"line_end":735,"column_start":5,"column_end":46}},{"value":"/     match key_and_value {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93611,"byte_end":93640,"line_start":736,"line_end":736,"column_start":5,"column_end":34}},{"value":"/         KeyAndMutValueRef::Ascii(key, mut value) =>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93645,"byte_end":93700,"line_start":737,"line_end":737,"column_start":5,"column_end":60}},{"value":"/             value.set_sensitive(true),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93705,"byte_end":93747,"line_start":738,"line_end":738,"column_start":5,"column_end":47}},{"value":"/         KeyAndMutValueRef::Binary(key, mut value) =>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93752,"byte_end":93808,"line_start":739,"line_end":739,"column_start":5,"column_end":61}},{"value":"/             value.set_sensitive(false),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93813,"byte_end":93856,"line_start":740,"line_end":740,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93861,"byte_end":93870,"line_start":741,"line_end":741,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93875,"byte_end":93880,"line_start":742,"line_end":742,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":93885,"byte_end":93892,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94923,"byte_end":94927,"line_start":776,"line_end":776,"column_start":12,"column_end":16},"name":"keys","qualname":"<MetadataMap>::keys","value":"pub fn keys(&Self) -> Keys","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys.","sig":null,"attributes":[{"value":"/ An iterator visiting all keys.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94024,"byte_end":94058,"line_start":750,"line_end":750,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94063,"byte_end":94066,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94071,"byte_end":94144,"line_start":752,"line_end":752,"column_start":5,"column_end":78}},{"value":"/ the same crate version. Each key will be yielded only once even if it","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94149,"byte_end":94222,"line_start":753,"line_end":753,"column_start":5,"column_end":78}},{"value":"/ has multiple associated values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94227,"byte_end":94262,"line_start":754,"line_end":754,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94267,"byte_end":94270,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94275,"byte_end":94289,"line_start":756,"line_end":756,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94294,"byte_end":94297,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94302,"byte_end":94309,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94314,"byte_end":94343,"line_start":759,"line_end":759,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94348,"byte_end":94385,"line_start":760,"line_end":760,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94390,"byte_end":94393,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94398,"byte_end":94449,"line_start":762,"line_end":762,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94454,"byte_end":94507,"line_start":763,"line_end":763,"column_start":5,"column_end":58}},{"value":"/ map.insert_bin(\"x-number-bin\", MetadataValue::from_bytes(b\"123\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94512,"byte_end":94582,"line_start":764,"line_end":764,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94587,"byte_end":94590,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94595,"byte_end":94622,"line_start":766,"line_end":766,"column_start":5,"column_end":32}},{"value":"/     match key {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94627,"byte_end":94646,"line_start":767,"line_end":767,"column_start":5,"column_end":24}},{"value":"/         KeyRef::Ascii(ref key) =>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94651,"byte_end":94688,"line_start":768,"line_end":768,"column_start":5,"column_end":42}},{"value":"/             println!(\"Ascii key: {:?}\", key),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94693,"byte_end":94742,"line_start":769,"line_end":769,"column_start":5,"column_end":54}},{"value":"/         KeyRef::Binary(ref key) =>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94747,"byte_end":94785,"line_start":770,"line_end":770,"column_start":5,"column_end":43}},{"value":"/             println!(\"Binary key: {:?}\", key),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94790,"byte_end":94840,"line_start":771,"line_end":771,"column_start":5,"column_end":55}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94845,"byte_end":94854,"line_start":772,"line_end":772,"column_start":5,"column_end":14}},{"value":"/     println!(\"{:?}\", key);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94859,"byte_end":94889,"line_start":773,"line_end":773,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94894,"byte_end":94899,"line_start":774,"line_end":774,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":94904,"byte_end":94911,"line_start":775,"line_end":775,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95888,"byte_end":95894,"line_start":807,"line_end":807,"column_start":12,"column_end":18},"name":"values","qualname":"<MetadataMap>::values","value":"pub fn values(&Self) -> Values","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values (both ascii and binary).","sig":null,"attributes":[{"value":"/ An iterator visiting all values (both ascii and binary).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95025,"byte_end":95085,"line_start":782,"line_end":782,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95090,"byte_end":95093,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95098,"byte_end":95171,"line_start":784,"line_end":784,"column_start":5,"column_end":78}},{"value":"/ the same crate version.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95176,"byte_end":95203,"line_start":785,"line_end":785,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95208,"byte_end":95211,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95216,"byte_end":95230,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95235,"byte_end":95238,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95243,"byte_end":95250,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95255,"byte_end":95284,"line_start":790,"line_end":790,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95289,"byte_end":95326,"line_start":791,"line_end":791,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95331,"byte_end":95334,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95339,"byte_end":95390,"line_start":793,"line_end":793,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95395,"byte_end":95448,"line_start":794,"line_end":794,"column_start":5,"column_end":58}},{"value":"/ map.insert_bin(\"x-number-bin\", MetadataValue::from_bytes(b\"123\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95453,"byte_end":95523,"line_start":795,"line_end":795,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95528,"byte_end":95531,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ for value in map.values() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95536,"byte_end":95567,"line_start":797,"line_end":797,"column_start":5,"column_end":36}},{"value":"/     match value {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95572,"byte_end":95593,"line_start":798,"line_end":798,"column_start":5,"column_end":26}},{"value":"/         ValueRef::Ascii(ref value) =>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95598,"byte_end":95639,"line_start":799,"line_end":799,"column_start":5,"column_end":46}},{"value":"/             println!(\"Ascii value: {:?}\", value),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95644,"byte_end":95697,"line_start":800,"line_end":800,"column_start":5,"column_end":58}},{"value":"/         ValueRef::Binary(ref value) =>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95702,"byte_end":95744,"line_start":801,"line_end":801,"column_start":5,"column_end":47}},{"value":"/             println!(\"Binary value: {:?}\", value),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95749,"byte_end":95803,"line_start":802,"line_end":802,"column_start":5,"column_end":59}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95808,"byte_end":95817,"line_start":803,"line_end":803,"column_start":5,"column_end":14}},{"value":"/     println!(\"{:?}\", value);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95822,"byte_end":95854,"line_start":804,"line_end":804,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95859,"byte_end":95864,"line_start":805,"line_end":805,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95869,"byte_end":95876,"line_start":806,"line_end":806,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96779,"byte_end":96789,"line_start":837,"line_end":837,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<MetadataMap>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":95996,"byte_end":96040,"line_start":813,"line_end":813,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96045,"byte_end":96048,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ The iteration order is arbitrary, but consistent across platforms for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96053,"byte_end":96126,"line_start":815,"line_end":815,"column_start":5,"column_end":78}},{"value":"/ the same crate version.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96131,"byte_end":96158,"line_start":816,"line_end":816,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96163,"byte_end":96166,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96171,"byte_end":96185,"line_start":818,"line_end":818,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96190,"byte_end":96193,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96198,"byte_end":96205,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96210,"byte_end":96239,"line_start":821,"line_end":821,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96244,"byte_end":96285,"line_start":822,"line_end":822,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96290,"byte_end":96293,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"x-word\", \"hello\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96298,"byte_end":96349,"line_start":824,"line_end":824,"column_start":5,"column_end":56}},{"value":"/ map.append(\"x-word\", \"goodbye\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96354,"byte_end":96407,"line_start":825,"line_end":825,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"x-number\", \"123\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96412,"byte_end":96463,"line_start":826,"line_end":826,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96468,"byte_end":96471,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ for value in map.values_mut() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96476,"byte_end":96511,"line_start":828,"line_end":828,"column_start":5,"column_end":40}},{"value":"/     match value {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96516,"byte_end":96537,"line_start":829,"line_end":829,"column_start":5,"column_end":26}},{"value":"/         ValueRefMut::Ascii(mut value) =>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96542,"byte_end":96586,"line_start":830,"line_end":830,"column_start":5,"column_end":49}},{"value":"/             value.set_sensitive(true),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96591,"byte_end":96633,"line_start":831,"line_end":831,"column_start":5,"column_end":47}},{"value":"/         ValueRefMut::Binary(mut value) =>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96638,"byte_end":96683,"line_start":832,"line_end":832,"column_start":5,"column_end":50}},{"value":"/             value.set_sensitive(false),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96688,"byte_end":96731,"line_start":833,"line_end":833,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96736,"byte_end":96745,"line_start":834,"line_end":834,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96750,"byte_end":96755,"line_start":835,"line_end":835,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96760,"byte_end":96767,"line_start":836,"line_end":836,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98417,"byte_end":98422,"line_start":883,"line_end":883,"column_start":12,"column_end":17},"name":"entry","qualname":"<MetadataMap>::entry","value":"pub fn entry<K>(&mut Self, K) -> Result<Entry<, Ascii>, InvalidMetadataKey>\nwhere K: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given ascii key's corresponding entry in the map for in-place\n manipulation. For binary keys, use `entry_bin`.","sig":null,"attributes":[{"value":"/ Gets the given ascii key's corresponding entry in the map for in-place","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96905,"byte_end":96979,"line_start":843,"line_end":843,"column_start":5,"column_end":79}},{"value":"/ manipulation. For binary keys, use `entry_bin`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":96984,"byte_end":97035,"line_start":844,"line_end":844,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97040,"byte_end":97043,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97048,"byte_end":97062,"line_start":846,"line_end":846,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97067,"byte_end":97070,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97075,"byte_end":97082,"line_start":848,"line_end":848,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97087,"byte_end":97116,"line_start":849,"line_end":849,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97121,"byte_end":97162,"line_start":850,"line_end":850,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97167,"byte_end":97170,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ let headers = &[","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97175,"byte_end":97195,"line_start":852,"line_end":852,"column_start":5,"column_end":25}},{"value":"/     \"content-length\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97200,"byte_end":97225,"line_start":853,"line_end":853,"column_start":5,"column_end":30}},{"value":"/     \"x-hello\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97230,"byte_end":97248,"line_start":854,"line_end":854,"column_start":5,"column_end":23}},{"value":"/     \"Content-Length\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97253,"byte_end":97278,"line_start":855,"line_end":855,"column_start":5,"column_end":30}},{"value":"/     \"x-world\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97283,"byte_end":97301,"line_start":856,"line_end":856,"column_start":5,"column_end":23}},{"value":"/ ];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97306,"byte_end":97312,"line_start":857,"line_end":857,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97317,"byte_end":97320,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ for &header in headers {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97325,"byte_end":97353,"line_start":859,"line_end":859,"column_start":5,"column_end":33}},{"value":"/     let counter = map.entry(header).unwrap().or_insert(\"\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97358,"byte_end":97438,"line_start":860,"line_end":860,"column_start":5,"column_end":85}},{"value":"/     *counter = format!(\"{}{}\", counter.to_str().unwrap(), \"1\").parse().unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97443,"byte_end":97527,"line_start":861,"line_end":861,"column_start":5,"column_end":89}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97532,"byte_end":97537,"line_start":862,"line_end":862,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97542,"byte_end":97545,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"content-length\").unwrap(), \"11\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97550,"byte_end":97607,"line_start":864,"line_end":864,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"1\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97612,"byte_end":97661,"line_start":865,"line_end":865,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97666,"byte_end":97669,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ // Gracefully handles parting invalid key strings","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97674,"byte_end":97727,"line_start":867,"line_end":867,"column_start":5,"column_end":58}},{"value":"/ assert!(!map.entry(\"a{}b\").is_ok());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97732,"byte_end":97772,"line_start":868,"line_end":868,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97777,"byte_end":97780,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97785,"byte_end":97847,"line_start":870,"line_end":870,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97852,"byte_end":97876,"line_start":871,"line_end":871,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97881,"byte_end":97949,"line_start":872,"line_end":872,"column_start":5,"column_end":73}},{"value":"/ assert!(!map.entry(\"host-bin\").is_ok());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":97954,"byte_end":97998,"line_start":873,"line_end":873,"column_start":5,"column_end":49}},{"value":"/ assert!(!map.entry(\"host-bin\".to_string()).is_ok());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98003,"byte_end":98059,"line_start":874,"line_end":874,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.entry(&(\"host-bin\".to_string())).is_ok());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98064,"byte_end":98123,"line_start":875,"line_end":875,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98128,"byte_end":98131,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98136,"byte_end":98196,"line_start":877,"line_end":877,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98201,"byte_end":98225,"line_start":878,"line_end":878,"column_start":5,"column_end":29}},{"value":"/ assert!(!map.entry(\"host{}\").is_ok());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98230,"byte_end":98272,"line_start":879,"line_end":879,"column_start":5,"column_end":47}},{"value":"/ assert!(!map.entry(\"host{}\".to_string()).is_ok());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98277,"byte_end":98331,"line_start":880,"line_end":880,"column_start":5,"column_end":59}},{"value":"/ assert!(!map.entry(&(\"host{}\".to_string())).is_ok());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98336,"byte_end":98393,"line_start":881,"line_end":881,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98398,"byte_end":98405,"line_start":882,"line_end":882,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":100098,"byte_end":100107,"line_start":928,"line_end":928,"column_start":12,"column_end":21},"name":"entry_bin","qualname":"<MetadataMap>::entry_bin","value":"pub fn entry_bin<K>(&mut Self, K)\n-> Result<Entry<, Binary>, InvalidMetadataKey> where K: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given Binary key's corresponding entry in the map for in-place\n manipulation.","sig":null,"attributes":[{"value":"/ Gets the given Binary key's corresponding entry in the map for in-place","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98597,"byte_end":98672,"line_start":890,"line_end":890,"column_start":5,"column_end":80}},{"value":"/ manipulation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98677,"byte_end":98694,"line_start":891,"line_end":891,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98699,"byte_end":98702,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98707,"byte_end":98721,"line_start":893,"line_end":893,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98726,"byte_end":98729,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98734,"byte_end":98741,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98746,"byte_end":98775,"line_start":896,"line_end":896,"column_start":5,"column_end":34}},{"value":"/ # use std::str;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98780,"byte_end":98799,"line_start":897,"line_end":897,"column_start":5,"column_end":24}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98804,"byte_end":98845,"line_start":898,"line_end":898,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98850,"byte_end":98853,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ let headers = &[","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98858,"byte_end":98878,"line_start":900,"line_end":900,"column_start":5,"column_end":25}},{"value":"/     \"content-length-bin\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98883,"byte_end":98912,"line_start":901,"line_end":901,"column_start":5,"column_end":34}},{"value":"/     \"x-hello-bin\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98917,"byte_end":98939,"line_start":902,"line_end":902,"column_start":5,"column_end":27}},{"value":"/     \"Content-Length-bin\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98944,"byte_end":98973,"line_start":903,"line_end":903,"column_start":5,"column_end":34}},{"value":"/     \"x-world-bin\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":98978,"byte_end":99000,"line_start":904,"line_end":904,"column_start":5,"column_end":27}},{"value":"/ ];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99005,"byte_end":99011,"line_start":905,"line_end":905,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99016,"byte_end":99019,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ for &header in headers {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99024,"byte_end":99052,"line_start":907,"line_end":907,"column_start":5,"column_end":33}},{"value":"/     let counter = map.entry_bin(header).unwrap().or_insert(MetadataValue::from_bytes(b\"\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99057,"byte_end":99152,"line_start":908,"line_end":908,"column_start":5,"column_end":100}},{"value":"/     *counter = MetadataValue::from_bytes(format!(\"{}{}\", str::from_utf8(counter.to_bytes().unwrap().as_ref()).unwrap(), \"1\").as_bytes());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99157,"byte_end":99298,"line_start":909,"line_end":909,"column_start":5,"column_end":146}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99303,"byte_end":99308,"line_start":910,"line_end":910,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99313,"byte_end":99316,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get_bin(\"content-length-bin\").unwrap(), \"11\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99321,"byte_end":99386,"line_start":912,"line_end":912,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(map.get_bin(\"x-hello-bin\").unwrap(), \"1\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99391,"byte_end":99448,"line_start":913,"line_end":913,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99453,"byte_end":99456,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read a key of the wrong type fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99461,"byte_end":99523,"line_start":915,"line_end":915,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99528,"byte_end":99552,"line_start":916,"line_end":916,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99557,"byte_end":99606,"line_start":917,"line_end":917,"column_start":5,"column_end":54}},{"value":"/ assert!(!map.entry_bin(\"host\").is_ok());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99611,"byte_end":99655,"line_start":918,"line_end":918,"column_start":5,"column_end":49}},{"value":"/ assert!(!map.entry_bin(\"host\".to_string()).is_ok());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99660,"byte_end":99716,"line_start":919,"line_end":919,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.entry_bin(&(\"host\".to_string())).is_ok());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99721,"byte_end":99780,"line_start":920,"line_end":920,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99785,"byte_end":99788,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ // Attempting to read an invalid key string fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99793,"byte_end":99853,"line_start":922,"line_end":922,"column_start":5,"column_end":65}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99858,"byte_end":99882,"line_start":923,"line_end":923,"column_start":5,"column_end":29}},{"value":"/ assert!(!map.entry_bin(\"host{}-bin\").is_ok());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99887,"byte_end":99937,"line_start":924,"line_end":924,"column_start":5,"column_end":55}},{"value":"/ assert!(!map.entry_bin(\"host{}-bin\".to_string()).is_ok());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":99942,"byte_end":100004,"line_start":925,"line_end":925,"column_start":5,"column_end":67}},{"value":"/ assert!(!map.entry_bin(&(\"host{}-bin\".to_string())).is_ok());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":100009,"byte_end":100074,"line_start":926,"line_end":926,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":100079,"byte_end":100086,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102693,"byte_end":102699,"line_start":1001,"line_end":1001,"column_start":12,"column_end":18},"name":"insert","qualname":"<MetadataMap>::insert","value":"pub fn insert<K>(&mut Self, K, MetadataValue<Ascii>)\n-> Option<MetadataValue<Ascii>> where K: IntoMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an ascii key-value pair into the map. To insert a binary entry,\n use `insert_bin`.","sig":null,"attributes":[{"value":"/ Inserts an ascii key-value pair into the map. To insert a binary entry,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":100948,"byte_end":101023,"line_start":957,"line_end":957,"column_start":5,"column_end":80}},{"value":"/ use `insert_bin`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101028,"byte_end":101049,"line_start":958,"line_end":958,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101054,"byte_end":101057,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101062,"byte_end":101132,"line_start":960,"line_end":960,"column_start":5,"column_end":75}},{"value":"/ converted to a MetadataKey<Ascii>.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101137,"byte_end":101175,"line_start":961,"line_end":961,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101180,"byte_end":101183,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ If the map did not previously have this key present, then `None` is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101188,"byte_end":101259,"line_start":963,"line_end":963,"column_start":5,"column_end":76}},{"value":"/ returned.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101264,"byte_end":101277,"line_start":964,"line_end":964,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101282,"byte_end":101285,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new value is associated with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101290,"byte_end":101364,"line_start":966,"line_end":966,"column_start":5,"column_end":79}},{"value":"/ the key and all previous values are removed. **Note** that only a single","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101369,"byte_end":101445,"line_start":967,"line_end":967,"column_start":5,"column_end":81}},{"value":"/ one of the previous values is returned. If there are multiple values","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101450,"byte_end":101522,"line_start":968,"line_end":968,"column_start":5,"column_end":77}},{"value":"/ that have been previously associated with the key, then the first one is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101527,"byte_end":101603,"line_start":969,"line_end":969,"column_start":5,"column_end":81}},{"value":"/ returned. See `insert_mult` on `OccupiedEntry` for an API that returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101608,"byte_end":101682,"line_start":970,"line_end":970,"column_start":5,"column_end":79}},{"value":"/ all values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101687,"byte_end":101702,"line_start":971,"line_end":971,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101707,"byte_end":101710,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ The key is not updated, though; this matters for types that can be `==`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101715,"byte_end":101790,"line_start":973,"line_end":973,"column_start":5,"column_end":80}},{"value":"/ without being identical.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101795,"byte_end":101823,"line_start":974,"line_end":974,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101828,"byte_end":101831,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101836,"byte_end":101850,"line_start":976,"line_end":976,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101855,"byte_end":101858,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101863,"byte_end":101870,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101875,"byte_end":101904,"line_start":979,"line_end":979,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101909,"byte_end":101946,"line_start":980,"line_end":980,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert(\"x-host\", \"world\".parse().unwrap()).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":101951,"byte_end":102021,"line_start":981,"line_end":981,"column_start":5,"column_end":75}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102026,"byte_end":102055,"line_start":982,"line_end":982,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102060,"byte_end":102063,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ let mut prev = map.insert(\"x-host\", \"earth\".parse().unwrap()).unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102068,"byte_end":102143,"line_start":984,"line_end":984,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(\"world\", prev);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102148,"byte_end":102178,"line_start":985,"line_end":985,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102183,"byte_end":102190,"line_start":986,"line_end":986,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102195,"byte_end":102198,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102203,"byte_end":102222,"line_start":988,"line_end":988,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102227,"byte_end":102256,"line_start":989,"line_end":989,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102261,"byte_end":102298,"line_start":990,"line_end":990,"column_start":5,"column_end":42}},{"value":"/ // Trying to insert a key that is not valid panics.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102303,"byte_end":102358,"line_start":991,"line_end":991,"column_start":5,"column_end":60}},{"value":"/ map.insert(\"x{}host\", \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102363,"byte_end":102415,"line_start":992,"line_end":992,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102420,"byte_end":102427,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102432,"byte_end":102435,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102440,"byte_end":102459,"line_start":995,"line_end":995,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102464,"byte_end":102493,"line_start":996,"line_end":996,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102498,"byte_end":102535,"line_start":997,"line_end":997,"column_start":5,"column_end":42}},{"value":"/ // Trying to insert a key that is binary panics (use insert_bin).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102540,"byte_end":102609,"line_start":998,"line_end":998,"column_start":5,"column_end":74}},{"value":"/ map.insert(\"x-host-bin\", \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102614,"byte_end":102669,"line_start":999,"line_end":999,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102674,"byte_end":102681,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104068,"byte_end":104078,"line_start":1038,"line_end":1038,"column_start":12,"column_end":22},"name":"insert_bin","qualname":"<MetadataMap>::insert_bin","value":"pub fn insert_bin<K>(&mut Self, K, MetadataValue<Binary>)\n-> Option<MetadataValue<Binary>> where K: IntoMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like insert, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like insert, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102873,"byte_end":102942,"line_start":1008,"line_end":1008,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102947,"byte_end":102950,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":102955,"byte_end":103025,"line_start":1010,"line_end":1010,"column_start":5,"column_end":75}},{"value":"/ converted to a MetadataKey<Binary>.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103030,"byte_end":103069,"line_start":1011,"line_end":1011,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103074,"byte_end":103077,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103082,"byte_end":103096,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103101,"byte_end":103104,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103109,"byte_end":103116,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103121,"byte_end":103150,"line_start":1016,"line_end":1016,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103155,"byte_end":103192,"line_start":1017,"line_end":1017,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"world\")).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103197,"byte_end":103291,"line_start":1018,"line_end":1018,"column_start":5,"column_end":99}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103296,"byte_end":103325,"line_start":1019,"line_end":1019,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103330,"byte_end":103333,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ let mut prev = map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"earth\")).unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103338,"byte_end":103437,"line_start":1021,"line_end":1021,"column_start":5,"column_end":104}},{"value":"/ assert_eq!(\"world\", prev);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103442,"byte_end":103472,"line_start":1022,"line_end":1022,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103477,"byte_end":103484,"line_start":1023,"line_end":1023,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103489,"byte_end":103492,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103497,"byte_end":103516,"line_start":1025,"line_end":1025,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103521,"byte_end":103550,"line_start":1026,"line_end":1026,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103555,"byte_end":103596,"line_start":1027,"line_end":1027,"column_start":5,"column_end":46}},{"value":"/ // Attempting to add a binary metadata entry with an invalid name","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103601,"byte_end":103670,"line_start":1028,"line_end":1028,"column_start":5,"column_end":74}},{"value":"/ map.insert_bin(\"trace-proto\", MetadataValue::from_bytes(b\"hello\")); // This line panics!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103675,"byte_end":103767,"line_start":1029,"line_end":1029,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103772,"byte_end":103779,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103784,"byte_end":103787,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103792,"byte_end":103811,"line_start":1032,"line_end":1032,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103816,"byte_end":103845,"line_start":1033,"line_end":1033,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103850,"byte_end":103887,"line_start":1034,"line_end":1034,"column_start":5,"column_end":42}},{"value":"/ // Trying to insert a key that is not valid panics.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103892,"byte_end":103947,"line_start":1035,"line_end":1035,"column_start":5,"column_end":60}},{"value":"/ map.insert_bin(\"x{}host-bin\", MetadataValue::from_bytes(b\"world\")); // This line panics!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":103952,"byte_end":104044,"line_start":1036,"line_end":1036,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104049,"byte_end":104056,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105921,"byte_end":105927,"line_start":1092,"line_end":1092,"column_start":12,"column_end":18},"name":"append","qualname":"<MetadataMap>::append","value":"pub fn append<K>(&mut Self, K, MetadataValue<Ascii>) -> bool where\nK: IntoMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an ascii key-value pair into the map. To insert a binary entry,\n use `append_bin`.","sig":null,"attributes":[{"value":"/ Inserts an ascii key-value pair into the map. To insert a binary entry,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104286,"byte_end":104361,"line_start":1049,"line_end":1049,"column_start":5,"column_end":80}},{"value":"/ use `append_bin`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104366,"byte_end":104387,"line_start":1050,"line_end":1050,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104392,"byte_end":104395,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104400,"byte_end":104470,"line_start":1052,"line_end":1052,"column_start":5,"column_end":75}},{"value":"/ converted to a MetadataKey<Ascii>.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104475,"byte_end":104513,"line_start":1053,"line_end":1053,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104518,"byte_end":104521,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ If the map did not previously have this key present, then `false` is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104526,"byte_end":104598,"line_start":1055,"line_end":1055,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104603,"byte_end":104616,"line_start":1056,"line_end":1056,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104621,"byte_end":104624,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new value is pushed to the end","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104629,"byte_end":104705,"line_start":1058,"line_end":1058,"column_start":5,"column_end":81}},{"value":"/ of the list of values currently associated with the key. The key is not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104710,"byte_end":104785,"line_start":1059,"line_end":1059,"column_start":5,"column_end":80}},{"value":"/ updated, though; this matters for types that can be `==` without being","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104790,"byte_end":104864,"line_start":1060,"line_end":1060,"column_start":5,"column_end":79}},{"value":"/ identical.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104869,"byte_end":104883,"line_start":1061,"line_end":1061,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104888,"byte_end":104891,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104896,"byte_end":104910,"line_start":1063,"line_end":1063,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104915,"byte_end":104918,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104923,"byte_end":104930,"line_start":1065,"line_end":1065,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104935,"byte_end":104964,"line_start":1066,"line_end":1066,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":104969,"byte_end":105006,"line_start":1067,"line_end":1067,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert(\"x-host\", \"world\".parse().unwrap()).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105011,"byte_end":105081,"line_start":1068,"line_end":1068,"column_start":5,"column_end":75}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105086,"byte_end":105115,"line_start":1069,"line_end":1069,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105120,"byte_end":105123,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ map.append(\"x-host\", \"earth\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105128,"byte_end":105179,"line_start":1071,"line_end":1071,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105184,"byte_end":105187,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all(\"x-host\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105192,"byte_end":105231,"line_start":1073,"line_end":1073,"column_start":5,"column_end":44}},{"value":"/ let mut i = values.iter();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105236,"byte_end":105266,"line_start":1074,"line_end":1074,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"world\", *i.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105271,"byte_end":105315,"line_start":1075,"line_end":1075,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(\"earth\", *i.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105320,"byte_end":105364,"line_start":1076,"line_end":1076,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105369,"byte_end":105376,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105381,"byte_end":105384,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105389,"byte_end":105408,"line_start":1079,"line_end":1079,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105413,"byte_end":105442,"line_start":1080,"line_end":1080,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105447,"byte_end":105484,"line_start":1081,"line_end":1081,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is not valid panics.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105489,"byte_end":105544,"line_start":1082,"line_end":1082,"column_start":5,"column_end":60}},{"value":"/ map.append(\"x{}host\", \"world\".parse().unwrap()); // This line panics!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105549,"byte_end":105622,"line_start":1083,"line_end":1083,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105627,"byte_end":105634,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105639,"byte_end":105642,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105647,"byte_end":105666,"line_start":1086,"line_end":1086,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105671,"byte_end":105700,"line_start":1087,"line_end":1087,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105705,"byte_end":105742,"line_start":1088,"line_end":1088,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is binary panics (use append_bin).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105747,"byte_end":105816,"line_start":1089,"line_end":1089,"column_start":5,"column_end":74}},{"value":"/ map.append(\"x-host-bin\", \"world\".parse().unwrap()); // This line panics!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105821,"byte_end":105897,"line_start":1090,"line_end":1090,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":105902,"byte_end":105909,"line_start":1091,"line_end":1091,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107401,"byte_end":107411,"line_start":1133,"line_end":1133,"column_start":12,"column_end":22},"name":"append_bin","qualname":"<MetadataMap>::append_bin","value":"pub fn append_bin<K>(&mut Self, K, MetadataValue<Binary>) -> bool where\nK: IntoMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like append, but for binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like append, but for binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106081,"byte_end":106150,"line_start":1099,"line_end":1099,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106155,"byte_end":106158,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ This method panics when the given key is a string and it cannot be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106163,"byte_end":106233,"line_start":1101,"line_end":1101,"column_start":5,"column_end":75}},{"value":"/ converted to a MetadataKey<Binary>.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106238,"byte_end":106277,"line_start":1102,"line_end":1102,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106282,"byte_end":106285,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106290,"byte_end":106304,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106309,"byte_end":106312,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106317,"byte_end":106324,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106329,"byte_end":106358,"line_start":1107,"line_end":1107,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106363,"byte_end":106400,"line_start":1108,"line_end":1108,"column_start":5,"column_end":42}},{"value":"/ assert!(map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"world\")).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106405,"byte_end":106499,"line_start":1109,"line_end":1109,"column_start":5,"column_end":99}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106504,"byte_end":106533,"line_start":1110,"line_end":1110,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106538,"byte_end":106541,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ map.append_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"earth\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106546,"byte_end":106621,"line_start":1112,"line_end":1112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106626,"byte_end":106629,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all_bin(\"trace-proto-bin\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106634,"byte_end":106686,"line_start":1114,"line_end":1114,"column_start":5,"column_end":57}},{"value":"/ let mut i = values.iter();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106691,"byte_end":106721,"line_start":1115,"line_end":1115,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"world\", *i.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106726,"byte_end":106770,"line_start":1116,"line_end":1116,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(\"earth\", *i.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106775,"byte_end":106819,"line_start":1117,"line_end":1117,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106824,"byte_end":106831,"line_start":1118,"line_end":1118,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106836,"byte_end":106839,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106844,"byte_end":106863,"line_start":1120,"line_end":1120,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106868,"byte_end":106897,"line_start":1121,"line_end":1121,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106902,"byte_end":106939,"line_start":1122,"line_end":1122,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is not valid panics.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":106944,"byte_end":106999,"line_start":1123,"line_end":1123,"column_start":5,"column_end":60}},{"value":"/ map.append_bin(\"x{}host-bin\", MetadataValue::from_bytes(b\"world\")); // This line panics!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107004,"byte_end":107096,"line_start":1124,"line_end":1124,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107101,"byte_end":107108,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107113,"byte_end":107116,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107121,"byte_end":107140,"line_start":1127,"line_end":1127,"column_start":5,"column_end":24}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107145,"byte_end":107174,"line_start":1128,"line_end":1128,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107179,"byte_end":107216,"line_start":1129,"line_end":1129,"column_start":5,"column_end":42}},{"value":"/ // Trying to append a key that is ascii panics (use append).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107221,"byte_end":107285,"line_start":1130,"line_end":1130,"column_start":5,"column_end":69}},{"value":"/ map.append_bin(\"x-host\", MetadataValue::from_bytes(b\"world\")); // This line panics!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107290,"byte_end":107377,"line_start":1131,"line_end":1131,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107382,"byte_end":107389,"line_start":1132,"line_end":1132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108958,"byte_end":108964,"line_start":1173,"line_end":1173,"column_start":12,"column_end":18},"name":"remove","qualname":"<MetadataMap>::remove","value":"pub fn remove<K>(&mut Self, K) -> Option<MetadataValue<Ascii>> where\nK: AsMetadataKey<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" Removes an ascii key from the map, returning the value associated with\n the key. To remove a binary key, use `remove_bin`.","sig":null,"attributes":[{"value":"/ Removes an ascii key from the map, returning the value associated with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107567,"byte_end":107641,"line_start":1140,"line_end":1140,"column_start":5,"column_end":79}},{"value":"/ the key. To remove a binary key, use `remove_bin`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107646,"byte_end":107700,"line_start":1141,"line_end":1141,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107705,"byte_end":107708,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the map does not contain the key. If there are","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107713,"byte_end":107781,"line_start":1143,"line_end":1143,"column_start":5,"column_end":73}},{"value":"/ multiple values associated with the key, then the first one is returned.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107786,"byte_end":107862,"line_start":1144,"line_end":1144,"column_start":5,"column_end":81}},{"value":"/ See `remove_entry_mult` on `OccupiedEntry` for an API that yields all","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107867,"byte_end":107940,"line_start":1145,"line_end":1145,"column_start":5,"column_end":78}},{"value":"/ values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107945,"byte_end":107956,"line_start":1146,"line_end":1146,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107961,"byte_end":107964,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107969,"byte_end":107983,"line_start":1148,"line_end":1148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107988,"byte_end":107991,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":107996,"byte_end":108003,"line_start":1150,"line_end":1150,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108008,"byte_end":108037,"line_start":1151,"line_end":1151,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108042,"byte_end":108079,"line_start":1152,"line_end":1152,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108084,"byte_end":108141,"line_start":1153,"line_end":1153,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108146,"byte_end":108149,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ let prev = map.remove(\"x-host\").unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108154,"byte_end":108199,"line_start":1155,"line_end":1155,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(\"hello.world\", prev);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108204,"byte_end":108240,"line_start":1156,"line_end":1156,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108245,"byte_end":108248,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ assert!(map.remove(\"x-host\").is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108253,"byte_end":108297,"line_start":1158,"line_end":1158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108302,"byte_end":108305,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove a key of the wrong type fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108310,"byte_end":108374,"line_start":1160,"line_end":1160,"column_start":5,"column_end":69}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108379,"byte_end":108403,"line_start":1161,"line_end":1161,"column_start":5,"column_end":29}},{"value":"/ map.append_bin(\"host-bin\", MetadataValue::from_bytes(b\"world\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108408,"byte_end":108476,"line_start":1162,"line_end":1162,"column_start":5,"column_end":73}},{"value":"/ assert!(map.remove(\"host-bin\").is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108481,"byte_end":108527,"line_start":1163,"line_end":1163,"column_start":5,"column_end":51}},{"value":"/ assert!(map.remove(\"host-bin\".to_string()).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108532,"byte_end":108590,"line_start":1164,"line_end":1164,"column_start":5,"column_end":63}},{"value":"/ assert!(map.remove(&(\"host-bin\".to_string())).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108595,"byte_end":108656,"line_start":1165,"line_end":1165,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108661,"byte_end":108664,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove an invalid key string fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108669,"byte_end":108731,"line_start":1167,"line_end":1167,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108736,"byte_end":108760,"line_start":1168,"line_end":1168,"column_start":5,"column_end":29}},{"value":"/ assert!(map.remove(\"host{}\").is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108765,"byte_end":108809,"line_start":1169,"line_end":1169,"column_start":5,"column_end":49}},{"value":"/ assert!(map.remove(\"host{}\".to_string()).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108814,"byte_end":108870,"line_start":1170,"line_end":1170,"column_start":5,"column_end":61}},{"value":"/ assert!(map.remove(&(\"host{}\".to_string())).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108875,"byte_end":108934,"line_start":1171,"line_end":1171,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":108939,"byte_end":108946,"line_start":1172,"line_end":1172,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":110230,"byte_end":110240,"line_start":1207,"line_end":1207,"column_start":12,"column_end":22},"name":"remove_bin","qualname":"<MetadataMap>::remove_bin","value":"pub fn remove_bin<K>(&mut Self, K) -> Option<MetadataValue<Binary>> where\nK: AsMetadataKey<Binary>","parent":null,"children":[],"decl_id":null,"docs":" Like remove, but for Binary keys (for example \"trace-proto-bin\").","sig":null,"attributes":[{"value":"/ Like remove, but for Binary keys (for example \"trace-proto-bin\").","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109104,"byte_end":109173,"line_start":1180,"line_end":1180,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109178,"byte_end":109181,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109186,"byte_end":109200,"line_start":1182,"line_end":1182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109205,"byte_end":109208,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109213,"byte_end":109220,"line_start":1184,"line_end":1184,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109225,"byte_end":109254,"line_start":1185,"line_end":1185,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109259,"byte_end":109296,"line_start":1186,"line_end":1186,"column_start":5,"column_end":42}},{"value":"/ map.insert_bin(\"trace-proto-bin\", MetadataValue::from_bytes(b\"hello.world\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109301,"byte_end":109382,"line_start":1187,"line_end":1187,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109387,"byte_end":109390,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ let prev = map.remove_bin(\"trace-proto-bin\").unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109395,"byte_end":109453,"line_start":1189,"line_end":1189,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(\"hello.world\", prev);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109458,"byte_end":109494,"line_start":1190,"line_end":1190,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109499,"byte_end":109502,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ assert!(map.remove_bin(\"trace-proto-bin\").is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109507,"byte_end":109564,"line_start":1192,"line_end":1192,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109569,"byte_end":109572,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove a key of the wrong type fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109577,"byte_end":109641,"line_start":1194,"line_end":1194,"column_start":5,"column_end":69}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109646,"byte_end":109670,"line_start":1195,"line_end":1195,"column_start":5,"column_end":29}},{"value":"/ map.append(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109675,"byte_end":109724,"line_start":1196,"line_end":1196,"column_start":5,"column_end":54}},{"value":"/ assert!(map.remove_bin(\"host\").is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109729,"byte_end":109775,"line_start":1197,"line_end":1197,"column_start":5,"column_end":51}},{"value":"/ assert!(map.remove_bin(\"host\".to_string()).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109780,"byte_end":109838,"line_start":1198,"line_end":1198,"column_start":5,"column_end":63}},{"value":"/ assert!(map.remove_bin(&(\"host\".to_string())).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109843,"byte_end":109904,"line_start":1199,"line_end":1199,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109909,"byte_end":109912,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ // Attempting to remove an invalid key string fails by not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109917,"byte_end":109979,"line_start":1201,"line_end":1201,"column_start":5,"column_end":67}},{"value":"/ // finding anything.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":109984,"byte_end":110008,"line_start":1202,"line_end":1202,"column_start":5,"column_end":29}},{"value":"/ assert!(map.remove_bin(\"host{}-bin\").is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":110013,"byte_end":110065,"line_start":1203,"line_end":1203,"column_start":5,"column_end":57}},{"value":"/ assert!(map.remove_bin(\"host{}-bin\".to_string()).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":110070,"byte_end":110134,"line_start":1204,"line_end":1204,"column_start":5,"column_end":69}},{"value":"/ assert!(map.remove_bin(&(\"host{}-bin\".to_string())).is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":110139,"byte_end":110206,"line_start":1205,"line_end":1205,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":110211,"byte_end":110218,"line_start":1206,"line_end":1206,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116768,"byte_end":116777,"line_start":1448,"line_end":1448,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, MetadataValue<VE>) -> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":115915,"byte_end":115985,"line_start":1421,"line_end":1421,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":115990,"byte_end":115993,"line_start":1422,"line_end":1422,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the **first** value in the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":115998,"byte_end":116066,"line_start":1423,"line_end":1423,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116071,"byte_end":116074,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116079,"byte_end":116093,"line_start":1425,"line_end":1425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116098,"byte_end":116101,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116106,"byte_end":116113,"line_start":1427,"line_end":1427,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116118,"byte_end":116147,"line_start":1428,"line_end":1428,"column_start":5,"column_end":34}},{"value":"/ let mut map: MetadataMap = MetadataMap::default();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116152,"byte_end":116206,"line_start":1429,"line_end":1429,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116211,"byte_end":116214,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ let keys = &[","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116219,"byte_end":116236,"line_start":1431,"line_end":1431,"column_start":5,"column_end":22}},{"value":"/     \"content-length\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116241,"byte_end":116266,"line_start":1432,"line_end":1432,"column_start":5,"column_end":30}},{"value":"/     \"x-hello\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116271,"byte_end":116289,"line_start":1433,"line_end":1433,"column_start":5,"column_end":23}},{"value":"/     \"Content-Length\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116294,"byte_end":116319,"line_start":1434,"line_end":1434,"column_start":5,"column_end":30}},{"value":"/     \"x-world\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116324,"byte_end":116342,"line_start":1435,"line_end":1435,"column_start":5,"column_end":23}},{"value":"/ ];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116347,"byte_end":116353,"line_start":1436,"line_end":1436,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116358,"byte_end":116361,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ for &key in keys {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116366,"byte_end":116388,"line_start":1438,"line_end":1438,"column_start":5,"column_end":27}},{"value":"/     let counter = map.entry(key)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116393,"byte_end":116429,"line_start":1439,"line_end":1439,"column_start":5,"column_end":41}},{"value":"/         .expect(\"valid key names\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116434,"byte_end":116472,"line_start":1440,"line_end":1440,"column_start":5,"column_end":43}},{"value":"/         .or_insert(\"\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116477,"byte_end":116521,"line_start":1441,"line_end":1441,"column_start":5,"column_end":49}},{"value":"/     *counter = format!(\"{}{}\", counter.to_str().unwrap(), \"1\").parse().unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116526,"byte_end":116610,"line_start":1442,"line_end":1442,"column_start":5,"column_end":89}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116615,"byte_end":116620,"line_start":1443,"line_end":1443,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116625,"byte_end":116628,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"content-length\").unwrap(), \"11\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116633,"byte_end":116690,"line_start":1445,"line_end":1445,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"1\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116695,"byte_end":116744,"line_start":1446,"line_end":1446,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116749,"byte_end":116756,"line_start":1447,"line_end":1447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118021,"byte_end":118035,"line_start":1491,"line_end":1491,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> MetadataValue<VE>>(Self, F)\n-> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default\n function if empty.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":116999,"byte_end":117073,"line_start":1457,"line_end":1457,"column_start":5,"column_end":79}},{"value":"/ function if empty.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117078,"byte_end":117100,"line_start":1458,"line_end":1458,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117105,"byte_end":117108,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ The default function is not called if the entry exists in the map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117113,"byte_end":117183,"line_start":1460,"line_end":1460,"column_start":5,"column_end":75}},{"value":"/ Returns a mutable reference to the **first** value in the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117188,"byte_end":117256,"line_start":1461,"line_end":1461,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117261,"byte_end":117264,"line_start":1462,"line_end":1462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117269,"byte_end":117283,"line_start":1463,"line_end":1463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117288,"byte_end":117291,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ Basic usage.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117296,"byte_end":117312,"line_start":1465,"line_end":1465,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117317,"byte_end":117320,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117325,"byte_end":117332,"line_start":1467,"line_end":1467,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117337,"byte_end":117366,"line_start":1468,"line_end":1468,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117371,"byte_end":117408,"line_start":1469,"line_end":1469,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117413,"byte_end":117416,"line_start":1470,"line_end":1470,"column_start":5,"column_end":8}},{"value":"/ let res = map.entry(\"x-hello\").unwrap()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117421,"byte_end":117464,"line_start":1471,"line_end":1471,"column_start":5,"column_end":48}},{"value":"/     .or_insert_with(|| \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117469,"byte_end":117522,"line_start":1472,"line_end":1472,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117527,"byte_end":117530,"line_start":1473,"line_end":1473,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(res, \"world\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117535,"byte_end":117564,"line_start":1474,"line_end":1474,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117569,"byte_end":117576,"line_start":1475,"line_end":1475,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117581,"byte_end":117584,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ The default function is not called if the entry exists in the map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117589,"byte_end":117659,"line_start":1477,"line_end":1477,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117664,"byte_end":117667,"line_start":1478,"line_end":1478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117672,"byte_end":117679,"line_start":1479,"line_end":1479,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117684,"byte_end":117713,"line_start":1480,"line_end":1480,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117718,"byte_end":117755,"line_start":1481,"line_end":1481,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117760,"byte_end":117809,"line_start":1482,"line_end":1482,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117814,"byte_end":117817,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ let res = map.entry(\"host\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117822,"byte_end":117853,"line_start":1484,"line_end":1484,"column_start":5,"column_end":36}},{"value":"/     .expect(\"host is a valid string\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117858,"byte_end":117899,"line_start":1485,"line_end":1485,"column_start":5,"column_end":46}},{"value":"/     .or_insert_with(|| unreachable!());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117904,"byte_end":117947,"line_start":1486,"line_end":1486,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117952,"byte_end":117955,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117960,"byte_end":117963,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(res, \"world\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":117968,"byte_end":117997,"line_start":1489,"line_end":1489,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118002,"byte_end":118009,"line_start":1490,"line_end":1490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118565,"byte_end":118568,"line_start":1513,"line_end":1513,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the entry's key","sig":null,"attributes":[{"value":"/ Returns a reference to the entry's key","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118300,"byte_end":118342,"line_start":1503,"line_end":1503,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118347,"byte_end":118350,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118355,"byte_end":118369,"line_start":1505,"line_end":1505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118374,"byte_end":118377,"line_start":1506,"line_end":1506,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118382,"byte_end":118389,"line_start":1507,"line_end":1507,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118394,"byte_end":118423,"line_start":1508,"line_end":1508,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118428,"byte_end":118465,"line_start":1509,"line_end":1509,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118470,"byte_end":118473,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.entry(\"x-hello\").unwrap().key(), \"x-hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118478,"byte_end":118541,"line_start":1511,"line_end":1511,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118546,"byte_end":118553,"line_start":1512,"line_end":1512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119155,"byte_end":119158,"line_start":1536,"line_end":1536,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the entry's key","sig":null,"attributes":[{"value":"/ Returns a reference to the entry's key","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118890,"byte_end":118932,"line_start":1526,"line_end":1526,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118937,"byte_end":118940,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118945,"byte_end":118959,"line_start":1528,"line_end":1528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118964,"byte_end":118967,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118972,"byte_end":118979,"line_start":1530,"line_end":1530,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118984,"byte_end":119013,"line_start":1531,"line_end":1531,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119018,"byte_end":119055,"line_start":1532,"line_end":1532,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119060,"byte_end":119063,"line_start":1533,"line_end":1533,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.entry(\"x-hello\").unwrap().key(), \"x-hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119068,"byte_end":119131,"line_start":1534,"line_end":1534,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119136,"byte_end":119143,"line_start":1535,"line_end":1535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119587,"byte_end":119595,"line_start":1552,"line_end":1552,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key","sig":null,"attributes":[{"value":"/ Take ownership of the key","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119269,"byte_end":119298,"line_start":1540,"line_end":1540,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119303,"byte_end":119306,"line_start":1541,"line_end":1541,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119311,"byte_end":119325,"line_start":1542,"line_end":1542,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119330,"byte_end":119333,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119338,"byte_end":119345,"line_start":1544,"line_end":1544,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119350,"byte_end":119379,"line_start":1545,"line_end":1545,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119384,"byte_end":119421,"line_start":1546,"line_end":1546,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119426,"byte_end":119429,"line_start":1547,"line_end":1547,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"x-hello\").unwrap() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119434,"byte_end":119495,"line_start":1548,"line_end":1548,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(v.into_key().as_str(), \"x-hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119500,"byte_end":119553,"line_start":1549,"line_end":1549,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119558,"byte_end":119563,"line_start":1550,"line_end":1550,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119568,"byte_end":119575,"line_start":1551,"line_end":1551,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120222,"byte_end":120228,"line_start":1573,"line_end":1573,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, MetadataValue<VE>) -> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the entry.","sig":null,"attributes":[{"value":"/ Insert the value into the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119705,"byte_end":119741,"line_start":1556,"line_end":1556,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119746,"byte_end":119749,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ The value will be associated with this entry's key. A mutable reference","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119754,"byte_end":119829,"line_start":1558,"line_end":1558,"column_start":5,"column_end":80}},{"value":"/ to the inserted value will be returned.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119834,"byte_end":119877,"line_start":1559,"line_end":1559,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119882,"byte_end":119885,"line_start":1560,"line_end":1560,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119890,"byte_end":119904,"line_start":1561,"line_end":1561,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119909,"byte_end":119912,"line_start":1562,"line_end":1562,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119917,"byte_end":119924,"line_start":1563,"line_end":1563,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119929,"byte_end":119958,"line_start":1564,"line_end":1564,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":119963,"byte_end":120000,"line_start":1565,"line_end":1565,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120005,"byte_end":120008,"line_start":1566,"line_end":1566,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"x-hello\").unwrap() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120013,"byte_end":120074,"line_start":1567,"line_end":1567,"column_start":5,"column_end":66}},{"value":"/     v.insert(\"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120079,"byte_end":120122,"line_start":1568,"line_end":1568,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120127,"byte_end":120132,"line_start":1569,"line_end":1569,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120137,"byte_end":120140,"line_start":1570,"line_end":1570,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"world\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120145,"byte_end":120198,"line_start":1571,"line_end":1571,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120203,"byte_end":120210,"line_start":1572,"line_end":1572,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120991,"byte_end":121003,"line_start":1595,"line_end":1595,"column_start":12,"column_end":24},"name":"insert_entry","qualname":"<VacantEntry>::insert_entry","value":"pub fn insert_entry(Self, MetadataValue<VE>) -> OccupiedEntry","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the entry.","sig":null,"attributes":[{"value":"/ Insert the value into the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120394,"byte_end":120430,"line_start":1577,"line_end":1577,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120435,"byte_end":120438,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ The value will be associated with this entry's key. The new","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120443,"byte_end":120506,"line_start":1579,"line_end":1579,"column_start":5,"column_end":68}},{"value":"/ `OccupiedEntry` is returned, allowing for further manipulation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120511,"byte_end":120578,"line_start":1580,"line_end":1580,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120583,"byte_end":120586,"line_start":1581,"line_end":1581,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120591,"byte_end":120605,"line_start":1582,"line_end":1582,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120610,"byte_end":120613,"line_start":1583,"line_end":1583,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120618,"byte_end":120625,"line_start":1584,"line_end":1584,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120630,"byte_end":120659,"line_start":1585,"line_end":1585,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120664,"byte_end":120701,"line_start":1586,"line_end":1586,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120706,"byte_end":120709,"line_start":1587,"line_end":1587,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"x-hello\").unwrap() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120714,"byte_end":120775,"line_start":1588,"line_end":1588,"column_start":5,"column_end":66}},{"value":"/     let mut e = v.insert_entry(\"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120780,"byte_end":120841,"line_start":1589,"line_end":1589,"column_start":5,"column_end":66}},{"value":"/     e.insert(\"world2\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120846,"byte_end":120890,"line_start":1590,"line_end":1590,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120895,"byte_end":120900,"line_start":1591,"line_end":1591,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120905,"byte_end":120908,"line_start":1592,"line_end":1592,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.get(\"x-hello\").unwrap(), \"world2\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120913,"byte_end":120967,"line_start":1593,"line_end":1593,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":120972,"byte_end":120979,"line_start":1594,"line_end":1594,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121659,"byte_end":121662,"line_start":1619,"line_end":1619,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &MetadataKey<VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the entry's key.","sig":null,"attributes":[{"value":"/ Returns a reference to the entry's key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121291,"byte_end":121334,"line_start":1606,"line_end":1606,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121339,"byte_end":121342,"line_start":1607,"line_end":1607,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121347,"byte_end":121361,"line_start":1608,"line_end":1608,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121366,"byte_end":121369,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121374,"byte_end":121381,"line_start":1610,"line_end":1610,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121386,"byte_end":121415,"line_start":1611,"line_end":1611,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121420,"byte_end":121457,"line_start":1612,"line_end":1612,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121462,"byte_end":121511,"line_start":1613,"line_end":1613,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121516,"byte_end":121519,"line_start":1614,"line_end":1614,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121524,"byte_end":121584,"line_start":1615,"line_end":1615,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(\"host\", e.key());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121589,"byte_end":121625,"line_start":1616,"line_end":1616,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121630,"byte_end":121635,"line_start":1617,"line_end":1617,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121640,"byte_end":121647,"line_start":1618,"line_end":1618,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122445,"byte_end":122448,"line_start":1646,"line_end":1646,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the first value in the entry.","sig":null,"attributes":[{"value":"/ Get a reference to the first value in the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121773,"byte_end":121825,"line_start":1623,"line_end":1623,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121830,"byte_end":121833,"line_start":1624,"line_end":1624,"column_start":5,"column_end":8}},{"value":"/ Values are stored in insertion order.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121838,"byte_end":121879,"line_start":1625,"line_end":1625,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121884,"byte_end":121887,"line_start":1626,"line_end":1626,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121892,"byte_end":121904,"line_start":1627,"line_end":1627,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121909,"byte_end":121912,"line_start":1628,"line_end":1628,"column_start":5,"column_end":8}},{"value":"/ `get` panics if there are no values associated with the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121917,"byte_end":121983,"line_start":1629,"line_end":1629,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121988,"byte_end":121991,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121996,"byte_end":122010,"line_start":1631,"line_end":1631,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122015,"byte_end":122018,"line_start":1632,"line_end":1632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122023,"byte_end":122030,"line_start":1633,"line_end":1633,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122035,"byte_end":122064,"line_start":1634,"line_end":1634,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122069,"byte_end":122106,"line_start":1635,"line_end":1635,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122111,"byte_end":122166,"line_start":1636,"line_end":1636,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122171,"byte_end":122174,"line_start":1637,"line_end":1637,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122179,"byte_end":122243,"line_start":1638,"line_end":1638,"column_start":5,"column_end":69}},{"value":"/     assert_eq!(e.get(), &\"hello.world\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122248,"byte_end":122292,"line_start":1639,"line_end":1639,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122297,"byte_end":122300,"line_start":1640,"line_end":1640,"column_start":5,"column_end":8}},{"value":"/     e.append(\"hello.earth\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122305,"byte_end":122354,"line_start":1641,"line_end":1641,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122359,"byte_end":122362,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(e.get(), &\"hello.world\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122367,"byte_end":122411,"line_start":1643,"line_end":1643,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122416,"byte_end":122421,"line_start":1644,"line_end":1644,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122426,"byte_end":122433,"line_start":1645,"line_end":1645,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123223,"byte_end":123230,"line_start":1671,"line_end":1671,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the first value in the entry.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the first value in the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122564,"byte_end":122624,"line_start":1650,"line_end":1650,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122629,"byte_end":122632,"line_start":1651,"line_end":1651,"column_start":5,"column_end":8}},{"value":"/ Values are stored in insertion order.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122637,"byte_end":122678,"line_start":1652,"line_end":1652,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122683,"byte_end":122686,"line_start":1653,"line_end":1653,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122691,"byte_end":122703,"line_start":1654,"line_end":1654,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122708,"byte_end":122711,"line_start":1655,"line_end":1655,"column_start":5,"column_end":8}},{"value":"/ `get_mut` panics if there are no values associated with the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122716,"byte_end":122786,"line_start":1656,"line_end":1656,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122791,"byte_end":122794,"line_start":1657,"line_end":1657,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122799,"byte_end":122813,"line_start":1658,"line_end":1658,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122818,"byte_end":122821,"line_start":1659,"line_end":1659,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122826,"byte_end":122833,"line_start":1660,"line_end":1660,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122838,"byte_end":122867,"line_start":1661,"line_end":1661,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122872,"byte_end":122913,"line_start":1662,"line_end":1662,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122918,"byte_end":122973,"line_start":1663,"line_end":1663,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122978,"byte_end":122981,"line_start":1664,"line_end":1664,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":122986,"byte_end":123050,"line_start":1665,"line_end":1665,"column_start":5,"column_end":69}},{"value":"/     e.get_mut().set_sensitive(true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123055,"byte_end":123095,"line_start":1666,"line_end":1666,"column_start":5,"column_end":45}},{"value":"/     assert_eq!(e.get(), &\"hello.world\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123100,"byte_end":123144,"line_start":1667,"line_end":1667,"column_start":5,"column_end":49}},{"value":"/     assert!(e.get().is_sensitive());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123149,"byte_end":123189,"line_start":1668,"line_end":1668,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123194,"byte_end":123199,"line_start":1669,"line_end":1669,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123204,"byte_end":123211,"line_start":1670,"line_end":1670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124111,"byte_end":124119,"line_start":1698,"line_end":1698,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Converts the `OccupiedEntry` into a mutable reference to the **first**\n value.","sig":null,"attributes":[{"value":"/ Converts the `OccupiedEntry` into a mutable reference to the **first**","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123362,"byte_end":123436,"line_start":1675,"line_end":1675,"column_start":5,"column_end":79}},{"value":"/ value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123441,"byte_end":123451,"line_start":1676,"line_end":1676,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123456,"byte_end":123459,"line_start":1677,"line_end":1677,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned reference is bound to the original map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123464,"byte_end":123536,"line_start":1678,"line_end":1678,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123541,"byte_end":123544,"line_start":1679,"line_end":1679,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123549,"byte_end":123561,"line_start":1680,"line_end":1680,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123566,"byte_end":123569,"line_start":1681,"line_end":1681,"column_start":5,"column_end":8}},{"value":"/ `into_mut` panics if there are no values associated with the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123574,"byte_end":123645,"line_start":1682,"line_end":1682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123650,"byte_end":123653,"line_start":1683,"line_end":1683,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123658,"byte_end":123672,"line_start":1684,"line_end":1684,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123677,"byte_end":123680,"line_start":1685,"line_end":1685,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123685,"byte_end":123692,"line_start":1686,"line_end":1686,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123697,"byte_end":123726,"line_start":1687,"line_end":1687,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123731,"byte_end":123772,"line_start":1688,"line_end":1688,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123777,"byte_end":123832,"line_start":1689,"line_end":1689,"column_start":5,"column_end":60}},{"value":"/ map.append(\"host\", \"hello.earth\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123837,"byte_end":123892,"line_start":1690,"line_end":1690,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123897,"byte_end":123900,"line_start":1691,"line_end":1691,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123905,"byte_end":123965,"line_start":1692,"line_end":1692,"column_start":5,"column_end":65}},{"value":"/     e.into_mut().set_sensitive(true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":123970,"byte_end":124011,"line_start":1693,"line_end":1693,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124016,"byte_end":124021,"line_start":1694,"line_end":1694,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124026,"byte_end":124029,"line_start":1695,"line_end":1695,"column_start":5,"column_end":8}},{"value":"/ assert!(map.get(\"host\").unwrap().is_sensitive());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124034,"byte_end":124087,"line_start":1696,"line_end":1696,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124092,"byte_end":124099,"line_start":1697,"line_end":1697,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124914,"byte_end":124920,"line_start":1721,"line_end":1721,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, MetadataValue<VE>) -> MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124250,"byte_end":124282,"line_start":1702,"line_end":1702,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124287,"byte_end":124290,"line_start":1703,"line_end":1703,"column_start":5,"column_end":8}},{"value":"/ All previous values associated with the entry are removed and the first","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124295,"byte_end":124370,"line_start":1704,"line_end":1704,"column_start":5,"column_end":80}},{"value":"/ one is returned. See `insert_mult` for an API that returns all values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124375,"byte_end":124449,"line_start":1705,"line_end":1705,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124454,"byte_end":124457,"line_start":1706,"line_end":1706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124462,"byte_end":124476,"line_start":1707,"line_end":1707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124481,"byte_end":124484,"line_start":1708,"line_end":1708,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124489,"byte_end":124496,"line_start":1709,"line_end":1709,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124501,"byte_end":124530,"line_start":1710,"line_end":1710,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124535,"byte_end":124572,"line_start":1711,"line_end":1711,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124577,"byte_end":124632,"line_start":1712,"line_end":1712,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124637,"byte_end":124640,"line_start":1713,"line_end":1713,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124645,"byte_end":124709,"line_start":1714,"line_end":1714,"column_start":5,"column_end":69}},{"value":"/     let mut prev = e.insert(\"earth\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124714,"byte_end":124772,"line_start":1715,"line_end":1715,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(\"hello.world\", prev);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124777,"byte_end":124817,"line_start":1716,"line_end":1716,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124822,"byte_end":124827,"line_start":1717,"line_end":1717,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124832,"byte_end":124835,"line_start":1718,"line_end":1718,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"earth\", map.get(\"host\").unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124840,"byte_end":124890,"line_start":1719,"line_end":1719,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":124895,"byte_end":124902,"line_start":1720,"line_end":1720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125930,"byte_end":125941,"line_start":1748,"line_end":1748,"column_start":12,"column_end":23},"name":"insert_mult","qualname":"<OccupiedEntry>::insert_mult","value":"pub fn insert_mult(&mut Self, MetadataValue<VE>) -> ValueDrain<, VE>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125116,"byte_end":125148,"line_start":1726,"line_end":1726,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125153,"byte_end":125156,"line_start":1727,"line_end":1727,"column_start":5,"column_end":8}},{"value":"/ This function does the same as `insert` except it returns an iterator","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125161,"byte_end":125234,"line_start":1728,"line_end":1728,"column_start":5,"column_end":78}},{"value":"/ that yields all values previously associated with the key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125239,"byte_end":125301,"line_start":1729,"line_end":1729,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125306,"byte_end":125309,"line_start":1730,"line_end":1730,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125314,"byte_end":125328,"line_start":1731,"line_end":1731,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125333,"byte_end":125336,"line_start":1732,"line_end":1732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125341,"byte_end":125348,"line_start":1733,"line_end":1733,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125353,"byte_end":125382,"line_start":1734,"line_end":1734,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125387,"byte_end":125424,"line_start":1735,"line_end":1735,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125429,"byte_end":125478,"line_start":1736,"line_end":1736,"column_start":5,"column_end":54}},{"value":"/ map.append(\"host\", \"world2\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125483,"byte_end":125533,"line_start":1737,"line_end":1737,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125538,"byte_end":125541,"line_start":1738,"line_end":1738,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125546,"byte_end":125610,"line_start":1739,"line_end":1739,"column_start":5,"column_end":69}},{"value":"/     let mut prev = e.insert_mult(\"earth\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125615,"byte_end":125678,"line_start":1740,"line_end":1740,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(\"world\", prev.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125683,"byte_end":125733,"line_start":1741,"line_end":1741,"column_start":5,"column_end":55}},{"value":"/     assert_eq!(\"world2\", prev.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125738,"byte_end":125789,"line_start":1742,"line_end":1742,"column_start":5,"column_end":56}},{"value":"/     assert!(prev.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125794,"byte_end":125833,"line_start":1743,"line_end":1743,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125838,"byte_end":125843,"line_start":1744,"line_end":1744,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125848,"byte_end":125851,"line_start":1745,"line_end":1745,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"earth\", map.get(\"host\").unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125856,"byte_end":125906,"line_start":1746,"line_end":1746,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":125911,"byte_end":125918,"line_start":1747,"line_end":1747,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126838,"byte_end":126844,"line_start":1776,"line_end":1776,"column_start":12,"column_end":18},"name":"append","qualname":"<OccupiedEntry>::append","value":"pub fn append(&mut Self, MetadataValue<VE>)","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the entry.","sig":null,"attributes":[{"value":"/ Insert the value into the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126135,"byte_end":126171,"line_start":1755,"line_end":1755,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126176,"byte_end":126179,"line_start":1756,"line_end":1756,"column_start":5,"column_end":8}},{"value":"/ The new value is appended to the end of the entry's value list. All","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126184,"byte_end":126255,"line_start":1757,"line_end":1757,"column_start":5,"column_end":76}},{"value":"/ previous values associated with the entry are retained.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126260,"byte_end":126319,"line_start":1758,"line_end":1758,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126324,"byte_end":126327,"line_start":1759,"line_end":1759,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126332,"byte_end":126346,"line_start":1760,"line_end":1760,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126351,"byte_end":126354,"line_start":1761,"line_end":1761,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126359,"byte_end":126366,"line_start":1762,"line_end":1762,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126371,"byte_end":126400,"line_start":1763,"line_end":1763,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126405,"byte_end":126442,"line_start":1764,"line_end":1764,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126447,"byte_end":126496,"line_start":1765,"line_end":1765,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126501,"byte_end":126504,"line_start":1766,"line_end":1766,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126509,"byte_end":126573,"line_start":1767,"line_end":1767,"column_start":5,"column_end":69}},{"value":"/     e.append(\"earth\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126578,"byte_end":126621,"line_start":1768,"line_end":1768,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126626,"byte_end":126631,"line_start":1769,"line_end":1769,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126636,"byte_end":126639,"line_start":1770,"line_end":1770,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all(\"host\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126644,"byte_end":126681,"line_start":1771,"line_end":1771,"column_start":5,"column_end":42}},{"value":"/ let mut i = values.iter();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126686,"byte_end":126716,"line_start":1772,"line_end":1772,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(\"world\", *i.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126721,"byte_end":126765,"line_start":1773,"line_end":1773,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(\"earth\", *i.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126770,"byte_end":126814,"line_start":1774,"line_end":1774,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126819,"byte_end":126826,"line_start":1775,"line_end":1775,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127546,"byte_end":127552,"line_start":1799,"line_end":1799,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> MetadataValue<VE>","parent":null,"children":[],"decl_id":null,"docs":" Remove the entry from the map.","sig":null,"attributes":[{"value":"/ Remove the entry from the map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126934,"byte_end":126968,"line_start":1780,"line_end":1780,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126973,"byte_end":126976,"line_start":1781,"line_end":1781,"column_start":5,"column_end":8}},{"value":"/ All values associated with the entry are removed and the first one is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":126981,"byte_end":127054,"line_start":1782,"line_end":1782,"column_start":5,"column_end":78}},{"value":"/ returned. See `remove_entry_mult` for an API that returns all values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127059,"byte_end":127132,"line_start":1783,"line_end":1783,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127137,"byte_end":127140,"line_start":1784,"line_end":1784,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127145,"byte_end":127159,"line_start":1785,"line_end":1785,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127164,"byte_end":127167,"line_start":1786,"line_end":1786,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127172,"byte_end":127179,"line_start":1787,"line_end":1787,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127184,"byte_end":127213,"line_start":1788,"line_end":1788,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127218,"byte_end":127255,"line_start":1789,"line_end":1789,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127260,"byte_end":127309,"line_start":1790,"line_end":1790,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127314,"byte_end":127317,"line_start":1791,"line_end":1791,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127322,"byte_end":127382,"line_start":1792,"line_end":1792,"column_start":5,"column_end":65}},{"value":"/     let mut prev = e.remove();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127387,"byte_end":127421,"line_start":1793,"line_end":1793,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(\"world\", prev);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127426,"byte_end":127460,"line_start":1794,"line_end":1794,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127465,"byte_end":127470,"line_start":1795,"line_end":1795,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127475,"byte_end":127478,"line_start":1796,"line_end":1796,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"host\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127483,"byte_end":127522,"line_start":1797,"line_end":1797,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127527,"byte_end":127534,"line_start":1798,"line_end":1798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":128383,"byte_end":128395,"line_start":1825,"line_end":1825,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (MetadataKey<VE>, MetadataValue<VE>)","parent":null,"children":[],"decl_id":null,"docs":" Remove the entry from the map.","sig":null,"attributes":[{"value":"/ Remove the entry from the map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127692,"byte_end":127726,"line_start":1804,"line_end":1804,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127731,"byte_end":127734,"line_start":1805,"line_end":1805,"column_start":5,"column_end":8}},{"value":"/ The key and all values associated with the entry are removed and the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127739,"byte_end":127811,"line_start":1806,"line_end":1806,"column_start":5,"column_end":77}},{"value":"/ first one is returned. See `remove_entry_mult` for an API that returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127816,"byte_end":127890,"line_start":1807,"line_end":1807,"column_start":5,"column_end":79}},{"value":"/ all values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127895,"byte_end":127910,"line_start":1808,"line_end":1808,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127915,"byte_end":127918,"line_start":1809,"line_end":1809,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127923,"byte_end":127937,"line_start":1810,"line_end":1810,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127942,"byte_end":127945,"line_start":1811,"line_end":1811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127950,"byte_end":127957,"line_start":1812,"line_end":1812,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127962,"byte_end":127991,"line_start":1813,"line_end":1813,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":127996,"byte_end":128033,"line_start":1814,"line_end":1814,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":128038,"byte_end":128087,"line_start":1815,"line_end":1815,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":128092,"byte_end":128095,"line_start":1816,"line_end":1816,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":128100,"byte_end":128160,"line_start":1817,"line_end":1817,"column_start":5,"column_end":65}},{"value":"/     let (key, mut prev) = e.remove_entry();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":128165,"byte_end":128212,"line_start":1818,"line_end":1818,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(\"host\", key.as_str());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":128217,"byte_end":128258,"line_start":1819,"line_end":1819,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(\"world\", prev);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":128263,"byte_end":128297,"line_start":1820,"line_end":1820,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":128302,"byte_end":128307,"line_start":1821,"line_end":1821,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":128312,"byte_end":128315,"line_start":1822,"line_end":1822,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"host\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":128320,"byte_end":128359,"line_start":1823,"line_end":1823,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":128364,"byte_end":128371,"line_start":1824,"line_end":1824,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":128797,"byte_end":128814,"line_start":1837,"line_end":1837,"column_start":12,"column_end":29},"name":"remove_entry_mult","qualname":"<OccupiedEntry>::remove_entry_mult","value":"pub fn remove_entry_mult(Self) -> (MetadataKey<VE>, ValueDrain)","parent":null,"children":[],"decl_id":null,"docs":" Remove the entry from the map.","sig":null,"attributes":[{"value":"/ Remove the entry from the map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":128652,"byte_end":128686,"line_start":1833,"line_end":1833,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":128691,"byte_end":128694,"line_start":1834,"line_end":1834,"column_start":5,"column_end":8}},{"value":"/ The key and all values associated with the entry are removed and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":128699,"byte_end":128767,"line_start":1835,"line_end":1835,"column_start":5,"column_end":73}},{"value":"/ returned.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":128772,"byte_end":128785,"line_start":1836,"line_end":1836,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129791,"byte_end":129795,"line_start":1867,"line_end":1867,"column_start":12,"column_end":16},"name":"iter","qualname":"<OccupiedEntry>::iter","value":"pub fn iter(&Self) -> ValueIter<, VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all values associated with the entry.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all values associated with the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129134,"byte_end":129204,"line_start":1848,"line_end":1848,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129209,"byte_end":129212,"line_start":1849,"line_end":1849,"column_start":5,"column_end":8}},{"value":"/ Values are iterated in insertion order.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129217,"byte_end":129260,"line_start":1850,"line_end":1850,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129265,"byte_end":129268,"line_start":1851,"line_end":1851,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129273,"byte_end":129287,"line_start":1852,"line_end":1852,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129292,"byte_end":129295,"line_start":1853,"line_end":1853,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129300,"byte_end":129307,"line_start":1854,"line_end":1854,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129312,"byte_end":129341,"line_start":1855,"line_end":1855,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129346,"byte_end":129383,"line_start":1856,"line_end":1856,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129388,"byte_end":129437,"line_start":1857,"line_end":1857,"column_start":5,"column_end":54}},{"value":"/ map.append(\"host\", \"earth\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129442,"byte_end":129491,"line_start":1858,"line_end":1858,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129496,"byte_end":129499,"line_start":1859,"line_end":1859,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129504,"byte_end":129564,"line_start":1860,"line_end":1860,"column_start":5,"column_end":65}},{"value":"/     let mut iter = e.iter();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129569,"byte_end":129601,"line_start":1861,"line_end":1861,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(&\"world\", iter.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129606,"byte_end":129657,"line_start":1862,"line_end":1862,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(&\"earth\", iter.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129662,"byte_end":129713,"line_start":1863,"line_end":1863,"column_start":5,"column_end":56}},{"value":"/     assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129718,"byte_end":129757,"line_start":1864,"line_end":1864,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129762,"byte_end":129767,"line_start":1865,"line_end":1865,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129772,"byte_end":129779,"line_start":1866,"line_end":1866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130713,"byte_end":130721,"line_start":1898,"line_end":1898,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<OccupiedEntry>::iter_mut","value":"pub fn iter_mut(&mut Self) -> ValueIterMut<, VE>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator mutably visiting all values associated with the\n entry.","sig":null,"attributes":[{"value":"/ Returns an iterator mutably visiting all values associated with the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":129945,"byte_end":130016,"line_start":1874,"line_end":1874,"column_start":5,"column_end":76}},{"value":"/ entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130021,"byte_end":130031,"line_start":1875,"line_end":1875,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130036,"byte_end":130039,"line_start":1876,"line_end":1876,"column_start":5,"column_end":8}},{"value":"/ Values are iterated in insertion order.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130044,"byte_end":130087,"line_start":1877,"line_end":1877,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130092,"byte_end":130095,"line_start":1878,"line_end":1878,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130100,"byte_end":130114,"line_start":1879,"line_end":1879,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130119,"byte_end":130122,"line_start":1880,"line_end":1880,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130127,"byte_end":130134,"line_start":1881,"line_end":1881,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130139,"byte_end":130168,"line_start":1882,"line_end":1882,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::default();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130173,"byte_end":130214,"line_start":1883,"line_end":1883,"column_start":5,"column_end":46}},{"value":"/ map.insert(\"host\", \"world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130219,"byte_end":130268,"line_start":1884,"line_end":1884,"column_start":5,"column_end":54}},{"value":"/ map.append(\"host\", \"earth\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130273,"byte_end":130322,"line_start":1885,"line_end":1885,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130327,"byte_end":130330,"line_start":1886,"line_end":1886,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut e) = map.entry(\"host\").unwrap() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130335,"byte_end":130399,"line_start":1887,"line_end":1887,"column_start":5,"column_end":69}},{"value":"/     for e in e.iter_mut() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130404,"byte_end":130435,"line_start":1888,"line_end":1888,"column_start":5,"column_end":36}},{"value":"/         e.set_sensitive(true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130440,"byte_end":130474,"line_start":1889,"line_end":1889,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130479,"byte_end":130488,"line_start":1890,"line_end":1890,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130493,"byte_end":130498,"line_start":1891,"line_end":1891,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130503,"byte_end":130506,"line_start":1892,"line_end":1892,"column_start":5,"column_end":8}},{"value":"/ let mut values = map.get_all(\"host\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130511,"byte_end":130552,"line_start":1893,"line_end":1893,"column_start":5,"column_end":46}},{"value":"/ let mut i = values.iter();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130557,"byte_end":130587,"line_start":1894,"line_end":1894,"column_start":5,"column_end":35}},{"value":"/ assert!(i.next().unwrap().is_sensitive());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130592,"byte_end":130638,"line_start":1895,"line_end":1895,"column_start":5,"column_end":51}},{"value":"/ assert!(i.next().unwrap().is_sensitive());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130643,"byte_end":130689,"line_start":1896,"line_end":1896,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130694,"byte_end":130701,"line_start":1897,"line_end":1897,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":132426,"byte_end":132430,"line_start":1960,"line_end":1960,"column_start":12,"column_end":16},"name":"iter","qualname":"<GetAll>::iter","value":"pub fn iter(&Self) -> ValueIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all values associated with the entry.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all values associated with the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":131783,"byte_end":131853,"line_start":1942,"line_end":1942,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":131858,"byte_end":131861,"line_start":1943,"line_end":1943,"column_start":5,"column_end":8}},{"value":"/ Values are iterated in insertion order.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":131866,"byte_end":131909,"line_start":1944,"line_end":1944,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":131914,"byte_end":131917,"line_start":1945,"line_end":1945,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":131922,"byte_end":131936,"line_start":1946,"line_end":1946,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":131941,"byte_end":131944,"line_start":1947,"line_end":1947,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":131949,"byte_end":131956,"line_start":1948,"line_end":1948,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":131961,"byte_end":131990,"line_start":1949,"line_end":1949,"column_start":5,"column_end":34}},{"value":"/ let mut map = MetadataMap::new();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":131995,"byte_end":132032,"line_start":1950,"line_end":1950,"column_start":5,"column_end":42}},{"value":"/ map.insert(\"x-host\", \"hello.world\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":132037,"byte_end":132094,"line_start":1951,"line_end":1951,"column_start":5,"column_end":62}},{"value":"/ map.append(\"x-host\", \"hello.earth\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":132099,"byte_end":132156,"line_start":1952,"line_end":1952,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":132161,"byte_end":132164,"line_start":1953,"line_end":1953,"column_start":5,"column_end":8}},{"value":"/ let values = map.get_all(\"x-host\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":132169,"byte_end":132208,"line_start":1954,"line_end":1954,"column_start":5,"column_end":44}},{"value":"/ let mut iter = values.iter();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":132213,"byte_end":132246,"line_start":1955,"line_end":1955,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&\"hello.world\", iter.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":132251,"byte_end":132304,"line_start":1956,"line_end":1956,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(&\"hello.earth\", iter.next().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":132309,"byte_end":132362,"line_start":1957,"line_end":1957,"column_start":5,"column_end":58}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":132367,"byte_end":132402,"line_start":1958,"line_end":1958,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":132407,"byte_end":132414,"line_start":1959,"line_end":1959,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":919},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":133746,"byte_end":133761,"line_start":2009,"line_end":2009,"column_start":15,"column_end":30},"name":"IntoMetadataKey","qualname":"::metadata::map::into_metadata_key::IntoMetadataKey","value":"IntoMetadataKey<VE: ValueEncoding>: Sealed<VE>","parent":null,"children":[],"decl_id":null,"docs":" A marker trait used to identify values that can be used as insert keys\n to a `MetadataMap`.\n","sig":null,"attributes":[{"value":"/ A marker trait used to identify values that can be used as insert keys","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":133629,"byte_end":133703,"line_start":2007,"line_end":2007,"column_start":5,"column_end":79}},{"value":"/ to a `MetadataMap`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":133708,"byte_end":133731,"line_start":2008,"line_end":2008,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":921},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":134201,"byte_end":134207,"line_start":2019,"line_end":2019,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::map::into_metadata_key::Sealed","value":"Sealed<VE: ValueEncoding>","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":134263,"byte_end":134269,"line_start":2021,"line_end":2021,"column_start":12,"column_end":18},"name":"insert","qualname":"::metadata::map::into_metadata_key::Sealed::insert","value":"pub fn insert(Self, &mut MetadataMap, MetadataValue<VE>)\n-> Option<MetadataValue<VE>>","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":134400,"byte_end":134406,"line_start":2025,"line_end":2025,"column_start":12,"column_end":18},"name":"append","qualname":"::metadata::map::into_metadata_key::Sealed::append","value":"pub fn append(Self, &mut MetadataMap, MetadataValue<VE>) -> bool","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":973},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":137023,"byte_end":137036,"line_start":2108,"line_end":2108,"column_start":15,"column_end":28},"name":"AsMetadataKey","qualname":"::metadata::map::as_metadata_key::AsMetadataKey","value":"AsMetadataKey<VE: ValueEncoding>: Sealed<VE>","parent":null,"children":[],"decl_id":null,"docs":" A marker trait used to identify values that can be used as search keys\n to a `MetadataMap`.\n","sig":null,"attributes":[{"value":"/ A marker trait used to identify values that can be used as search keys","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":136906,"byte_end":136980,"line_start":2106,"line_end":2106,"column_start":5,"column_end":79}},{"value":"/ to a `MetadataMap`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":136985,"byte_end":137008,"line_start":2107,"line_end":2107,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":975},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":137453,"byte_end":137459,"line_start":2118,"line_end":2118,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::map::as_metadata_key::Sealed","value":"Sealed<VE: ValueEncoding>","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":137515,"byte_end":137518,"line_start":2120,"line_end":2120,"column_start":12,"column_end":15},"name":"get","qualname":"::metadata::map::as_metadata_key::Sealed::get","value":"pub fn get(Self, &MetadataMap) -> Option<&MetadataValue<VE>>","parent":{"krate":0,"index":975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":137610,"byte_end":137617,"line_start":2123,"line_end":2123,"column_start":12,"column_end":19},"name":"get_mut","qualname":"::metadata::map::as_metadata_key::Sealed::get_mut","value":"pub fn get_mut(Self, &mut MetadataMap) -> Option<&mut MetadataValue<VE>>","parent":{"krate":0,"index":975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":137717,"byte_end":137724,"line_start":2126,"line_end":2126,"column_start":12,"column_end":19},"name":"get_all","qualname":"::metadata::map::as_metadata_key::Sealed::get_all","value":"pub fn get_all(Self, &MetadataMap) -> Option<GetAll<, HeaderValue>>","parent":{"krate":0,"index":975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":137821,"byte_end":137826,"line_start":2129,"line_end":2129,"column_start":12,"column_end":17},"name":"entry","qualname":"::metadata::map::as_metadata_key::Sealed::entry","value":"pub fn entry(Self, &mut MetadataMap)\n-> Result<Entry<, HeaderValue>, InvalidMetadataKey>","parent":{"krate":0,"index":975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":137958,"byte_end":137964,"line_start":2133,"line_end":2133,"column_start":12,"column_end":18},"name":"remove","qualname":"::metadata::map::as_metadata_key::Sealed::remove","value":"pub fn remove(Self, &mut MetadataMap) -> Option<MetadataValue<VE>>","parent":{"krate":0,"index":975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1047},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":146814,"byte_end":146843,"line_start":2415,"line_end":2415,"column_start":15,"column_end":44},"name":"AsEncodingAgnosticMetadataKey","qualname":"::metadata::map::as_encoding_agnostic_metadata_key::AsEncodingAgnosticMetadataKey","value":"AsEncodingAgnosticMetadataKey: Sealed","parent":null,"children":[],"decl_id":null,"docs":" A marker trait used to identify values that can be used as search keys\n to a `MetadataMap`, for operations that don't expose the actual value.\n","sig":null,"attributes":[{"value":"/ A marker trait used to identify values that can be used as search keys","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":146646,"byte_end":146720,"line_start":2413,"line_end":2413,"column_start":5,"column_end":79}},{"value":"/ to a `MetadataMap`, for operations that don't expose the actual value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":146725,"byte_end":146799,"line_start":2414,"line_end":2414,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":1048},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":147284,"byte_end":147290,"line_start":2426,"line_end":2426,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::metadata::map::as_encoding_agnostic_metadata_key::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":1049}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":147327,"byte_end":147339,"line_start":2428,"line_end":2428,"column_start":12,"column_end":24},"name":"contains_key","qualname":"::metadata::map::as_encoding_agnostic_metadata_key::Sealed::contains_key","value":"pub fn contains_key(&Self, &MetadataMap) -> bool","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3942},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157023,"byte_end":157036,"line_start":25,"line_end":25,"column_start":12,"column_end":25},"name":"MetadataValue","qualname":"::metadata::value::MetadataValue","value":"MetadataValue {  }","parent":null,"children":[{"krate":0,"index":3944},{"krate":0,"index":3945}],"decl_id":null,"docs":" Represents a custom metadata field value.","sig":null,"attributes":[{"value":"/ Represents a custom metadata field value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":156776,"byte_end":156821,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":156822,"byte_end":156825,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `MetadataValue` is used as the [`MetadataMap`] value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":156826,"byte_end":156883,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":156884,"byte_end":156887,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`HeaderMap`]: struct.HeaderMap.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":156888,"byte_end":156928,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ [`MetadataMap`]: struct.MetadataMap.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":156929,"byte_end":156973,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"repr(transparent)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":156991,"byte_end":157011,"line_start":24,"line_end":24,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":3949},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157494,"byte_end":157504,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"ToStrError","qualname":"::metadata::value::ToStrError","value":"ToStrError {  }","parent":null,"children":[{"krate":0,"index":3950}],"decl_id":null,"docs":" A possible error when converting a `MetadataValue` to a string representation.","sig":null,"attributes":[{"value":"/ A possible error when converting a `MetadataValue` to a string representation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157254,"byte_end":157336,"line_start":32,"line_end":32,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157337,"byte_end":157340,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Metadata field values may contain opaque bytes, in which case it is not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157341,"byte_end":157416,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ possible to represent the value as a string.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157417,"byte_end":157465,"line_start":35,"line_end":35,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1127},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157563,"byte_end":157581,"line_start":42,"line_end":42,"column_start":10,"column_end":28},"name":"AsciiMetadataValue","qualname":"::metadata::value::AsciiMetadataValue","value":"MetadataValue<Ascii>","parent":null,"children":[],"decl_id":null,"docs":" An ascii metadata value.\n","sig":null,"attributes":[{"value":"/ An ascii metadata value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157525,"byte_end":157553,"line_start":41,"line_end":41,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1128},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157644,"byte_end":157663,"line_start":44,"line_end":44,"column_start":10,"column_end":29},"name":"BinaryMetadataValue","qualname":"::metadata::value::BinaryMetadataValue","value":"MetadataValue<Binary>","parent":null,"children":[],"decl_id":null,"docs":" A binary metadata value.\n","sig":null,"attributes":[{"value":"/ A binary metadata value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157606,"byte_end":157634,"line_start":43,"line_end":43,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158596,"byte_end":158607,"line_start":74,"line_end":74,"column_start":12,"column_end":23},"name":"from_static","qualname":"<MetadataValue<VE>>::from_static","value":"pub fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a static string to a `MetadataValue`.","sig":null,"attributes":[{"value":"/ Convert a static string to a `MetadataValue`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157738,"byte_end":157787,"line_start":47,"line_end":47,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157792,"byte_end":157795,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This function will not perform any copying, however the string is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157800,"byte_end":157869,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/ checked to ensure that no invalid characters are present.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157874,"byte_end":157935,"line_start":50,"line_end":50,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157940,"byte_end":157943,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ For Ascii values, only visible ASCII characters (32-127) are permitted.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157948,"byte_end":158023,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ For Binary values, the string must be valid base64.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158028,"byte_end":158083,"line_start":53,"line_end":53,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158088,"byte_end":158091,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158096,"byte_end":158108,"line_start":55,"line_end":55,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158113,"byte_end":158116,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This function panics if the argument contains invalid metadata value","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158121,"byte_end":158193,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ characters.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158198,"byte_end":158213,"line_start":58,"line_end":58,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158218,"byte_end":158221,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158226,"byte_end":158240,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158245,"byte_end":158248,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158253,"byte_end":158260,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158265,"byte_end":158294,"line_start":63,"line_end":63,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158299,"byte_end":158354,"line_start":64,"line_end":64,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val, \"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158359,"byte_end":158388,"line_start":65,"line_end":65,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158393,"byte_end":158400,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158405,"byte_end":158408,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158413,"byte_end":158420,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158425,"byte_end":158454,"line_start":69,"line_end":69,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_static(\"SGVsbG8hIQ==\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158459,"byte_end":158522,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(val, \"Hello!!\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158527,"byte_end":158558,"line_start":71,"line_end":71,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158563,"byte_end":158570,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158575,"byte_end":158584,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159650,"byte_end":159664,"line_start":107,"line_end":107,"column_start":12,"column_end":26},"name":"try_from_bytes","qualname":"<MetadataValue<VE>>::try_from_bytes","value":"pub fn try_from_bytes(&[u8]) -> Result<Self, InvalidMetadataValueBytes>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert a byte slice to a `MetadataValue`.","sig":null,"attributes":[{"value":"/ Attempt to convert a byte slice to a `MetadataValue`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158757,"byte_end":158814,"line_start":81,"line_end":81,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158819,"byte_end":158822,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ For Ascii metadata values, If the argument contains invalid metadata","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158827,"byte_end":158899,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ value bytes, an error is returned. Only byte values between 32 and 255","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158904,"byte_end":158978,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ (inclusive) are permitted, excluding byte 127 (DEL).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":158983,"byte_end":159039,"line_start":85,"line_end":85,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159044,"byte_end":159047,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ For Binary metadata values this method cannot fail. See also the Binary","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159052,"byte_end":159127,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ only version of this method `from_bytes`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159132,"byte_end":159177,"line_start":88,"line_end":88,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159182,"byte_end":159185,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159190,"byte_end":159204,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159209,"byte_end":159212,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159217,"byte_end":159224,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159229,"byte_end":159258,"line_start":93,"line_end":93,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::try_from_bytes(b\"hello\\xfa\").unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159263,"byte_end":159335,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(val, &b\"hello\\xfa\"[..]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159340,"byte_end":159379,"line_start":95,"line_end":95,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159384,"byte_end":159391,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159396,"byte_end":159399,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ An invalid value","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159404,"byte_end":159424,"line_start":98,"line_end":98,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159429,"byte_end":159432,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159437,"byte_end":159444,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159449,"byte_end":159478,"line_start":101,"line_end":101,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::try_from_bytes(b\"\\n\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159483,"byte_end":159539,"line_start":102,"line_end":102,"column_start":5,"column_end":61}},{"value":"/ assert!(val.is_err());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159544,"byte_end":159570,"line_start":103,"line_end":103,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159575,"byte_end":159582,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159587,"byte_end":159596,"line_start":105,"line_end":105,"column_start":5,"column_end":14}},{"value":"deprecated = \"Use TryFrom instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159601,"byte_end":159638,"line_start":106,"line_end":106,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160392,"byte_end":160403,"line_start":123,"line_end":123,"column_start":12,"column_end":23},"name":"from_shared","qualname":"<MetadataValue<VE>>::from_shared","value":"pub fn from_shared(Bytes) -> Result<Self, InvalidMetadataValueBytes>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert a `Bytes` buffer to a `MetadataValue`.","sig":null,"attributes":[{"value":"/ Attempt to convert a `Bytes` buffer to a `MetadataValue`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159761,"byte_end":159822,"line_start":111,"line_end":111,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159827,"byte_end":159830,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ For `MetadataValue<Ascii>`, if the argument contains invalid metadata","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159835,"byte_end":159908,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ value bytes, an error is returned. Only byte values between 32 and 255","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159913,"byte_end":159987,"line_start":114,"line_end":114,"column_start":5,"column_end":79}},{"value":"/ (inclusive) are permitted, excluding byte 127 (DEL).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":159992,"byte_end":160048,"line_start":115,"line_end":115,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160053,"byte_end":160056,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ For `MetadataValue<Binary>`, if the argument is not valid base64, an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160061,"byte_end":160133,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ error is returned. In use cases where the input is not base64 encoded,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160138,"byte_end":160212,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ use `from_bytes`; if the value has to be encoded it's not possible to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160217,"byte_end":160290,"line_start":119,"line_end":119,"column_start":5,"column_end":78}},{"value":"/ share the memory anyways.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160295,"byte_end":160324,"line_start":120,"line_end":120,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160329,"byte_end":160338,"line_start":121,"line_end":121,"column_start":5,"column_end":14}},{"value":"deprecated = \"Use TryFrom instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160343,"byte_end":160380,"line_start":122,"line_end":122,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160865,"byte_end":160886,"line_start":136,"line_end":136,"column_start":19,"column_end":40},"name":"from_shared_unchecked","qualname":"<MetadataValue<VE>>::from_shared_unchecked","value":"pub unsafe fn from_shared_unchecked(Bytes) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Bytes` directly into a `MetadataValue` without validating.\n For MetadataValue<Binary> the provided parameter must be base64\n encoded without padding bytes at the end.","sig":null,"attributes":[{"value":"/ Convert a `Bytes` directly into a `MetadataValue` without validating.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160500,"byte_end":160573,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ For MetadataValue<Binary> the provided parameter must be base64","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160578,"byte_end":160645,"line_start":128,"line_end":128,"column_start":5,"column_end":72}},{"value":"/ encoded without padding bytes at the end.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160650,"byte_end":160695,"line_start":129,"line_end":129,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160700,"byte_end":160703,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160708,"byte_end":160720,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160725,"byte_end":160728,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This function does NOT validate that illegal bytes are not contained","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160733,"byte_end":160805,"line_start":133,"line_end":133,"column_start":5,"column_end":77}},{"value":"/ within the buffer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160810,"byte_end":160832,"line_start":134,"line_end":134,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":160837,"byte_end":160846,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161430,"byte_end":161438,"line_start":156,"line_end":156,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MetadataValue<VE>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `MetadataValue` has a length of zero bytes.","sig":null,"attributes":[{"value":"/ Returns true if the `MetadataValue` has a length of zero bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161054,"byte_end":161121,"line_start":143,"line_end":143,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161126,"byte_end":161129,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161134,"byte_end":161148,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161153,"byte_end":161156,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161161,"byte_end":161168,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161173,"byte_end":161202,"line_start":148,"line_end":148,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161207,"byte_end":161257,"line_start":149,"line_end":149,"column_start":5,"column_end":55}},{"value":"/ assert!(val.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161262,"byte_end":161290,"line_start":150,"line_end":150,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161295,"byte_end":161298,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161303,"byte_end":161358,"line_start":152,"line_end":152,"column_start":5,"column_end":60}},{"value":"/ assert!(!val.is_empty());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161363,"byte_end":161392,"line_start":153,"line_end":153,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161397,"byte_end":161404,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161409,"byte_end":161418,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162108,"byte_end":162116,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<MetadataValue<VE>>::to_bytes","value":"pub fn to_bytes(&Self) -> Result<Bytes, InvalidMetadataValueBytes>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MetadataValue` to a Bytes buffer. This method cannot\n fail for Ascii values. For Ascii values, `as_bytes` is more convenient\n to use.","sig":null,"attributes":[{"value":"/ Converts a `MetadataValue` to a Bytes buffer. This method cannot","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161511,"byte_end":161579,"line_start":160,"line_end":160,"column_start":5,"column_end":73}},{"value":"/ fail for Ascii values. For Ascii values, `as_bytes` is more convenient","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161584,"byte_end":161658,"line_start":161,"line_end":161,"column_start":5,"column_end":79}},{"value":"/ to use.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161663,"byte_end":161674,"line_start":162,"line_end":162,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161679,"byte_end":161682,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161687,"byte_end":161701,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161706,"byte_end":161709,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161714,"byte_end":161721,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161726,"byte_end":161755,"line_start":167,"line_end":167,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161760,"byte_end":161815,"line_start":168,"line_end":168,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.to_bytes().unwrap().as_ref(), b\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161820,"byte_end":161879,"line_start":169,"line_end":169,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161884,"byte_end":161891,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161896,"byte_end":161899,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161904,"byte_end":161911,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161916,"byte_end":161945,"line_start":173,"line_end":173,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_bytes(b\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":161950,"byte_end":162006,"line_start":174,"line_end":174,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(val.to_bytes().unwrap().as_ref(), b\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162011,"byte_end":162070,"line_start":175,"line_end":175,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162075,"byte_end":162082,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162087,"byte_end":162096,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162634,"byte_end":162647,"line_start":197,"line_end":197,"column_start":12,"column_end":25},"name":"set_sensitive","qualname":"<MetadataValue<VE>>::set_sensitive","value":"pub fn set_sensitive(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Mark that the metadata value represents sensitive information.","sig":null,"attributes":[{"value":"/ Mark that the metadata value represents sensitive information.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162223,"byte_end":162289,"line_start":182,"line_end":182,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162294,"byte_end":162297,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162302,"byte_end":162316,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162321,"byte_end":162324,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162329,"byte_end":162336,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162341,"byte_end":162370,"line_start":187,"line_end":187,"column_start":5,"column_end":34}},{"value":"/ let mut val = AsciiMetadataValue::from_static(\"my secret\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162375,"byte_end":162438,"line_start":188,"line_end":188,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162443,"byte_end":162446,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162451,"byte_end":162479,"line_start":190,"line_end":190,"column_start":5,"column_end":33}},{"value":"/ assert!(val.is_sensitive());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162484,"byte_end":162516,"line_start":191,"line_end":191,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162521,"byte_end":162524,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(false);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162529,"byte_end":162558,"line_start":193,"line_end":193,"column_start":5,"column_end":34}},{"value":"/ assert!(!val.is_sensitive());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162563,"byte_end":162596,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162601,"byte_end":162608,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162613,"byte_end":162622,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163520,"byte_end":163532,"line_start":223,"line_end":223,"column_start":12,"column_end":24},"name":"is_sensitive","qualname":"<MetadataValue<VE>>::is_sensitive","value":"pub fn is_sensitive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value represents sensitive data.","sig":null,"attributes":[{"value":"/ Returns `true` if the value represents sensitive data.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162722,"byte_end":162780,"line_start":201,"line_end":201,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162785,"byte_end":162788,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Sensitive data could represent passwords or other data that should not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162793,"byte_end":162867,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ be stored on disk or in memory. This setting can be used by components","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162872,"byte_end":162946,"line_start":204,"line_end":204,"column_start":5,"column_end":79}},{"value":"/ like caches to avoid storing the value. HPACK encoders must set the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":162951,"byte_end":163022,"line_start":205,"line_end":205,"column_start":5,"column_end":76}},{"value":"/ metadata field to never index when `is_sensitive` returns true.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163027,"byte_end":163094,"line_start":206,"line_end":206,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163099,"byte_end":163102,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Note that sensitivity is not factored into equality or ordering.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163107,"byte_end":163175,"line_start":208,"line_end":208,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163180,"byte_end":163183,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163188,"byte_end":163202,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163207,"byte_end":163210,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163215,"byte_end":163222,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163227,"byte_end":163256,"line_start":213,"line_end":213,"column_start":5,"column_end":34}},{"value":"/ let mut val = AsciiMetadataValue::from_static(\"my secret\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163261,"byte_end":163324,"line_start":214,"line_end":214,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163329,"byte_end":163332,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(true);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163337,"byte_end":163365,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ assert!(val.is_sensitive());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163370,"byte_end":163402,"line_start":217,"line_end":217,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163407,"byte_end":163410,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ val.set_sensitive(false);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163415,"byte_end":163444,"line_start":219,"line_end":219,"column_start":5,"column_end":34}},{"value":"/ assert!(!val.is_sensitive());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163449,"byte_end":163482,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163487,"byte_end":163494,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163499,"byte_end":163508,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":164123,"byte_end":164139,"line_start":244,"line_end":244,"column_start":12,"column_end":28},"name":"as_encoded_bytes","qualname":"<MetadataValue<VE>>::as_encoded_bytes","value":"pub fn as_encoded_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MetadataValue` to a byte slice. For Binary values, the\n return value is base64 encoded.","sig":null,"attributes":[{"value":"/ Converts a `MetadataValue` to a byte slice. For Binary values, the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163595,"byte_end":163665,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/ return value is base64 encoded.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163670,"byte_end":163705,"line_start":228,"line_end":228,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163710,"byte_end":163713,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163718,"byte_end":163732,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163737,"byte_end":163740,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163745,"byte_end":163752,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163757,"byte_end":163786,"line_start":233,"line_end":233,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163791,"byte_end":163846,"line_start":234,"line_end":234,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.as_encoded_bytes(), b\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163851,"byte_end":163900,"line_start":235,"line_end":235,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163905,"byte_end":163912,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163917,"byte_end":163920,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163925,"byte_end":163932,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163937,"byte_end":163966,"line_start":239,"line_end":239,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_bytes(b\"Hello!\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":163971,"byte_end":164028,"line_start":240,"line_end":240,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(val.as_encoded_bytes(), b\"SGVsbG8h\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":164033,"byte_end":164085,"line_start":241,"line_end":241,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":164090,"byte_end":164097,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":164102,"byte_end":164111,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171522,"byte_end":171530,"line_start":463,"line_end":463,"column_start":12,"column_end":20},"name":"from_str","qualname":"<MetadataValue<Ascii>>::from_str","value":"pub fn from_str(&str) -> Result<Self, InvalidMetadataValue>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert a string to a `MetadataValue<Ascii>`.","sig":null,"attributes":[{"value":"/ Attempt to convert a string to a `MetadataValue<Ascii>`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":170701,"byte_end":170761,"line_start":438,"line_end":438,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":170766,"byte_end":170769,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ If the argument contains invalid metadata value characters, an error is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":170774,"byte_end":170849,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ returned. Only visible ASCII characters (32-127) are permitted. Use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":170854,"byte_end":170925,"line_start":441,"line_end":441,"column_start":5,"column_end":76}},{"value":"/ `from_bytes` to create a `MetadataValue` that includes opaque octets","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":170930,"byte_end":171002,"line_start":442,"line_end":442,"column_start":5,"column_end":77}},{"value":"/ (128-255).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171007,"byte_end":171021,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171026,"byte_end":171029,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171034,"byte_end":171048,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171053,"byte_end":171056,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171061,"byte_end":171068,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171073,"byte_end":171102,"line_start":448,"line_end":448,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_str(\"hello\").unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171107,"byte_end":171168,"line_start":449,"line_end":449,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(val, \"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171173,"byte_end":171202,"line_start":450,"line_end":450,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171207,"byte_end":171214,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171219,"byte_end":171222,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ An invalid value","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171227,"byte_end":171247,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171252,"byte_end":171255,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171260,"byte_end":171267,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171272,"byte_end":171301,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_str(\"\\n\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171306,"byte_end":171355,"line_start":457,"line_end":457,"column_start":5,"column_end":54}},{"value":"/ assert!(val.is_err());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171360,"byte_end":171386,"line_start":458,"line_end":458,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171391,"byte_end":171398,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171403,"byte_end":171443,"line_start":460,"line_end":460,"column_start":5,"column_end":45}},{"value":"deprecated = \"Use TryFrom or FromStr instead\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171448,"byte_end":171496,"line_start":461,"line_end":461,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171501,"byte_end":171510,"line_start":462,"line_end":462,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172087,"byte_end":172095,"line_start":481,"line_end":481,"column_start":12,"column_end":20},"name":"from_key","qualname":"<MetadataValue<Ascii>>::from_key","value":"pub fn from_key<KeyVE: ValueEncoding>(MetadataKey<KeyVE>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a MetadataKey into a MetadataValue<Ascii>.","sig":null,"attributes":[{"value":"/ Converts a MetadataKey into a MetadataValue<Ascii>.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171613,"byte_end":171668,"line_start":467,"line_end":467,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171673,"byte_end":171676,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Since every valid MetadataKey is a valid MetadataValue this is done","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171681,"byte_end":171752,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/ infallibly.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171757,"byte_end":171772,"line_start":470,"line_end":470,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171777,"byte_end":171780,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171785,"byte_end":171799,"line_start":472,"line_end":472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171804,"byte_end":171807,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171812,"byte_end":171819,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171824,"byte_end":171853,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ # use std::convert::TryFrom;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171858,"byte_end":171890,"line_start":476,"line_end":476,"column_start":5,"column_end":37}},{"value":"/ let val = AsciiMetadataValue::from_key::<Ascii>(\"accept\".parse().unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171895,"byte_end":171974,"line_start":477,"line_end":477,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(val, AsciiMetadataValue::try_from(b\"accept\").unwrap());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":171979,"byte_end":172049,"line_start":478,"line_end":478,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172054,"byte_end":172061,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172066,"byte_end":172075,"line_start":480,"line_end":480,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172724,"byte_end":172727,"line_start":500,"line_end":500,"column_start":12,"column_end":15},"name":"len","qualname":"<MetadataValue<Ascii>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of `self`, in bytes.","sig":null,"attributes":[{"value":"/ Returns the length of `self`, in bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172183,"byte_end":172226,"line_start":485,"line_end":485,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172231,"byte_end":172234,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ This method is not available for MetadataValue<Binary> because that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172239,"byte_end":172310,"line_start":487,"line_end":487,"column_start":5,"column_end":76}},{"value":"/ cannot be implemented in constant time, which most people would probably","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172315,"byte_end":172391,"line_start":488,"line_end":488,"column_start":5,"column_end":81}},{"value":"/ expect. To get the length of MetadataValue<Binary>, convert it to a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172396,"byte_end":172467,"line_start":489,"line_end":489,"column_start":5,"column_end":76}},{"value":"/ Bytes value and measure its length.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172472,"byte_end":172511,"line_start":490,"line_end":490,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172516,"byte_end":172519,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172524,"byte_end":172538,"line_start":492,"line_end":492,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172543,"byte_end":172546,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172551,"byte_end":172558,"line_start":494,"line_end":494,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172563,"byte_end":172592,"line_start":495,"line_end":495,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172597,"byte_end":172652,"line_start":496,"line_end":496,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.len(), 5);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172657,"byte_end":172686,"line_start":497,"line_end":497,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172691,"byte_end":172698,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172703,"byte_end":172712,"line_start":499,"line_end":499,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173200,"byte_end":173206,"line_start":517,"line_end":517,"column_start":12,"column_end":18},"name":"to_str","qualname":"<MetadataValue<Ascii>>::to_str","value":"pub fn to_str(&Self) -> Result<&str, ToStrError>","parent":null,"children":[],"decl_id":null,"docs":" Yields a `&str` slice if the `MetadataValue` only contains visible ASCII\n chars.","sig":null,"attributes":[{"value":"/ Yields a `&str` slice if the `MetadataValue` only contains visible ASCII","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172782,"byte_end":172858,"line_start":504,"line_end":504,"column_start":5,"column_end":81}},{"value":"/ chars.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172863,"byte_end":172873,"line_start":505,"line_end":505,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172878,"byte_end":172881,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ This function will perform a scan of the metadata value, checking all the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172886,"byte_end":172963,"line_start":507,"line_end":507,"column_start":5,"column_end":82}},{"value":"/ characters.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172968,"byte_end":172983,"line_start":508,"line_end":508,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172988,"byte_end":172991,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":172996,"byte_end":173010,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173015,"byte_end":173018,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173023,"byte_end":173030,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173035,"byte_end":173064,"line_start":513,"line_end":513,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173069,"byte_end":173124,"line_start":514,"line_end":514,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.to_str().unwrap(), \"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173129,"byte_end":173176,"line_start":515,"line_end":515,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173181,"byte_end":173188,"line_start":516,"line_end":516,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173629,"byte_end":173637,"line_start":532,"line_end":532,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<MetadataValue<Ascii>>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MetadataValue` to a byte slice. For Binary values, use\n `to_bytes`.","sig":null,"attributes":[{"value":"/ Converts a `MetadataValue` to a byte slice. For Binary values, use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173314,"byte_end":173384,"line_start":521,"line_end":521,"column_start":5,"column_end":75}},{"value":"/ `to_bytes`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173389,"byte_end":173404,"line_start":522,"line_end":522,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173409,"byte_end":173412,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173417,"byte_end":173431,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173436,"byte_end":173439,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173444,"byte_end":173451,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173456,"byte_end":173485,"line_start":527,"line_end":527,"column_start":5,"column_end":34}},{"value":"/ let val = AsciiMetadataValue::from_static(\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173490,"byte_end":173545,"line_start":528,"line_end":528,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(val.as_bytes(), b\"hello\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173550,"byte_end":173591,"line_start":529,"line_end":529,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173596,"byte_end":173603,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173608,"byte_end":173617,"line_start":531,"line_end":531,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":174010,"byte_end":174020,"line_start":548,"line_end":548,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<MetadataValue<Binary>>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a byte slice to a `MetadataValue<Binary>`.","sig":null,"attributes":[{"value":"/ Convert a byte slice to a `MetadataValue<Binary>`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173728,"byte_end":173782,"line_start":538,"line_end":538,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173787,"byte_end":173790,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173795,"byte_end":173809,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173814,"byte_end":173817,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173822,"byte_end":173829,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/ # use tonic::metadata::*;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173834,"byte_end":173863,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/ let val = BinaryMetadataValue::from_bytes(b\"hello\\xfa\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173868,"byte_end":173928,"line_start":544,"line_end":544,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(val, &b\"hello\\xfa\"[..]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173933,"byte_end":173972,"line_start":545,"line_end":545,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173977,"byte_end":173984,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173989,"byte_end":173998,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1371},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":53411,"byte_end":53417,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"name":"errors","qualname":"::metadata::errors","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":1375},{"krate":0,"index":1378},{"krate":0,"index":1381}],"decl_id":null,"docs":" The metadata::errors module contains types for errors that can occur\n while handling gRPC custom metadata.\n","sig":null,"attributes":[{"value":"/ The metadata::errors module contains types for errors that can occur","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":53289,"byte_end":53361,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ while handling gRPC custom metadata.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/mod.rs","byte_start":53362,"byte_end":53402,"line_start":37,"line_end":37,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":1384},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/mod.rs","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1488},{"krate":0,"index":1565},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1578}],"decl_id":null,"docs":" Generic server implementation.","sig":null,"attributes":[{"value":"/ Generic server implementation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/mod.rs","byte_start":187810,"byte_end":187844,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/mod.rs","byte_start":187845,"byte_end":187848,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the low level components to build a gRPC server. It","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/mod.rs","byte_start":187849,"byte_end":187925,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ provides a codec agnostic gRPC server handler.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/mod.rs","byte_start":187926,"byte_end":187976,"line_start":4,"line_end":4,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/mod.rs","byte_start":187977,"byte_end":187980,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The items in this module are generally designed to be used by some codegen","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/mod.rs","byte_start":187981,"byte_end":188059,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ tool that will provide the user some custom way to implement the server that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/mod.rs","byte_start":188060,"byte_end":188140,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ will implement the proper gRPC service. Thusly, they are a bit hard to use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/mod.rs","byte_start":188141,"byte_end":188219,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ by hand.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/mod.rs","byte_start":188220,"byte_end":188232,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1442},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":189439,"byte_end":189443,"line_start":34,"line_end":34,"column_start":12,"column_end":16},"name":"Grpc","qualname":"::server::grpc::Grpc","value":"Grpc {  }","parent":null,"children":[{"krate":0,"index":1444}],"decl_id":null,"docs":" A gRPC Server handler.","sig":null,"attributes":[{"value":"/ A gRPC Server handler.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":189039,"byte_end":189065,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":189066,"byte_end":189069,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This will wrap some inner [`Codec`] and provide utilities to handle","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":189070,"byte_end":189141,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ inbound unary, client side streaming, server side streaming, and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":189142,"byte_end":189210,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ bi-directional streaming.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":189211,"byte_end":189240,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":189241,"byte_end":189244,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Each request handler method accepts some service that implements the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":189245,"byte_end":189317,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ corresponding service trait and a http request that contains some body that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":189318,"byte_end":189397,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ implements some [`Body`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":189398,"byte_end":189427,"line_start":33,"line_end":33,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1447},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":189919,"byte_end":189922,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<Grpc<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new gRPC server with the provided [`Codec`].\n","sig":null,"attributes":[{"value":"/ Creates a new gRPC server with the provided [`Codec`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":189849,"byte_end":189907,"line_start":48,"line_end":48,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":191326,"byte_end":191337,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"accept_gzip","qualname":"<Grpc<T>>::accept_gzip","value":"pub fn accept_gzip(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"compression\"))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":191278,"byte_end":191314,"line_start":93,"line_end":93,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":192477,"byte_end":192486,"line_start":132,"line_end":132,"column_start":12,"column_end":21},"name":"send_gzip","qualname":"<Grpc<T>>::send_gzip","value":"pub fn send_gzip(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"compression\"))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":192429,"byte_end":192465,"line_start":131,"line_end":131,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":193324,"byte_end":193348,"line_start":163,"line_end":163,"column_start":12,"column_end":36},"name":"apply_compression_config","qualname":"<Grpc<T>>::apply_compression_config","value":"pub fn apply_compression_config(Self, (), ()) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"compression\"))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":193226,"byte_end":193262,"line_start":160,"line_end":160,"column_start":5,"column_end":41}},{"value":"allow(unused_variables)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":193286,"byte_end":193312,"line_start":162,"line_end":162,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":193488,"byte_end":193493,"line_start":168,"line_end":168,"column_start":18,"column_end":23},"name":"unary","qualname":"<Grpc<T>>::unary","value":"pub async fn unary<S, B, '_>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: UnaryService<T::Decode, Response = T::Encode>,\nB: Body + Send + 'static, B::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Handle a single unary gRPC request.\n","sig":null,"attributes":[{"value":"/ Handle a single unary gRPC request.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":193431,"byte_end":193470,"line_start":167,"line_end":167,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":195056,"byte_end":195072,"line_start":216,"line_end":216,"column_start":18,"column_end":34},"name":"server_streaming","qualname":"<Grpc<T>>::server_streaming","value":"pub async fn server_streaming<S, B, '_>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: ServerStreamingService<T::Decode, Response =\nT::Encode>, S::ResponseStream: Send + 'static, B: Body + Send + 'static,\nB::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Handle a server side streaming request.\n","sig":null,"attributes":[{"value":"/ Handle a server side streaming request.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":194995,"byte_end":195038,"line_start":215,"line_end":215,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":196540,"byte_end":196556,"line_start":260,"line_end":260,"column_start":18,"column_end":34},"name":"client_streaming","qualname":"<Grpc<T>>::client_streaming","value":"pub async fn client_streaming<S, B, '_>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: ClientStreamingService<T::Decode, Response =\nT::Encode>, B: Body + Send + 'static, B::Error: Into<crate::Error> + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Handle a client side streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Handle a client side streaming gRPC request.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":196474,"byte_end":196522,"line_start":259,"line_end":259,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":197661,"byte_end":197670,"line_start":296,"line_end":296,"column_start":18,"column_end":27},"name":"streaming","qualname":"<Grpc<T>>::streaming","value":"pub async fn streaming<S, B, '_>(&'_ mut Self, S, http::Request<B>)\n-> /*impl Trait*/ where S: StreamingService<T::Decode, Response = T::Encode> +\nSend, S::ResponseStream: Send + 'static, B: Body + Send + 'static,\nB::Error: Into<crate::Error> + Send","parent":null,"children":[],"decl_id":null,"docs":" Handle a bi-directional streaming gRPC request.\n","sig":null,"attributes":[{"value":"/ Handle a bi-directional streaming gRPC request.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":197592,"byte_end":197643,"line_start":295,"line_end":295,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":1511},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":203327,"byte_end":203339,"line_start":10,"line_end":10,"column_start":11,"column_end":23},"name":"UnaryService","qualname":"::server::service::UnaryService","value":"UnaryService<R>","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":203142,"byte_end":203189,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":203190,"byte_end":203193,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":203194,"byte_end":203272,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ automatically implement `UnaryService`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":203273,"byte_end":203316,"line_start":9,"line_end":9,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":1513},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":203393,"byte_end":203401,"line_start":12,"line_end":12,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::UnaryService::Response","value":"type Response;","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":203349,"byte_end":203383,"line_start":11,"line_end":11,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1514},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":203437,"byte_end":203443,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::UnaryService::Future","value":"type Future: Future<Output = Result<Response<Self::Response>, Status>>;","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":203408,"byte_end":203427,"line_start":14,"line_end":14,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":203537,"byte_end":203541,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::UnaryService::call","value":"pub fn call(&mut Self, Request<R>) -> Self::Future","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":203509,"byte_end":203529,"line_start":17,"line_end":17,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":1523},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":204076,"byte_end":204098,"line_start":37,"line_end":37,"column_start":11,"column_end":33},"name":"ServerStreamingService","qualname":"::server::service::ServerStreamingService","value":"ServerStreamingService<R>","parent":null,"children":[{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":203881,"byte_end":203928,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":203929,"byte_end":203932,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":203933,"byte_end":204011,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ automatically implement `ServerStreamingService`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":204012,"byte_end":204065,"line_start":36,"line_end":36,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1525},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":204152,"byte_end":204160,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::ServerStreamingService::Response","value":"type Response;","parent":{"krate":0,"index":1523},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":204108,"byte_end":204142,"line_start":38,"line_end":38,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1526},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":204217,"byte_end":204231,"line_start":42,"line_end":42,"column_start":10,"column_end":24},"name":"ResponseStream","qualname":"::server::service::ServerStreamingService::ResponseStream","value":"type ResponseStream: Stream<Item = Result<Self::Response, Status>>;","parent":{"krate":0,"index":1523},"children":[],"decl_id":null,"docs":" Stream of outbound response messages\n","sig":null,"attributes":[{"value":"/ Stream of outbound response messages","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":204167,"byte_end":204207,"line_start":41,"line_end":41,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1527},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":204314,"byte_end":204320,"line_start":45,"line_end":45,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::ServerStreamingService::Future","value":"type Future: Future<Output = Result<Response<Self::ResponseStream>, Status>>;","parent":{"krate":0,"index":1523},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":204285,"byte_end":204304,"line_start":44,"line_end":44,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":204420,"byte_end":204424,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::ServerStreamingService::call","value":"pub fn call(&mut Self, Request<R>) -> Self::Future","parent":{"krate":0,"index":1523},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":204392,"byte_end":204412,"line_start":47,"line_end":47,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":1538},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205049,"byte_end":205071,"line_start":69,"line_end":69,"column_start":11,"column_end":33},"name":"ClientStreamingService","qualname":"::server::service::ClientStreamingService","value":"ClientStreamingService<R>","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":204854,"byte_end":204901,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":204902,"byte_end":204905,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":204906,"byte_end":204984,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ automatically implement `ClientStreamingService`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":204985,"byte_end":205038,"line_start":68,"line_end":68,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1540},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205125,"byte_end":205133,"line_start":71,"line_end":71,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::ClientStreamingService::Response","value":"type Response;","parent":{"krate":0,"index":1538},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205081,"byte_end":205115,"line_start":70,"line_end":70,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1541},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205169,"byte_end":205175,"line_start":74,"line_end":74,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::ClientStreamingService::Future","value":"type Future: Future<Output = Result<Response<Self::Response>, Status>>;","parent":{"krate":0,"index":1538},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205140,"byte_end":205159,"line_start":73,"line_end":73,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205269,"byte_end":205273,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::ClientStreamingService::call","value":"pub fn call(&mut Self, Request<Streaming<R>>) -> Self::Future","parent":{"krate":0,"index":1538},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205241,"byte_end":205261,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":1550},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205845,"byte_end":205861,"line_start":96,"line_end":96,"column_start":11,"column_end":27},"name":"StreamingService","qualname":"::server::service::StreamingService","value":"StreamingService<R>","parent":null,"children":[{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555}],"decl_id":null,"docs":" A specialization of tower_service::Service.","sig":null,"attributes":[{"value":"/ A specialization of tower_service::Service.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205656,"byte_end":205703,"line_start":92,"line_end":92,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205704,"byte_end":205707,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ Existing tower_service::Service implementations with the correct form will","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205708,"byte_end":205786,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/ automatically implement `StreamingService`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205787,"byte_end":205834,"line_start":95,"line_end":95,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1552},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205915,"byte_end":205923,"line_start":98,"line_end":98,"column_start":10,"column_end":18},"name":"Response","qualname":"::server::service::StreamingService::Response","value":"type Response;","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":" Protobuf response message type\n","sig":null,"attributes":[{"value":"/ Protobuf response message type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205871,"byte_end":205905,"line_start":97,"line_end":97,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1553},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205980,"byte_end":205994,"line_start":101,"line_end":101,"column_start":10,"column_end":24},"name":"ResponseStream","qualname":"::server::service::StreamingService::ResponseStream","value":"type ResponseStream: Stream<Item = Result<Self::Response, Status>>;","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":" Stream of outbound response messages\n","sig":null,"attributes":[{"value":"/ Stream of outbound response messages","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205930,"byte_end":205970,"line_start":100,"line_end":100,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1554},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":206077,"byte_end":206083,"line_start":104,"line_end":104,"column_start":10,"column_end":16},"name":"Future","qualname":"::server::service::StreamingService::Future","value":"type Future: Future<Output = Result<Response<Self::ResponseStream>, Status>>;","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":" Response future\n","sig":null,"attributes":[{"value":"/ Response future","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":206048,"byte_end":206067,"line_start":103,"line_end":103,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":206183,"byte_end":206187,"line_start":107,"line_end":107,"column_start":8,"column_end":12},"name":"call","qualname":"::server::service::StreamingService::call","value":"pub fn call(&mut Self, Request<Streaming<R>>) -> Self::Future","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":" Call the service\n","sig":null,"attributes":[{"value":"/ Call the service","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":206155,"byte_end":206175,"line_start":106,"line_end":106,"column_start":5,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":1581},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"service","qualname":"::service","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/mod.rs","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1681},{"krate":0,"index":1684}],"decl_id":null,"docs":" Utilities for using Tower services with Tonic.\n","sig":null,"attributes":[{"value":"/ Utilities for using Tower services with Tonic.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/mod.rs","byte_start":206644,"byte_end":206694,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":1582},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"interceptor","qualname":"::service::interceptor","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","parent":null,"children":[{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1588},{"krate":0,"index":1591},{"krate":0,"index":1594},{"krate":0,"index":1597},{"krate":0,"index":1600},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1607},{"krate":0,"index":1610},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":1620},{"krate":0,"index":1623},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1631},{"krate":0,"index":1633},{"krate":0,"index":3969},{"krate":0,"index":3972},{"krate":0,"index":3975},{"krate":0,"index":3978},{"krate":0,"index":1635},{"krate":0,"index":1640},{"krate":0,"index":3980},{"krate":0,"index":3985},{"krate":0,"index":3989},{"krate":0,"index":1642},{"krate":0,"index":1646},{"krate":0,"index":1650},{"krate":0,"index":1660},{"krate":0,"index":4032},{"krate":0,"index":3995},{"krate":0,"index":3992},{"krate":0,"index":1664},{"krate":0,"index":4072},{"krate":0,"index":4038},{"krate":0,"index":4047},{"krate":0,"index":4035},{"krate":0,"index":1668}],"decl_id":null,"docs":" gRPC interceptors which are a kind of middleware.","sig":null,"attributes":[{"value":"/ gRPC interceptors which are a kind of middleware.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":206826,"byte_end":206879,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":206880,"byte_end":206883,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":206884,"byte_end":206925,"line_start":3,"line_end":3,"column_start":1,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":1626},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":208522,"byte_end":208533,"line_start":46,"line_end":46,"column_start":11,"column_end":22},"name":"Interceptor","qualname":"::service::interceptor::Interceptor","value":"Interceptor","parent":null,"children":[{"krate":0,"index":1627}],"decl_id":null,"docs":" A gRPC interceptor.","sig":null,"attributes":[{"value":"/ A gRPC interceptor.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207198,"byte_end":207221,"line_start":21,"line_end":21,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207222,"byte_end":207225,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ gRPC interceptors are similar to middleware but have less flexibility. An interceptor allows","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207226,"byte_end":207322,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ you to do two main things, one is to add/remove/check items in the `MetadataMap` of each","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207323,"byte_end":207415,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/ request. Two, cancel a request with a `Status`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207416,"byte_end":207467,"line_start":25,"line_end":25,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207468,"byte_end":207471,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Any function that satisfies the bound `FnMut(Request<()>) -> Result<Request<()>, Status>` can be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207472,"byte_end":207572,"line_start":27,"line_end":27,"column_start":1,"column_end":101}},{"value":"/ used as an `Interceptor`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207573,"byte_end":207602,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207603,"byte_end":207606,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ An interceptor can be used on both the server and client side through the `tonic-build` crate's","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207607,"byte_end":207706,"line_start":30,"line_end":30,"column_start":1,"column_end":100}},{"value":"/ generated structs.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207707,"byte_end":207729,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207730,"byte_end":207733,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ See the [interceptor example][example] for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207734,"byte_end":207794,"line_start":33,"line_end":33,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207795,"byte_end":207798,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ If you need more powerful middleware, [tower] is the recommended approach. You can find","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207799,"byte_end":207890,"line_start":35,"line_end":35,"column_start":1,"column_end":92}},{"value":"/ examples of how to use tower with tonic [here][tower-example].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207891,"byte_end":207957,"line_start":36,"line_end":36,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207958,"byte_end":207961,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Additionally, interceptors is not the recommended way to add logging to your service. For that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":207962,"byte_end":208060,"line_start":38,"line_end":38,"column_start":1,"column_end":99}},{"value":"/ a [tower] middleware is more appropriate since it can also act on the response. For example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":208061,"byte_end":208156,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ tower-http's [`Trace`](https://docs.rs/tower-http/latest/tower_http/trace/index.html)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":208157,"byte_end":208246,"line_start":40,"line_end":40,"column_start":1,"column_end":90}},{"value":"/ middleware supports gRPC out of the box.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":208247,"byte_end":208291,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":208292,"byte_end":208295,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [tower]: https://crates.io/crates/tower","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":208296,"byte_end":208339,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/ [example]: https://github.com/hyperium/tonic/tree/master/examples/src/interceptor","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":208340,"byte_end":208425,"line_start":44,"line_end":44,"column_start":1,"column_end":86}},{"value":"/ [tower-example]: https://github.com/hyperium/tonic/tree/master/examples/src/tower","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":208426,"byte_end":208511,"line_start":45,"line_end":45,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":208616,"byte_end":208620,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"call","qualname":"::service::interceptor::Interceptor::call","value":"pub fn call(&mut Self, crate::Request<()>)\n-> Result<crate::Request<()>, Status>","parent":{"krate":0,"index":1626},"children":[],"decl_id":null,"docs":" Intercept a request before it is sent, optionally cancelling it.\n","sig":null,"attributes":[{"value":"/ Intercept a request before it is sent, optionally cancelling it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":208540,"byte_end":208608,"line_start":47,"line_end":47,"column_start":5,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":1631},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":209021,"byte_end":209032,"line_start":63,"line_end":63,"column_start":8,"column_end":19},"name":"interceptor","qualname":"::service::interceptor::interceptor","value":"pub fn interceptor<F>(F) -> InterceptorLayer<F> where F: Interceptor","parent":null,"children":[],"decl_id":null,"docs":" Create a new interceptor layer.","sig":null,"attributes":[{"value":"/ Create a new interceptor layer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":208932,"byte_end":208967,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":208968,"byte_end":208971,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":208972,"byte_end":209013,"line_start":62,"line_end":62,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1633},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":209309,"byte_end":209323,"line_start":77,"line_end":77,"column_start":8,"column_end":22},"name":"interceptor_fn","qualname":"::service::interceptor::interceptor_fn","value":"pub fn interceptor_fn<F>(F) -> InterceptorLayer<F> where F: Interceptor","parent":null,"children":[],"decl_id":null,"docs":" Create a new interceptor layer.","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.1\", note =\n\"Please use the `interceptor` function instead\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":209123,"byte_end":209219,"line_start":70,"line_end":73,"column_start":1,"column_end":3}},{"value":"/ Create a new interceptor layer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":209220,"byte_end":209255,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":209256,"byte_end":209259,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":209260,"byte_end":209301,"line_start":76,"line_end":76,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3969},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":209589,"byte_end":209605,"line_start":89,"line_end":89,"column_start":12,"column_end":28},"name":"InterceptorLayer","qualname":"::service::interceptor::InterceptorLayer","value":"InterceptorLayer {  }","parent":null,"children":[{"krate":0,"index":3971}],"decl_id":null,"docs":" A gRPC interceptor that can be used as a [`Layer`],\n created by calling [`interceptor`].","sig":null,"attributes":[{"value":"/ A gRPC interceptor that can be used as a [`Layer`],","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":209406,"byte_end":209461,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/ created by calling [`interceptor`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":209462,"byte_end":209501,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":209502,"byte_end":209505,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":209506,"byte_end":209547,"line_start":87,"line_end":87,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":1640},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":210116,"byte_end":210129,"line_start":112,"line_end":112,"column_start":10,"column_end":23},"name":"InterceptorFn","qualname":"::service::interceptor::InterceptorFn","value":"InterceptorLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" A gRPC interceptor that can be used as a [`Layer`],\n created by calling [`interceptor`].","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.1\", note =\n\"Please use the `InterceptorLayer` type instead\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":209867,"byte_end":209964,"line_start":104,"line_end":107,"column_start":1,"column_end":3}},{"value":"/ A gRPC interceptor that can be used as a [`Layer`],","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":209965,"byte_end":210020,"line_start":108,"line_end":108,"column_start":1,"column_end":56}},{"value":"/ created by calling [`interceptor`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":210021,"byte_end":210060,"line_start":109,"line_end":109,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":210061,"byte_end":210064,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":210065,"byte_end":210106,"line_start":111,"line_end":111,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3980},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":210289,"byte_end":210307,"line_start":118,"line_end":118,"column_start":12,"column_end":30},"name":"InterceptedService","qualname":"::service::interceptor::InterceptedService","value":"InterceptedService {  }","parent":null,"children":[{"krate":0,"index":3983},{"krate":0,"index":3984}],"decl_id":null,"docs":" A service wrapped in an interceptor middleware.","sig":null,"attributes":[{"value":"/ A service wrapped in an interceptor middleware.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":210157,"byte_end":210208,"line_start":114,"line_end":114,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":210209,"byte_end":210212,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ See [`Interceptor`] for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":210213,"byte_end":210254,"line_start":116,"line_end":116,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":210508,"byte_end":210511,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"new","qualname":"<InterceptedService<S, F>>::new","value":"pub fn new(S, F) -> Self where F: Interceptor","parent":null,"children":[],"decl_id":null,"docs":" Create a new `InterceptedService` that wraps `S` and intercepts each request with the\n function `F`.\n","sig":null,"attributes":[{"value":"/ Create a new `InterceptedService` that wraps `S` and intercepts each request with the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":210385,"byte_end":210474,"line_start":124,"line_end":124,"column_start":5,"column_end":94}},{"value":"/ function `F`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":210479,"byte_end":210496,"line_start":125,"line_end":125,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4032},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":213276,"byte_end":213290,"line_start":203,"line_end":203,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::service::interceptor::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":4034}],"decl_id":null,"docs":" Response future for [`InterceptedService`].\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":213233,"byte_end":213247,"line_start":201,"line_end":201,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4013},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":213276,"byte_end":213290,"line_start":203,"line_end":203,"column_start":12,"column_end":26},"name":"__ResponseFuture","qualname":"::service::interceptor::_::__ResponseFuture","value":"__ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":4016},{"krate":0,"index":4017}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":213233,"byte_end":213247,"line_start":201,"line_end":201,"column_start":1,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":1687},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"transport","qualname":"::transport","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","parent":null,"children":[{"krate":0,"index":1688},{"krate":0,"index":1938},{"krate":0,"index":2357},{"krate":0,"index":2387},{"krate":0,"index":3008},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3021},{"krate":0,"index":3024},{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3031},{"krate":0,"index":3034},{"krate":0,"index":3037},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3044},{"krate":0,"index":3047},{"krate":0,"index":3050}],"decl_id":null,"docs":" Batteries included server and client.","sig":null,"attributes":[{"value":"cfg(feature = \"transport\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4130,"byte_end":4159,"line_start":96,"line_end":96,"column_start":1,"column_end":30}},{"value":"/ Batteries included server and client.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":217711,"byte_end":217752,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":217753,"byte_end":217756,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a set of batteries included, fully featured and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":217757,"byte_end":217829,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ fast set of HTTP/2 server and client's. These components each provide a or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":217830,"byte_end":217908,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ `rustls` tls backend when the respective feature flag is enabled, and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":217909,"byte_end":217982,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ provides builders to configure transport behavior.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":217983,"byte_end":218037,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218038,"byte_end":218041,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218042,"byte_end":218056,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218057,"byte_end":218060,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ - TLS support via [rustls].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218061,"byte_end":218092,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/ - Load balancing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218093,"byte_end":218113,"line_start":11,"line_end":11,"column_start":1,"column_end":21}},{"value":"/ - Timeouts","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218114,"byte_end":218128,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/ - Concurrency Limits","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218129,"byte_end":218153,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/ - Rate limiting","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218154,"byte_end":218173,"line_start":14,"line_end":14,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218174,"byte_end":218177,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218178,"byte_end":218192,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218193,"byte_end":218196,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Client","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218197,"byte_end":218210,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218211,"byte_end":218214,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218215,"byte_end":218228,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/ # use tonic::transport::{Channel, Certificate, ClientTlsConfig};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218229,"byte_end":218297,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218298,"byte_end":218328,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ # use tonic::body::BoxBody;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218329,"byte_end":218360,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/ # use tonic::client::GrpcService;;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218361,"byte_end":218399,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/ # use http::Request;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218400,"byte_end":218424,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/ # #[cfg(feature = \"rustls\")]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218425,"byte_end":218457,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ # async fn do_thing() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218458,"byte_end":218527,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ let cert = std::fs::read_to_string(\"ca.pem\")?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218528,"byte_end":218578,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218579,"byte_end":218582,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let mut channel = Channel::from_static(\"https://example.com\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218583,"byte_end":218648,"line_start":30,"line_end":30,"column_start":1,"column_end":66}},{"value":"/     .tls_config(ClientTlsConfig::new()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218649,"byte_end":218691,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"/         .ca_certificate(Certificate::from_pem(&cert))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218692,"byte_end":218749,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/         .domain_name(\"example.com\".to_string()))?","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218750,"byte_end":218803,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/     .timeout(Duration::from_secs(5))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218804,"byte_end":218844,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/     .rate_limit(5, Duration::from_secs(1))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218845,"byte_end":218891,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/     .concurrency_limit(256)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218892,"byte_end":218923,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"/     .connect()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218924,"byte_end":218942,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/     .await?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218943,"byte_end":218959,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218960,"byte_end":218963,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ channel.call(Request::new(BoxBody::empty())).await?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":218964,"byte_end":219020,"line_start":40,"line_end":40,"column_start":1,"column_end":57}},{"value":"/ # Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219021,"byte_end":219033,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219034,"byte_end":219041,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219042,"byte_end":219049,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219050,"byte_end":219053,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Server","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219054,"byte_end":219067,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219068,"byte_end":219071,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219072,"byte_end":219085,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/ # use tonic::transport::{Server, Identity, ServerTlsConfig};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219086,"byte_end":219150,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/ # use tower::{Service, service_fn};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219151,"byte_end":219190,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/ # use futures_util::future::{err, ok};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219191,"byte_end":219233,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ # #[cfg(feature = \"rustls\")]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219234,"byte_end":219266,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/ # async fn do_thing() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219267,"byte_end":219336,"line_start":52,"line_end":52,"column_start":1,"column_end":70}},{"value":"/ # #[derive(Clone)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219337,"byte_end":219359,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ # pub struct Svc;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219360,"byte_end":219381,"line_start":54,"line_end":54,"column_start":1,"column_end":22}},{"value":"/ # impl Service<hyper::Request<hyper::Body>> for Svc {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219382,"byte_end":219439,"line_start":55,"line_end":55,"column_start":1,"column_end":58}},{"value":"/ #   type Response = hyper::Response<tonic::body::BoxBody>;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219440,"byte_end":219502,"line_start":56,"line_end":56,"column_start":1,"column_end":63}},{"value":"/ #   type Error = tonic::Status;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219503,"byte_end":219538,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Self::Response, Self::Error>>;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219539,"byte_end":219626,"line_start":58,"line_end":58,"column_start":1,"column_end":88}},{"value":"/ #   fn poll_ready(&mut self, _cx: &mut std::task::Context<'_>) -> std::task::Poll<Result<(), Self::Error>> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219627,"byte_end":219739,"line_start":59,"line_end":59,"column_start":1,"column_end":113}},{"value":"/ #       Ok(()).into()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219740,"byte_end":219765,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/ #  }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219766,"byte_end":219774,"line_start":61,"line_end":61,"column_start":1,"column_end":9}},{"value":"/ #   fn call(&mut self, _req: hyper::Request<hyper::Body>) -> Self::Future {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219775,"byte_end":219854,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ #       unimplemented!()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219855,"byte_end":219883,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/ #   }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219884,"byte_end":219893,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219894,"byte_end":219901,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # impl tonic::transport::NamedService for Svc {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219902,"byte_end":219953,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/ # const NAME: &'static str = \"some_svc\";","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219954,"byte_end":219998,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":219999,"byte_end":220006,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ # let my_svc = Svc;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220007,"byte_end":220030,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/ let cert = std::fs::read_to_string(\"server.pem\")?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220031,"byte_end":220085,"line_start":70,"line_end":70,"column_start":1,"column_end":55}},{"value":"/ let key = std::fs::read_to_string(\"server.key\")?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220086,"byte_end":220139,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220140,"byte_end":220143,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let addr = \"[::1]:50051\".parse()?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220144,"byte_end":220182,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220183,"byte_end":220186,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Server::builder()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220187,"byte_end":220208,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"/     .tls_config(ServerTlsConfig::new()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220209,"byte_end":220251,"line_start":76,"line_end":76,"column_start":1,"column_end":43}},{"value":"/         .identity(Identity::from_pem(&cert, &key)))?","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220252,"byte_end":220308,"line_start":77,"line_end":77,"column_start":1,"column_end":57}},{"value":"/     .concurrency_limit_per_connection(256)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220309,"byte_end":220355,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/     .add_service(my_svc)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220356,"byte_end":220384,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/     .serve(addr)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220385,"byte_end":220405,"line_start":80,"line_end":80,"column_start":1,"column_end":21}},{"value":"/     .await?;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220406,"byte_end":220422,"line_start":81,"line_end":81,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220423,"byte_end":220426,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220427,"byte_end":220439,"line_start":83,"line_end":83,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220440,"byte_end":220447,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220448,"byte_end":220455,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220456,"byte_end":220459,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [rustls]: https://docs.rs/rustls/0.16.0/rustls/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220460,"byte_end":220511,"line_start":87,"line_end":87,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":1688},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::transport::channel","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","parent":null,"children":[{"krate":0,"index":1689},{"krate":0,"index":1797},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1804},{"krate":0,"index":1807},{"krate":0,"index":1810},{"krate":0,"index":1813},{"krate":0,"index":1816},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1824},{"krate":0,"index":1827},{"krate":0,"index":1830},{"krate":0,"index":1833},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1840},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1846},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1853},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1861},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1868},{"krate":0,"index":1871},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1879},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1886},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1893},{"krate":0,"index":1896},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":4099},{"krate":0,"index":4101},{"krate":0,"index":1901},{"krate":0,"index":1903},{"krate":0,"index":1925},{"krate":0,"index":1931},{"krate":0,"index":1934},{"krate":0,"index":1936}],"decl_id":null,"docs":" Client implementation and builder.\n","sig":null,"attributes":[{"value":"/ Client implementation and builder.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":221423,"byte_end":221461,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":4080},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":230014,"byte_end":230022,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"Endpoint","qualname":"::transport::channel::endpoint::Endpoint","value":"Endpoint {  }","parent":null,"children":[{"krate":0,"index":4081},{"krate":0,"index":4082},{"krate":0,"index":4083},{"krate":0,"index":4084},{"krate":0,"index":4085},{"krate":0,"index":4086},{"krate":0,"index":4087},{"krate":0,"index":4088},{"krate":0,"index":4089},{"krate":0,"index":4090},{"krate":0,"index":4091},{"krate":0,"index":4092},{"krate":0,"index":4093},{"krate":0,"index":4094},{"krate":0,"index":4095},{"krate":0,"index":4096}],"decl_id":null,"docs":" Channel builder.","sig":null,"attributes":[{"value":"/ Channel builder.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":229897,"byte_end":229917,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":229918,"byte_end":229921,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This struct is used to build and configure HTTP/2 channels.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":229922,"byte_end":229985,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231028,"byte_end":231031,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Endpoint>::new","value":"pub fn new<D>(D) -> Result<Self, Error> where D: TryInto<Self>,\nD::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231532,"byte_end":231543,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"from_static","qualname":"<Endpoint>::from_static","value":"pub fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an `Endpoint` from a static string.","sig":null,"attributes":[{"value":"/ Convert an `Endpoint` from a static string.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231248,"byte_end":231295,"line_start":59,"line_end":59,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231300,"byte_end":231303,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231308,"byte_end":231320,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231325,"byte_end":231328,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function panics if the argument is an invalid URI.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231333,"byte_end":231392,"line_start":63,"line_end":63,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231397,"byte_end":231400,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231405,"byte_end":231412,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231417,"byte_end":231454,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/ Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231459,"byte_end":231508,"line_start":67,"line_end":67,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231513,"byte_end":231520,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231841,"byte_end":231852,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"from_shared","qualname":"<Endpoint>::from_shared","value":"pub fn from_shared<impl Into<Bytes>: Into<Bytes>>(impl Into<Bytes>)\n-> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Convert an `Endpoint` from shared bytes.","sig":null,"attributes":[{"value":"/ Convert an `Endpoint` from shared bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231645,"byte_end":231689,"line_start":74,"line_end":74,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231694,"byte_end":231697,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231702,"byte_end":231709,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231714,"byte_end":231751,"line_start":77,"line_end":77,"column_start":5,"column_end":42}},{"value":"/ Endpoint::from_shared(\"https://example.com\".to_string());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231756,"byte_end":231817,"line_start":78,"line_end":78,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":231822,"byte_end":231829,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":232585,"byte_end":232595,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"user_agent","qualname":"<Endpoint>::user_agent","value":"pub fn user_agent<T>(Self, T) -> Result<Self, Error> where\nT: TryInto<HeaderValue>","parent":null,"children":[],"decl_id":null,"docs":" Set a custom user-agent header.","sig":null,"attributes":[{"value":"/ Set a custom user-agent header.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":232037,"byte_end":232072,"line_start":85,"line_end":85,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":232077,"byte_end":232080,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ `user_agent` will be prepended to Tonic's default user-agent string (`tonic/x.x.x`).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":232085,"byte_end":232173,"line_start":87,"line_end":87,"column_start":5,"column_end":93}},{"value":"/ It must be a value that can be converted into a valid  `http::HeaderValue` or building","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":232178,"byte_end":232268,"line_start":88,"line_end":88,"column_start":5,"column_end":95}},{"value":"/ the endpoint will fail.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":232273,"byte_end":232300,"line_start":89,"line_end":89,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":232305,"byte_end":232312,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":232317,"byte_end":232354,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":232359,"byte_end":232428,"line_start":92,"line_end":92,"column_start":5,"column_end":74}},{"value":"/ builder.user_agent(\"Greeter\").expect(\"Greeter should be a valid header value\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":232433,"byte_end":232516,"line_start":93,"line_end":93,"column_start":5,"column_end":88}},{"value":"/ // user-agent: \"Greeter tonic/x.x.x\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":232521,"byte_end":232561,"line_start":94,"line_end":94,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":232566,"byte_end":232573,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233498,"byte_end":233505,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Endpoint>::timeout","value":"pub fn timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a timeout to each request.","sig":null,"attributes":[{"value":"/ Apply a timeout to each request.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":232913,"byte_end":232949,"line_start":109,"line_end":109,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":232954,"byte_end":232957,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":232962,"byte_end":232969,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":232974,"byte_end":233011,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233016,"byte_end":233046,"line_start":113,"line_end":113,"column_start":5,"column_end":35}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233051,"byte_end":233120,"line_start":114,"line_end":114,"column_start":5,"column_end":74}},{"value":"/ builder.timeout(Duration::from_secs(5));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233125,"byte_end":233169,"line_start":115,"line_end":115,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233174,"byte_end":233181,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233186,"byte_end":233189,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233194,"byte_end":233205,"line_start":118,"line_end":118,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233210,"byte_end":233213,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This does **not** set the timeout metadata (`grpc-timeout` header) on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233218,"byte_end":233291,"line_start":120,"line_end":120,"column_start":5,"column_end":78}},{"value":"/ the request, meaning the server will not be informed of this timeout,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233296,"byte_end":233369,"line_start":121,"line_end":121,"column_start":5,"column_end":78}},{"value":"/ for that use [`Request::set_timeout`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233374,"byte_end":233416,"line_start":122,"line_end":122,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233421,"byte_end":233424,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`Request::set_timeout`]: crate::Request::set_timeout","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233429,"byte_end":233486,"line_start":124,"line_end":124,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233965,"byte_end":233980,"line_start":142,"line_end":142,"column_start":12,"column_end":27},"name":"connect_timeout","qualname":"<Endpoint>::connect_timeout","value":"pub fn connect_timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a timeout to connecting to the uri.","sig":null,"attributes":[{"value":"/ Apply a timeout to connecting to the uri.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233628,"byte_end":233673,"line_start":132,"line_end":132,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233678,"byte_end":233681,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Defaults to no timeout.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233686,"byte_end":233713,"line_start":134,"line_end":134,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233718,"byte_end":233721,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233726,"byte_end":233733,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233738,"byte_end":233775,"line_start":137,"line_end":137,"column_start":5,"column_end":42}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233780,"byte_end":233810,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233815,"byte_end":233884,"line_start":139,"line_end":139,"column_start":5,"column_end":74}},{"value":"/ builder.connect_timeout(Duration::from_secs(5));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233889,"byte_end":233941,"line_start":140,"line_end":140,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":233946,"byte_end":233953,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234436,"byte_end":234449,"line_start":157,"line_end":157,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<Endpoint>::tcp_keepalive","value":"pub fn tcp_keepalive(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether TCP keepalive messages are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether TCP keepalive messages are enabled on accepted connections.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234111,"byte_end":234186,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234191,"byte_end":234194,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, keepalive is disabled, otherwise the duration","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234199,"byte_end":234272,"line_start":151,"line_end":151,"column_start":5,"column_end":78}},{"value":"/ specified will be the time to remain idle before sending TCP keepalive","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234277,"byte_end":234351,"line_start":152,"line_end":152,"column_start":5,"column_end":79}},{"value":"/ probes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234356,"byte_end":234367,"line_start":153,"line_end":153,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234372,"byte_end":234375,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Default is no keepalive (`None`)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234380,"byte_end":234416,"line_start":155,"line_end":155,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234421,"byte_end":234424,"line_start":156,"line_end":156,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234831,"byte_end":234848,"line_start":171,"line_end":171,"column_start":12,"column_end":29},"name":"concurrency_limit","qualname":"<Endpoint>::concurrency_limit","value":"pub fn concurrency_limit(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a concurrency limit to each request.","sig":null,"attributes":[{"value":"/ Apply a concurrency limit to each request.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234585,"byte_end":234631,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234636,"byte_end":234639,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234644,"byte_end":234651,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234656,"byte_end":234693,"line_start":167,"line_end":167,"column_start":5,"column_end":42}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234698,"byte_end":234767,"line_start":168,"line_end":168,"column_start":5,"column_end":74}},{"value":"/ builder.concurrency_limit(256);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234772,"byte_end":234807,"line_start":169,"line_end":169,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234812,"byte_end":234819,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235272,"byte_end":235282,"line_start":186,"line_end":186,"column_start":12,"column_end":22},"name":"rate_limit","qualname":"<Endpoint>::rate_limit","value":"pub fn rate_limit(Self, u64, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a rate limit to each request.","sig":null,"attributes":[{"value":"/ Apply a rate limit to each request.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":234982,"byte_end":235021,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235026,"byte_end":235029,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235034,"byte_end":235041,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235046,"byte_end":235083,"line_start":181,"line_end":181,"column_start":5,"column_end":42}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235088,"byte_end":235118,"line_start":182,"line_end":182,"column_start":5,"column_end":35}},{"value":"/ # let mut builder = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235123,"byte_end":235192,"line_start":183,"line_end":183,"column_start":5,"column_end":74}},{"value":"/ builder.rate_limit(32, Duration::from_secs(1));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235197,"byte_end":235248,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235253,"byte_end":235260,"line_start":185,"line_end":185,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235677,"byte_end":235703,"line_start":199,"line_end":199,"column_start":12,"column_end":38},"name":"initial_stream_window_size","qualname":"<Endpoint>::initial_stream_window_size","value":"pub fn initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235439,"byte_end":235507,"line_start":193,"line_end":193,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235512,"byte_end":235542,"line_start":194,"line_end":194,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235547,"byte_end":235550,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235555,"byte_end":235576,"line_start":196,"line_end":196,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235581,"byte_end":235584,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235589,"byte_end":235665,"line_start":198,"line_end":198,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235957,"byte_end":235987,"line_start":209,"line_end":209,"column_start":12,"column_end":42},"name":"initial_connection_window_size","qualname":"<Endpoint>::initial_connection_window_size","value":"pub fn initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235855,"byte_end":235911,"line_start":206,"line_end":206,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235916,"byte_end":235919,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":235924,"byte_end":235945,"line_start":208,"line_end":208,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":236672,"byte_end":236683,"line_start":231,"line_end":231,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<Endpoint>::tcp_nodelay","value":"pub fn tcp_nodelay(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.\n","sig":null,"attributes":[{"value":"/ Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":236573,"byte_end":236660,"line_start":230,"line_end":230,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":236888,"byte_end":236913,"line_start":239,"line_end":239,"column_start":12,"column_end":37},"name":"http2_keep_alive_interval","qualname":"<Endpoint>::http2_keep_alive_interval","value":"pub fn http2_keep_alive_interval(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set http2 KEEP_ALIVE_INTERVAL. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Set http2 KEEP_ALIVE_INTERVAL. Uses `hyper`'s default otherwise.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":236808,"byte_end":236876,"line_start":238,"line_end":238,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":237143,"byte_end":237161,"line_start":247,"line_end":247,"column_start":12,"column_end":30},"name":"keep_alive_timeout","qualname":"<Endpoint>::keep_alive_timeout","value":"pub fn keep_alive_timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set http2 KEEP_ALIVE_TIMEOUT. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Set http2 KEEP_ALIVE_TIMEOUT. Uses `hyper`'s default otherwise.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":237064,"byte_end":237131,"line_start":246,"line_end":246,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":237393,"byte_end":237414,"line_start":255,"line_end":255,"column_start":12,"column_end":33},"name":"keep_alive_while_idle","qualname":"<Endpoint>::keep_alive_while_idle","value":"pub fn keep_alive_while_idle(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set http2 KEEP_ALIVE_WHILE_IDLE. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Set http2 KEEP_ALIVE_WHILE_IDLE. Uses `hyper`'s default otherwise.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":237311,"byte_end":237381,"line_start":254,"line_end":254,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":237656,"byte_end":237677,"line_start":263,"line_end":263,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<Endpoint>::http2_adaptive_window","value":"pub fn http2_adaptive_window(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control. Uses `hyper`'s default otherwise.\n","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control. Uses `hyper`'s default otherwise.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":237561,"byte_end":237644,"line_start":262,"line_end":262,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":237926,"byte_end":237934,"line_start":273,"line_end":273,"column_start":12,"column_end":20},"name":"executor","qualname":"<Endpoint>::executor","value":"pub fn executor<E>(Self, E) -> Self where\nE: Executor<Pin<Box<dyn Future<Output = ()> + Send>>> + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the executor used to spawn async tasks.","sig":null,"attributes":[{"value":"/ Sets the executor used to spawn async tasks.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":237818,"byte_end":237866,"line_start":270,"line_end":270,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":237871,"byte_end":237874,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Uses `tokio::spawn` by default.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":237879,"byte_end":237914,"line_start":272,"line_end":272,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":238203,"byte_end":238210,"line_start":282,"line_end":282,"column_start":18,"column_end":25},"name":"connect","qualname":"<Endpoint>::connect","value":"pub async fn connect<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Create a channel from this config.\n","sig":null,"attributes":[{"value":"/ Create a channel from this config.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":238147,"byte_end":238185,"line_start":281,"line_end":281,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":239169,"byte_end":239181,"line_start":307,"line_end":307,"column_start":12,"column_end":24},"name":"connect_lazy","qualname":"<Endpoint>::connect_lazy","value":"pub fn connect_lazy(&Self) -> Channel","parent":null,"children":[],"decl_id":null,"docs":" Create a channel from this config.","sig":null,"attributes":[{"value":"/ Create a channel from this config.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":238998,"byte_end":239036,"line_start":303,"line_end":303,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":239041,"byte_end":239044,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ The channel returned by this method does not attempt to connect to the endpoint until first","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":239049,"byte_end":239144,"line_start":305,"line_end":305,"column_start":5,"column_end":100}},{"value":"/ use.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":239149,"byte_end":239157,"line_start":306,"line_end":306,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":240317,"byte_end":240339,"line_start":335,"line_end":335,"column_start":18,"column_end":40},"name":"connect_with_connector","qualname":"<Endpoint>::connect_with_connector","value":"pub async fn connect_with_connector<C, '_>(&'_ Self, C) -> /*impl Trait*/\nwhere C: MakeConnection<Uri> + Send + 'static, C::Connection: Unpin + Send +\n'static, C::Future: Send + 'static, crate::Error: From<C::Error> + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Connect with a custom connector.","sig":null,"attributes":[{"value":"/ Connect with a custom connector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":239934,"byte_end":239970,"line_start":328,"line_end":328,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":239975,"byte_end":239978,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ This allows you to build a [Channel](struct.Channel.html) that uses a non-HTTP transport.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":239983,"byte_end":240076,"line_start":330,"line_end":330,"column_start":5,"column_end":98}},{"value":"/ See the `uds` example for an example on how to use this function to build channel that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":240081,"byte_end":240171,"line_start":331,"line_end":331,"column_start":5,"column_end":95}},{"value":"/ uses a Unix socket transport.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":240176,"byte_end":240209,"line_start":332,"line_end":332,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":240214,"byte_end":240217,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ The [`connect_timeout`](Endpoint::connect_timeout) will still be applied.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":240222,"byte_end":240299,"line_start":334,"line_end":334,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":241488,"byte_end":241515,"line_start":364,"line_end":364,"column_start":12,"column_end":39},"name":"connect_with_connector_lazy","qualname":"<Endpoint>::connect_with_connector_lazy","value":"pub fn connect_with_connector_lazy<C>(&Self, C) -> Channel where\nC: MakeConnection<Uri> + Send + 'static, C::Connection: Unpin + Send +\n'static, C::Future: Send + 'static, crate::Error: From<C::Error> + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Connect with a custom connector lazily.","sig":null,"attributes":[{"value":"/ Connect with a custom connector lazily.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":241158,"byte_end":241201,"line_start":357,"line_end":357,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":241206,"byte_end":241209,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This allows you to build a [Channel](struct.Channel.html) that uses a non-HTTP transport","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":241214,"byte_end":241306,"line_start":359,"line_end":359,"column_start":5,"column_end":97}},{"value":"/ connec to it lazily.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":241311,"byte_end":241335,"line_start":360,"line_end":360,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":241340,"byte_end":241343,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ See the `uds` example for an example on how to use this function to build channel that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":241348,"byte_end":241438,"line_start":362,"line_end":362,"column_start":5,"column_end":95}},{"value":"/ uses a Unix socket transport.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":241443,"byte_end":241476,"line_start":363,"line_end":363,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":242300,"byte_end":242303,"line_start":389,"line_end":389,"column_start":12,"column_end":15},"name":"uri","qualname":"<Endpoint>::uri","value":"pub fn uri(&Self) -> &Uri","parent":null,"children":[],"decl_id":null,"docs":" Get the endpoint uri.","sig":null,"attributes":[{"value":"/ Get the endpoint uri.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":242009,"byte_end":242034,"line_start":380,"line_end":380,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":242039,"byte_end":242042,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":242047,"byte_end":242054,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Endpoint;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":242059,"byte_end":242096,"line_start":383,"line_end":383,"column_start":5,"column_end":42}},{"value":"/ # use http::Uri;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":242101,"byte_end":242121,"line_start":384,"line_end":384,"column_start":5,"column_end":25}},{"value":"/ let endpoint = Endpoint::from_static(\"https://example.com\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":242126,"byte_end":242190,"line_start":385,"line_end":385,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":242195,"byte_end":242198,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(endpoint.uri(), &Uri::from_static(\"https://example.com\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":242203,"byte_end":242276,"line_start":387,"line_end":387,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":242281,"byte_end":242288,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4099},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":223670,"byte_end":223677,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"Channel","qualname":"::transport::channel::Channel","value":"Channel {  }","parent":null,"children":[{"krate":0,"index":4100}],"decl_id":null,"docs":" A default batteries included `transport` channel.","sig":null,"attributes":[{"value":"/ A default batteries included `transport` channel.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":222394,"byte_end":222447,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":222448,"byte_end":222451,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This provides a fully featured http2 gRPC client based on [`hyper::Client`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":222452,"byte_end":222531,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ and `tower` services.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":222532,"byte_end":222557,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":222558,"byte_end":222561,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Multiplexing requests","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":222562,"byte_end":222589,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":222590,"byte_end":222593,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Sending a request on a channel requires a `&mut self` and thus can only send","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":222594,"byte_end":222674,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ one request in flight. This is intentional and is required to follow the `Service`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":222675,"byte_end":222761,"line_start":53,"line_end":53,"column_start":1,"column_end":87}},{"value":"/ contract from the `tower` library which this channel implementation is built on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":222762,"byte_end":222845,"line_start":54,"line_end":54,"column_start":1,"column_end":84}},{"value":"/ top of.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":222846,"byte_end":222857,"line_start":55,"line_end":55,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":222858,"byte_end":222861,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ `tower` itself has a concept of `poll_ready` which is the main mechanism to apply","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":222862,"byte_end":222947,"line_start":57,"line_end":57,"column_start":1,"column_end":86}},{"value":"/ back pressure. `poll_ready` takes a `&mut self` and when it returns `Poll::Ready`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":222948,"byte_end":223033,"line_start":58,"line_end":58,"column_start":1,"column_end":86}},{"value":"/ we know the `Service` is able to accept only one request before we must `poll_ready`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":223034,"byte_end":223122,"line_start":59,"line_end":59,"column_start":1,"column_end":89}},{"value":"/ again. Due to this fact any `async fn` that wants to poll for readiness and submit","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":223123,"byte_end":223209,"line_start":60,"line_end":60,"column_start":1,"column_end":87}},{"value":"/ the request must have a `&mut self` reference.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":223210,"byte_end":223260,"line_start":61,"line_end":61,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":223261,"byte_end":223264,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ To work around this and to ease the use of the channel, `Channel` provides a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":223265,"byte_end":223345,"line_start":63,"line_end":63,"column_start":1,"column_end":81}},{"value":"/ `Clone` implementation that is _cheap_. This is because at the very top level","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":223346,"byte_end":223427,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ the channel is backed by a `tower_buffer::Buffer` which runs the connection","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":223428,"byte_end":223507,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/ in a background task and provides a `mpsc` channel interface. Due to this","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":223508,"byte_end":223585,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/ cloning the `Channel` type is cheap and encouraged.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":223586,"byte_end":223641,"line_start":67,"line_end":67,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1901},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":223846,"byte_end":223860,"line_start":76,"line_end":76,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::transport::channel::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":1902}],"decl_id":null,"docs":" A future that resolves to an HTTP response.","sig":null,"attributes":[{"value":"/ A future that resolves to an HTTP response.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":223723,"byte_end":223770,"line_start":73,"line_end":73,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":223771,"byte_end":223774,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ This is returned by the `Service::call` on [`Channel`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":223775,"byte_end":223834,"line_start":75,"line_end":75,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224048,"byte_end":224055,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"builder","qualname":"<Channel>::builder","value":"pub fn builder(Uri) -> Endpoint","parent":null,"children":[],"decl_id":null,"docs":" Create an [`Endpoint`] builder that can create [`Channel`]s.\n","sig":null,"attributes":[{"value":"/ Create an [`Endpoint`] builder that can create [`Channel`]s.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":223972,"byte_end":224036,"line_start":81,"line_end":81,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224303,"byte_end":224314,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"from_static","qualname":"<Channel>::from_static","value":"pub fn from_static(&'static str) -> Endpoint","parent":null,"children":[],"decl_id":null,"docs":" Create an `Endpoint` from a static string.","sig":null,"attributes":[{"value":"/ Create an `Endpoint` from a static string.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224119,"byte_end":224165,"line_start":86,"line_end":86,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224170,"byte_end":224173,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224178,"byte_end":224185,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Channel;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224190,"byte_end":224226,"line_start":89,"line_end":89,"column_start":5,"column_end":41}},{"value":"/ Channel::from_static(\"https://example.com\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224231,"byte_end":224279,"line_start":90,"line_end":90,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224284,"byte_end":224291,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224604,"byte_end":224615,"line_start":103,"line_end":103,"column_start":12,"column_end":23},"name":"from_shared","qualname":"<Channel>::from_shared","value":"pub fn from_shared<impl Into<Bytes>: Into<Bytes>>(impl Into<Bytes>)\n-> Result<Endpoint, InvalidUri>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Endpoint` from shared bytes.","sig":null,"attributes":[{"value":"/ Create an `Endpoint` from shared bytes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224423,"byte_end":224466,"line_start":97,"line_end":97,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224471,"byte_end":224474,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224479,"byte_end":224486,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Channel;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224491,"byte_end":224527,"line_start":100,"line_end":100,"column_start":5,"column_end":41}},{"value":"/ Channel::from_shared(\"https://example.com\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224532,"byte_end":224580,"line_start":101,"line_end":101,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224585,"byte_end":224592,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224924,"byte_end":224936,"line_start":112,"line_end":112,"column_start":12,"column_end":24},"name":"balance_list","qualname":"<Channel>::balance_list","value":"pub fn balance_list<impl Iterator<Item = Endpoint>: Iterator<Item =\nEndpoint>>(impl Iterator<Item = Endpoint>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Balance a list of [`Endpoint`]'s.","sig":null,"attributes":[{"value":"/ Balance a list of [`Endpoint`]'s.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224766,"byte_end":224803,"line_start":108,"line_end":108,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224808,"byte_end":224811,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This creates a [`Channel`] that will load balance across all the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224816,"byte_end":224884,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ provided endpoints.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":224889,"byte_end":224912,"line_start":111,"line_end":111,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1911},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":225412,"byte_end":225427,"line_start":125,"line_end":125,"column_start":12,"column_end":27},"name":"balance_channel","qualname":"<Channel>::balance_channel","value":"pub fn balance_channel<K>(usize) -> (Self, Sender<Change<K, Endpoint>>) where\nK: Hash + Eq + Send + Clone + 'static","parent":null,"children":[],"decl_id":null,"docs":" Balance a list of [`Endpoint`]'s.","sig":null,"attributes":[{"value":"/ Balance a list of [`Endpoint`]'s.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":225231,"byte_end":225268,"line_start":122,"line_end":122,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":225273,"byte_end":225276,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This creates a [`Channel`] that will listen to a stream of change events and will add or remove provided endpoints.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":225281,"byte_end":225400,"line_start":124,"line_end":124,"column_start":5,"column_end":124}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":225899,"byte_end":225928,"line_start":137,"line_end":137,"column_start":12,"column_end":41},"name":"balance_channel_with_executor","qualname":"<Channel>::balance_channel_with_executor","value":"pub fn balance_channel_with_executor<K, E>(usize, E)\n-> (Self, Sender<Change<K, Endpoint>>) where K: Hash + Eq + Send + Clone +\n'static, E: Executor<Pin<Box<dyn Future<Output = ()> + Send>>> + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Balance a list of [`Endpoint`]'s.","sig":null,"attributes":[{"value":"/ Balance a list of [`Endpoint`]'s.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":225636,"byte_end":225673,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":225678,"byte_end":225681,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This creates a [`Channel`] that will listen to a stream of change events and will add or remove provided endpoints.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":225686,"byte_end":225805,"line_start":134,"line_end":134,"column_start":5,"column_end":124}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":225810,"byte_end":225813,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ The [`Channel`] will use the given executor to spawn async tasks.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":225818,"byte_end":225887,"line_start":136,"line_end":136,"column_start":5,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":1938},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::transport::server","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","parent":null,"children":[{"krate":0,"index":1939},{"krate":0,"index":1963},{"krate":0,"index":2028},{"krate":0,"index":2095},{"krate":0,"index":2105},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2112},{"krate":0,"index":2115},{"krate":0,"index":2118},{"krate":0,"index":2121},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2128},{"krate":0,"index":2131},{"krate":0,"index":2134},{"krate":0,"index":2137},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2144},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2151},{"krate":0,"index":2154},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2161},{"krate":0,"index":2164},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2171},{"krate":0,"index":2174},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2180},{"krate":0,"index":2183},{"krate":0,"index":2186},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2193},{"krate":0,"index":2196},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2203},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2211},{"krate":0,"index":2214},{"krate":0,"index":2217},{"krate":0,"index":2220},{"krate":0,"index":2223},{"krate":0,"index":2226},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":4206},{"krate":0,"index":4221},{"krate":0,"index":2233},{"krate":0,"index":4224},{"krate":0,"index":4228},{"krate":0,"index":2235},{"krate":0,"index":2237},{"krate":0,"index":2241},{"krate":0,"index":2243},{"krate":0,"index":2278},{"krate":0,"index":2281},{"krate":0,"index":2313},{"krate":0,"index":2316},{"krate":0,"index":2320},{"krate":0,"index":4270},{"krate":0,"index":4231},{"krate":0,"index":2328},{"krate":0,"index":2335},{"krate":0,"index":2338},{"krate":0,"index":2346}],"decl_id":null,"docs":" Server implementation and builder.\n","sig":null,"attributes":[{"value":"/ Server implementation and builder.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":243888,"byte_end":243926,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":1949},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273575,"byte_end":273584,"line_start":52,"line_end":52,"column_start":11,"column_end":20},"name":"Connected","qualname":"::transport::server::conn::Connected","value":"Connected","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1951}],"decl_id":null,"docs":" Trait that connected IO resources implement and use to produce info about the connection.","sig":null,"attributes":[{"value":"/ Trait that connected IO resources implement and use to produce info about the connection.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272434,"byte_end":272527,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272528,"byte_end":272531,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The goal for this trait is to allow users to implement","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272532,"byte_end":272590,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/ custom IO types that can still provide the same connection","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272591,"byte_end":272653,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/ metadata.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272654,"byte_end":272667,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272668,"byte_end":272671,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272672,"byte_end":272685,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272686,"byte_end":272689,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The `ConnectInfo` returned will be accessible through [request extensions][ext]:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272690,"byte_end":272774,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272775,"byte_end":272778,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272779,"byte_end":272786,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tonic::{Request, transport::server::Connected};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272787,"byte_end":272842,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272843,"byte_end":272846,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ // A `Stream` that yields connections","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272847,"byte_end":272888,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ struct MyConnector {}","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272889,"byte_end":272914,"line_start":26,"line_end":26,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272915,"byte_end":272918,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Return metadata about the connection as `MyConnectInfo`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272919,"byte_end":272981,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/ impl Connected for MyConnector {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":272982,"byte_end":273018,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/     type ConnectInfo = MyConnectInfo;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273019,"byte_end":273060,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273061,"byte_end":273064,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     fn connect_info(&self) -> Self::ConnectInfo {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273065,"byte_end":273118,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/         MyConnectInfo {}","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273119,"byte_end":273147,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273148,"byte_end":273157,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273158,"byte_end":273163,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273164,"byte_end":273167,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273168,"byte_end":273188,"line_start":37,"line_end":37,"column_start":1,"column_end":21}},{"value":"/ struct MyConnectInfo {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273189,"byte_end":273215,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/     // Metadata about your connection","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273216,"byte_end":273257,"line_start":39,"line_end":39,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273258,"byte_end":273263,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273264,"byte_end":273267,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // The connect info can be accessed through request extensions:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273268,"byte_end":273335,"line_start":42,"line_end":42,"column_start":1,"column_end":68}},{"value":"/ # fn foo(request: Request<()>) {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273336,"byte_end":273372,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/ let connect_info: &MyConnectInfo = request","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273373,"byte_end":273419,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/     .extensions()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273420,"byte_end":273441,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/     .get::<MyConnectInfo>()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273442,"byte_end":273473,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/     .expect(\"bug in tonic\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273474,"byte_end":273506,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273507,"byte_end":273514,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273515,"byte_end":273522,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273523,"byte_end":273526,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [ext]: crate::Request::extensions","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273527,"byte_end":273564,"line_start":51,"line_end":51,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1950},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273730,"byte_end":273741,"line_start":55,"line_end":55,"column_start":10,"column_end":21},"name":"ConnectInfo","qualname":"::transport::server::conn::Connected::ConnectInfo","value":"type ConnectInfo: Clone + Send + Sync + 'static;","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":" The connection info type the IO resources generates.\n","sig":null,"attributes":[{"value":"/ The connection info type the IO resources generates.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273591,"byte_end":273647,"line_start":53,"line_end":53,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1951},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273844,"byte_end":273856,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"connect_info","qualname":"::transport::server::conn::Connected::connect_info","value":"pub fn connect_info(&Self) -> Self::ConnectInfo","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":" Create type holding information about the connection.\n","sig":null,"attributes":[{"value":"/ Create type holding information about the connection.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273779,"byte_end":273836,"line_start":57,"line_end":57,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4103},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":274178,"byte_end":274192,"line_start":70,"line_end":70,"column_start":12,"column_end":26},"name":"TcpConnectInfo","qualname":"::transport::server::conn::TcpConnectInfo","value":"TcpConnectInfo {  }","parent":null,"children":[{"krate":0,"index":4104}],"decl_id":null,"docs":" Connection info for standard TCP streams.","sig":null,"attributes":[{"value":"/ Connection info for standard TCP streams.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273889,"byte_end":273934,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273935,"byte_end":273938,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This type will be accessible through [request extensions][ext] if you're using the default","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":273939,"byte_end":274033,"line_start":63,"line_end":63,"column_start":1,"column_end":95}},{"value":"/ non-TLS connector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":274034,"byte_end":274056,"line_start":64,"line_end":64,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":274057,"byte_end":274060,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ See [`Connected`] for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":274061,"byte_end":274100,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":274101,"byte_end":274104,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [ext]: crate::Request::extensions","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":274105,"byte_end":274142,"line_start":68,"line_end":68,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1953},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":274336,"byte_end":274347,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"remote_addr","qualname":"<TcpConnectInfo>::remote_addr","value":"pub fn remote_addr(&Self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Return the remote address the IO resource is connected too.\n","sig":null,"attributes":[{"value":"/ Return the remote address the IO resource is connected too.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":274261,"byte_end":274324,"line_start":75,"line_end":75,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4199},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/unix.rs","byte_start":284560,"byte_end":284574,"line_start":15,"line_end":15,"column_start":12,"column_end":26},"name":"UdsConnectInfo","qualname":"::transport::server::unix::UdsConnectInfo","value":"UdsConnectInfo { peer_addr, peer_cred }","parent":null,"children":[{"krate":0,"index":4200},{"krate":0,"index":4201}],"decl_id":null,"docs":" Connection info for Unix domain socket streams.","sig":null,"attributes":[{"value":"/ Connection info for Unix domain socket streams.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/unix.rs","byte_start":284194,"byte_end":284245,"line_start":4,"line_end":4,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/unix.rs","byte_start":284246,"byte_end":284249,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This type will be accessible through [request extensions][ext] if you're using","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/unix.rs","byte_start":284250,"byte_end":284332,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/ a unix stream.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/unix.rs","byte_start":284333,"byte_end":284351,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/unix.rs","byte_start":284352,"byte_end":284355,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [Connected] for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/unix.rs","byte_start":284356,"byte_end":284393,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/unix.rs","byte_start":284394,"byte_end":284397,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [ext]: crate::Request::extensions","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/unix.rs","byte_start":284398,"byte_end":284435,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"/ [Connected]: crate::transport::server::Connected","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/unix.rs","byte_start":284436,"byte_end":284488,"line_start":12,"line_end":12,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":4200},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/unix.rs","byte_start":284655,"byte_end":284664,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"name":"peer_addr","qualname":"::transport::server::unix::UdsConnectInfo::peer_addr","value":"std::option::Option<std::sync::Arc<tokio::net::unix::SocketAddr>>","parent":{"krate":0,"index":4199},"children":[],"decl_id":null,"docs":" Peer address. This will be \"unnamed\" for client unix sockets.\n","sig":null,"attributes":[{"value":"/ Peer address. This will be \"unnamed\" for client unix sockets.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/unix.rs","byte_start":284581,"byte_end":284646,"line_start":16,"line_end":16,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":4201},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/unix.rs","byte_start":284766,"byte_end":284775,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"name":"peer_cred","qualname":"::transport::server::unix::UdsConnectInfo::peer_cred","value":"std::option::Option<tokio::net::unix::UCred>","parent":{"krate":0,"index":4199},"children":[],"decl_id":null,"docs":" Process credentials for the unix socket.\n","sig":null,"attributes":[{"value":"/ Process credentials for the unix socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/unix.rs","byte_start":284713,"byte_end":284757,"line_start":18,"line_end":18,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4206},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":246104,"byte_end":246110,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"Server","qualname":"::transport::server::Server","value":"Server {  }","parent":null,"children":[{"krate":0,"index":4208},{"krate":0,"index":4209},{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4215},{"krate":0,"index":4216},{"krate":0,"index":4217},{"krate":0,"index":4218},{"krate":0,"index":4219},{"krate":0,"index":4220}],"decl_id":null,"docs":" A default batteries included `transport` server.","sig":null,"attributes":[{"value":"/ A default batteries included `transport` server.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":245551,"byte_end":245603,"line_start":70,"line_end":70,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":245604,"byte_end":245607,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper around [`hyper::Server`] and provides an easy builder","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":245608,"byte_end":245683,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ pattern style builder [`Server`]. This builder exposes easy configuration parameters","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":245684,"byte_end":245772,"line_start":73,"line_end":73,"column_start":1,"column_end":89}},{"value":"/ for providing a fully featured http2 based gRPC server. This should provide","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":245773,"byte_end":245852,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ a very good out of the box http2 server for use with tonic but is also a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":245853,"byte_end":245929,"line_start":75,"line_end":75,"column_start":1,"column_end":77}},{"value":"/ reference implementation that should be a good starting point for anyone","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":245930,"byte_end":246006,"line_start":76,"line_end":76,"column_start":1,"column_end":77}},{"value":"/ wanting to create a more complex and/or specific implementation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":246007,"byte_end":246075,"line_start":77,"line_end":77,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4224},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":247408,"byte_end":247414,"line_start":121,"line_end":121,"column_start":12,"column_end":18},"name":"Router","qualname":"::transport::server::Router","value":"Router {  }","parent":null,"children":[{"krate":0,"index":4226},{"krate":0,"index":4227}],"decl_id":null,"docs":" A stack based `Service` router.\n","sig":null,"attributes":[{"value":"/ A stack based `Service` router.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":247344,"byte_end":247379,"line_start":119,"line_end":119,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":2235},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":247610,"byte_end":247622,"line_start":128,"line_end":128,"column_start":11,"column_end":23},"name":"NamedService","qualname":"::transport::server::NamedService","value":"NamedService","parent":null,"children":[{"krate":0,"index":2236}],"decl_id":null,"docs":" A trait to provide a static reference to the service's\n name. This is used for routing service's within the router.\n","sig":null,"attributes":[{"value":"/ A trait to provide a static reference to the service's","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":247477,"byte_end":247535,"line_start":126,"line_end":126,"column_start":1,"column_end":59}},{"value":"/ name. This is used for routing service's within the router.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":247536,"byte_end":247599,"line_start":127,"line_end":127,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":2236},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":247779,"byte_end":247783,"line_start":132,"line_end":132,"column_start":11,"column_end":15},"name":"NAME","qualname":"::transport::server::NamedService::NAME","value":"&'static str","parent":{"krate":0,"index":2235},"children":[],"decl_id":null,"docs":" The `Service-Name` as described [here].","sig":null,"attributes":[{"value":"/ The `Service-Name` as described [here].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":247629,"byte_end":247672,"line_start":129,"line_end":129,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":247677,"byte_end":247680,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [here]: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#requests","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":247685,"byte_end":247768,"line_start":131,"line_end":131,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":247996,"byte_end":248003,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"builder","qualname":"<Server>::builder","value":"pub fn builder() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new server builder that can configure a [`Server`].\n","sig":null,"attributes":[{"value":"/ Create a new server builder that can configure a [`Server`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":247920,"byte_end":247984,"line_start":140,"line_end":140,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":248846,"byte_end":248878,"line_start":172,"line_end":172,"column_start":12,"column_end":44},"name":"concurrency_limit_per_connection","qualname":"<Server<L>>::concurrency_limit_per_connection","value":"pub fn concurrency_limit_per_connection(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the concurrency limit applied to on requests inbound per connection.","sig":null,"attributes":[{"value":"/ Set the concurrency limit applied to on requests inbound per connection.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":248509,"byte_end":248585,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":248590,"byte_end":248593,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":248598,"byte_end":248611,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":248616,"byte_end":248619,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":248624,"byte_end":248631,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Server;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":248636,"byte_end":248671,"line_start":166,"line_end":166,"column_start":5,"column_end":40}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":248676,"byte_end":248709,"line_start":167,"line_end":167,"column_start":5,"column_end":38}},{"value":"/ # let builder = Server::builder();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":248714,"byte_end":248752,"line_start":168,"line_end":168,"column_start":5,"column_end":43}},{"value":"/ builder.concurrency_limit_per_connection(32);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":248757,"byte_end":248806,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":248811,"byte_end":248818,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":248823,"byte_end":248834,"line_start":171,"line_end":171,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249348,"byte_end":249355,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Server<L>>::timeout","value":"pub fn timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a timeout on for all request handlers.","sig":null,"attributes":[{"value":"/ Set a timeout on for all request handlers.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249010,"byte_end":249056,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249061,"byte_end":249064,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249069,"byte_end":249082,"line_start":181,"line_end":181,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249087,"byte_end":249090,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249095,"byte_end":249102,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Server;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249107,"byte_end":249142,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249147,"byte_end":249180,"line_start":185,"line_end":185,"column_start":5,"column_end":38}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249185,"byte_end":249215,"line_start":186,"line_end":186,"column_start":5,"column_end":35}},{"value":"/ # let builder = Server::builder();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249220,"byte_end":249258,"line_start":187,"line_end":187,"column_start":5,"column_end":43}},{"value":"/ builder.timeout(Duration::from_secs(30));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249263,"byte_end":249308,"line_start":188,"line_end":188,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249313,"byte_end":249320,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249325,"byte_end":249336,"line_start":190,"line_end":190,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2247},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249738,"byte_end":249764,"line_start":205,"line_end":205,"column_start":12,"column_end":38},"name":"initial_stream_window_size","qualname":"<Server<L>>::initial_stream_window_size","value":"pub fn initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249484,"byte_end":249552,"line_start":198,"line_end":198,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249557,"byte_end":249587,"line_start":199,"line_end":199,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249592,"byte_end":249595,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249600,"byte_end":249621,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249626,"byte_end":249629,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249634,"byte_end":249710,"line_start":203,"line_end":203,"column_start":5,"column_end":81}},{"value":"must_use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249715,"byte_end":249726,"line_start":204,"line_end":204,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":250032,"byte_end":250062,"line_start":216,"line_end":216,"column_start":12,"column_end":42},"name":"initial_connection_window_size","qualname":"<Server<L>>::initial_connection_window_size","value":"pub fn initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249914,"byte_end":249970,"line_start":212,"line_end":212,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249975,"byte_end":249978,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Default is 65,535","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":249983,"byte_end":250004,"line_start":214,"line_end":214,"column_start":5,"column_end":26}},{"value":"must_use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":250009,"byte_end":250020,"line_start":215,"line_end":215,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2251},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":250474,"byte_end":250496,"line_start":230,"line_end":230,"column_start":12,"column_end":34},"name":"max_concurrent_streams","qualname":"<Server<L>>::max_concurrent_streams","value":"pub fn max_concurrent_streams<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2\n connections.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":250216,"byte_end":250287,"line_start":223,"line_end":223,"column_start":5,"column_end":76}},{"value":"/ connections.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":250292,"byte_end":250308,"line_start":224,"line_end":224,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":250313,"byte_end":250316,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Default is no limit (`None`).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":250321,"byte_end":250354,"line_start":226,"line_end":226,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":250359,"byte_end":250362,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_MAX_CONCURRENT_STREAMS","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":250367,"byte_end":250446,"line_start":228,"line_end":228,"column_start":5,"column_end":84}},{"value":"must_use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":250451,"byte_end":250462,"line_start":229,"line_end":229,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2253},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251107,"byte_end":251131,"line_start":247,"line_end":247,"column_start":12,"column_end":36},"name":"http2_keepalive_interval","qualname":"<Server<L>>::http2_keepalive_interval","value":"pub fn http2_keepalive_interval(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP2 Ping frames are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether HTTP2 Ping frames are enabled on accepted connections.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":250647,"byte_end":250717,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":250722,"byte_end":250725,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, HTTP2 keepalive is disabled, otherwise the duration","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":250730,"byte_end":250809,"line_start":239,"line_end":239,"column_start":5,"column_end":84}},{"value":"/ specified will be the time interval between HTTP2 Ping frames.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":250814,"byte_end":250880,"line_start":240,"line_end":240,"column_start":5,"column_end":71}},{"value":"/ The timeout for receiving an acknowledgement of the keepalive ping","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":250885,"byte_end":250955,"line_start":241,"line_end":241,"column_start":5,"column_end":75}},{"value":"/ can be set with [`Server::http2_keepalive_timeout`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":250960,"byte_end":251016,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251021,"byte_end":251024,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Default is no HTTP2 keepalive (`None`)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251029,"byte_end":251071,"line_start":244,"line_end":244,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251076,"byte_end":251079,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"must_use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251084,"byte_end":251095,"line_start":246,"line_end":246,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251598,"byte_end":251621,"line_start":262,"line_end":262,"column_start":12,"column_end":35},"name":"http2_keepalive_timeout","qualname":"<Server<L>>::http2_keepalive_timeout","value":"pub fn http2_keepalive_timeout(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a timeout for receiving an acknowledgement of the keepalive ping.","sig":null,"attributes":[{"value":"/ Sets a timeout for receiving an acknowledgement of the keepalive ping.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251287,"byte_end":251361,"line_start":254,"line_end":254,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251366,"byte_end":251369,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ If the ping is not acknowledged within the timeout, the connection will be closed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251374,"byte_end":251460,"line_start":256,"line_end":256,"column_start":5,"column_end":91}},{"value":"/ Does nothing if http2_keep_alive_interval is disabled.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251465,"byte_end":251523,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251528,"byte_end":251531,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Default is 20 seconds.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251536,"byte_end":251562,"line_start":259,"line_end":259,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251567,"byte_end":251570,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"must_use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251575,"byte_end":251586,"line_start":261,"line_end":261,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2255},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252116,"byte_end":252129,"line_start":278,"line_end":278,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<Server<L>>::tcp_keepalive","value":"pub fn tcp_keepalive(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether TCP keepalive messages are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether TCP keepalive messages are enabled on accepted connections.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251775,"byte_end":251850,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251855,"byte_end":251858,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, keepalive is disabled, otherwise the duration","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251863,"byte_end":251936,"line_start":271,"line_end":271,"column_start":5,"column_end":78}},{"value":"/ specified will be the time to remain idle before sending TCP keepalive","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":251941,"byte_end":252015,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ probes.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252020,"byte_end":252031,"line_start":273,"line_end":273,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252036,"byte_end":252039,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Default is no keepalive (`None`)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252044,"byte_end":252080,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252085,"byte_end":252088,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"must_use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252093,"byte_end":252104,"line_start":277,"line_end":277,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2256},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252378,"byte_end":252389,"line_start":287,"line_end":287,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<Server<L>>::tcp_nodelay","value":"pub fn tcp_nodelay(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.\n","sig":null,"attributes":[{"value":"/ Set the value of `TCP_NODELAY` option for accepted connections. Enabled by default.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252263,"byte_end":252350,"line_start":285,"line_end":285,"column_start":5,"column_end":92}},{"value":"must_use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252355,"byte_end":252366,"line_start":286,"line_end":286,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252705,"byte_end":252719,"line_start":300,"line_end":300,"column_start":12,"column_end":26},"name":"max_frame_size","qualname":"<Server<L>>::max_frame_size","value":"pub fn max_frame_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252512,"byte_end":252561,"line_start":294,"line_end":294,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252566,"byte_end":252569,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252574,"byte_end":252609,"line_start":296,"line_end":296,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252614,"byte_end":252617,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If not set, will default from underlying transport.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252622,"byte_end":252677,"line_start":298,"line_end":298,"column_start":5,"column_end":60}},{"value":"must_use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252682,"byte_end":252693,"line_start":299,"line_end":299,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2259},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":253280,"byte_end":253292,"line_start":316,"line_end":316,"column_start":12,"column_end":24},"name":"accept_http1","qualname":"<Server<L>>::accept_http1","value":"pub fn accept_http1(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allow this server to accept http1 requests.","sig":null,"attributes":[{"value":"/ Allow this server to accept http1 requests.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252876,"byte_end":252923,"line_start":307,"line_end":307,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252928,"byte_end":252931,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Accepting http1 requests is only useful when developing `grpc-web`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":252936,"byte_end":253006,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ enabled services. If this setting is set to `true` but services are","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":253011,"byte_end":253082,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ not correctly configured to handle grpc-web requests, your server may","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":253087,"byte_end":253160,"line_start":311,"line_end":311,"column_start":5,"column_end":78}},{"value":"/ return confusing (but correct) protocol errors.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":253165,"byte_end":253216,"line_start":312,"line_end":312,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":253221,"byte_end":253224,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":253229,"byte_end":253252,"line_start":314,"line_end":314,"column_start":5,"column_end":28}},{"value":"must_use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":253257,"byte_end":253268,"line_start":315,"line_end":315,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2260},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":253522,"byte_end":253530,"line_start":325,"line_end":325,"column_start":12,"column_end":20},"name":"trace_fn","qualname":"<Server<L>>::trace_fn","value":"pub fn trace_fn<F>(Self, F) -> Self where F: Fn(&http::Request<()>) ->\ntracing::Span + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Intercept inbound headers and add a [`tracing::Span`] to each response future.\n","sig":null,"attributes":[{"value":"/ Intercept inbound headers and add a [`tracing::Span`] to each response future.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":253412,"byte_end":253494,"line_start":323,"line_end":323,"column_start":5,"column_end":87}},{"value":"must_use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":253499,"byte_end":253510,"line_start":324,"line_end":324,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":253957,"byte_end":253968,"line_start":339,"line_end":339,"column_start":12,"column_end":23},"name":"add_service","qualname":"<Server<L>>::add_service","value":"pub fn add_service<S>(&mut Self, S) -> Router<L> where\nS: Service<Request<Body>, Response = Response<BoxBody>, Error =\nResponse<BoxBody>> + NamedService + Clone + Send + 'static, S::Future: Send +\n'static, L: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a router with the `S` typed service as the first service.","sig":null,"attributes":[{"value":"/ Create a router with the `S` typed service as the first service.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":253753,"byte_end":253821,"line_start":335,"line_end":335,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":253826,"byte_end":253829,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ This will clone the `Server` builder and create a router that will","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":253834,"byte_end":253904,"line_start":337,"line_end":337,"column_start":5,"column_end":75}},{"value":"/ route around different services.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":253909,"byte_end":253945,"line_start":338,"line_end":338,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":254745,"byte_end":254765,"line_start":360,"line_end":360,"column_start":12,"column_end":32},"name":"add_optional_service","qualname":"<Server<L>>::add_optional_service","value":"pub fn add_optional_service<S>(&mut Self, Option<S>) -> Router<L> where\nS: Service<Request<Body>, Response = Response<BoxBody>, Error =\nResponse<BoxBody>> + NamedService + Clone + Send + 'static, S::Future: Send +\n'static, L: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a router with the optional `S` typed service as the first service.","sig":null,"attributes":[{"value":"/ Create a router with the optional `S` typed service as the first service.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":254309,"byte_end":254386,"line_start":352,"line_end":352,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":254391,"byte_end":254394,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ This will clone the `Server` builder and create a router that will","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":254399,"byte_end":254469,"line_start":354,"line_end":354,"column_start":5,"column_end":75}},{"value":"/ route around different services.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":254474,"byte_end":254510,"line_start":355,"line_end":355,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":254515,"byte_end":254518,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":254523,"byte_end":254533,"line_start":357,"line_end":357,"column_start":5,"column_end":15}},{"value":"/ Even when the argument given is `None` this will capture *all* requests to this service name.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":254538,"byte_end":254635,"line_start":358,"line_end":358,"column_start":5,"column_end":102}},{"value":"/ As a result, one cannot use this to toggle between two identically named implementations.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":254640,"byte_end":254733,"line_start":359,"line_end":359,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":257219,"byte_end":257224,"line_start":435,"line_end":435,"column_start":12,"column_end":17},"name":"layer","qualname":"<Server<L>>::layer","value":"pub fn layer<NewLayer>(Self, NewLayer) -> Server<Stack<NewLayer, L>>","parent":null,"children":[],"decl_id":null,"docs":" Set the [Tower] [`Layer`] all services will be wrapped in.","sig":null,"attributes":[{"value":"/ Set the [Tower] [`Layer`] all services will be wrapped in.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255167,"byte_end":255229,"line_start":374,"line_end":374,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255234,"byte_end":255237,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This enables using middleware from the [Tower ecosystem][eco].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255242,"byte_end":255308,"line_start":376,"line_end":376,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255313,"byte_end":255316,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255321,"byte_end":255334,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255339,"byte_end":255342,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255347,"byte_end":255354,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Server;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255359,"byte_end":255394,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255399,"byte_end":255432,"line_start":382,"line_end":382,"column_start":5,"column_end":38}},{"value":"/ use tower::timeout::TimeoutLayer;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255437,"byte_end":255474,"line_start":383,"line_end":383,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255479,"byte_end":255507,"line_start":384,"line_end":384,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255512,"byte_end":255515,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # let mut builder = Server::builder();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255520,"byte_end":255562,"line_start":386,"line_end":386,"column_start":5,"column_end":47}},{"value":"/ builder.layer(TimeoutLayer::new(Duration::from_secs(30)));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255567,"byte_end":255629,"line_start":387,"line_end":387,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255634,"byte_end":255641,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255646,"byte_end":255649,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Note that timeouts should be set using [`Server::timeout`]. `TimeoutLayer` is only used","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255654,"byte_end":255745,"line_start":390,"line_end":390,"column_start":5,"column_end":96}},{"value":"/ here as an example.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255750,"byte_end":255773,"line_start":391,"line_end":391,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255778,"byte_end":255781,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ You can build more complex layers using [`ServiceBuilder`]. Those layers can include","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255786,"byte_end":255874,"line_start":393,"line_end":393,"column_start":5,"column_end":93}},{"value":"/ [interceptors]:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255879,"byte_end":255898,"line_start":394,"line_end":394,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255903,"byte_end":255906,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255911,"byte_end":255918,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ # use tonic::transport::Server;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255923,"byte_end":255958,"line_start":397,"line_end":397,"column_start":5,"column_end":40}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":255963,"byte_end":255996,"line_start":398,"line_end":398,"column_start":5,"column_end":38}},{"value":"/ use tower::ServiceBuilder;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256001,"byte_end":256031,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256036,"byte_end":256064,"line_start":400,"line_end":400,"column_start":5,"column_end":33}},{"value":"/ use tonic::{Request, Status, service::interceptor};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256069,"byte_end":256124,"line_start":401,"line_end":401,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256129,"byte_end":256132,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ fn auth_interceptor(request: Request<()>) -> Result<Request<()>, Status> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256137,"byte_end":256215,"line_start":403,"line_end":403,"column_start":5,"column_end":83}},{"value":"/     if valid_credentials(&request) {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256220,"byte_end":256260,"line_start":404,"line_end":404,"column_start":5,"column_end":45}},{"value":"/         Ok(request)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256265,"byte_end":256288,"line_start":405,"line_end":405,"column_start":5,"column_end":28}},{"value":"/     } else {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256293,"byte_end":256309,"line_start":406,"line_end":406,"column_start":5,"column_end":21}},{"value":"/         Err(Status::unauthenticated(\"invalid credentials\"))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256314,"byte_end":256377,"line_start":407,"line_end":407,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256382,"byte_end":256391,"line_start":408,"line_end":408,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256396,"byte_end":256401,"line_start":409,"line_end":409,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256406,"byte_end":256409,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ fn valid_credentials(request: &Request<()>) -> bool {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256414,"byte_end":256471,"line_start":411,"line_end":411,"column_start":5,"column_end":62}},{"value":"/     // ...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256476,"byte_end":256490,"line_start":412,"line_end":412,"column_start":5,"column_end":19}},{"value":"/     # true","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256495,"byte_end":256509,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256514,"byte_end":256519,"line_start":414,"line_end":414,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256524,"byte_end":256527,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ fn some_other_interceptor(request: Request<()>) -> Result<Request<()>, Status> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256532,"byte_end":256616,"line_start":416,"line_end":416,"column_start":5,"column_end":89}},{"value":"/     Ok(request)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256621,"byte_end":256640,"line_start":417,"line_end":417,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256645,"byte_end":256650,"line_start":418,"line_end":418,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256655,"byte_end":256658,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let layer = ServiceBuilder::new()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256663,"byte_end":256700,"line_start":420,"line_end":420,"column_start":5,"column_end":42}},{"value":"/     .load_shed()","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256705,"byte_end":256725,"line_start":421,"line_end":421,"column_start":5,"column_end":25}},{"value":"/     .timeout(Duration::from_secs(30))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256730,"byte_end":256771,"line_start":422,"line_end":422,"column_start":5,"column_end":46}},{"value":"/     .layer(interceptor(auth_interceptor))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256776,"byte_end":256821,"line_start":423,"line_end":423,"column_start":5,"column_end":50}},{"value":"/     .layer(interceptor(some_other_interceptor))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256826,"byte_end":256877,"line_start":424,"line_end":424,"column_start":5,"column_end":56}},{"value":"/     .into_inner();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256882,"byte_end":256904,"line_start":425,"line_end":425,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256909,"byte_end":256912,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ Server::builder().layer(layer);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256917,"byte_end":256952,"line_start":427,"line_end":427,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256957,"byte_end":256964,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256969,"byte_end":256972,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ [Tower]: https://github.com/tower-rs/tower","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":256977,"byte_end":257023,"line_start":430,"line_end":430,"column_start":5,"column_end":51}},{"value":"/ [`Layer`]: tower::layer::Layer","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":257028,"byte_end":257062,"line_start":431,"line_end":431,"column_start":5,"column_end":39}},{"value":"/ [eco]: https://github.com/tower-rs","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":257067,"byte_end":257105,"line_start":432,"line_end":432,"column_start":5,"column_end":43}},{"value":"/ [`ServiceBuilder`]: tower::ServiceBuilder","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":257110,"byte_end":257155,"line_start":433,"line_end":433,"column_start":5,"column_end":50}},{"value":"/ [interceptors]: crate::service::Interceptor","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":257160,"byte_end":257207,"line_start":434,"line_end":434,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":261060,"byte_end":261071,"line_start":532,"line_end":532,"column_start":12,"column_end":23},"name":"add_service","qualname":"<Router<L>>::add_service","value":"pub fn add_service<S>(Self, S) -> Self where S: Service<Request<Body>,\nResponse = Response<BoxBody>, Error = Response<BoxBody>> + NamedService +\nClone + Send + 'static, S::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Add a new service to this router.\n","sig":null,"attributes":[{"value":"/ Add a new service to this router.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":261011,"byte_end":261048,"line_start":531,"line_end":531,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":261720,"byte_end":261740,"line_start":551,"line_end":551,"column_start":12,"column_end":32},"name":"add_optional_service","qualname":"<Router<L>>::add_optional_service","value":"pub fn add_optional_service<S>(Self, Option<S>) -> Self where\nS: Service<Request<Body>, Response = Response<BoxBody>, Error =\nResponse<BoxBody>> + NamedService + Clone + Send + 'static, S::Future: Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Add a new optional service to this router.","sig":null,"attributes":[{"value":"/ Add a new optional service to this router.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":261401,"byte_end":261447,"line_start":545,"line_end":545,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":261452,"byte_end":261455,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":261460,"byte_end":261470,"line_start":547,"line_end":547,"column_start":5,"column_end":15}},{"value":"/ Even when the argument given is `None` this will capture *all* requests to this service name.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":261475,"byte_end":261572,"line_start":548,"line_end":548,"column_start":5,"column_end":102}},{"value":"/ As a result, one cannot use this to toggle between two identically named implementations.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":261577,"byte_end":261670,"line_start":549,"line_end":549,"column_start":5,"column_end":98}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":261675,"byte_end":261708,"line_start":550,"line_end":550,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2287},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":262342,"byte_end":262347,"line_start":571,"line_end":571,"column_start":18,"column_end":23},"name":"serve","qualname":"<Router<L>>::serve","value":"pub async fn serve<ResBody>(Self, SocketAddr) -> /*impl Trait*/ where\nL: Layer<Routes>, L::Service: Service<Request<Body>, Response =\nResponse<ResBody>> + Clone + Send + 'static,\n<<L as Layer<Routes>>::Service as Service<Request<Body>>>::Future: Send +\n'static,\n<<L as Layer<Routes>>::Service as\nService<Request<Body>>>::Error: Into<crate::Error> + Send,\nResBody: http_body::Body<Data = Bytes> + Send + 'static,\nResBody::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server\n on [tokio]'s default executor.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":262125,"byte_end":262199,"line_start":566,"line_end":566,"column_start":5,"column_end":79}},{"value":"/ on [tokio]'s default executor.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":262204,"byte_end":262238,"line_start":567,"line_end":567,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":262243,"byte_end":262246,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":262251,"byte_end":262285,"line_start":569,"line_end":569,"column_start":5,"column_end":39}},{"value":"/ [tokio]: https://docs.rs/tokio","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":262290,"byte_end":262324,"line_start":570,"line_end":570,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2291},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":263492,"byte_end":263511,"line_start":597,"line_end":597,"column_start":18,"column_end":37},"name":"serve_with_shutdown","qualname":"<Router<L>>::serve_with_shutdown","value":"pub async fn serve_with_shutdown<F: Future<Output = ()>,\nResBody>(Self, SocketAddr, F) -> /*impl Trait*/ where L: Layer<Routes>,\nL::Service: Service<Request<Body>, Response = Response<ResBody>> + Clone +\nSend + 'static,\n<<L as Layer<Routes>>::Service as Service<Request<Body>>>::Future: Send +\n'static,\n<<L as Layer<Routes>>::Service as\nService<Request<Body>>>::Error: Into<crate::Error> + Send,\nResBody: http_body::Body<Data = Bytes> + Send + 'static,\nResBody::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server\n on [tokio]'s default executor. And shutdown when the provided signal\n is received.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":263216,"byte_end":263290,"line_start":591,"line_end":591,"column_start":5,"column_end":79}},{"value":"/ on [tokio]'s default executor. And shutdown when the provided signal","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":263295,"byte_end":263367,"line_start":592,"line_end":592,"column_start":5,"column_end":77}},{"value":"/ is received.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":263372,"byte_end":263388,"line_start":593,"line_end":593,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":263393,"byte_end":263396,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":263401,"byte_end":263435,"line_start":595,"line_end":595,"column_start":5,"column_end":39}},{"value":"/ [tokio]: https://docs.rs/tokio","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":263440,"byte_end":263474,"line_start":596,"line_end":596,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":264557,"byte_end":264576,"line_start":621,"line_end":621,"column_start":18,"column_end":37},"name":"serve_with_incoming","qualname":"<Router<L>>::serve_with_incoming","value":"pub async fn serve_with_incoming<I, IO, IE, ResBody>(Self, I)\n-> /*impl Trait*/ where I: Stream<Item = Result<IO, IE>>, IO: AsyncRead +\nAsyncWrite + Connected + Unpin + Send + 'static, IO::ConnectInfo: Clone +\nSend + Sync + 'static, IE: Into<crate::Error>, L: Layer<Routes>,\nL::Service: Service<Request<Body>, Response = Response<ResBody>> + Clone +\nSend + 'static,\n<<L as Layer<Routes>>::Service as Service<Request<Body>>>::Future: Send +\n'static,\n<<L as Layer<Routes>>::Service as\nService<Request<Body>>>::Error: Into<crate::Error> + Send,\nResBody: http_body::Body<Data = Bytes> + Send + 'static,\nResBody::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server on\n the provided incoming stream of `AsyncRead + AsyncWrite`.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":264349,"byte_end":264426,"line_start":617,"line_end":617,"column_start":5,"column_end":82}},{"value":"/ the provided incoming stream of `AsyncRead + AsyncWrite`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":264431,"byte_end":264492,"line_start":618,"line_end":618,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":264497,"byte_end":264500,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":264505,"byte_end":264539,"line_start":620,"line_end":620,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":265864,"byte_end":265892,"line_start":652,"line_end":652,"column_start":18,"column_end":46},"name":"serve_with_incoming_shutdown","qualname":"<Router<L>>::serve_with_incoming_shutdown","value":"pub async fn serve_with_incoming_shutdown<I, IO, IE, F, ResBody>(Self, I, F)\n-> /*impl Trait*/ where I: Stream<Item = Result<IO, IE>>, IO: AsyncRead +\nAsyncWrite + Connected + Unpin + Send + 'static, IO::ConnectInfo: Clone +\nSend + Sync + 'static, IE: Into<crate::Error>, F: Future<Output = ()>,\nL: Layer<Routes>, L::Service: Service<Request<Body>, Response =\nResponse<ResBody>> + Clone + Send + 'static,\n<<L as Layer<Routes>>::Service as Service<Request<Body>>>::Future: Send +\n'static,\n<<L as Layer<Routes>>::Service as\nService<Request<Body>>>::Error: Into<crate::Error> + Send,\nResBody: http_body::Body<Data = Bytes> + Send + 'static,\nResBody::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume this [`Server`] creating a future that will execute the server on\n the provided incoming stream of `AsyncRead + AsyncWrite`. Similar to\n `serve_with_shutdown` this method will also take a signal future to\n gracefully shutdown the server.","sig":null,"attributes":[{"value":"/ Consume this [`Server`] creating a future that will execute the server on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":265529,"byte_end":265606,"line_start":646,"line_end":646,"column_start":5,"column_end":82}},{"value":"/ the provided incoming stream of `AsyncRead + AsyncWrite`. Similar to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":265611,"byte_end":265683,"line_start":647,"line_end":647,"column_start":5,"column_end":77}},{"value":"/ `serve_with_shutdown` this method will also take a signal future to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":265688,"byte_end":265759,"line_start":648,"line_end":648,"column_start":5,"column_end":76}},{"value":"/ gracefully shutdown the server.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":265764,"byte_end":265799,"line_start":649,"line_end":649,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":265804,"byte_end":265807,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ [`Server`]: struct.Server.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":265812,"byte_end":265846,"line_start":651,"line_end":651,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2311},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":266857,"byte_end":266869,"line_start":676,"line_end":676,"column_start":12,"column_end":24},"name":"into_service","qualname":"<Router<L>>::into_service","value":"pub fn into_service<ResBody>(Self) -> L::Service where L: Layer<Routes>,\nL::Service: Service<Request<Body>, Response = Response<ResBody>> + Clone +\nSend + 'static,\n<<L as Layer<Routes>>::Service as Service<Request<Body>>>::Future: Send +\n'static,\n<<L as Layer<Routes>>::Service as\nService<Request<Body>>>::Error: Into<crate::Error> + Send,\nResBody: http_body::Body<Data = Bytes> + Send + 'static,\nResBody::Error: Into<crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a tower service out of a router.\n","sig":null,"attributes":[{"value":"/ Create a tower service out of a router.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":266802,"byte_end":266845,"line_start":675,"line_end":675,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":2366},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/error.rs","byte_start":285453,"byte_end":285458,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Error","qualname":"::transport::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":2367}],"decl_id":null,"docs":" Error's that originate from the client or server;\n","sig":null,"attributes":[{"value":"/ Error's that originate from the client or server;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/error.rs","byte_start":285388,"byte_end":285441,"line_start":10,"line_end":10,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":4390},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":305213,"byte_end":305227,"line_start":163,"line_end":163,"column_start":12,"column_end":26},"name":"TimeoutExpired","qualname":"::transport::service::grpc_timeout::TimeoutExpired","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned if a request didn't complete within the configured timeout.","sig":null,"attributes":[{"value":"/ Error returned if a request didn't complete within the configured timeout.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":304736,"byte_end":304814,"line_start":154,"line_end":154,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":304815,"byte_end":304818,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Timeouts can be configured either with [`Endpoint::timeout`], [`Server::timeout`], or by","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":304819,"byte_end":304911,"line_start":156,"line_end":156,"column_start":1,"column_end":93}},{"value":"/ setting the [`grpc-timeout` metadata value][spec].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":304912,"byte_end":304966,"line_start":157,"line_end":157,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":304967,"byte_end":304970,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [`Endpoint::timeout`]: crate::transport::server::Server::timeout","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":304971,"byte_end":305039,"line_start":159,"line_end":159,"column_start":1,"column_end":69}},{"value":"/ [`Server::timeout`]: crate::transport::channel::Endpoint::timeout","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":305040,"byte_end":305109,"line_start":160,"line_end":160,"column_start":1,"column_end":70}},{"value":"/ [spec]: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":305110,"byte_end":305184,"line_start":161,"line_end":161,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4887},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","byte_start":320273,"byte_end":320279,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Routes","qualname":"::transport::service::router::Routes","value":"Routes {  }","parent":null,"children":[{"krate":0,"index":4888}],"decl_id":null,"docs":" A [`Service`] router.\n","sig":null,"attributes":[{"value":"/ A [`Service`] router.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","byte_start":320203,"byte_end":320228,"line_start":19,"line_end":19,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":4925},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","byte_start":321889,"byte_end":321901,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"RoutesFuture","qualname":"::transport::service::router::RoutesFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","byte_start":321863,"byte_end":321877,"line_start":77,"line_end":77,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4911},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","byte_start":321889,"byte_end":321901,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"__RoutesFuture","qualname":"::transport::service::router::_::__RoutesFuture","value":"__RoutesFuture {  }","parent":null,"children":[{"krate":0,"index":4913},{"krate":0,"index":4914}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","byte_start":321863,"byte_end":321877,"line_start":77,"line_end":77,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4935},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/tls.rs","byte_start":324430,"byte_end":324441,"line_start":3,"line_end":3,"column_start":12,"column_end":23},"name":"Certificate","qualname":"::transport::tls::Certificate","value":"Certificate {  }","parent":null,"children":[{"krate":0,"index":4936}],"decl_id":null,"docs":" Represents a X509 certificate.\n","sig":null,"attributes":[{"value":"/ Represents a X509 certificate.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/tls.rs","byte_start":324360,"byte_end":324394,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3010},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/tls.rs","byte_start":324872,"byte_end":324880,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"from_pem","qualname":"<Certificate>::from_pem","value":"pub fn from_pem<impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parse a PEM encoded X509 Certificate.","sig":null,"attributes":[{"value":"/ Parse a PEM encoded X509 Certificate.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/tls.rs","byte_start":324733,"byte_end":324774,"line_start":17,"line_end":17,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/tls.rs","byte_start":324779,"byte_end":324782,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The provided PEM should include at least one PEM encoded certificate.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/tls.rs","byte_start":324787,"byte_end":324860,"line_start":19,"line_end":19,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3012},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/tls.rs","byte_start":325052,"byte_end":325059,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Certificate>::get_ref","value":"pub fn get_ref(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get a immutable reference to underlying certificate\n","sig":null,"attributes":[{"value":"/ Get a immutable reference to underlying certificate","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/tls.rs","byte_start":324985,"byte_end":325040,"line_start":25,"line_end":25,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3013},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/tls.rs","byte_start":325182,"byte_end":325189,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Certificate>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to underlying certificate\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to underlying certificate","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/tls.rs","byte_start":325117,"byte_end":325170,"line_start":30,"line_end":30,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/tls.rs","byte_start":325322,"byte_end":325332,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Certificate>::into_inner","value":"pub fn into_inner(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the underlying certificate\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the underlying certificate","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/tls.rs","byte_start":325253,"byte_end":325310,"line_start":35,"line_end":35,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3057},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326142,"byte_end":326152,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"Extensions","qualname":"::extensions::Extensions","value":"Extensions {  }","parent":null,"children":[{"krate":0,"index":3058}],"decl_id":null,"docs":" A type map of protocol extensions.","sig":null,"attributes":[{"value":"/ A type map of protocol extensions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":325877,"byte_end":325915,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":325916,"byte_end":325919,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `Extensions` can be used by [`Interceptor`] and [`Request`] to store extra data derived from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":325920,"byte_end":326016,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ the underlying protocol.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326017,"byte_end":326045,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326046,"byte_end":326049,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`Interceptor`]: crate::service::Interceptor","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326050,"byte_end":326098,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ [`Request`]: crate::Request","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326099,"byte_end":326130,"line_start":9,"line_end":9,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3061},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326476,"byte_end":326482,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"insert","qualname":"<Extensions>::insert","value":"pub fn insert<T: Send + Sync + 'static>(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Insert a type into this `Extensions`.","sig":null,"attributes":[{"value":"/ Insert a type into this `Extensions`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326319,"byte_end":326360,"line_start":21,"line_end":21,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326365,"byte_end":326368,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If a extension of this type already existed, it will","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326373,"byte_end":326429,"line_start":23,"line_end":23,"column_start":5,"column_end":61}},{"value":"/ be returned.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326434,"byte_end":326450,"line_start":24,"line_end":24,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326455,"byte_end":326464,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3063},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326682,"byte_end":326685,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"get","qualname":"<Extensions>::get","value":"pub fn get<T: Send + Sync + 'static>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a type previously inserted on this `Extensions`.\n","sig":null,"attributes":[{"value":"/ Get a reference to a type previously inserted on this `Extensions`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326585,"byte_end":326656,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326661,"byte_end":326670,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326876,"byte_end":326883,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Extensions>::get_mut","value":"pub fn get_mut<T: Send + Sync + 'static>(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a type previously inserted on this `Extensions`.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a type previously inserted on this `Extensions`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326771,"byte_end":326850,"line_start":36,"line_end":36,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326855,"byte_end":326864,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3067},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":327122,"byte_end":327128,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"remove","qualname":"<Extensions>::remove","value":"pub fn remove<T: Send + Sync + 'static>(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove a type from this `Extensions`.","sig":null,"attributes":[{"value":"/ Remove a type from this `Extensions`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326981,"byte_end":327022,"line_start":42,"line_end":42,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":327027,"byte_end":327030,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ If a extension of this type existed, it will be returned.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":327035,"byte_end":327096,"line_start":44,"line_end":44,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":327101,"byte_end":327110,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3069},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":327300,"byte_end":327305,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"clear","qualname":"<Extensions>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the `Extensions` of all inserted extensions.\n","sig":null,"attributes":[{"value":"/ Clear the `Extensions` of all inserted extensions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":327220,"byte_end":327274,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":327279,"byte_end":327288,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4941},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":330825,"byte_end":330832,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Request","qualname":"::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":4943},{"krate":0,"index":4944},{"krate":0,"index":4945}],"decl_id":null,"docs":" A gRPC request and metadata from an RPC call.\n","sig":null,"attributes":[{"value":"/ A gRPC request and metadata from an RPC call.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":330747,"byte_end":330796,"line_start":12,"line_end":12,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":3108},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331834,"byte_end":331845,"line_start":49,"line_end":49,"column_start":11,"column_end":22},"name":"IntoRequest","qualname":"::request::IntoRequest","value":"IntoRequest<T>: sealed::Sealed","parent":null,"children":[{"krate":0,"index":3110}],"decl_id":null,"docs":" Trait implemented by RPC request types.","sig":null,"attributes":[{"value":"/ Trait implemented by RPC request types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":330912,"byte_end":330955,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":330956,"byte_end":330959,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Types implementing this trait can be used as arguments to client RPC","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":330960,"byte_end":331032,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ methods without explicitly wrapping them into `tonic::Request`s. The purpose","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331033,"byte_end":331113,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ is to make client calls slightly more convenient to write.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331114,"byte_end":331176,"line_start":24,"line_end":24,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331177,"byte_end":331180,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tonic's code generation and blanket implementations handle this for you,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331181,"byte_end":331257,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ so it is not necessary to implement this trait directly.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331258,"byte_end":331318,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331319,"byte_end":331322,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331323,"byte_end":331336,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331337,"byte_end":331340,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Given the following gRPC method definition:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331341,"byte_end":331388,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/ ```proto","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331389,"byte_end":331401,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ rpc GetFeature(Point) returns (Feature) {}","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331402,"byte_end":331448,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331449,"byte_end":331456,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331457,"byte_end":331460,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ we can call `get_feature` in two equivalent ways:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331461,"byte_end":331514,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331515,"byte_end":331526,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ # pub struct Point {}","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331527,"byte_end":331552,"line_start":38,"line_end":38,"column_start":1,"column_end":26}},{"value":"/ # pub struct Client {}","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331553,"byte_end":331579,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/ # impl Client {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331580,"byte_end":331599,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/ #   fn get_feature(&self, r: impl tonic::IntoRequest<Point>) {}","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331600,"byte_end":331667,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331668,"byte_end":331675,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ # let client = Client {};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331676,"byte_end":331705,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ use tonic::Request;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331706,"byte_end":331729,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331730,"byte_end":331733,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ client.get_feature(Point {});","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331734,"byte_end":331767,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/ client.get_feature(Request::new(Point {}));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331768,"byte_end":331815,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331816,"byte_end":331823,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3110},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331931,"byte_end":331943,"line_start":51,"line_end":51,"column_start":8,"column_end":20},"name":"into_request","qualname":"::request::IntoRequest::into_request","value":"pub fn into_request(Self) -> Request<T>","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" Wrap the input message `T` in a `tonic::Request`\n","sig":null,"attributes":[{"value":"/ Wrap the input message `T` in a `tonic::Request`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331871,"byte_end":331923,"line_start":50,"line_end":50,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":3111},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333094,"byte_end":333114,"line_start":87,"line_end":87,"column_start":11,"column_end":31},"name":"IntoStreamingRequest","qualname":"::request::IntoStreamingRequest","value":"IntoStreamingRequest: sealed::Sealed","parent":null,"children":[{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3114}],"decl_id":null,"docs":" Trait implemented by RPC streaming request types.","sig":null,"attributes":[{"value":"/ Trait implemented by RPC streaming request types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331968,"byte_end":332021,"line_start":54,"line_end":54,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332022,"byte_end":332025,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Types implementing this trait can be used as arguments to client streaming","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332026,"byte_end":332104,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ RPC methods without explicitly wrapping them into `tonic::Request`s. The","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332105,"byte_end":332181,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ purpose is to make client calls slightly more convenient to write.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332182,"byte_end":332252,"line_start":58,"line_end":58,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332253,"byte_end":332256,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Tonic's code generation and blanket implementations handle this for you,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332257,"byte_end":332333,"line_start":60,"line_end":60,"column_start":1,"column_end":77}},{"value":"/ so it is not necessary to implement this trait directly.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332334,"byte_end":332394,"line_start":61,"line_end":61,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332395,"byte_end":332398,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332399,"byte_end":332412,"line_start":63,"line_end":63,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332413,"byte_end":332416,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Given the following gRPC service method definition:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332417,"byte_end":332472,"line_start":65,"line_end":65,"column_start":1,"column_end":56}},{"value":"/ ```proto","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332473,"byte_end":332485,"line_start":66,"line_end":66,"column_start":1,"column_end":13}},{"value":"/ rpc RecordRoute(stream Point) returns (RouteSummary) {}","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332486,"byte_end":332545,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332546,"byte_end":332553,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ we can call `record_route` in two equivalent ways:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332554,"byte_end":332608,"line_start":69,"line_end":69,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332609,"byte_end":332612,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332613,"byte_end":332624,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/ # #[derive(Clone)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332625,"byte_end":332647,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/ # pub struct Point {};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332648,"byte_end":332674,"line_start":73,"line_end":73,"column_start":1,"column_end":27}},{"value":"/ # pub struct Client {};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332675,"byte_end":332702,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/ # impl Client {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332703,"byte_end":332722,"line_start":75,"line_end":75,"column_start":1,"column_end":20}},{"value":"/ #   fn record_route(&self, r: impl tonic::IntoStreamingRequest<Message = Point>) {}","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332723,"byte_end":332810,"line_start":76,"line_end":76,"column_start":1,"column_end":88}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332811,"byte_end":332818,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ # let client = Client {};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332819,"byte_end":332848,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/ use tonic::Request;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332849,"byte_end":332872,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ use futures_util::stream;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332873,"byte_end":332902,"line_start":80,"line_end":80,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332903,"byte_end":332906,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ let messages = vec![Point {}, Point {}];","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332907,"byte_end":332951,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332952,"byte_end":332955,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ client.record_route(Request::new(stream::iter(messages.clone())));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":332956,"byte_end":333026,"line_start":84,"line_end":84,"column_start":1,"column_end":71}},{"value":"/ client.record_route(stream::iter(messages));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333027,"byte_end":333075,"line_start":85,"line_end":85,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333076,"byte_end":333083,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":3112},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333178,"byte_end":333184,"line_start":89,"line_end":89,"column_start":10,"column_end":16},"name":"Stream","qualname":"::request::IntoStreamingRequest::Stream","value":"type Stream: Stream<Item = Self::Message> + Send + 'static;","parent":{"krate":0,"index":3111},"children":[],"decl_id":null,"docs":" The RPC request stream type\n","sig":null,"attributes":[{"value":"/ The RPC request stream type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333137,"byte_end":333168,"line_start":88,"line_end":88,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":3113},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333272,"byte_end":333279,"line_start":92,"line_end":92,"column_start":10,"column_end":17},"name":"Message","qualname":"::request::IntoStreamingRequest::Message","value":"type Message;","parent":{"krate":0,"index":3111},"children":[],"decl_id":null,"docs":" The RPC request type\n","sig":null,"attributes":[{"value":"/ The RPC request type","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333238,"byte_end":333262,"line_start":91,"line_end":91,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3114},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333347,"byte_end":333369,"line_start":95,"line_end":95,"column_start":8,"column_end":30},"name":"into_streaming_request","qualname":"::request::IntoStreamingRequest::into_streaming_request","value":"pub fn into_streaming_request(Self) -> Request<Self::Stream>","parent":{"krate":0,"index":3111},"children":[],"decl_id":null,"docs":" Wrap the stream of messages in a `tonic::Request`\n","sig":null,"attributes":[{"value":"/ Wrap the stream of messages in a `tonic::Request`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333286,"byte_end":333339,"line_start":94,"line_end":94,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3117},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333695,"byte_end":333698,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"new","qualname":"<Request<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new gRPC request.","sig":null,"attributes":[{"value":"/ Create a new gRPC request.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333430,"byte_end":333460,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333465,"byte_end":333468,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333473,"byte_end":333484,"line_start":101,"line_end":101,"column_start":5,"column_end":16}},{"value":"/ # use tonic::Request;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333489,"byte_end":333514,"line_start":102,"line_end":102,"column_start":5,"column_end":30}},{"value":"/ # pub struct HelloRequest {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333519,"byte_end":333550,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/ #   pub name: String,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333555,"byte_end":333580,"line_start":104,"line_end":104,"column_start":5,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333585,"byte_end":333592,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ Request::new(HelloRequest {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333597,"byte_end":333628,"line_start":106,"line_end":106,"column_start":5,"column_end":36}},{"value":"/    name: \"Bob\".into(),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333633,"byte_end":333659,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333664,"byte_end":333671,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333676,"byte_end":333683,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333912,"byte_end":333919,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Request<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the message\n","sig":null,"attributes":[{"value":"/ Get a reference to the message","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333866,"byte_end":333900,"line_start":118,"line_end":118,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3119},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":334022,"byte_end":334029,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Request<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the message\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the message","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333968,"byte_end":334010,"line_start":123,"line_end":123,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":334153,"byte_end":334161,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Request<T>>::metadata","value":"pub fn metadata(&Self) -> &MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the custom request metadata.\n","sig":null,"attributes":[{"value":"/ Get a reference to the custom request metadata.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":334090,"byte_end":334141,"line_start":128,"line_end":128,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":334285,"byte_end":334297,"line_start":134,"line_end":134,"column_start":12,"column_end":24},"name":"metadata_mut","qualname":"<Request<T>>::metadata_mut","value":"pub fn metadata_mut(&mut Self) -> &mut MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the request metadata.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the request metadata.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":334221,"byte_end":334273,"line_start":133,"line_end":133,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3122},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":334423,"byte_end":334433,"line_start":139,"line_end":139,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Request<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the message\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the message","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":334369,"byte_end":334411,"line_start":138,"line_end":138,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":335134,"byte_end":335143,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"from_http","qualname":"<Request<T>>::from_http","value":"pub fn from_http(http::Request<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an HTTP request to a gRPC request\n","sig":null,"attributes":[{"value":"/ Convert an HTTP request to a gRPC request","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":335077,"byte_end":335122,"line_start":163,"line_end":163,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":335990,"byte_end":335993,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"map","qualname":"<Request<T>>::map","value":"pub fn map<F, U>(Self, F) -> Request<U> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3131},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":336496,"byte_end":336507,"line_start":209,"line_end":209,"column_start":12,"column_end":23},"name":"remote_addr","qualname":"<Request<T>>::remote_addr","value":"pub fn remote_addr(&Self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the remote address of this connection.","sig":null,"attributes":[{"value":"/ Get the remote address of this connection.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":336247,"byte_end":336293,"line_start":204,"line_end":204,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":336298,"byte_end":336301,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This will return `None` if the `IO` type used","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":336306,"byte_end":336355,"line_start":206,"line_end":206,"column_start":5,"column_end":54}},{"value":"/ does not implement `Connected` or when using a unix domain socket.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":336360,"byte_end":336430,"line_start":207,"line_end":207,"column_start":5,"column_end":75}},{"value":"/ This currently only works on the server side.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":336435,"byte_end":336484,"line_start":208,"line_end":208,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":337716,"byte_end":337726,"line_start":246,"line_end":246,"column_start":12,"column_end":22},"name":"peer_certs","qualname":"<Request<T>>::peer_certs","value":"pub fn peer_certs(&Self) -> Option<Arc<Vec<Certificate>>>","parent":null,"children":[],"decl_id":null,"docs":" Get the peer certificates of the connected client.","sig":null,"attributes":[{"value":"/ Get the peer certificates of the connected client.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":337320,"byte_end":337374,"line_start":238,"line_end":238,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":337379,"byte_end":337382,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ This is used to fetch the certificates from the TLS session","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":337387,"byte_end":337450,"line_start":240,"line_end":240,"column_start":5,"column_end":68}},{"value":"/ and is mostly used for mTLS. This currently only returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":337455,"byte_end":337515,"line_start":241,"line_end":241,"column_start":5,"column_end":65}},{"value":"/ `Some` on the server side of the `transport` server with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":337520,"byte_end":337580,"line_start":242,"line_end":242,"column_start":5,"column_end":65}},{"value":"/ TLS enabled connections.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":337585,"byte_end":337613,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"cfg(feature = \"transport\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":337618,"byte_end":337647,"line_start":244,"line_end":244,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338847,"byte_end":338858,"line_start":287,"line_end":287,"column_start":12,"column_end":23},"name":"set_timeout","qualname":"<Request<T>>::set_timeout","value":"pub fn set_timeout(&mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Set the max duration the request is allowed to take.","sig":null,"attributes":[{"value":"/ Set the max duration the request is allowed to take.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338040,"byte_end":338096,"line_start":260,"line_end":260,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338101,"byte_end":338104,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Requires the server to support the `grpc-timeout` metadata, which Tonic does.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338109,"byte_end":338190,"line_start":262,"line_end":262,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338195,"byte_end":338198,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The duration will be formatted according to [the spec] and use the most precise unit","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338203,"byte_end":338291,"line_start":264,"line_end":264,"column_start":5,"column_end":93}},{"value":"/ possible.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338296,"byte_end":338309,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338314,"byte_end":338317,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338322,"byte_end":338334,"line_start":267,"line_end":267,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338339,"byte_end":338342,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338347,"byte_end":338358,"line_start":269,"line_end":269,"column_start":5,"column_end":16}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338363,"byte_end":338391,"line_start":270,"line_end":270,"column_start":5,"column_end":33}},{"value":"/ use tonic::Request;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338396,"byte_end":338419,"line_start":271,"line_end":271,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338424,"byte_end":338427,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let mut request = Request::new(());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338432,"byte_end":338471,"line_start":273,"line_end":273,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338476,"byte_end":338479,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ request.set_timeout(Duration::from_secs(30));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338484,"byte_end":338533,"line_start":275,"line_end":275,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338538,"byte_end":338541,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let value = request.metadata().get(\"grpc-timeout\").unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338546,"byte_end":338610,"line_start":277,"line_end":277,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338615,"byte_end":338618,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338623,"byte_end":338638,"line_start":279,"line_end":279,"column_start":5,"column_end":20}},{"value":"/     value,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338643,"byte_end":338657,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/     // equivalent to 30 seconds","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338662,"byte_end":338697,"line_start":281,"line_end":281,"column_start":5,"column_end":40}},{"value":"/     \"30000000u\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338702,"byte_end":338721,"line_start":282,"line_end":282,"column_start":5,"column_end":24}},{"value":"/ );","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338726,"byte_end":338732,"line_start":283,"line_end":283,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338737,"byte_end":338744,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338749,"byte_end":338752,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ [the spec]: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":338757,"byte_end":338835,"line_start":286,"line_end":286,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3135},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339153,"byte_end":339163,"line_start":294,"line_end":294,"column_start":12,"column_end":22},"name":"extensions","qualname":"<Request<T>>::extensions","value":"pub fn extensions(&Self) -> &Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the associated extensions.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the associated extensions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339088,"byte_end":339141,"line_start":293,"line_end":293,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340539,"byte_end":340553,"line_start":343,"line_end":343,"column_start":12,"column_end":26},"name":"extensions_mut","qualname":"<Request<T>>::extensions_mut","value":"pub fn extensions_mut(&mut Self) -> &mut Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the associated extensions.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the associated extensions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339224,"byte_end":339285,"line_start":298,"line_end":298,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339290,"byte_end":339293,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339298,"byte_end":339311,"line_start":300,"line_end":300,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339316,"byte_end":339319,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Extensions can be set in interceptors:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339324,"byte_end":339366,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339371,"byte_end":339374,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339379,"byte_end":339392,"line_start":304,"line_end":304,"column_start":5,"column_end":18}},{"value":"/ use tonic::{Request, service::interceptor};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339397,"byte_end":339444,"line_start":305,"line_end":305,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339449,"byte_end":339452,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ struct MyExtension {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339457,"byte_end":339481,"line_start":307,"line_end":307,"column_start":5,"column_end":29}},{"value":"/     some_piece_of_data: String,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339486,"byte_end":339521,"line_start":308,"line_end":308,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339526,"byte_end":339531,"line_start":309,"line_end":309,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339536,"byte_end":339539,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ interceptor(|mut request: Request<()>| {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339544,"byte_end":339588,"line_start":311,"line_end":311,"column_start":5,"column_end":49}},{"value":"/     request.extensions_mut().insert(MyExtension {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339593,"byte_end":339646,"line_start":312,"line_end":312,"column_start":5,"column_end":58}},{"value":"/         some_piece_of_data: \"foo\".to_string(),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339651,"byte_end":339701,"line_start":313,"line_end":313,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339706,"byte_end":339717,"line_start":314,"line_end":314,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339722,"byte_end":339725,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/     Ok(request)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339730,"byte_end":339749,"line_start":316,"line_end":316,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339754,"byte_end":339761,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339766,"byte_end":339773,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339778,"byte_end":339781,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ And picked up by RPCs:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339786,"byte_end":339812,"line_start":320,"line_end":320,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339817,"byte_end":339820,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339825,"byte_end":339838,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ use tonic::{async_trait, Status, Request, Response};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339843,"byte_end":339899,"line_start":323,"line_end":323,"column_start":5,"column_end":61}},{"value":"/ #","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339904,"byte_end":339909,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/ # struct Output {}","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339914,"byte_end":339936,"line_start":325,"line_end":325,"column_start":5,"column_end":27}},{"value":"/ # struct Input;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339941,"byte_end":339960,"line_start":326,"line_end":326,"column_start":5,"column_end":24}},{"value":"/ # struct MyService;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339965,"byte_end":339988,"line_start":327,"line_end":327,"column_start":5,"column_end":28}},{"value":"/ # struct MyExtension;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":339993,"byte_end":340018,"line_start":328,"line_end":328,"column_start":5,"column_end":30}},{"value":"/ # #[async_trait]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340023,"byte_end":340043,"line_start":329,"line_end":329,"column_start":5,"column_end":25}},{"value":"/ # trait TestService {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340048,"byte_end":340073,"line_start":330,"line_end":330,"column_start":5,"column_end":30}},{"value":"/ #     async fn handler(&self, req: Request<Input>) -> Result<Response<Output>, Status>;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340078,"byte_end":340169,"line_start":331,"line_end":331,"column_start":5,"column_end":96}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340174,"byte_end":340181,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340186,"byte_end":340189,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ #[async_trait]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340194,"byte_end":340212,"line_start":334,"line_end":334,"column_start":5,"column_end":23}},{"value":"/ impl TestService for MyService {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340217,"byte_end":340253,"line_start":335,"line_end":335,"column_start":5,"column_end":41}},{"value":"/     async fn handler(&self, req: Request<Input>) -> Result<Response<Output>, Status> {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340258,"byte_end":340348,"line_start":336,"line_end":336,"column_start":5,"column_end":95}},{"value":"/         let value: &MyExtension = req.extensions().get::<MyExtension>().unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340353,"byte_end":340438,"line_start":337,"line_end":337,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340443,"byte_end":340446,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/         Ok(Response::new(Output {}))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340451,"byte_end":340491,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340496,"byte_end":340505,"line_start":340,"line_end":340,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340510,"byte_end":340515,"line_start":341,"line_end":341,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340520,"byte_end":340527,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3156},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":341318,"byte_end":341324,"line_start":387,"line_end":387,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::request::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4949},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344265,"byte_end":344273,"line_start":5,"line_end":5,"column_start":12,"column_end":20},"name":"Response","qualname":"::response::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":4951},{"krate":0,"index":4952},{"krate":0,"index":4953}],"decl_id":null,"docs":" A gRPC response and metadata from an RPC call.\n","sig":null,"attributes":[{"value":"/ A gRPC response and metadata from an RPC call.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344186,"byte_end":344236,"line_start":3,"line_end":3,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3187},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344697,"byte_end":344700,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<Response<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new gRPC response.","sig":null,"attributes":[{"value":"/ Create a new gRPC response.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344379,"byte_end":344410,"line_start":12,"line_end":12,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344415,"byte_end":344418,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344423,"byte_end":344434,"line_start":14,"line_end":14,"column_start":5,"column_end":16}},{"value":"/ # use tonic::Response;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344439,"byte_end":344465,"line_start":15,"line_end":15,"column_start":5,"column_end":31}},{"value":"/ # pub struct HelloReply {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344470,"byte_end":344499,"line_start":16,"line_end":16,"column_start":5,"column_end":34}},{"value":"/ #   pub message: String,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344504,"byte_end":344532,"line_start":17,"line_end":17,"column_start":5,"column_end":33}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344537,"byte_end":344544,"line_start":18,"line_end":18,"column_start":5,"column_end":12}},{"value":"/ # let name = \"\";","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344549,"byte_end":344569,"line_start":19,"line_end":19,"column_start":5,"column_end":25}},{"value":"/ Response::new(HelloReply {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344574,"byte_end":344604,"line_start":20,"line_end":20,"column_start":5,"column_end":35}},{"value":"/     message: format!(\"Hello, {}!\", name).into(),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344609,"byte_end":344661,"line_start":21,"line_end":21,"column_start":5,"column_end":57}},{"value":"/ });","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344666,"byte_end":344673,"line_start":22,"line_end":22,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344678,"byte_end":344685,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3188},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344918,"byte_end":344925,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Response<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a immutable reference to `T`.\n","sig":null,"attributes":[{"value":"/ Get a immutable reference to `T`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344869,"byte_end":344906,"line_start":32,"line_end":32,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3189},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":345028,"byte_end":345035,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Response<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the message\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the message","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344974,"byte_end":345016,"line_start":37,"line_end":37,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3190},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":345160,"byte_end":345168,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Response<T>>::metadata","value":"pub fn metadata(&Self) -> &MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the custom response metadata.\n","sig":null,"attributes":[{"value":"/ Get a reference to the custom response metadata.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":345096,"byte_end":345148,"line_start":42,"line_end":42,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3191},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":345293,"byte_end":345305,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"metadata_mut","qualname":"<Response<T>>::metadata_mut","value":"pub fn metadata_mut(&mut Self) -> &mut MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the response metadata.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the response metadata.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":345228,"byte_end":345281,"line_start":47,"line_end":47,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3192},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":345431,"byte_end":345441,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Response<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the message\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the message","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":345377,"byte_end":345419,"line_start":52,"line_end":52,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3197},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":346452,"byte_end":346455,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"map","qualname":"<Response<T>>::map","value":"pub fn map<F, U>(Self, F) -> Response<U> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3200},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":346775,"byte_end":346785,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"extensions","qualname":"<Response<T>>::extensions","value":"pub fn extensions(&Self) -> &Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the associated extensions.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the associated extensions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":346710,"byte_end":346763,"line_start":101,"line_end":101,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3201},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":346919,"byte_end":346933,"line_start":107,"line_end":107,"column_start":12,"column_end":26},"name":"extensions_mut","qualname":"<Response<T>>::extensions_mut","value":"pub fn extensions_mut(&mut Self) -> &mut Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the associated extensions.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the associated extensions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":346846,"byte_end":346907,"line_start":106,"line_end":106,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3256},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":349283,"byte_end":349289,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Status","qualname":"::status::Status","value":"Status {  }","parent":null,"children":[{"krate":0,"index":3257},{"krate":0,"index":3258},{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3261}],"decl_id":null,"docs":" A gRPC status describing the result of an RPC call.","sig":null,"attributes":[{"value":"/ A gRPC status describing the result of an RPC call.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":348813,"byte_end":348868,"line_start":24,"line_end":24,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":348869,"byte_end":348872,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Values can be created using the `new` function or one of the specialized","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":348873,"byte_end":348949,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ associated functions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":348950,"byte_end":348975,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":348976,"byte_end":348987,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ # use tonic::{Status, Code};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":348988,"byte_end":349020,"line_start":29,"line_end":29,"column_start":1,"column_end":33}},{"value":"/ let status1 = Status::new(Code::InvalidArgument, \"name is invalid\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":349021,"byte_end":349093,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ let status2 = Status::invalid_argument(\"name is invalid\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":349094,"byte_end":349156,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":349157,"byte_end":349160,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(status1.code(), Code::InvalidArgument);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":349161,"byte_end":349215,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(status1.code(), status2.code());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":349216,"byte_end":349263,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":349264,"byte_end":349271,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4958},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350232,"byte_end":350234,"line_start":59,"line_end":59,"column_start":5,"column_end":7},"name":"Ok","qualname":"::status::Code::Ok","value":"Code::Ok","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" The operation completed successfully.\n","sig":null,"attributes":[{"value":"/ The operation completed successfully.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350186,"byte_end":350227,"line_start":58,"line_end":58,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4961},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350282,"byte_end":350291,"line_start":62,"line_end":62,"column_start":5,"column_end":14},"name":"Cancelled","qualname":"::status::Code::Cancelled","value":"Code::Cancelled","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" The operation was cancelled.\n","sig":null,"attributes":[{"value":"/ The operation was cancelled.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350245,"byte_end":350277,"line_start":61,"line_end":61,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4964},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350325,"byte_end":350332,"line_start":65,"line_end":65,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::status::Code::Unknown","value":"Code::Unknown","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" Unknown error.\n","sig":null,"attributes":[{"value":"/ Unknown error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350302,"byte_end":350320,"line_start":64,"line_end":64,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4967},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350389,"byte_end":350404,"line_start":68,"line_end":68,"column_start":5,"column_end":20},"name":"InvalidArgument","qualname":"::status::Code::InvalidArgument","value":"Code::InvalidArgument","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" Client specified an invalid argument.\n","sig":null,"attributes":[{"value":"/ Client specified an invalid argument.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350343,"byte_end":350384,"line_start":67,"line_end":67,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4970},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350473,"byte_end":350489,"line_start":71,"line_end":71,"column_start":5,"column_end":21},"name":"DeadlineExceeded","qualname":"::status::Code::DeadlineExceeded","value":"Code::DeadlineExceeded","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" Deadline expired before operation could complete.\n","sig":null,"attributes":[{"value":"/ Deadline expired before operation could complete.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350415,"byte_end":350468,"line_start":70,"line_end":70,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4973},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350545,"byte_end":350553,"line_start":74,"line_end":74,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::status::Code::NotFound","value":"Code::NotFound","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" Some requested entity was not found.\n","sig":null,"attributes":[{"value":"/ Some requested entity was not found.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350500,"byte_end":350540,"line_start":73,"line_end":73,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4976},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350628,"byte_end":350641,"line_start":77,"line_end":77,"column_start":5,"column_end":18},"name":"AlreadyExists","qualname":"::status::Code::AlreadyExists","value":"Code::AlreadyExists","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" Some entity that we attempted to create already exists.\n","sig":null,"attributes":[{"value":"/ Some entity that we attempted to create already exists.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350564,"byte_end":350623,"line_start":76,"line_end":76,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4979},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350732,"byte_end":350748,"line_start":80,"line_end":80,"column_start":5,"column_end":21},"name":"PermissionDenied","qualname":"::status::Code::PermissionDenied","value":"Code::PermissionDenied","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" The caller does not have permission to execute the specified operation.\n","sig":null,"attributes":[{"value":"/ The caller does not have permission to execute the specified operation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350652,"byte_end":350727,"line_start":79,"line_end":79,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4982},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350801,"byte_end":350818,"line_start":83,"line_end":83,"column_start":5,"column_end":22},"name":"ResourceExhausted","qualname":"::status::Code::ResourceExhausted","value":"Code::ResourceExhausted","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" Some resource has been exhausted.\n","sig":null,"attributes":[{"value":"/ Some resource has been exhausted.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350759,"byte_end":350796,"line_start":82,"line_end":82,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4985},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350906,"byte_end":350924,"line_start":86,"line_end":86,"column_start":5,"column_end":23},"name":"FailedPrecondition","qualname":"::status::Code::FailedPrecondition","value":"Code::FailedPrecondition","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" The system is not in a state required for the operation's execution.\n","sig":null,"attributes":[{"value":"/ The system is not in a state required for the operation's execution.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350829,"byte_end":350901,"line_start":85,"line_end":85,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4988},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350970,"byte_end":350977,"line_start":89,"line_end":89,"column_start":5,"column_end":12},"name":"Aborted","qualname":"::status::Code::Aborted","value":"Code::Aborted","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" The operation was aborted.\n","sig":null,"attributes":[{"value":"/ The operation was aborted.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350935,"byte_end":350965,"line_start":88,"line_end":88,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4991},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351043,"byte_end":351053,"line_start":92,"line_end":92,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::status::Code::OutOfRange","value":"Code::OutOfRange","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" Operation was attempted past the valid range.\n","sig":null,"attributes":[{"value":"/ Operation was attempted past the valid range.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350989,"byte_end":351038,"line_start":91,"line_end":91,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4994},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351120,"byte_end":351133,"line_start":95,"line_end":95,"column_start":5,"column_end":18},"name":"Unimplemented","qualname":"::status::Code::Unimplemented","value":"Code::Unimplemented","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" Operation is not implemented or not supported.\n","sig":null,"attributes":[{"value":"/ Operation is not implemented or not supported.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351065,"byte_end":351115,"line_start":94,"line_end":94,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4997},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351169,"byte_end":351177,"line_start":98,"line_end":98,"column_start":5,"column_end":13},"name":"Internal","qualname":"::status::Code::Internal","value":"Code::Internal","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" Internal error.\n","sig":null,"attributes":[{"value":"/ Internal error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351145,"byte_end":351164,"line_start":97,"line_end":97,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5000},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351235,"byte_end":351246,"line_start":101,"line_end":101,"column_start":5,"column_end":16},"name":"Unavailable","qualname":"::status::Code::Unavailable","value":"Code::Unavailable","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" The service is currently unavailable.\n","sig":null,"attributes":[{"value":"/ The service is currently unavailable.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351189,"byte_end":351230,"line_start":100,"line_end":100,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5003},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351305,"byte_end":351313,"line_start":104,"line_end":104,"column_start":5,"column_end":13},"name":"DataLoss","qualname":"::status::Code::DataLoss","value":"Code::DataLoss","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" Unrecoverable data loss or corruption.\n","sig":null,"attributes":[{"value":"/ Unrecoverable data loss or corruption.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351258,"byte_end":351300,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5006},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351392,"byte_end":351407,"line_start":107,"line_end":107,"column_start":5,"column_end":20},"name":"Unauthenticated","qualname":"::status::Code::Unauthenticated","value":"Code::Unauthenticated","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":" The request does not have valid authentication credentials\n","sig":null,"attributes":[{"value":"/ The request does not have valid authentication credentials","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351325,"byte_end":351387,"line_start":106,"line_end":106,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":4957},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":350175,"byte_end":350179,"line_start":57,"line_end":57,"column_start":10,"column_end":14},"name":"Code","qualname":"::status::Code","value":"pub enum Code {\n    Ok = ,\n    Cancelled = ,\n    Unknown = ,\n    InvalidArgument = ,\n    DeadlineExceeded = ,\n    NotFound = ,\n    AlreadyExists = ,\n    PermissionDenied = ,\n    ResourceExhausted = ,\n    FailedPrecondition = ,\n    Aborted = ,\n    OutOfRange = ,\n    Unimplemented = ,\n    Internal = ,\n    Unavailable = ,\n    DataLoss = ,\n    Unauthenticated = ,\n}","parent":null,"children":[{"krate":0,"index":4958},{"krate":0,"index":4961},{"krate":0,"index":4964},{"krate":0,"index":4967},{"krate":0,"index":4970},{"krate":0,"index":4973},{"krate":0,"index":4976},{"krate":0,"index":4979},{"krate":0,"index":4982},{"krate":0,"index":4985},{"krate":0,"index":4988},{"krate":0,"index":4991},{"krate":0,"index":4994},{"krate":0,"index":4997},{"krate":0,"index":5000},{"krate":0,"index":5003},{"krate":0,"index":5006}],"decl_id":null,"docs":" gRPC status codes used by [`Status`].","sig":null,"attributes":[{"value":"/ gRPC status codes used by [`Status`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":349895,"byte_end":349936,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":349937,"byte_end":349940,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ These variants match the [gRPC status codes].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":349941,"byte_end":349990,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":349991,"byte_end":349994,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [gRPC status codes]: https://github.com/grpc/grpc/blob/master/doc/statuscodes.md#status-codes-and-their-use-in-grpc","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":349995,"byte_end":350114,"line_start":55,"line_end":55,"column_start":1,"column_end":120}}]},{"kind":"Method","id":{"krate":0,"index":3263},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351911,"byte_end":351922,"line_start":123,"line_end":123,"column_start":12,"column_end":23},"name":"description","qualname":"<Code>::description","value":"pub fn description(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Get description of this `Code`.\n ```\n fn make_grpc_request() -> tonic::Code {\n     // ...\n     tonic::Code::Ok\n }\n let code = make_grpc_request();\n println!(\"Operation completed. Human readable description: {}\", code.description());\n ```\n If you only need description in `println`, `format`, `log` and other\n formatting contexts, you may want to use `Display` impl for `Code`\n instead.\n","sig":null,"attributes":[{"value":"/ Get description of this `Code`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351433,"byte_end":351468,"line_start":111,"line_end":111,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351473,"byte_end":351480,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ fn make_grpc_request() -> tonic::Code {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351485,"byte_end":351528,"line_start":113,"line_end":113,"column_start":5,"column_end":48}},{"value":"/     // ...","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351533,"byte_end":351547,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/     tonic::Code::Ok","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351552,"byte_end":351575,"line_start":115,"line_end":115,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351580,"byte_end":351585,"line_start":116,"line_end":116,"column_start":5,"column_end":10}},{"value":"/ let code = make_grpc_request();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351590,"byte_end":351625,"line_start":117,"line_end":117,"column_start":5,"column_end":40}},{"value":"/ println!(\"Operation completed. Human readable description: {}\", code.description());","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351630,"byte_end":351718,"line_start":118,"line_end":118,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351723,"byte_end":351730,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ If you only need description in `println`, `format`, `log` and other","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351735,"byte_end":351807,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ formatting contexts, you may want to use `Display` impl for `Code`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351812,"byte_end":351882,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/ instead.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351887,"byte_end":351899,"line_start":122,"line_end":122,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":353653,"byte_end":353656,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"new","qualname":"<Status>::new","value":"pub fn new<impl Into<String>: Into<String>>(Code, impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code and message.\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code and message.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":353578,"byte_end":353641,"line_start":159,"line_end":159,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":353958,"byte_end":353960,"line_start":171,"line_end":171,"column_start":12,"column_end":14},"name":"ok","qualname":"<Status>::ok","value":"pub fn ok<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" The operation completed successfully.\n","sig":null,"attributes":[{"value":"/ The operation completed successfully.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":353905,"byte_end":353946,"line_start":170,"line_end":170,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3271},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":354121,"byte_end":354130,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<Status>::cancelled","value":"pub fn cancelled<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" The operation was cancelled (typically by the caller).\n","sig":null,"attributes":[{"value":"/ The operation was cancelled (typically by the caller).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":354051,"byte_end":354109,"line_start":175,"line_end":175,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3273},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":354558,"byte_end":354565,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"unknown","qualname":"<Status>::unknown","value":"pub fn unknown<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Unknown error. An example of where this error may be returned is if a\n `Status` value received from another address space belongs to an error-space\n that is not known in this address space. Also errors raised by APIs that\n do not return enough error information may be converted to this error.\n","sig":null,"attributes":[{"value":"/ Unknown error. An example of where this error may be returned is if a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":354228,"byte_end":354301,"line_start":180,"line_end":180,"column_start":5,"column_end":78}},{"value":"/ `Status` value received from another address space belongs to an error-space","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":354306,"byte_end":354386,"line_start":181,"line_end":181,"column_start":5,"column_end":85}},{"value":"/ that is not known in this address space. Also errors raised by APIs that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":354391,"byte_end":354467,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ do not return enough error information may be converted to this error.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":354472,"byte_end":354546,"line_start":183,"line_end":183,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3275},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":354916,"byte_end":354932,"line_start":192,"line_end":192,"column_start":12,"column_end":28},"name":"invalid_argument","qualname":"<Status>::invalid_argument","value":"pub fn invalid_argument<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Client specified an invalid argument. Note that this differs from\n `FailedPrecondition`. `InvalidArgument` indicates arguments that are\n problematic regardless of the state of the system (e.g., a malformed file\n name).\n","sig":null,"attributes":[{"value":"/ Client specified an invalid argument. Note that this differs from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":354661,"byte_end":354730,"line_start":188,"line_end":188,"column_start":5,"column_end":74}},{"value":"/ `FailedPrecondition`. `InvalidArgument` indicates arguments that are","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":354735,"byte_end":354807,"line_start":189,"line_end":189,"column_start":5,"column_end":77}},{"value":"/ problematic regardless of the state of the system (e.g., a malformed file","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":354812,"byte_end":354889,"line_start":190,"line_end":190,"column_start":5,"column_end":82}},{"value":"/ name).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":354894,"byte_end":354904,"line_start":191,"line_end":191,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":355375,"byte_end":355392,"line_start":201,"line_end":201,"column_start":12,"column_end":29},"name":"deadline_exceeded","qualname":"<Status>::deadline_exceeded","value":"pub fn deadline_exceeded<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Deadline expired before operation could complete. For operations that\n change the state of the system, this error may be returned even if the\n operation has completed successfully. For example, a successful response\n from a server could have been delayed long enough for the deadline to\n expire.\n","sig":null,"attributes":[{"value":"/ Deadline expired before operation could complete. For operations that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":355036,"byte_end":355109,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/ change the state of the system, this error may be returned even if the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":355114,"byte_end":355188,"line_start":197,"line_end":197,"column_start":5,"column_end":79}},{"value":"/ operation has completed successfully. For example, a successful response","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":355193,"byte_end":355269,"line_start":198,"line_end":198,"column_start":5,"column_end":81}},{"value":"/ from a server could have been delayed long enough for the deadline to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":355274,"byte_end":355347,"line_start":199,"line_end":199,"column_start":5,"column_end":78}},{"value":"/ expire.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":355352,"byte_end":355363,"line_start":200,"line_end":200,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3279},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":355575,"byte_end":355584,"line_start":206,"line_end":206,"column_start":12,"column_end":21},"name":"not_found","qualname":"<Status>::not_found","value":"pub fn not_found<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Some requested entity (e.g., file or directory) was not found.\n","sig":null,"attributes":[{"value":"/ Some requested entity (e.g., file or directory) was not found.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":355497,"byte_end":355563,"line_start":205,"line_end":205,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":355786,"byte_end":355800,"line_start":212,"line_end":212,"column_start":12,"column_end":26},"name":"already_exists","qualname":"<Status>::already_exists","value":"pub fn already_exists<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Some entity that we attempted to create (e.g., file or directory) already\n exists.\n","sig":null,"attributes":[{"value":"/ Some entity that we attempted to create (e.g., file or directory) already","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":355681,"byte_end":355758,"line_start":210,"line_end":210,"column_start":5,"column_end":82}},{"value":"/ exists.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":355763,"byte_end":355774,"line_start":211,"line_end":211,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3283},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":356280,"byte_end":356297,"line_start":221,"line_end":221,"column_start":12,"column_end":29},"name":"permission_denied","qualname":"<Status>::permission_denied","value":"pub fn permission_denied<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" The caller does not have permission to execute the specified operation.\n `PermissionDenied` must not be used for rejections caused by exhausting\n some resource (use `ResourceExhausted` instead for those errors).\n `PermissionDenied` must not be used if the caller cannot be identified\n (use `Unauthenticated` instead for those errors).\n","sig":null,"attributes":[{"value":"/ The caller does not have permission to execute the specified operation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":355902,"byte_end":355977,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ `PermissionDenied` must not be used for rejections caused by exhausting","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":355982,"byte_end":356057,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ some resource (use `ResourceExhausted` instead for those errors).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":356062,"byte_end":356131,"line_start":218,"line_end":218,"column_start":5,"column_end":74}},{"value":"/ `PermissionDenied` must not be used if the caller cannot be identified","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":356136,"byte_end":356210,"line_start":219,"line_end":219,"column_start":5,"column_end":79}},{"value":"/ (use `Unauthenticated` instead for those errors).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":356215,"byte_end":356268,"line_start":220,"line_end":220,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3285},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":356536,"byte_end":356554,"line_start":227,"line_end":227,"column_start":12,"column_end":30},"name":"resource_exhausted","qualname":"<Status>::resource_exhausted","value":"pub fn resource_exhausted<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Some resource has been exhausted, perhaps a per-user quota, or perhaps\n the entire file system is out of space.\n","sig":null,"attributes":[{"value":"/ Some resource has been exhausted, perhaps a per-user quota, or perhaps","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":356402,"byte_end":356476,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"/ the entire file system is out of space.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":356481,"byte_end":356524,"line_start":226,"line_end":226,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3287},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":357632,"byte_end":357651,"line_start":245,"line_end":245,"column_start":12,"column_end":31},"name":"failed_precondition","qualname":"<Status>::failed_precondition","value":"pub fn failed_precondition<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Operation was rejected because the system is not in a state required for\n the operation's execution. For example, directory to be deleted may be\n non-empty, an rmdir operation is applied to a non-directory, etc.","sig":null,"attributes":[{"value":"/ Operation was rejected because the system is not in a state required for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":356660,"byte_end":356736,"line_start":231,"line_end":231,"column_start":5,"column_end":81}},{"value":"/ the operation's execution. For example, directory to be deleted may be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":356741,"byte_end":356815,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ non-empty, an rmdir operation is applied to a non-directory, etc.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":356820,"byte_end":356889,"line_start":233,"line_end":233,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":356894,"byte_end":356897,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ A litmus test that may help a service implementor in deciding between","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":356902,"byte_end":356975,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ `FailedPrecondition`, `Aborted`, and `Unavailable`:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":356980,"byte_end":357035,"line_start":236,"line_end":236,"column_start":5,"column_end":60}},{"value":"/ (a) Use `Unavailable` if the client can retry just the failing call.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":357040,"byte_end":357112,"line_start":237,"line_end":237,"column_start":5,"column_end":77}},{"value":"/ (b) Use `Aborted` if the client should retry at a higher-level (e.g.,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":357117,"byte_end":357190,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/     restarting a read-modify-write sequence).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":357195,"byte_end":357244,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/ (c) Use `FailedPrecondition` if the client should not retry until the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":357249,"byte_end":357322,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/     system state has been explicitly fixed.  E.g., if an \"rmdir\" fails","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":357327,"byte_end":357401,"line_start":241,"line_end":241,"column_start":5,"column_end":79}},{"value":"/     because the directory is non-empty, `FailedPrecondition` should be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":357406,"byte_end":357480,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/     returned since the client should not retry unless they have first","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":357485,"byte_end":357558,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/     fixed up the directory by deleting files from it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":357563,"byte_end":357620,"line_start":244,"line_end":244,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3289},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":358020,"byte_end":358027,"line_start":254,"line_end":254,"column_start":12,"column_end":19},"name":"aborted","qualname":"<Status>::aborted","value":"pub fn aborted<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" The operation was aborted, typically due to a concurrency issue like\n sequencer check failures, transaction aborts, etc.","sig":null,"attributes":[{"value":"/ The operation was aborted, typically due to a concurrency issue like","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":357758,"byte_end":357830,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ sequencer check failures, transaction aborts, etc.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":357835,"byte_end":357889,"line_start":250,"line_end":250,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":357894,"byte_end":357897,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ See litmus test above for deciding between `FailedPrecondition`,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":357902,"byte_end":357970,"line_start":252,"line_end":252,"column_start":5,"column_end":73}},{"value":"/ `Aborted`, and `Unavailable`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":357975,"byte_end":358008,"line_start":253,"line_end":253,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":358927,"byte_end":358939,"line_start":271,"line_end":271,"column_start":12,"column_end":24},"name":"out_of_range","qualname":"<Status>::out_of_range","value":"pub fn out_of_range<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Operation was attempted past the valid range. E.g., seeking or reading\n past end of file.","sig":null,"attributes":[{"value":"/ Operation was attempted past the valid range. E.g., seeking or reading","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":358123,"byte_end":358197,"line_start":258,"line_end":258,"column_start":5,"column_end":79}},{"value":"/ past end of file.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":358202,"byte_end":358223,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":358228,"byte_end":358231,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Unlike `InvalidArgument`, this error indicates a problem that may be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":358236,"byte_end":358308,"line_start":261,"line_end":261,"column_start":5,"column_end":77}},{"value":"/ fixed if the system state changes. For example, a 32-bit file system will","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":358313,"byte_end":358390,"line_start":262,"line_end":262,"column_start":5,"column_end":82}},{"value":"/ generate `InvalidArgument if asked to read at an offset that is not in the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":358395,"byte_end":358473,"line_start":263,"line_end":263,"column_start":5,"column_end":83}},{"value":"/ range [0,2^32-1], but it will generate `OutOfRange` if asked to read from","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":358478,"byte_end":358555,"line_start":264,"line_end":264,"column_start":5,"column_end":82}},{"value":"/ an offset past the current file size.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":358560,"byte_end":358601,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":358606,"byte_end":358609,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ There is a fair bit of overlap between `FailedPrecondition` and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":358614,"byte_end":358681,"line_start":267,"line_end":267,"column_start":5,"column_end":72}},{"value":"/ `OutOfRange`. We recommend using `OutOfRange` (the more specific error)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":358686,"byte_end":358761,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ when it applies so that callers who are iterating through a space can","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":358766,"byte_end":358839,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ easily look for an `OutOfRange` error to detect when they are done.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":358844,"byte_end":358915,"line_start":270,"line_end":270,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":359124,"byte_end":359137,"line_start":276,"line_end":276,"column_start":12,"column_end":25},"name":"unimplemented","qualname":"<Status>::unimplemented","value":"pub fn unimplemented<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" Operation is not implemented or not supported/enabled in this service.\n","sig":null,"attributes":[{"value":"/ Operation is not implemented or not supported/enabled in this service.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":359038,"byte_end":359112,"line_start":275,"line_end":275,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":359406,"byte_end":359414,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"internal","qualname":"<Status>::internal","value":"pub fn internal<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Internal errors. Means some invariants expected by underlying system has\n been broken. If you see one of these errors, something is very broken.\n","sig":null,"attributes":[{"value":"/ Internal errors. Means some invariants expected by underlying system has","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":359239,"byte_end":359315,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"/ been broken. If you see one of these errors, something is very broken.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":359320,"byte_end":359394,"line_start":281,"line_end":281,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3297},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":359786,"byte_end":359797,"line_start":291,"line_end":291,"column_start":12,"column_end":23},"name":"unavailable","qualname":"<Status>::unavailable","value":"pub fn unavailable<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" The service is currently unavailable.  This is a most likely a transient\n condition and may be corrected by retrying with a back-off.","sig":null,"attributes":[{"value":"/ The service is currently unavailable.  This is a most likely a transient","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":359511,"byte_end":359587,"line_start":286,"line_end":286,"column_start":5,"column_end":81}},{"value":"/ condition and may be corrected by retrying with a back-off.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":359592,"byte_end":359655,"line_start":287,"line_end":287,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":359660,"byte_end":359663,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ See litmus test above for deciding between `FailedPrecondition`,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":359668,"byte_end":359736,"line_start":289,"line_end":289,"column_start":5,"column_end":73}},{"value":"/ `Aborted`, and `Unavailable`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":359741,"byte_end":359774,"line_start":290,"line_end":290,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3299},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":359951,"byte_end":359960,"line_start":296,"line_end":296,"column_start":12,"column_end":21},"name":"data_loss","qualname":"<Status>::data_loss","value":"pub fn data_loss<impl Into<String>: Into<String>>(impl Into<String>) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Unrecoverable data loss or corruption.\n","sig":null,"attributes":[{"value":"/ Unrecoverable data loss or corruption.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":359897,"byte_end":359939,"line_start":295,"line_end":295,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3301},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":360158,"byte_end":360173,"line_start":302,"line_end":302,"column_start":12,"column_end":27},"name":"unauthenticated","qualname":"<Status>::unauthenticated","value":"pub fn unauthenticated<impl Into<String>: Into<String>>(impl Into<String>)\n-> Status","parent":null,"children":[],"decl_id":null,"docs":" The request does not have valid authentication credentials for the\n operation.\n","sig":null,"attributes":[{"value":"/ The request does not have valid authentication credentials for the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":360057,"byte_end":360127,"line_start":300,"line_end":300,"column_start":5,"column_end":75}},{"value":"/ operation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":360132,"byte_end":360146,"line_start":301,"line_end":301,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3311},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":364551,"byte_end":364566,"line_start":411,"line_end":411,"column_start":12,"column_end":27},"name":"from_header_map","qualname":"<Status>::from_header_map","value":"pub fn from_header_map(&HeaderMap) -> Option<Status>","parent":null,"children":[],"decl_id":null,"docs":" Extract a `Status` from a hyper `HeaderMap`.\n","sig":null,"attributes":[{"value":"/ Extract a `Status` from a hyper `HeaderMap`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":364491,"byte_end":364539,"line_start":410,"line_end":410,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":366501,"byte_end":366505,"line_start":460,"line_end":460,"column_start":12,"column_end":16},"name":"code","qualname":"<Status>::code","value":"pub fn code(&Self) -> Code","parent":null,"children":[],"decl_id":null,"docs":" Get the gRPC `Code` of this `Status`.\n","sig":null,"attributes":[{"value":"/ Get the gRPC `Code` of this `Status`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":366448,"byte_end":366489,"line_start":459,"line_end":459,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":366612,"byte_end":366619,"line_start":465,"line_end":465,"column_start":12,"column_end":19},"name":"message","qualname":"<Status>::message","value":"pub fn message(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the text error message of this `Status`.\n","sig":null,"attributes":[{"value":"/ Get the text error message of this `Status`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":366552,"byte_end":366600,"line_start":464,"line_end":464,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":366732,"byte_end":366739,"line_start":470,"line_end":470,"column_start":12,"column_end":19},"name":"details","qualname":"<Status>::details","value":"pub fn details(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the opaque error details of this `Status`.\n","sig":null,"attributes":[{"value":"/ Get the opaque error details of this `Status`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":366670,"byte_end":366720,"line_start":469,"line_end":469,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":366846,"byte_end":366854,"line_start":475,"line_end":475,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Status>::metadata","value":"pub fn metadata(&Self) -> &MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the custom metadata.\n","sig":null,"attributes":[{"value":"/ Get a reference to the custom metadata.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":366791,"byte_end":366834,"line_start":474,"line_end":474,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3321},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":366977,"byte_end":366989,"line_start":480,"line_end":480,"column_start":12,"column_end":24},"name":"metadata_mut","qualname":"<Status>::metadata_mut","value":"pub fn metadata_mut(&mut Self) -> &mut MetadataMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the custom metadata.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the custom metadata.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":366914,"byte_end":366965,"line_start":479,"line_end":479,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3324},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":368367,"byte_end":368379,"line_start":519,"line_end":519,"column_start":12,"column_end":24},"name":"with_details","qualname":"<Status>::with_details","value":"pub fn with_details<impl Into<String>: Into<String>>(Code, impl Into<String>,\nBytes) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code, message, and binary details field.\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code, message, and binary details field.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":368269,"byte_end":368355,"line_start":518,"line_end":518,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":3326},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":368635,"byte_end":368648,"line_start":524,"line_end":524,"column_start":12,"column_end":25},"name":"with_metadata","qualname":"<Status>::with_metadata","value":"pub fn with_metadata<impl Into<String>: Into<String>>(Code, impl Into<String>,\nMetadataMap) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code, message, and custom metadata\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code, message, and custom metadata","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":368543,"byte_end":368623,"line_start":523,"line_end":523,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3328},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":368927,"byte_end":368952,"line_start":529,"line_end":529,"column_start":12,"column_end":37},"name":"with_details_and_metadata","qualname":"<Status>::with_details_and_metadata","value":"pub fn with_details_and_metadata<impl Into<String>: Into<String>>(Code,\nimpl Into<String>, Bytes, MetadataMap) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Status` with the associated code, message, binary details field and custom metadata\n","sig":null,"attributes":[{"value":"/ Create a new `Status` with the associated code, message, binary details field and custom metadata","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":368814,"byte_end":368915,"line_start":528,"line_end":528,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":3330},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":369355,"byte_end":369362,"line_start":546,"line_end":546,"column_start":12,"column_end":19},"name":"to_http","qualname":"<Status>::to_http","value":"pub fn to_http(Self) -> http::Response<BoxBody>","parent":null,"children":[],"decl_id":null,"docs":" Build an `http::Response` from the given `Status`.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":369245,"byte_end":369284,"line_start":544,"line_end":544,"column_start":5,"column_end":44}},{"value":"/ Build an `http::Response` from the given `Status`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":369289,"byte_end":369343,"line_start":545,"line_end":545,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":375522,"byte_end":375530,"line_start":739,"line_end":739,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<Code>::from_i32","value":"pub fn from_i32(i32) -> Code","parent":null,"children":[],"decl_id":null,"docs":" Get the `Code` that represents the integer, if known.","sig":null,"attributes":[{"value":"/ Get the `Code` that represents the integer, if known.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":375386,"byte_end":375443,"line_start":736,"line_end":736,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":375448,"byte_end":375451,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ If not known, returns `Code::Unknown` (surprise!).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":375456,"byte_end":375510,"line_start":738,"line_end":738,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3353},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":375818,"byte_end":375828,"line_start":746,"line_end":746,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Code>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Code","parent":null,"children":[],"decl_id":null,"docs":" Convert the string representation of a `Code` (as stored, for example, in the `grpc-status`\n header in a response) into a `Code`. Returns `Code::Unknown` if the code string is not a\n valid gRPC status code.\n","sig":null,"attributes":[{"value":"/ Convert the string representation of a `Code` (as stored, for example, in the `grpc-status`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":375582,"byte_end":375677,"line_start":743,"line_end":743,"column_start":5,"column_end":100}},{"value":"/ header in a response) into a `Code`. Returns `Code::Unknown` if the code string is not a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":375682,"byte_end":375774,"line_start":744,"line_end":744,"column_start":5,"column_end":97}},{"value":"/ valid gRPC status code.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":375779,"byte_end":375806,"line_start":745,"line_end":745,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":3394},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codegen","qualname":"::codegen","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","parent":null,"children":[{"krate":0,"index":3395},{"krate":0,"index":3398},{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3405},{"krate":0,"index":3408},{"krate":0,"index":3411},{"krate":0,"index":3414},{"krate":0,"index":3417},{"krate":0,"index":3420},{"krate":0,"index":3421},{"krate":0,"index":3424},{"krate":0,"index":3427},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3434},{"krate":0,"index":3437},{"krate":0,"index":3440},{"krate":0,"index":3443},{"krate":0,"index":3445},{"krate":0,"index":3447}],"decl_id":null,"docs":" Codegen exports used by `tonic-build`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"codegen\")","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4790,"byte_end":4817,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/ Codegen exports used by `tonic-build`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":383710,"byte_end":383752,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":3430},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":384016,"byte_end":384024,"line_start":12,"line_end":12,"column_start":10,"column_end":18},"name":"StdError","qualname":"::codegen::StdError","value":"Box<dyn std::error::Error + Send + Sync + 'static>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3440},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":384299,"byte_end":384308,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"name":"BoxFuture","qualname":"::codegen::BoxFuture","value":"self::Pin<Box<dyn self::Future<Output = Result<T, E>> + Send + 'static>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3443},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":384400,"byte_end":384409,"line_start":20,"line_end":20,"column_start":10,"column_end":19},"name":"BoxStream","qualname":"::codegen::BoxStream","value":"self::Pin<Box<dyn futures_core::Stream<Item = Result<T, crate::Status>> +\nSend + 'static>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3445},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":384520,"byte_end":384524,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"http","qualname":"::codegen::http","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","parent":null,"children":[{"krate":0,"index":3446}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3447},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codegen.rs","byte_start":384558,"byte_end":384568,"line_start":27,"line_end":27,"column_start":8,"column_end":18},"name":"empty_body","qualname":"::codegen::empty_body","value":"pub fn empty_body() -> crate::body::BoxBody","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":8076,"byte_end":8080,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":98},{"krate":0,"index":105},{"krate":0,"index":114},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":17309,"byte_end":17313,"line_start":333,"line_end":333,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":17695,"byte_end":17699,"line_start":345,"line_end":345,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":19290,"byte_end":19291,"line_start":32,"line_end":32,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":22562,"byte_end":22571,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":22698,"byte_end":22707,"line_start":23,"line_end":23,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":23144,"byte_end":23153,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":23255,"byte_end":23264,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":23669,"byte_end":23678,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":26055,"byte_end":26064,"line_start":36,"line_end":36,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":26283,"byte_end":26292,"line_start":52,"line_end":52,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":28629,"byte_end":28638,"line_start":137,"line_end":137,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":35877,"byte_end":35886,"line_start":310,"line_end":310,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":38554,"byte_end":38563,"line_start":380,"line_end":380,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/encode.rs","byte_start":43818,"byte_end":43828,"line_start":156,"line_end":156,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/encode.rs","byte_start":44286,"byte_end":44296,"line_start":179,"line_end":179,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/prost.rs","byte_start":46176,"byte_end":46186,"line_start":13,"line_end":13,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/prost.rs","byte_start":46286,"byte_end":46296,"line_start":19,"line_end":19,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/prost.rs","byte_start":46832,"byte_end":46844,"line_start":43,"line_end":43,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/prost.rs","byte_start":47271,"byte_end":47283,"line_start":59,"line_end":59,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":56175,"byte_end":56180,"line_start":79,"line_end":79,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":57155,"byte_end":57160,"line_start":113,"line_end":113,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":57286,"byte_end":57292,"line_start":119,"line_end":119,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":59309,"byte_end":59315,"line_start":181,"line_end":181,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":59445,"byte_end":59465,"line_start":189,"line_end":189,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":59576,"byte_end":59596,"line_start":195,"line_end":195,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":59740,"byte_end":59760,"line_start":201,"line_end":201,"column_start":16,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":59989,"byte_end":60014,"line_start":210,"line_end":210,"column_start":6,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":60145,"byte_end":60170,"line_start":216,"line_end":216,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":60282,"byte_end":60307,"line_start":222,"line_end":222,"column_start":16,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":61350,"byte_end":61361,"line_start":37,"line_end":37,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":64972,"byte_end":64983,"line_start":142,"line_end":142,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":65222,"byte_end":65233,"line_start":150,"line_end":150,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":65342,"byte_end":65353,"line_start":156,"line_end":156,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":65474,"byte_end":65485,"line_start":162,"line_end":162,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":65593,"byte_end":65604,"line_start":168,"line_end":168,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":65770,"byte_end":65781,"line_start":174,"line_end":174,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":65913,"byte_end":65931,"line_start":180,"line_end":180,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":66102,"byte_end":66113,"line_start":187,"line_end":187,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":66258,"byte_end":66263,"line_start":193,"line_end":193,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":66450,"byte_end":66461,"line_start":200,"line_end":200,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":66795,"byte_end":66806,"line_start":214,"line_end":214,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":67992,"byte_end":68003,"line_start":254,"line_end":254,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":68478,"byte_end":68496,"line_start":272,"line_end":272,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":68642,"byte_end":68660,"line_start":278,"line_end":278,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":68734,"byte_end":68752,"line_start":284,"line_end":284,"column_start":16,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75059,"byte_end":75070,"line_start":201,"line_end":201,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":763},{"krate":0,"index":765},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":110536,"byte_end":110540,"line_start":1221,"line_end":1221,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":111363,"byte_end":111370,"line_start":1248,"line_end":1248,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":112232,"byte_end":112242,"line_start":1275,"line_end":1275,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":112583,"byte_end":112587,"line_start":1291,"line_end":1291,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":113096,"byte_end":113100,"line_start":1309,"line_end":1309,"column_start":32,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":113158,"byte_end":113164,"line_start":1313,"line_end":1313,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":113747,"byte_end":113756,"line_start":1334,"line_end":1334,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":114379,"byte_end":114388,"line_start":1355,"line_end":1355,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":114944,"byte_end":114953,"line_start":1378,"line_end":1378,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":115322,"byte_end":115334,"line_start":1394,"line_end":1394,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":115624,"byte_end":115636,"line_start":1407,"line_end":1407,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":115895,"byte_end":115900,"line_start":1420,"line_end":1420,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118864,"byte_end":118875,"line_start":1525,"line_end":1525,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121263,"byte_end":121276,"line_start":1605,"line_end":1605,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130922,"byte_end":130935,"line_start":1906,"line_end":1906,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":131762,"byte_end":131768,"line_start":1941,"line_end":1941,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":132642,"byte_end":132648,"line_start":1968,"line_end":1968,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":132803,"byte_end":132809,"line_start":1974,"line_end":1974,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":134543,"byte_end":134554,"line_start":2030,"line_end":2030,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":135144,"byte_end":135155,"line_start":2050,"line_end":2050,"column_start":53,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":138098,"byte_end":138109,"line_start":2138,"line_end":2138,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":139368,"byte_end":139379,"line_start":2179,"line_end":2179,"column_start":51,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":142691,"byte_end":142697,"line_start":2286,"line_end":2286,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":144583,"byte_end":144589,"line_start":2345,"line_end":2345,"column_start":51,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":147445,"byte_end":147456,"line_start":2433,"line_end":2433,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":147693,"byte_end":147704,"line_start":2441,"line_end":2441,"column_start":63,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":148311,"byte_end":148317,"line_start":2463,"line_end":2463,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":148533,"byte_end":148539,"line_start":2471,"line_end":2471,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157714,"byte_end":157727,"line_start":46,"line_end":46,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":166170,"byte_end":166183,"line_start":302,"line_end":302,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":167301,"byte_end":167314,"line_start":340,"line_end":340,"column_start":70,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":168059,"byte_end":168072,"line_start":359,"line_end":359,"column_start":44,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1159},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":168905,"byte_end":168918,"line_start":381,"line_end":381,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":169424,"byte_end":169437,"line_start":396,"line_end":396,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":169921,"byte_end":169934,"line_start":411,"line_end":411,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":170413,"byte_end":170426,"line_start":426,"line_end":426,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":170674,"byte_end":170687,"line_start":437,"line_end":437,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173700,"byte_end":173713,"line_start":537,"line_end":537,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":174185,"byte_end":174198,"line_start":554,"line_end":554,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":174327,"byte_end":174340,"line_start":561,"line_end":561,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":174507,"byte_end":174520,"line_start":567,"line_end":567,"column_start":57,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":176570,"byte_end":176583,"line_start":653,"line_end":653,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":176987,"byte_end":176992,"line_start":667,"line_end":667,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":177182,"byte_end":177195,"line_start":674,"line_end":674,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":177323,"byte_end":177333,"line_start":683,"line_end":683,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":177434,"byte_end":177444,"line_start":689,"line_end":689,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":177593,"byte_end":177603,"line_start":695,"line_end":695,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":177622,"byte_end":177635,"line_start":697,"line_end":697,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":177746,"byte_end":177759,"line_start":703,"line_end":703,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":178018,"byte_end":178031,"line_start":714,"line_end":714,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":178420,"byte_end":178433,"line_start":725,"line_end":725,"column_start":32,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":178481,"byte_end":178494,"line_start":727,"line_end":727,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":178681,"byte_end":178694,"line_start":734,"line_end":734,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":178855,"byte_end":178868,"line_start":741,"line_end":741,"column_start":44,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":179032,"byte_end":179045,"line_start":748,"line_end":748,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":179199,"byte_end":179212,"line_start":755,"line_end":755,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":179402,"byte_end":179415,"line_start":762,"line_end":762,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":180369,"byte_end":180382,"line_start":797,"line_end":797,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":180529,"byte_end":180542,"line_start":804,"line_end":804,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":180747,"byte_end":180753,"line_start":811,"line_end":811,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":180915,"byte_end":180921,"line_start":818,"line_end":818,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":181559,"byte_end":181572,"line_start":839,"line_end":839,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":181773,"byte_end":181786,"line_start":849,"line_end":849,"column_start":62,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":189815,"byte_end":189819,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1458},{"krate":0,"index":1463},{"krate":0,"index":1470},{"krate":0,"index":1475},{"krate":0,"index":1480},{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":202108,"byte_end":202112,"line_start":438,"line_end":438,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":203631,"byte_end":203632,"line_start":21,"line_end":21,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":204527,"byte_end":204528,"line_start":51,"line_end":51,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205384,"byte_end":205385,"line_start":80,"line_end":80,"column_start":48,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":206295,"byte_end":206296,"line_start":110,"line_end":110,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":208727,"byte_end":208728,"line_start":51,"line_end":51,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":209648,"byte_end":209664,"line_start":93,"line_end":93,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":1639}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":210354,"byte_end":210372,"line_start":123,"line_end":123,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1645}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":210648,"byte_end":210666,"line_start":134,"line_end":134,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1649}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":211018,"byte_end":211036,"line_start":146,"line_end":146,"column_start":66,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":213070,"byte_end":213088,"line_start":193,"line_end":193,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1663}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":213337,"byte_end":213351,"line_start":208,"line_end":208,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1666},{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":213729,"byte_end":213743,"line_start":229,"line_end":229,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":230870,"byte_end":230878,"line_start":46,"line_end":46,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1750},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1761},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1770},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1778},{"krate":0,"index":1780}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":242367,"byte_end":242375,"line_start":394,"line_end":394,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1782}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":243108,"byte_end":243116,"line_start":419,"line_end":419,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1784},{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":243264,"byte_end":243272,"line_start":427,"line_end":427,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1787},{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":243440,"byte_end":243448,"line_start":435,"line_end":435,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1790},{"krate":0,"index":1791}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":243609,"byte_end":243617,"line_start":443,"line_end":443,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1793}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":243753,"byte_end":243761,"line_start":449,"line_end":449,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1795},{"krate":0,"index":1796}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":223958,"byte_end":223965,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1908},{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1916},{"krate":0,"index":1918},{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":228307,"byte_end":228314,"line_start":203,"line_end":203,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":228799,"byte_end":228813,"line_start":219,"line_end":219,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1932},{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":229141,"byte_end":229148,"line_start":229,"line_end":229,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":229286,"byte_end":229300,"line_start":235,"line_end":235,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1937}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":274240,"byte_end":274254,"line_start":74,"line_end":74,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":274432,"byte_end":274442,"line_start":81,"line_end":81,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1955},{"krate":0,"index":1956}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":274649,"byte_end":274658,"line_start":91,"line_end":91,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1958},{"krate":0,"index":1959}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":274873,"byte_end":274885,"line_start":101,"line_end":101,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1961},{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/incoming.rs","byte_start":280168,"byte_end":280179,"line_start":134,"line_end":134,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/incoming.rs","byte_start":280516,"byte_end":280527,"line_start":147,"line_end":147,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2026},{"krate":0,"index":2027}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/recover_error.rs","byte_start":281180,"byte_end":281192,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2068}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/recover_error.rs","byte_start":281307,"byte_end":281319,"line_start":28,"line_end":28,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/recover_error.rs","byte_start":281939,"byte_end":281953,"line_start":54,"line_end":54,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2082},{"krate":0,"index":2083}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/recover_error.rs","byte_start":282983,"byte_end":282997,"line_start":88,"line_end":88,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2086},{"krate":0,"index":2087}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/recover_error.rs","byte_start":283233,"byte_end":283247,"line_start":102,"line_end":102,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/unix.rs","byte_start":284844,"byte_end":284854,"line_start":22,"line_end":22,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2103},{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":246704,"byte_end":246710,"line_start":97,"line_end":97,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2234}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":247844,"byte_end":247850,"line_start":135,"line_end":135,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":247907,"byte_end":247913,"line_start":139,"line_end":139,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2242}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":248157,"byte_end":248163,"line_start":150,"line_end":150,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2249},{"krate":0,"index":2251},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2262},{"krate":0,"index":2264},{"krate":0,"index":2266},{"krate":0,"index":2268}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":260867,"byte_end":260873,"line_start":524,"line_end":524,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2280}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":260995,"byte_end":261001,"line_start":530,"line_end":530,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2283},{"krate":0,"index":2285},{"krate":0,"index":2287},{"krate":0,"index":2291},{"krate":0,"index":2296},{"krate":0,"index":2303},{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":267430,"byte_end":267436,"line_start":689,"line_end":689,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":267683,"byte_end":267686,"line_start":700,"line_end":700,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2323},{"krate":0,"index":2324},{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":268891,"byte_end":268900,"line_start":744,"line_end":744,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2332},{"krate":0,"index":2333}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":269557,"byte_end":269560,"line_start":763,"line_end":763,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2337}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":269918,"byte_end":269925,"line_start":777,"line_end":777,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/error.rs","byte_start":285653,"byte_end":285658,"line_start":27,"line_end":27,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2375},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/error.rs","byte_start":286536,"byte_end":286541,"line_start":60,"line_end":60,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2381}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/error.rs","byte_start":286847,"byte_end":286852,"line_start":74,"line_end":74,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2383}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/error.rs","byte_start":286985,"byte_end":286990,"line_start":80,"line_end":80,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2385}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/add_origin.rs","byte_start":288071,"byte_end":288080,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/add_origin.rs","byte_start":288228,"byte_end":288237,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418},{"krate":0,"index":2419}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/connection.rs","byte_start":290512,"byte_end":290522,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2507},{"krate":0,"index":2513},{"krate":0,"index":2517}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/connection.rs","byte_start":293061,"byte_end":293071,"line_start":96,"line_end":96,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/connection.rs","byte_start":293463,"byte_end":293473,"line_start":110,"line_end":110,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2526},{"krate":0,"index":2527}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/connection.rs","byte_start":293578,"byte_end":293588,"line_start":118,"line_end":118,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2529}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/connector.rs","byte_start":294451,"byte_end":294460,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/connector.rs","byte_start":295199,"byte_end":295208,"line_start":60,"line_end":60,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/connector.rs","byte_start":296713,"byte_end":296738,"line_start":108,"line_end":108,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2574}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/connector.rs","byte_start":296969,"byte_end":296994,"line_start":115,"line_end":115,"column_start":28,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/discover.rs","byte_start":297449,"byte_end":297469,"line_start":21,"line_end":21,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2618}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/discover.rs","byte_start":297619,"byte_end":297639,"line_start":27,"line_end":27,"column_start":39,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2621},{"krate":0,"index":2622}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/discover.rs","byte_start":298903,"byte_end":298923,"line_start":55,"line_end":55,"column_start":38,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/executor.rs","byte_start":299110,"byte_end":299119,"line_start":9,"line_end":9,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2641}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/executor.rs","byte_start":299393,"byte_end":299403,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2643},{"krate":0,"index":2645}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/executor.rs","byte_start":299716,"byte_end":299726,"line_start":39,"line_end":39,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2647}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":300264,"byte_end":300275,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2700}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":300485,"byte_end":300496,"line_start":30,"line_end":30,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2708}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":301931,"byte_end":301945,"line_start":78,"line_end":78,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2714},{"krate":0,"index":2715}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":305256,"byte_end":305270,"line_start":165,"line_end":165,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":305477,"byte_end":305491,"line_start":172,"line_end":172,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":309449,"byte_end":309450,"line_start":15,"line_end":15,"column_start":16,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":309555,"byte_end":309562,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":309684,"byte_end":309691,"line_start":25,"line_end":25,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2769}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":309796,"byte_end":309803,"line_start":31,"line_end":31,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2771},{"krate":0,"index":2772}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":310008,"byte_end":310015,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2774}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":310241,"byte_end":310248,"line_start":52,"line_end":52,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":311125,"byte_end":311133,"line_start":85,"line_end":85,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2791},{"krate":0,"index":2792}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":311965,"byte_end":311973,"line_start":118,"line_end":118,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2795}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":312402,"byte_end":312410,"line_start":135,"line_end":135,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/reconnect.rs","byte_start":313979,"byte_end":313988,"line_start":33,"line_end":33,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2846}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/reconnect.rs","byte_start":314386,"byte_end":314395,"line_start":50,"line_end":50,"column_start":50,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2852},{"krate":0,"index":2853},{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2856}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/reconnect.rs","byte_start":318195,"byte_end":318204,"line_start":158,"line_end":158,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2860}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/reconnect.rs","byte_start":318977,"byte_end":318991,"line_start":190,"line_end":190,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":2864}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/reconnect.rs","byte_start":319292,"byte_end":319306,"line_start":204,"line_end":204,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2869},{"krate":0,"index":2870}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","byte_start":320316,"byte_end":320322,"line_start":25,"line_end":25,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2926},{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","byte_start":321503,"byte_end":321509,"line_start":62,"line_end":62,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":2940}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","byte_start":321985,"byte_end":321997,"line_start":80,"line_end":80,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2942}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","byte_start":322135,"byte_end":322147,"line_start":86,"line_end":86,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2944},{"krate":0,"index":2945}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/user_agent.rs","byte_start":322758,"byte_end":322767,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2970}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/user_agent.rs","byte_start":323354,"byte_end":323363,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2980}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/tls.rs","byte_start":324715,"byte_end":324726,"line_start":16,"line_end":16,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3010},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3014}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/tls.rs","byte_start":325399,"byte_end":325410,"line_start":41,"line_end":41,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3016}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326192,"byte_end":326202,"line_start":14,"line_end":14,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3063},{"krate":0,"index":3065},{"krate":0,"index":3067},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":327583,"byte_end":327593,"line_start":67,"line_end":67,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333413,"byte_end":333420,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3131},{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":3136}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340651,"byte_end":340652,"line_start":348,"line_end":348,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3139}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340763,"byte_end":340770,"line_start":354,"line_end":354,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340873,"byte_end":340874,"line_start":360,"line_end":360,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3147}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":341089,"byte_end":341096,"line_start":372,"line_end":372,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3150},{"krate":0,"index":3151},{"krate":0,"index":3152}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":341285,"byte_end":341286,"line_start":384,"line_end":384,"column_start":28,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344361,"byte_end":344369,"line_start":11,"line_end":11,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3192},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3196},{"krate":0,"index":3197},{"krate":0,"index":3200},{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351422,"byte_end":351426,"line_start":110,"line_end":110,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3263}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":353389,"byte_end":353393,"line_start":150,"line_end":150,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3265}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":353565,"byte_end":353571,"line_start":158,"line_end":158,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3267},{"krate":0,"index":3269},{"krate":0,"index":3271},{"krate":0,"index":3273},{"krate":0,"index":3275},{"krate":0,"index":3277},{"krate":0,"index":3279},{"krate":0,"index":3281},{"krate":0,"index":3283},{"krate":0,"index":3285},{"krate":0,"index":3287},{"krate":0,"index":3289},{"krate":0,"index":3291},{"krate":0,"index":3293},{"krate":0,"index":3295},{"krate":0,"index":3297},{"krate":0,"index":3299},{"krate":0,"index":3301},{"krate":0,"index":3303},{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3307},{"krate":0,"index":3308},{"krate":0,"index":3309},{"krate":0,"index":3311},{"krate":0,"index":3317},{"krate":0,"index":3318},{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":3321},{"krate":0,"index":3322},{"krate":0,"index":3323},{"krate":0,"index":3324},{"krate":0,"index":3326},{"krate":0,"index":3328},{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":370893,"byte_end":370899,"line_start":595,"line_end":595,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3333}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":371814,"byte_end":371820,"line_start":629,"line_end":629,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":371971,"byte_end":371976,"line_start":636,"line_end":636,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3339}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":372085,"byte_end":372091,"line_start":642,"line_end":642,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3341}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":373175,"byte_end":373181,"line_start":669,"line_end":669,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3346}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":373496,"byte_end":373502,"line_start":682,"line_end":682,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":375375,"byte_end":375379,"line_start":735,"line_end":735,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3355}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":378226,"byte_end":378230,"line_start":803,"line_end":803,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3357}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4041,"byte_end":4045,"line_start":89,"line_end":89,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4055,"byte_end":4061,"line_start":90,"line_end":90,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4071,"byte_end":4076,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":176}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4086,"byte_end":4094,"line_start":92,"line_end":92,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":510}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4104,"byte_end":4110,"line_start":93,"line_end":93,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1384}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4120,"byte_end":4127,"line_start":94,"line_end":94,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1581}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/mod.rs","byte_start":206704,"byte_end":206715,"line_start":3,"line_end":3,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1582}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4221,"byte_end":4230,"line_start":98,"line_end":98,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1687}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220521,"byte_end":220528,"line_start":89,"line_end":89,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1688}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/mod.rs","byte_start":220538,"byte_end":220544,"line_start":90,"line_end":90,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1938}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/lib.rs","byte_start":4877,"byte_end":4884,"line_start":124,"line_end":124,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3394}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":8076,"byte_end":8080,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":86},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":17309,"byte_end":17313,"line_start":333,"line_end":333,"column_start":26,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/grpc.rs","byte_start":17695,"byte_end":17699,"line_start":345,"line_end":345,"column_start":36,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/client/service.rs","byte_start":19290,"byte_end":19291,"line_start":32,"line_end":32,"column_start":52,"column_end":53},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":162},"to":{"krate":0,"index":154}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":22562,"byte_end":22571,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":22698,"byte_end":22707,"line_start":23,"line_end":23,"column_start":14,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3449},"to":{"krate":21,"index":42}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":23144,"byte_end":23153,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":23255,"byte_end":23264,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/buffer.rs","byte_start":23669,"byte_end":23678,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3456},"to":{"krate":21,"index":140}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":26055,"byte_end":26064,"line_start":36,"line_end":36,"column_start":19,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":279},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":26283,"byte_end":26292,"line_start":52,"line_end":52,"column_start":9,"column_end":18},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":28629,"byte_end":28638,"line_start":137,"line_end":137,"column_start":9,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":35877,"byte_end":35886,"line_start":310,"line_end":310,"column_start":20,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":279},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/decode.rs","byte_start":38554,"byte_end":38563,"line_start":380,"line_end":380,"column_start":24,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":279},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/encode.rs","byte_start":43818,"byte_end":43828,"line_start":156,"line_end":156,"column_start":9,"column_end":19},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/encode.rs","byte_start":44286,"byte_end":44296,"line_start":179,"line_end":179,"column_start":18,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3665},"to":{"krate":20,"index":470}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/prost.rs","byte_start":46176,"byte_end":46186,"line_start":13,"line_end":13,"column_start":24,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3671},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/prost.rs","byte_start":46286,"byte_end":46296,"line_start":19,"line_end":19,"column_start":22,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3671},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/prost.rs","byte_start":46832,"byte_end":46844,"line_start":43,"line_end":43,"column_start":30,"column_end":42},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3683},"to":{"krate":0,"index":502}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/codec/prost.rs","byte_start":47271,"byte_end":47283,"line_start":59,"line_end":59,"column_start":40,"column_end":52},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3696},"to":{"krate":0,"index":506}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":54826,"byte_end":54831,"line_start":47,"line_end":47,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2679},"to":{"krate":0,"index":549}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":54834,"byte_end":54836,"line_start":47,"line_end":47,"column_start":34,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2714},"to":{"krate":0,"index":549}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":54839,"byte_end":54848,"line_start":47,"line_end":47,"column_start":39,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2709},"to":{"krate":0,"index":549}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":54851,"byte_end":54855,"line_start":47,"line_end":47,"column_start":51,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":9885},"to":{"krate":0,"index":549}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":54880,"byte_end":54886,"line_start":47,"line_end":47,"column_start":80,"column_end":86},"kind":"SuperTrait","from":{"krate":0,"index":540},"to":{"krate":0,"index":549}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":56175,"byte_end":56180,"line_start":79,"line_end":79,"column_start":39,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3716},"to":{"krate":0,"index":540}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":57155,"byte_end":57160,"line_start":113,"line_end":113,"column_start":24,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3716},"to":{"krate":0,"index":549}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":57286,"byte_end":57292,"line_start":119,"line_end":119,"column_start":39,"column_end":45},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3730},"to":{"krate":0,"index":540}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":59309,"byte_end":59315,"line_start":181,"line_end":181,"column_start":24,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3730},"to":{"krate":0,"index":549}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":59445,"byte_end":59465,"line_start":189,"line_end":189,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":59576,"byte_end":59596,"line_start":195,"line_end":195,"column_start":23,"column_end":43},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3709},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":59740,"byte_end":59760,"line_start":201,"line_end":201,"column_start":16,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3709},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":59989,"byte_end":60014,"line_start":210,"line_end":210,"column_start":6,"column_end":31},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":60145,"byte_end":60170,"line_start":216,"line_end":216,"column_start":23,"column_end":48},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3744},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/encoding.rs","byte_start":60282,"byte_end":60307,"line_start":222,"line_end":222,"column_start":16,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3744},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":61350,"byte_end":61361,"line_start":37,"line_end":37,"column_start":25,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":64972,"byte_end":64983,"line_start":142,"line_end":142,"column_start":37,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3752},"to":{"krate":2,"index":12317}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":65222,"byte_end":65233,"line_start":150,"line_end":150,"column_start":40,"column_end":51},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3752},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":65342,"byte_end":65353,"line_start":156,"line_end":156,"column_start":41,"column_end":52},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3752},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":65474,"byte_end":65485,"line_start":162,"line_end":162,"column_start":41,"column_end":52},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3752},"to":{"krate":2,"index":2654}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":65593,"byte_end":65604,"line_start":168,"line_end":168,"column_start":40,"column_end":51},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3752},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":65770,"byte_end":65781,"line_start":174,"line_end":174,"column_start":42,"column_end":53},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3752},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":65913,"byte_end":65931,"line_start":180,"line_end":180,"column_start":6,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":66102,"byte_end":66113,"line_start":187,"line_end":187,"column_start":59,"column_end":70},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3752},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":66258,"byte_end":66263,"line_start":193,"line_end":193,"column_start":51,"column_end":56},"kind":{"Impl":{"id":44}},"from":{"krate":21,"index":526},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":66450,"byte_end":66461,"line_start":200,"line_end":200,"column_start":64,"column_end":75},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3752},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":66795,"byte_end":66806,"line_start":214,"line_end":214,"column_start":44,"column_end":55},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3752},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":67992,"byte_end":68003,"line_start":254,"line_end":254,"column_start":52,"column_end":63},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3752},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":68478,"byte_end":68496,"line_start":272,"line_end":272,"column_start":23,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3774},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":68642,"byte_end":68660,"line_start":278,"line_end":278,"column_start":18,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3774},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/key.rs","byte_start":68734,"byte_end":68752,"line_start":284,"line_end":284,"column_start":16,"column_end":34},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3774},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":75059,"byte_end":75070,"line_start":201,"line_end":201,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":110536,"byte_end":110540,"line_start":1221,"line_end":1221,"column_start":23,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3786},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":111363,"byte_end":111370,"line_start":1248,"line_end":1248,"column_start":23,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3818},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":112232,"byte_end":112242,"line_start":1275,"line_end":1275,"column_start":42,"column_end":52},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3824},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":112583,"byte_end":112587,"line_start":1291,"line_end":1291,"column_start":23,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3833},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":113096,"byte_end":113100,"line_start":1309,"line_end":1309,"column_start":32,"column_end":36},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3833},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":113158,"byte_end":113164,"line_start":1313,"line_end":1313,"column_start":23,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3850},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":113747,"byte_end":113756,"line_start":1334,"line_end":1334,"column_start":23,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3867},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":114379,"byte_end":114388,"line_start":1355,"line_end":1355,"column_start":42,"column_end":51},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3884},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":114944,"byte_end":114953,"line_start":1378,"line_end":1378,"column_start":53,"column_end":62},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3884},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":115322,"byte_end":115334,"line_start":1394,"line_end":1394,"column_start":42,"column_end":54},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3893},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":115624,"byte_end":115636,"line_start":1407,"line_end":1407,"column_start":53,"column_end":65},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3893},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":115895,"byte_end":115900,"line_start":1420,"line_end":1420,"column_start":29,"column_end":34},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":118864,"byte_end":118875,"line_start":1525,"line_end":1525,"column_start":29,"column_end":40},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":121263,"byte_end":121276,"line_start":1605,"line_end":1605,"column_start":29,"column_end":42},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":130922,"byte_end":130935,"line_start":1906,"line_end":1906,"column_start":46,"column_end":59},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3933},"to":{"krate":2,"index":7783}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":131762,"byte_end":131768,"line_start":1941,"line_end":1941,"column_start":29,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":132642,"byte_end":132648,"line_start":1968,"line_end":1968,"column_start":43,"column_end":49},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3902},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":132803,"byte_end":132809,"line_start":1974,"line_end":1974,"column_start":46,"column_end":52},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3902},"to":{"krate":2,"index":7783}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":133782,"byte_end":133788,"line_start":2009,"line_end":2009,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":921},"to":{"krate":0,"index":919}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":134543,"byte_end":134554,"line_start":2030,"line_end":2030,"column_start":44,"column_end":55},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3752},"to":{"krate":0,"index":921}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":135144,"byte_end":135155,"line_start":2050,"line_end":2050,"column_start":53,"column_end":64},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3752},"to":{"krate":0,"index":919}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":137057,"byte_end":137063,"line_start":2108,"line_end":2108,"column_start":49,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":975},"to":{"krate":0,"index":973}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":138098,"byte_end":138109,"line_start":2138,"line_end":2138,"column_start":44,"column_end":55},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3752},"to":{"krate":0,"index":975}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":139368,"byte_end":139379,"line_start":2179,"line_end":2179,"column_start":51,"column_end":62},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3752},"to":{"krate":0,"index":973}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":142691,"byte_end":142697,"line_start":2286,"line_end":2286,"column_start":44,"column_end":50},"kind":{"Impl":{"id":75}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":975}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":144583,"byte_end":144589,"line_start":2345,"line_end":2345,"column_start":51,"column_end":57},"kind":{"Impl":{"id":76}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":973}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":146845,"byte_end":146851,"line_start":2415,"line_end":2415,"column_start":46,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":1048},"to":{"krate":0,"index":1047}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":147445,"byte_end":147456,"line_start":2433,"line_end":2433,"column_start":40,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3752},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":147693,"byte_end":147704,"line_start":2441,"line_end":2441,"column_start":63,"column_end":74},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3752},"to":{"krate":0,"index":1047}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":148311,"byte_end":148317,"line_start":2463,"line_end":2463,"column_start":21,"column_end":27},"kind":{"Impl":{"id":79}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":1048}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/map.rs","byte_start":148533,"byte_end":148539,"line_start":2471,"line_end":2471,"column_start":44,"column_end":50},"kind":{"Impl":{"id":80}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":1047}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":157714,"byte_end":157727,"line_start":46,"line_end":46,"column_start":25,"column_end":38},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":166170,"byte_end":166183,"line_start":302,"line_end":302,"column_start":51,"column_end":64},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":167301,"byte_end":167314,"line_start":340,"line_end":340,"column_start":70,"column_end":83},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":168059,"byte_end":168072,"line_start":359,"line_end":359,"column_start":44,"column_end":57},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":168905,"byte_end":168918,"line_start":381,"line_end":381,"column_start":46,"column_end":59},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":169424,"byte_end":169437,"line_start":396,"line_end":396,"column_start":31,"column_end":44},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":169921,"byte_end":169934,"line_start":411,"line_end":411,"column_start":34,"column_end":47},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":170413,"byte_end":170426,"line_start":426,"line_end":426,"column_start":26,"column_end":39},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":170674,"byte_end":170687,"line_start":437,"line_end":437,"column_start":6,"column_end":19},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":173700,"byte_end":173713,"line_start":537,"line_end":537,"column_start":6,"column_end":19},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":174185,"byte_end":174198,"line_start":554,"line_end":554,"column_start":41,"column_end":54},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":174327,"byte_end":174340,"line_start":561,"line_end":561,"column_start":40,"column_end":53},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":174507,"byte_end":174520,"line_start":567,"line_end":567,"column_start":57,"column_end":70},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":176570,"byte_end":176583,"line_start":653,"line_end":653,"column_start":18,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":12317}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":176987,"byte_end":176992,"line_start":667,"line_end":667,"column_start":53,"column_end":58},"kind":{"Impl":{"id":95}},"from":{"krate":21,"index":526},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":177182,"byte_end":177195,"line_start":674,"line_end":674,"column_start":61,"column_end":74},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":177323,"byte_end":177333,"line_start":683,"line_end":683,"column_start":6,"column_end":16},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":177434,"byte_end":177444,"line_start":689,"line_end":689,"column_start":23,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3949},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":177593,"byte_end":177603,"line_start":695,"line_end":695,"column_start":16,"column_end":26},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3949},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":177622,"byte_end":177635,"line_start":697,"line_end":697,"column_start":15,"column_end":28},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":9885}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":177746,"byte_end":177759,"line_start":703,"line_end":703,"column_start":15,"column_end":28},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":9885}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":178018,"byte_end":178031,"line_start":714,"line_end":714,"column_start":39,"column_end":52},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":178420,"byte_end":178433,"line_start":725,"line_end":725,"column_start":32,"column_end":45},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":178481,"byte_end":178494,"line_start":727,"line_end":727,"column_start":40,"column_end":53},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":178681,"byte_end":178694,"line_start":734,"line_end":734,"column_start":33,"column_end":46},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2745}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":178855,"byte_end":178868,"line_start":741,"line_end":741,"column_start":44,"column_end":57},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":179032,"byte_end":179045,"line_start":748,"line_end":748,"column_start":45,"column_end":58},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":179199,"byte_end":179212,"line_start":755,"line_end":755,"column_start":45,"column_end":58},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":179402,"byte_end":179415,"line_start":762,"line_end":762,"column_start":46,"column_end":59},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":180369,"byte_end":180382,"line_start":797,"line_end":797,"column_start":47,"column_end":60},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":180529,"byte_end":180542,"line_start":804,"line_end":804,"column_start":48,"column_end":61},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":180747,"byte_end":180753,"line_start":811,"line_end":811,"column_start":58,"column_end":64},"kind":{"Impl":{"id":114}},"from":{"krate":5,"index":7626},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":180915,"byte_end":180921,"line_start":818,"line_end":818,"column_start":59,"column_end":65},"kind":{"Impl":{"id":115}},"from":{"krate":5,"index":7626},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":181559,"byte_end":181572,"line_start":839,"line_end":839,"column_start":61,"column_end":74},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/metadata/value.rs","byte_start":181773,"byte_end":181786,"line_start":849,"line_end":849,"column_start":62,"column_end":75},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":189815,"byte_end":189819,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/grpc.rs","byte_start":202108,"byte_end":202112,"line_start":438,"line_end":438,"column_start":36,"column_end":40},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1442},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":203631,"byte_end":203632,"line_start":21,"line_end":21,"column_start":38,"column_end":39},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1517},"to":{"krate":0,"index":1511}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":204527,"byte_end":204528,"line_start":51,"line_end":51,"column_start":51,"column_end":52},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1530},"to":{"krate":0,"index":1523}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":205384,"byte_end":205385,"line_start":80,"line_end":80,"column_start":48,"column_end":49},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1544},"to":{"krate":0,"index":1538}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/server/service.rs","byte_start":206295,"byte_end":206296,"line_start":110,"line_end":110,"column_start":45,"column_end":46},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1557},"to":{"krate":0,"index":1550}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":208727,"byte_end":208728,"line_start":51,"line_end":51,"column_start":25,"column_end":26},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1629},"to":{"krate":0,"index":1626}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":209648,"byte_end":209664,"line_start":93,"line_end":93,"column_start":25,"column_end":41},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3969},"to":{"krate":41,"index":71}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":210354,"byte_end":210372,"line_start":123,"line_end":123,"column_start":12,"column_end":30},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":210648,"byte_end":210666,"line_start":134,"line_end":134,"column_start":27,"column_end":45},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3980},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":211018,"byte_end":211036,"line_start":146,"line_end":146,"column_start":66,"column_end":84},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3980},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":213070,"byte_end":213088,"line_start":193,"line_end":193,"column_start":47,"column_end":65},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3980},"to":{"krate":0,"index":2235}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":213337,"byte_end":213351,"line_start":208,"line_end":208,"column_start":9,"column_end":23},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/service/interceptor.rs","byte_start":213729,"byte_end":213743,"line_start":229,"line_end":229,"column_start":26,"column_end":40},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4032},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":230870,"byte_end":230878,"line_start":46,"line_end":46,"column_start":6,"column_end":14},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":242367,"byte_end":242375,"line_start":394,"line_end":394,"column_start":20,"column_end":28},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4080},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":243108,"byte_end":243116,"line_start":419,"line_end":419,"column_start":25,"column_end":33},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4080},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":243264,"byte_end":243272,"line_start":427,"line_end":427,"column_start":26,"column_end":34},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4080},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":243440,"byte_end":243448,"line_start":435,"line_end":435,"column_start":32,"column_end":40},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":4080},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":243609,"byte_end":243617,"line_start":443,"line_end":443,"column_start":21,"column_end":29},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4080},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/endpoint.rs","byte_start":243753,"byte_end":243761,"line_start":449,"line_end":449,"column_start":18,"column_end":26},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4080},"to":{"krate":2,"index":12317}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":223958,"byte_end":223965,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":228307,"byte_end":228314,"line_start":203,"line_end":203,"column_start":42,"column_end":49},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4099},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":228799,"byte_end":228813,"line_start":219,"line_end":219,"column_start":17,"column_end":31},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1901},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":229141,"byte_end":229148,"line_start":229,"line_end":229,"column_start":21,"column_end":28},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4099},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/channel/mod.rs","byte_start":229286,"byte_end":229300,"line_start":235,"line_end":235,"column_start":21,"column_end":35},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1901},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":274240,"byte_end":274254,"line_start":74,"line_end":74,"column_start":6,"column_end":20},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":4103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":274432,"byte_end":274442,"line_start":81,"line_end":81,"column_start":20,"column_end":30},"kind":{"Impl":{"id":155}},"from":{"krate":60,"index":6076},"to":{"krate":0,"index":1949}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":274649,"byte_end":274658,"line_start":91,"line_end":91,"column_start":20,"column_end":29},"kind":{"Impl":{"id":156}},"from":{"krate":49,"index":6297},"to":{"krate":0,"index":1949}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/conn.rs","byte_start":274873,"byte_end":274885,"line_start":101,"line_end":101,"column_start":31,"column_end":43},"kind":{"Impl":{"id":157}},"from":{"krate":49,"index":5031},"to":{"krate":0,"index":1949}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/incoming.rs","byte_start":280168,"byte_end":280179,"line_start":134,"line_end":134,"column_start":6,"column_end":17},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/incoming.rs","byte_start":280516,"byte_end":280527,"line_start":147,"line_end":147,"column_start":17,"column_end":28},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2021},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/recover_error.rs","byte_start":281180,"byte_end":281192,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/recover_error.rs","byte_start":281307,"byte_end":281319,"line_start":28,"line_end":28,"column_start":36,"column_end":48},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":4110},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/recover_error.rs","byte_start":281939,"byte_end":281953,"line_start":54,"line_end":54,"column_start":32,"column_end":46},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4156},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/recover_error.rs","byte_start":282983,"byte_end":282997,"line_start":88,"line_end":88,"column_start":9,"column_end":23},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/recover_error.rs","byte_start":283233,"byte_end":283247,"line_start":102,"line_end":102,"column_start":29,"column_end":43},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4196},"to":{"krate":20,"index":470}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/unix.rs","byte_start":284844,"byte_end":284854,"line_start":22,"line_end":22,"column_start":32,"column_end":42},"kind":{"Impl":{"id":175}},"from":{"krate":49,"index":7012},"to":{"krate":0,"index":1949}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":246704,"byte_end":246710,"line_start":97,"line_end":97,"column_start":18,"column_end":24},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4206},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":247844,"byte_end":247850,"line_start":135,"line_end":135,"column_start":43,"column_end":49},"kind":{"Impl":{"id":177}},"from":{"krate":42,"index":5651},"to":{"krate":0,"index":2235}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":247907,"byte_end":247913,"line_start":139,"line_end":139,"column_start":6,"column_end":12},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":248157,"byte_end":248163,"line_start":150,"line_end":150,"column_start":9,"column_end":15},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":260867,"byte_end":260873,"line_start":524,"line_end":524,"column_start":9,"column_end":15},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":260995,"byte_end":261001,"line_start":530,"line_end":530,"column_start":9,"column_end":15},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":267430,"byte_end":267436,"line_start":689,"line_end":689,"column_start":24,"column_end":30},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4206},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":267683,"byte_end":267686,"line_start":700,"line_end":700,"column_start":45,"column_end":48},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2316},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":268891,"byte_end":268900,"line_start":744,"line_end":744,"column_start":32,"column_end":41},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4270},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":269557,"byte_end":269560,"line_start":763,"line_end":763,"column_start":24,"column_end":27},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2316},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/server/mod.rs","byte_start":269918,"byte_end":269925,"line_start":777,"line_end":777,"column_start":49,"column_end":56},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2338},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/error.rs","byte_start":285653,"byte_end":285658,"line_start":27,"line_end":27,"column_start":6,"column_end":11},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/error.rs","byte_start":286536,"byte_end":286541,"line_start":60,"line_end":60,"column_start":21,"column_end":26},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2366},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/error.rs","byte_start":286847,"byte_end":286852,"line_start":74,"line_end":74,"column_start":23,"column_end":28},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2366},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/error.rs","byte_start":286985,"byte_end":286990,"line_start":80,"line_end":80,"column_start":19,"column_end":24},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2366},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/add_origin.rs","byte_start":288071,"byte_end":288080,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/add_origin.rs","byte_start":288228,"byte_end":288237,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4283},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/connection.rs","byte_start":290512,"byte_end":290522,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/connection.rs","byte_start":293061,"byte_end":293071,"line_start":96,"line_end":96,"column_start":27,"column_end":37},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2504},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/connection.rs","byte_start":293463,"byte_end":293473,"line_start":110,"line_end":110,"column_start":15,"column_end":25},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2504},"to":{"krate":42,"index":1289}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/connection.rs","byte_start":293578,"byte_end":293588,"line_start":118,"line_end":118,"column_start":21,"column_end":31},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2504},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/connector.rs","byte_start":294451,"byte_end":294460,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/connector.rs","byte_start":295199,"byte_end":295208,"line_start":60,"line_end":60,"column_start":26,"column_end":35},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2558},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/connector.rs","byte_start":296713,"byte_end":296738,"line_start":108,"line_end":108,"column_start":23,"column_end":48},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":4290},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/connector.rs","byte_start":296969,"byte_end":296994,"line_start":115,"line_end":115,"column_start":28,"column_end":53},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4290},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/discover.rs","byte_start":297449,"byte_end":297469,"line_start":21,"line_end":21,"column_start":28,"column_end":48},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/discover.rs","byte_start":297619,"byte_end":297639,"line_start":27,"line_end":27,"column_start":39,"column_end":59},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2613},"to":{"krate":26,"index":96}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/discover.rs","byte_start":298903,"byte_end":298923,"line_start":55,"line_end":55,"column_start":38,"column_end":58},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2613},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/executor.rs","byte_start":299110,"byte_end":299119,"line_start":9,"line_end":9,"column_start":25,"column_end":34},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4295},"to":{"krate":60,"index":854}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/executor.rs","byte_start":299393,"byte_end":299403,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/executor.rs","byte_start":299716,"byte_end":299726,"line_start":39,"line_end":39,"column_start":43,"column_end":53},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4300},"to":{"krate":60,"index":854}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":300264,"byte_end":300275,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":300485,"byte_end":300496,"line_start":30,"line_end":30,"column_start":48,"column_end":59},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4304},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":301931,"byte_end":301945,"line_start":78,"line_end":78,"column_start":28,"column_end":42},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4386},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":305256,"byte_end":305270,"line_start":165,"line_end":165,"column_start":23,"column_end":37},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4390},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/grpc_timeout.rs","byte_start":305477,"byte_end":305491,"line_start":172,"line_end":172,"column_start":28,"column_end":42},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4390},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":309389,"byte_end":309398,"line_start":11,"line_end":11,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":49,"index":230},"to":{"krate":0,"index":2759}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":309401,"byte_end":309411,"line_start":11,"line_end":11,"column_start":17,"column_end":27},"kind":"SuperTrait","from":{"krate":49,"index":309},"to":{"krate":0,"index":2759}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":309414,"byte_end":309418,"line_start":11,"line_end":11,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":2759}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":309449,"byte_end":309450,"line_start":15,"line_end":15,"column_start":16,"column_end":17},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2761},"to":{"krate":0,"index":2759}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":309555,"byte_end":309562,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":309684,"byte_end":309691,"line_start":25,"line_end":25,"column_start":21,"column_end":28},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2762},"to":{"krate":60,"index":3966}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":309796,"byte_end":309803,"line_start":31,"line_end":31,"column_start":20,"column_end":27},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2762},"to":{"krate":0,"index":1949}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":310008,"byte_end":310015,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2762},"to":{"krate":49,"index":230}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":310241,"byte_end":310248,"line_start":52,"line_end":52,"column_start":21,"column_end":28},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2762},"to":{"krate":49,"index":309}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":311125,"byte_end":311133,"line_start":85,"line_end":85,"column_start":10,"column_end":18},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":311965,"byte_end":311973,"line_start":118,"line_end":118,"column_start":24,"column_end":32},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2779},"to":{"krate":49,"index":230}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/io.rs","byte_start":312402,"byte_end":312410,"line_start":135,"line_end":135,"column_start":25,"column_end":33},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2779},"to":{"krate":49,"index":309}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/reconnect.rs","byte_start":313979,"byte_end":313988,"line_start":33,"line_end":33,"column_start":17,"column_end":26},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/reconnect.rs","byte_start":314386,"byte_end":314395,"line_start":50,"line_end":50,"column_start":50,"column_end":59},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2834},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/reconnect.rs","byte_start":318195,"byte_end":318204,"line_start":158,"line_end":158,"column_start":32,"column_end":41},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2834},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/reconnect.rs","byte_start":318977,"byte_end":318991,"line_start":190,"line_end":190,"column_start":9,"column_end":23},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/reconnect.rs","byte_start":319292,"byte_end":319306,"line_start":204,"line_end":204,"column_start":26,"column_end":40},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4839},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","byte_start":320316,"byte_end":320322,"line_start":25,"line_end":25,"column_start":6,"column_end":12},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","byte_start":321503,"byte_end":321509,"line_start":62,"line_end":62,"column_start":33,"column_end":39},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4887},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","byte_start":321985,"byte_end":321997,"line_start":80,"line_end":80,"column_start":21,"column_end":33},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4925},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/router.rs","byte_start":322135,"byte_end":322147,"line_start":86,"line_end":86,"column_start":17,"column_end":29},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4925},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/user_agent.rs","byte_start":322758,"byte_end":322767,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/service/user_agent.rs","byte_start":323354,"byte_end":323363,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4928},"to":{"krate":30,"index":13}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/tls.rs","byte_start":324715,"byte_end":324726,"line_start":16,"line_end":16,"column_start":6,"column_end":17},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/transport/tls.rs","byte_start":325399,"byte_end":325410,"line_start":41,"line_end":41,"column_start":22,"column_end":33},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4935},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":326192,"byte_end":326202,"line_start":14,"line_end":14,"column_start":6,"column_end":16},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/extensions.rs","byte_start":327583,"byte_end":327593,"line_start":67,"line_end":67,"column_start":21,"column_end":31},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":331858,"byte_end":331864,"line_start":49,"line_end":49,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":3156},"to":{"krate":0,"index":3108}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333124,"byte_end":333130,"line_start":87,"line_end":87,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":3156},"to":{"krate":0,"index":3111}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":333413,"byte_end":333420,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":4941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340651,"byte_end":340652,"line_start":348,"line_end":348,"column_start":28,"column_end":29},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3138},"to":{"krate":0,"index":3108}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340763,"byte_end":340770,"line_start":354,"line_end":354,"column_start":28,"column_end":35},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4941},"to":{"krate":0,"index":3108}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":340873,"byte_end":340874,"line_start":360,"line_end":360,"column_start":34,"column_end":35},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3144},"to":{"krate":0,"index":3111}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":341089,"byte_end":341096,"line_start":372,"line_end":372,"column_start":34,"column_end":41},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4941},"to":{"krate":0,"index":3111}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/request.rs","byte_start":341285,"byte_end":341286,"line_start":384,"line_end":384,"column_start":28,"column_end":29},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3154},"to":{"krate":0,"index":3156}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/response.rs","byte_start":344361,"byte_end":344369,"line_start":11,"line_end":11,"column_start":9,"column_end":17},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":351422,"byte_end":351426,"line_start":110,"line_end":110,"column_start":6,"column_end":10},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":4957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":353389,"byte_end":353393,"line_start":150,"line_end":150,"column_start":28,"column_end":32},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4957},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":353565,"byte_end":353571,"line_start":158,"line_end":158,"column_start":6,"column_end":12},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":370893,"byte_end":370899,"line_start":595,"line_end":595,"column_start":21,"column_end":27},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3256},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":371814,"byte_end":371820,"line_start":629,"line_end":629,"column_start":26,"column_end":32},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3256},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":371971,"byte_end":371976,"line_start":636,"line_end":636,"column_start":27,"column_end":32},"kind":{"Impl":{"id":273}},"from":{"krate":63,"index":4996},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":372085,"byte_end":372091,"line_start":642,"line_end":642,"column_start":31,"column_end":37},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3256},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":373175,"byte_end":373181,"line_start":669,"line_end":669,"column_start":23,"column_end":29},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3256},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":373496,"byte_end":373502,"line_start":682,"line_end":682,"column_start":16,"column_end":22},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3256},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":375375,"byte_end":375379,"line_start":735,"line_end":735,"column_start":6,"column_end":10},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/tonic-0.7.2/src/status.rs","byte_start":378226,"byte_end":378230,"line_start":803,"line_end":803,"column_start":20,"column_end":24},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4957},"to":{"krate":2,"index":2963}}]}