{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9","program":"/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","toml","--edition=2018","/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=2d15eea17ca4a9c2","-C","extra-filename=-2d15eea17ca4a9c2","--out-dir","/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","-L","dependency=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","--extern","serde=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libserde-592900de64bbdcec.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libtoml-2d15eea17ca4a9c2.rmeta"},"prelude":{"crate_id":{"name":"toml","disambiguator":[7426851710096295579,0]},"crate_root":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src","external_crates":[{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","num":20,"id":{"name":"serde","disambiguator":[17547117925064123000,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","num":21,"id":{"name":"serde_derive","disambiguator":[3697792355618157202,0]}}],"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":0,"byte_end":4792,"line_start":1,"line_end":180,"column_start":1,"column_end":24}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1794},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":21675,"byte_end":21679,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1778},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":21681,"byte_end":21689,"line_start":16,"line_end":16,"column_start":33,"column_end":41},"alias_span":null,"name":"Datetime","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1788},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":21691,"byte_end":21709,"line_start":16,"line_end":16,"column_start":43,"column_end":61},"alias_span":null,"name":"DatetimeParseError","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1815},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":21711,"byte_end":21717,"line_start":16,"line_end":16,"column_start":63,"column_end":69},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1804},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":21719,"byte_end":21723,"line_start":16,"line_end":16,"column_start":71,"column_end":75},"alias_span":null,"name":"Time","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":115},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":21748,"byte_end":21753,"line_start":18,"line_end":18,"column_start":22,"column_end":27},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":21755,"byte_end":21758,"line_start":18,"line_end":18,"column_start":29,"column_end":32},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1676},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":4365,"byte_end":4370,"line_start":159,"line_end":159,"column_start":23,"column_end":28},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":653},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":4439,"byte_end":4448,"line_start":164,"line_end":164,"column_start":22,"column_end":31},"alias_span":null,"name":"to_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":655},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":4450,"byte_end":4466,"line_start":164,"line_end":164,"column_start":33,"column_end":49},"alias_span":null,"name":"to_string_pretty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":650},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":4468,"byte_end":4474,"line_start":164,"line_end":164,"column_start":51,"column_end":57},"alias_span":null,"name":"to_vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":661},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":4476,"byte_end":4486,"line_start":164,"line_end":164,"column_start":59,"column_end":69},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1088},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":4539,"byte_end":4549,"line_start":167,"line_end":167,"column_start":21,"column_end":31},"alias_span":null,"name":"from_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1091},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":4551,"byte_end":4559,"line_start":167,"line_end":167,"column_start":33,"column_end":41},"alias_span":null,"name":"from_str","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1094},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":4561,"byte_end":4573,"line_start":167,"line_end":167,"column_start":43,"column_end":55},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1560},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/macros.rs","byte_start":221127,"byte_end":221138,"line_start":1,"line_end":1,"column_start":21,"column_end":32},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":1516}},{"kind":"Use","ref_id":{"krate":20,"index":1778},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/macros.rs","byte_start":221140,"byte_end":221156,"line_start":1,"line_end":1,"column_start":34,"column_end":50},"alias_span":null,"name":"IntoDeserializer","value":"","parent":{"krate":0,"index":1516}},{"kind":"Use","ref_id":{"krate":0,"index":2456},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":4658,"byte_end":4665,"line_start":174,"line_end":174,"column_start":25,"column_end":32},"alias_span":null,"name":"Spanned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":0,"byte_end":4792,"line_start":1,"line_end":180,"column_start":1,"column_end":24},"name":"","qualname":"::","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":188},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":624},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1440},{"krate":0,"index":1443},{"krate":0,"index":1446},{"krate":0,"index":1516},{"krate":0,"index":1540},{"krate":0,"index":1615},{"krate":0,"index":1618},{"krate":0,"index":1621}],"decl_id":null,"docs":" A [TOML]-parsing library","sig":null,"attributes":[{"value":"/ A [TOML]-parsing library","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":0,"byte_end":28,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":29,"byte_end":32,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library implements a [TOML] v0.5.0 compatible parser,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":33,"byte_end":95,"line_start":3,"line_end":3,"column_start":1,"column_end":63}},{"value":"/ primarily supporting the [`serde`] library for encoding/decoding","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":96,"byte_end":164,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ various types in Rust.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":165,"byte_end":191,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":192,"byte_end":195,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ TOML itself is a simple, ergonomic, and readable configuration format:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":196,"byte_end":270,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":271,"byte_end":274,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":275,"byte_end":286,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/ [package]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":287,"byte_end":300,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/ name = \"toml\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":301,"byte_end":318,"line_start":11,"line_end":11,"column_start":1,"column_end":18}},{"value":"/ version = \"0.4.2\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":319,"byte_end":340,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/ authors = [\"Alex Crichton <alex@alexcrichton.com>\"]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":341,"byte_end":396,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":397,"byte_end":400,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [dependencies]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":401,"byte_end":419,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ serde = \"1.0\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":420,"byte_end":437,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":438,"byte_end":445,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":446,"byte_end":449,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The TOML format tends to be relatively common throughout the Rust community","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":450,"byte_end":529,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ for configuration, notably being used by [Cargo], Rust's package manager.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":530,"byte_end":607,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":608,"byte_end":611,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ## TOML values","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":612,"byte_end":630,"line_start":22,"line_end":22,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":631,"byte_end":634,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ A value in TOML is represented with the [`Value`] enum in this crate:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":635,"byte_end":708,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":709,"byte_end":712,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":713,"byte_end":731,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ pub enum Value {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":732,"byte_end":752,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/     String(String),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":753,"byte_end":776,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/     Integer(i64),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":777,"byte_end":798,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     Float(f64),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":799,"byte_end":818,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     Boolean(bool),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":819,"byte_end":841,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/     Datetime(Datetime),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":842,"byte_end":869,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/     Array(Array),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":870,"byte_end":891,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/     Table(Table),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":892,"byte_end":913,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":914,"byte_end":919,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":920,"byte_end":927,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":928,"byte_end":931,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ TOML is similar to JSON with the notable addition of a [`Datetime`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":932,"byte_end":1003,"line_start":38,"line_end":38,"column_start":1,"column_end":72}},{"value":"/ type. In general, TOML and JSON are interchangeable in terms of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1004,"byte_end":1071,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/ formats.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1072,"byte_end":1084,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1085,"byte_end":1088,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Parsing TOML","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1089,"byte_end":1108,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1109,"byte_end":1112,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The easiest way to parse a TOML document is via the [`Value`] type:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1113,"byte_end":1184,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1185,"byte_end":1188,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1189,"byte_end":1200,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/ use toml::Value;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1201,"byte_end":1221,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1222,"byte_end":1225,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let value = \"foo = 'bar'\".parse::<Value>().unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1226,"byte_end":1282,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1283,"byte_end":1286,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(value[\"foo\"].as_str(), Some(\"bar\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1287,"byte_end":1338,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1339,"byte_end":1346,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1347,"byte_end":1350,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ The [`Value`] type implements a number of convenience methods and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1351,"byte_end":1420,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ traits; the example above uses [`FromStr`] to parse a [`str`] into a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1421,"byte_end":1493,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ [`Value`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1494,"byte_end":1508,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1509,"byte_end":1512,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Deserialization and Serialization","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1513,"byte_end":1553,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1554,"byte_end":1557,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This crate supports [`serde`] 1.0 with a number of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1558,"byte_end":1612,"line_start":60,"line_end":60,"column_start":1,"column_end":55}},{"value":"/ implementations of the `Deserialize`, `Serialize`, `Deserializer`, and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1613,"byte_end":1687,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ `Serializer` traits. Namely, you'll find:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1688,"byte_end":1733,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1734,"byte_end":1737,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ * `Deserialize for Value`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1738,"byte_end":1767,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/ * `Serialize for Value`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1768,"byte_end":1795,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/ * `Deserialize for Datetime`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1796,"byte_end":1828,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ * `Serialize for Datetime`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1829,"byte_end":1859,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/ * `Deserializer for de::Deserializer`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1860,"byte_end":1901,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ * `Serializer for ser::Serializer`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1902,"byte_end":1940,"line_start":69,"line_end":69,"column_start":1,"column_end":39}},{"value":"/ * `Deserializer for Value`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1941,"byte_end":1971,"line_start":70,"line_end":70,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1972,"byte_end":1975,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This means that you can use Serde to deserialize/serialize the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":1976,"byte_end":2042,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`Value`] type as well as the [`Datetime`] type in this crate. You can also","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2043,"byte_end":2122,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/ use the [`Deserializer`], [`Serializer`], or [`Value`] type itself to act as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2123,"byte_end":2203,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/ a deserializer/serializer for arbitrary types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2204,"byte_end":2254,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2255,"byte_end":2258,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ An example of deserializing with TOML is:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2259,"byte_end":2304,"line_start":77,"line_end":77,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2305,"byte_end":2308,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2309,"byte_end":2320,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ use serde_derive::Deserialize;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2321,"byte_end":2355,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2356,"byte_end":2359,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2360,"byte_end":2386,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"/ struct Config {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2387,"byte_end":2406,"line_start":83,"line_end":83,"column_start":1,"column_end":20}},{"value":"/     ip: String,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2407,"byte_end":2426,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/     port: Option<u16>,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2427,"byte_end":2453,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/     keys: Keys,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2454,"byte_end":2473,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2474,"byte_end":2479,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2480,"byte_end":2483,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2484,"byte_end":2510,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/ struct Keys {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2511,"byte_end":2528,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/     github: String,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2529,"byte_end":2552,"line_start":91,"line_end":91,"column_start":1,"column_end":24}},{"value":"/     travis: Option<String>,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2553,"byte_end":2584,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2585,"byte_end":2590,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2591,"byte_end":2594,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2595,"byte_end":2610,"line_start":95,"line_end":95,"column_start":1,"column_end":16}},{"value":"/     let config: Config = toml::from_str(r#\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2611,"byte_end":2658,"line_start":96,"line_end":96,"column_start":1,"column_end":48}},{"value":"/         ip = '127.0.0.1'","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2659,"byte_end":2687,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2688,"byte_end":2691,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/         [keys]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2692,"byte_end":2710,"line_start":99,"line_end":99,"column_start":1,"column_end":19}},{"value":"/         github = 'xxxxxxxxxxxxxxxxx'","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2711,"byte_end":2751,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/         travis = 'yyyyyyyyyyyyyyyyy'","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2752,"byte_end":2792,"line_start":101,"line_end":101,"column_start":1,"column_end":41}},{"value":"/     \"#).unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2793,"byte_end":2814,"line_start":102,"line_end":102,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2815,"byte_end":2818,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(config.ip, \"127.0.0.1\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2819,"byte_end":2862,"line_start":104,"line_end":104,"column_start":1,"column_end":44}},{"value":"/     assert_eq!(config.port, None);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2863,"byte_end":2901,"line_start":105,"line_end":105,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(config.keys.github, \"xxxxxxxxxxxxxxxxx\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2902,"byte_end":2962,"line_start":106,"line_end":106,"column_start":1,"column_end":61}},{"value":"/     assert_eq!(config.keys.travis.as_ref().unwrap(), \"yyyyyyyyyyyyyyyyy\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":2963,"byte_end":3041,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3042,"byte_end":3047,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3048,"byte_end":3055,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3056,"byte_end":3059,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ You can serialize types in a similar fashion:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3060,"byte_end":3109,"line_start":111,"line_end":111,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3110,"byte_end":3113,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3114,"byte_end":3125,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"/ use serde_derive::Serialize;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3126,"byte_end":3158,"line_start":114,"line_end":114,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3159,"byte_end":3162,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3163,"byte_end":3187,"line_start":116,"line_end":116,"column_start":1,"column_end":25}},{"value":"/ struct Config {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3188,"byte_end":3207,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/     ip: String,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3208,"byte_end":3227,"line_start":118,"line_end":118,"column_start":1,"column_end":20}},{"value":"/     port: Option<u16>,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3228,"byte_end":3254,"line_start":119,"line_end":119,"column_start":1,"column_end":27}},{"value":"/     keys: Keys,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3255,"byte_end":3274,"line_start":120,"line_end":120,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3275,"byte_end":3280,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3281,"byte_end":3284,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3285,"byte_end":3309,"line_start":123,"line_end":123,"column_start":1,"column_end":25}},{"value":"/ struct Keys {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3310,"byte_end":3327,"line_start":124,"line_end":124,"column_start":1,"column_end":18}},{"value":"/     github: String,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3328,"byte_end":3351,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/     travis: Option<String>,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3352,"byte_end":3383,"line_start":126,"line_end":126,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3384,"byte_end":3389,"line_start":127,"line_end":127,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3390,"byte_end":3393,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3394,"byte_end":3409,"line_start":129,"line_end":129,"column_start":1,"column_end":16}},{"value":"/     let config = Config {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3410,"byte_end":3439,"line_start":130,"line_end":130,"column_start":1,"column_end":30}},{"value":"/         ip: \"127.0.0.1\".to_string(),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3440,"byte_end":3480,"line_start":131,"line_end":131,"column_start":1,"column_end":41}},{"value":"/         port: None,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3481,"byte_end":3504,"line_start":132,"line_end":132,"column_start":1,"column_end":24}},{"value":"/         keys: Keys {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3505,"byte_end":3529,"line_start":133,"line_end":133,"column_start":1,"column_end":25}},{"value":"/             github: \"xxxxxxxxxxxxxxxxx\".to_string(),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3530,"byte_end":3586,"line_start":134,"line_end":134,"column_start":1,"column_end":57}},{"value":"/             travis: Some(\"yyyyyyyyyyyyyyyyy\".to_string()),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3587,"byte_end":3649,"line_start":135,"line_end":135,"column_start":1,"column_end":63}},{"value":"/         },","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3650,"byte_end":3664,"line_start":136,"line_end":136,"column_start":1,"column_end":15}},{"value":"/     };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3665,"byte_end":3675,"line_start":137,"line_end":137,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3676,"byte_end":3679,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/     let toml = toml::to_string(&config).unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3680,"byte_end":3733,"line_start":139,"line_end":139,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3734,"byte_end":3739,"line_start":140,"line_end":140,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3740,"byte_end":3747,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3748,"byte_end":3751,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ [TOML]: https://github.com/toml-lang/toml","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3752,"byte_end":3797,"line_start":143,"line_end":143,"column_start":1,"column_end":46}},{"value":"/ [Cargo]: https://crates.io/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3798,"byte_end":3829,"line_start":144,"line_end":144,"column_start":1,"column_end":32}},{"value":"/ [`serde`]: https://serde.rs/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3830,"byte_end":3862,"line_start":145,"line_end":145,"column_start":1,"column_end":33}},{"value":"deny(missing_docs)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3916,"byte_end":3938,"line_start":148,"line_end":148,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":3939,"byte_end":3965,"line_start":149,"line_end":149,"column_start":1,"column_end":27}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":4272,"byte_end":4295,"line_start":154,"line_end":154,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::map","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":82},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":94},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":139},{"krate":0,"index":143},{"krate":0,"index":151},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":1624},{"krate":0,"index":1629},{"krate":0,"index":1632},{"krate":0,"index":161},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":1635},{"krate":0,"index":1640},{"krate":0,"index":1643},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":1646},{"krate":0,"index":1650},{"krate":0,"index":1652},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":1654},{"krate":0,"index":1659},{"krate":0,"index":1662},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":1665},{"krate":0,"index":1670},{"krate":0,"index":1673}],"decl_id":null,"docs":" A map of String to toml::Value.","sig":null,"attributes":[{"value":"/ A map of String to toml::Value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":5133,"byte_end":5168,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":5169,"byte_end":5172,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ By default the map is backed by a [`BTreeMap`]. Enable the `preserve_order`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":5173,"byte_end":5252,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ feature of toml-rs to use [`LinkedHashMap`] instead.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":5253,"byte_end":5309,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":5310,"byte_end":5313,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`BTreeMap`]: https://doc.rust-lang.org/std/collections/struct.BTreeMap.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":5314,"byte_end":5394,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ [`LinkedHashMap`]: https://docs.rs/linked-hash-map/*/linked_hash_map/struct.LinkedHashMap.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":5395,"byte_end":5493,"line_start":15,"line_end":15,"column_start":1,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":5864,"byte_end":5867,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"Map","qualname":"::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":43}],"decl_id":null,"docs":" Represents a TOML key/value type.\n","sig":null,"attributes":[{"value":"/ Represents a TOML key/value type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":5815,"byte_end":5852,"line_start":31,"line_end":31,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":6135,"byte_end":6138,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Map<String, Value>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new empty Map.\n","sig":null,"attributes":[{"value":"/ Makes a new empty Map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":6083,"byte_end":6109,"line_start":42,"line_end":42,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":6114,"byte_end":6123,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":6347,"byte_end":6360,"line_start":53,"line_end":53,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Map<String, Value>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new empty Map with the given initial capacity.\n","sig":null,"attributes":[{"value":"cfg(not(feature = \"preserve_order\"))","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":6219,"byte_end":6258,"line_start":50,"line_end":50,"column_start":5,"column_end":44}},{"value":"/ Makes a new empty Map with the given initial capacity.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":6263,"byte_end":6321,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":6326,"byte_end":6335,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":6842,"byte_end":6847,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"clear","qualname":"<Map<String, Value>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all values.\n","sig":null,"attributes":[{"value":"/ Clears the map, removing all values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":6776,"byte_end":6816,"line_start":70,"line_end":70,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":6821,"byte_end":6830,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":7146,"byte_end":7149,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"get","qualname":"<Map<String, Value>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&Value> where String: Borrow<Q>,\nQ: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":6897,"byte_end":6959,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":6964,"byte_end":6967,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":6972,"byte_end":7048,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":7053,"byte_end":7120,"line_start":79,"line_end":79,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":7125,"byte_end":7134,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":7557,"byte_end":7569,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<Map<String, Value>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where String: Borrow<Q>,\nQ: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":7303,"byte_end":7370,"line_start":89,"line_end":89,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":7375,"byte_end":7378,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":7383,"byte_end":7459,"line_start":91,"line_end":91,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":7464,"byte_end":7531,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":7536,"byte_end":7545,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":7979,"byte_end":7986,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Map<String, Value>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut Value> where\nString: Borrow<Q>, Q: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":7722,"byte_end":7792,"line_start":102,"line_end":102,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":7797,"byte_end":7800,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":7805,"byte_end":7881,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":7886,"byte_end":7953,"line_start":105,"line_end":105,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":7958,"byte_end":7967,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":8518,"byte_end":8524,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"insert","qualname":"<Map<String, Value>>::insert","value":"pub fn insert(&mut Self, String, Value) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":8152,"byte_end":8194,"line_start":115,"line_end":115,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":8199,"byte_end":8202,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":8207,"byte_end":8272,"line_start":117,"line_end":117,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":8277,"byte_end":8280,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the value is updated, and the old","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":8285,"byte_end":8360,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/ value is returned. The key is not updated, though; this matters for","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":8365,"byte_end":8436,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ types that can be `==` without being identical.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":8441,"byte_end":8492,"line_start":121,"line_end":121,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":8497,"byte_end":8506,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":8912,"byte_end":8918,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"remove","qualname":"<Map<String, Value>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<Value> where\nString: Borrow<Q>, Q: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":8617,"byte_end":8690,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ was previously in the map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":8695,"byte_end":8725,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":8730,"byte_end":8733,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":8738,"byte_end":8814,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":8819,"byte_end":8886,"line_start":131,"line_end":131,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":8891,"byte_end":8900,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":9180,"byte_end":9185,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"name":"entry","qualname":"<Map<String, Value>>::entry","value":"pub fn entry<S>(&mut Self, S) -> Entry where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place\n manipulation.\n","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":9078,"byte_end":9146,"line_start":141,"line_end":141,"column_start":5,"column_end":73}},{"value":"/ manipulation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":9151,"byte_end":9168,"line_start":142,"line_end":142,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":9768,"byte_end":9771,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"len","qualname":"<Map<String, Value>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":9696,"byte_end":9742,"line_start":158,"line_end":158,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":9747,"byte_end":9756,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":9899,"byte_end":9907,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Map<String, Value>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":9824,"byte_end":9873,"line_start":164,"line_end":164,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":9878,"byte_end":9887,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":10039,"byte_end":10043,"line_start":172,"line_end":172,"column_start":12,"column_end":16},"name":"iter","qualname":"<Map<String, Value>>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the entries of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the entries of the map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":9964,"byte_end":10013,"line_start":170,"line_end":170,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":10018,"byte_end":10027,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":10218,"byte_end":10226,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Map<String, Value>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable iterator over the entries of the map.\n","sig":null,"attributes":[{"value":"/ Gets a mutable iterator over the entries of the map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":10136,"byte_end":10192,"line_start":178,"line_end":178,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":10197,"byte_end":10206,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":10405,"byte_end":10409,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map<String, Value>>::keys","value":"pub fn keys(&Self) -> Keys","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the keys of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the keys of the map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":10333,"byte_end":10379,"line_start":186,"line_end":186,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":10384,"byte_end":10393,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":10576,"byte_end":10582,"line_start":196,"line_end":196,"column_start":12,"column_end":18},"name":"values","qualname":"<Map<String, Value>>::values","value":"pub fn values(&Self) -> Values","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the values of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the values of the map.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":10502,"byte_end":10550,"line_start":194,"line_end":194,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":10555,"byte_end":10564,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":117},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":15118,"byte_end":15124,"line_start":378,"line_end":378,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" A vacant Entry.\n","sig":null,"attributes":[{"value":"/ A vacant Entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":15094,"byte_end":15113,"line_start":377,"line_end":377,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":120},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":15174,"byte_end":15182,"line_start":380,"line_end":380,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" An occupied Entry.\n","sig":null,"attributes":[{"value":"/ An occupied Entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":15147,"byte_end":15169,"line_start":379,"line_end":379,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":115},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":15078,"byte_end":15083,"line_start":376,"line_end":376,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"pub enum Entry<'a> { Vacant(VacantEntry), Occupied(OccupiedEntry), }","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":120}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.\n This enum is constructed from the [`entry`] method on [`Map`].","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":14844,"byte_end":14924,"line_start":371,"line_end":371,"column_start":1,"column_end":81}},{"value":"/ This enum is constructed from the [`entry`] method on [`Map`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":14925,"byte_end":14991,"line_start":372,"line_end":372,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":14992,"byte_end":14995,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ [`entry`]: struct.Map.html#method.entry","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":14996,"byte_end":15039,"line_start":374,"line_end":374,"column_start":1,"column_end":44}},{"value":"/ [`Map`]: struct.Map.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":15040,"byte_end":15068,"line_start":375,"line_end":375,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":123},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":15306,"byte_end":15317,"line_start":386,"line_end":386,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":125}],"decl_id":null,"docs":" A vacant Entry. It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A vacant Entry. It is part of the [`Entry`] enum.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":15206,"byte_end":15259,"line_start":383,"line_end":383,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":15260,"byte_end":15263,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":15264,"byte_end":15294,"line_start":385,"line_end":385,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":126},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":15463,"byte_end":15476,"line_start":393,"line_end":393,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":128}],"decl_id":null,"docs":" An occupied Entry. It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ An occupied Entry. It is part of the [`Entry`] enum.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":15360,"byte_end":15416,"line_start":390,"line_end":390,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":15417,"byte_end":15420,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":15421,"byte_end":15451,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":16052,"byte_end":16055,"line_start":409,"line_end":409,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &String","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.\n","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":15996,"byte_end":16040,"line_start":408,"line_end":408,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":16360,"byte_end":16369,"line_start":418,"line_end":418,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, Value) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and\n returns a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":16211,"byte_end":16285,"line_start":416,"line_end":416,"column_start":5,"column_end":79}},{"value":"/ returns a mutable reference to the value in the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":16290,"byte_end":16348,"line_start":417,"line_end":417,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":16748,"byte_end":16762,"line_start":428,"line_end":428,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut Value where F: FnOnce() -> Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default\n function if empty, and returns a mutable reference to the value in the\n entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":16568,"byte_end":16642,"line_start":425,"line_end":425,"column_start":5,"column_end":79}},{"value":"/ function if empty, and returns a mutable reference to the value in the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":16647,"byte_end":16721,"line_start":426,"line_end":426,"column_start":5,"column_end":79}},{"value":"/ entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":16726,"byte_end":16736,"line_start":427,"line_end":427,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17167,"byte_end":17170,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &String","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the VacantEntry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17035,"byte_end":17108,"line_start":440,"line_end":440,"column_start":5,"column_end":78}},{"value":"/ through the VacantEntry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17113,"byte_end":17141,"line_start":441,"line_end":441,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17146,"byte_end":17155,"line_start":442,"line_end":442,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17360,"byte_end":17366,"line_start":450,"line_end":450,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, Value) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key, and returns a\n mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key, and returns a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17228,"byte_end":17301,"line_start":447,"line_end":447,"column_start":5,"column_end":78}},{"value":"/ mutable reference to it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17306,"byte_end":17334,"line_start":448,"line_end":448,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17339,"byte_end":17348,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17553,"byte_end":17556,"line_start":458,"line_end":458,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &String","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17482,"byte_end":17527,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17532,"byte_end":17541,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17689,"byte_end":17692,"line_start":464,"line_end":464,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &Value","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17616,"byte_end":17663,"line_start":462,"line_end":462,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17668,"byte_end":17677,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17832,"byte_end":17839,"line_start":470,"line_end":470,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Value","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17751,"byte_end":17806,"line_start":468,"line_end":468,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17811,"byte_end":17820,"line_start":469,"line_end":469,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17997,"byte_end":18005,"line_start":476,"line_end":476,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to its value.\n","sig":null,"attributes":[{"value":"/ Converts the entry into a mutable reference to its value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17910,"byte_end":17971,"line_start":474,"line_end":474,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17976,"byte_end":17985,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":18207,"byte_end":18213,"line_start":483,"line_end":483,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, Value) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the `OccupiedEntry`'s key, and returns\n the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the `OccupiedEntry`'s key, and returns","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":18075,"byte_end":18150,"line_start":480,"line_end":480,"column_start":5,"column_end":80}},{"value":"/ the entry's old value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":18155,"byte_end":18181,"line_start":481,"line_end":481,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":18186,"byte_end":18195,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":18387,"byte_end":18393,"line_start":489,"line_end":489,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the entry out of the map, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value of the entry out of the map, and returns it.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":18297,"byte_end":18361,"line_start":487,"line_end":487,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":18366,"byte_end":18375,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":156},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":18834,"byte_end":18838,"line_start":508,"line_end":508,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":158}],"decl_id":null,"docs":" An iterator over a toml::Map's entries.\n","sig":null,"attributes":[{"value":"/ An iterator over a toml::Map's entries.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":18779,"byte_end":18822,"line_start":507,"line_end":507,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":19532,"byte_end":19539,"line_start":533,"line_end":533,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":168}],"decl_id":null,"docs":" A mutable iterator over a toml::Map's entries.\n","sig":null,"attributes":[{"value":"/ A mutable iterator over a toml::Map's entries.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":19470,"byte_end":19520,"line_start":532,"line_end":532,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":175},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":20230,"byte_end":20238,"line_start":558,"line_end":558,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":176}],"decl_id":null,"docs":" An owning iterator over a toml::Map's entries.\n","sig":null,"attributes":[{"value":"/ An owning iterator over a toml::Map's entries.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":20168,"byte_end":20218,"line_start":557,"line_end":557,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":178},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":20644,"byte_end":20648,"line_start":572,"line_end":572,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":180}],"decl_id":null,"docs":" An iterator over a toml::Map's keys.\n","sig":null,"attributes":[{"value":"/ An iterator over a toml::Map's keys.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":20592,"byte_end":20632,"line_start":571,"line_end":571,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":183},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":21055,"byte_end":21061,"line_start":586,"line_end":586,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":185}],"decl_id":null,"docs":" An iterator over a toml::Map's values.\n","sig":null,"attributes":[{"value":"/ An iterator over a toml::Map's values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":21001,"byte_end":21043,"line_start":585,"line_end":585,"column_start":1,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":188},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"value","qualname":"::value","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":1676},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1702},{"krate":0,"index":1704},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":283},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":297},{"krate":0,"index":302},{"krate":0,"index":307},{"krate":0,"index":1706},{"krate":0,"index":1708},{"krate":0,"index":1710},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":308},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":325},{"krate":0,"index":330},{"krate":0,"index":335},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":357},{"krate":0,"index":389},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":424},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":483},{"krate":0,"index":489},{"krate":0,"index":495},{"krate":0,"index":501},{"krate":0,"index":509},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":524}],"decl_id":null,"docs":" Definition of a TOML value\n","sig":null,"attributes":[{"value":"/ Definition of a TOML value","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":21345,"byte_end":21375,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1677},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":21887,"byte_end":21893,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"String","qualname":"::value::Value::String","value":"Value::String(String)","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":" Represents a TOML string\n","sig":null,"attributes":[{"value":"/ Represents a TOML string","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":21854,"byte_end":21882,"line_start":23,"line_end":23,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1680},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":21941,"byte_end":21948,"line_start":26,"line_end":26,"column_start":5,"column_end":12},"name":"Integer","qualname":"::value::Value::Integer","value":"Value::Integer(i64)","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":" Represents a TOML integer\n","sig":null,"attributes":[{"value":"/ Represents a TOML integer","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":21907,"byte_end":21936,"line_start":25,"line_end":25,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1683},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":21991,"byte_end":21996,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Float","qualname":"::value::Value::Float","value":"Value::Float(f64)","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":" Represents a TOML float\n","sig":null,"attributes":[{"value":"/ Represents a TOML float","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":21959,"byte_end":21986,"line_start":27,"line_end":27,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1686},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22041,"byte_end":22048,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::value::Value::Boolean","value":"Value::Boolean(bool)","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":" Represents a TOML boolean\n","sig":null,"attributes":[{"value":"/ Represents a TOML boolean","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22007,"byte_end":22036,"line_start":29,"line_end":29,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1689},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22095,"byte_end":22103,"line_start":32,"line_end":32,"column_start":5,"column_end":13},"name":"Datetime","qualname":"::value::Value::Datetime","value":"Value::Datetime(Datetime)","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":" Represents a TOML datetime\n","sig":null,"attributes":[{"value":"/ Represents a TOML datetime","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22060,"byte_end":22090,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1692},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22151,"byte_end":22156,"line_start":34,"line_end":34,"column_start":5,"column_end":10},"name":"Array","qualname":"::value::Value::Array","value":"Value::Array(Array)","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":" Represents a TOML array\n","sig":null,"attributes":[{"value":"/ Represents a TOML array","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22119,"byte_end":22146,"line_start":33,"line_end":33,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1695},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22201,"byte_end":22206,"line_start":36,"line_end":36,"column_start":5,"column_end":10},"name":"Table","qualname":"::value::Value::Table","value":"Value::Table(Table)","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":" Represents a TOML table\n","sig":null,"attributes":[{"value":"/ Represents a TOML table","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22169,"byte_end":22196,"line_start":35,"line_end":35,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1676},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":21842,"byte_end":21847,"line_start":22,"line_end":22,"column_start":10,"column_end":15},"name":"Value","qualname":"::value::Value","value":"pub enum Value {\n    String(String),\n    Integer(i64),\n    Float(f64),\n    Boolean(bool),\n    Datetime(Datetime),\n    Array(Array),\n    Table(Table),\n}","parent":null,"children":[{"krate":0,"index":1677},{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1686},{"krate":0,"index":1689},{"krate":0,"index":1692},{"krate":0,"index":1695}],"decl_id":null,"docs":" Representation of a TOML value.\n","sig":null,"attributes":[{"value":"/ Representation of a TOML value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":21762,"byte_end":21797,"line_start":20,"line_end":20,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":253},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22301,"byte_end":22306,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Array","qualname":"::value::Array","value":"Vec<Value>","parent":null,"children":[],"decl_id":null,"docs":" Type representing a TOML array, payload of the `Value::Array` variant\n","sig":null,"attributes":[{"value":"/ Type representing a TOML array, payload of the `Value::Array` variant","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22218,"byte_end":22291,"line_start":39,"line_end":39,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":254},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22521,"byte_end":22526,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"name":"Table","qualname":"::value::Table","value":"Map<String, Value>","parent":null,"children":[],"decl_id":null,"docs":" Type representing a TOML table, payload of the `Value::Table` variant.\n By default it is backed by a BTreeMap, enable the `preserve_order` feature\n to use a LinkedHashMap instead.\n","sig":null,"attributes":[{"value":"/ Type representing a TOML table, payload of the `Value::Table` variant.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22322,"byte_end":22396,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ By default it is backed by a BTreeMap, enable the `preserve_order` feature","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22397,"byte_end":22475,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ to use a LinkedHashMap instead.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22476,"byte_end":22511,"line_start":44,"line_end":44,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22832,"byte_end":22840,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Value>::try_from","value":"pub fn try_from<T>(T) -> Result<Value, crate::ser::Error> where\nT: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Convert a `T` into `toml::Value` which is an enum that can represent\n any valid TOML data.","sig":null,"attributes":[{"value":"/ Convert a `T` into `toml::Value` which is an enum that can represent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22567,"byte_end":22639,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/ any valid TOML data.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22644,"byte_end":22668,"line_start":49,"line_end":49,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22673,"byte_end":22676,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This conversion can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22681,"byte_end":22759,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ fail, or if `T` contains a map with non-string keys.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22764,"byte_end":22820,"line_start":52,"line_end":52,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":23576,"byte_end":23584,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"try_into","qualname":"<Value>::try_into","value":"pub fn try_into<'de, T>(Self) -> Result<T, crate::de::Error> where\nT: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Interpret a `toml::Value` as an instance of type `T`.","sig":null,"attributes":[{"value":"/ Interpret a `toml::Value` as an instance of type `T`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22980,"byte_end":23037,"line_start":60,"line_end":60,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":23042,"byte_end":23045,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This conversion can fail if the structure of the `Value` does not match the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":23050,"byte_end":23129,"line_start":62,"line_end":62,"column_start":5,"column_end":84}},{"value":"/ structure expected by `T`, for example if `T` is a struct type but the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":23134,"byte_end":23208,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ `Value` contains something other than a TOML table. It can also fail if the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":23213,"byte_end":23292,"line_start":64,"line_end":64,"column_start":5,"column_end":84}},{"value":"/ structure is correct but `T`'s implementation of `Deserialize` decides that","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":23297,"byte_end":23376,"line_start":65,"line_end":65,"column_start":5,"column_end":84}},{"value":"/ something is wrong with the data, for example required struct fields are","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":23381,"byte_end":23457,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ missing from the TOML map or some number is too big to fit in the expected","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":23462,"byte_end":23540,"line_start":67,"line_end":67,"column_start":5,"column_end":83}},{"value":"/ primitive type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":23545,"byte_end":23564,"line_start":68,"line_end":68,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":24224,"byte_end":24227,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"get","qualname":"<Value>::get","value":"pub fn get<I: Index>(&Self, I) -> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Index into a TOML array or map. A string index can be used to access a\n value in a map, and a usize index can be used to access an element of an\n array.","sig":null,"attributes":[{"value":"/ Index into a TOML array or map. A string index can be used to access a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":23733,"byte_end":23807,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ value in a map, and a usize index can be used to access an element of an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":23812,"byte_end":23888,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ array.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":23893,"byte_end":23903,"line_start":78,"line_end":78,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":23908,"byte_end":23911,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the type of `self` does not match the type of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":23916,"byte_end":23987,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ index, for example if the index is a string and `self` is an array or a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":23992,"byte_end":24067,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ number. Also returns `None` if the given key does not exist in the map","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":24072,"byte_end":24146,"line_start":82,"line_end":82,"column_start":5,"column_end":79}},{"value":"/ or the given index is not within the bounds of the array.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":24151,"byte_end":24212,"line_start":83,"line_end":83,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":24811,"byte_end":24818,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Value>::get_mut","value":"pub fn get_mut<I: Index>(&mut Self, I) -> Option<&mut Value>","parent":null,"children":[],"decl_id":null,"docs":" Mutably index into a TOML array or map. A string index can be used to\n access a value in a map, and a usize index can be used to access an\n element of an array.","sig":null,"attributes":[{"value":"/ Mutably index into a TOML array or map. A string index can be used to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":24312,"byte_end":24385,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ access a value in a map, and a usize index can be used to access an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":24390,"byte_end":24461,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ element of an array.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":24466,"byte_end":24490,"line_start":90,"line_end":90,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":24495,"byte_end":24498,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the type of `self` does not match the type of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":24503,"byte_end":24574,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ index, for example if the index is a string and `self` is an array or a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":24579,"byte_end":24654,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ number. Also returns `None` if the given key does not exist in the map","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":24659,"byte_end":24733,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ or the given index is not within the bounds of the array.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":24738,"byte_end":24799,"line_start":95,"line_end":95,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":24978,"byte_end":24988,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"as_integer","qualname":"<Value>::as_integer","value":"pub fn as_integer(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the integer value if it is an integer.\n","sig":null,"attributes":[{"value":"/ Extracts the integer value if it is an integer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":24915,"byte_end":24966,"line_start":100,"line_end":100,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":25176,"byte_end":25186,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"is_integer","qualname":"<Value>::is_integer","value":"pub fn is_integer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is an integer.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is an integer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":25121,"byte_end":25164,"line_start":108,"line_end":108,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":25309,"byte_end":25317,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"as_float","qualname":"<Value>::as_float","value":"pub fn as_float(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the float value if it is a float.\n","sig":null,"attributes":[{"value":"/ Extracts the float value if it is a float.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":25251,"byte_end":25297,"line_start":113,"line_end":113,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":25500,"byte_end":25508,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"is_float","qualname":"<Value>::is_float","value":"pub fn is_float(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a float.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a float.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":25448,"byte_end":25488,"line_start":121,"line_end":121,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":25633,"byte_end":25640,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"as_bool","qualname":"<Value>::as_bool","value":"pub fn as_bool(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the boolean value if it is a boolean.\n","sig":null,"attributes":[{"value":"/ Extracts the boolean value if it is a boolean.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":25571,"byte_end":25621,"line_start":126,"line_end":126,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":25828,"byte_end":25835,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"is_bool","qualname":"<Value>::is_bool","value":"pub fn is_bool(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a boolean.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a boolean.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":25774,"byte_end":25816,"line_start":134,"line_end":134,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":25965,"byte_end":25971,"line_start":140,"line_end":140,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Value>::as_str","value":"pub fn as_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the string of this value if it is a string.\n","sig":null,"attributes":[{"value":"/ Extracts the string of this value if it is a string.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":25897,"byte_end":25953,"line_start":139,"line_end":139,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":26159,"byte_end":26165,"line_start":148,"line_end":148,"column_start":12,"column_end":18},"name":"is_str","qualname":"<Value>::is_str","value":"pub fn is_str(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if this value is a string.\n","sig":null,"attributes":[{"value":"/ Tests if this value is a string.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":26111,"byte_end":26147,"line_start":147,"line_end":147,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":26466,"byte_end":26477,"line_start":160,"line_end":160,"column_start":12,"column_end":23},"name":"as_datetime","qualname":"<Value>::as_datetime","value":"pub fn as_datetime(&Self) -> Option<&Datetime>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the datetime value if it is a datetime.","sig":null,"attributes":[{"value":"/ Extracts the datetime value if it is a datetime.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":26226,"byte_end":26278,"line_start":152,"line_end":152,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":26283,"byte_end":26286,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Note that a parsed TOML value will only contain ISO 8601 dates. An","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":26291,"byte_end":26361,"line_start":154,"line_end":154,"column_start":5,"column_end":75}},{"value":"/ example date is:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":26366,"byte_end":26386,"line_start":155,"line_end":155,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":26391,"byte_end":26394,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":26399,"byte_end":26413,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/ 1979-05-27T07:32:00Z","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":26418,"byte_end":26442,"line_start":158,"line_end":158,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":26447,"byte_end":26454,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":26676,"byte_end":26687,"line_start":168,"line_end":168,"column_start":12,"column_end":23},"name":"is_datetime","qualname":"<Value>::is_datetime","value":"pub fn is_datetime(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a datetime.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a datetime.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":26621,"byte_end":26664,"line_start":167,"line_end":167,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":26812,"byte_end":26820,"line_start":173,"line_end":173,"column_start":12,"column_end":20},"name":"as_array","qualname":"<Value>::as_array","value":"pub fn as_array(&Self) -> Option<&Vec<Value>>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the array value if it is an array.\n","sig":null,"attributes":[{"value":"/ Extracts the array value if it is an array.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":26753,"byte_end":26800,"line_start":172,"line_end":172,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":27022,"byte_end":27034,"line_start":181,"line_end":181,"column_start":12,"column_end":24},"name":"as_array_mut","qualname":"<Value>::as_array_mut","value":"pub fn as_array_mut(&mut Self) -> Option<&mut Vec<Value>>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the array value if it is an array.\n","sig":null,"attributes":[{"value":"/ Extracts the array value if it is an array.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":26963,"byte_end":27010,"line_start":180,"line_end":180,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":27242,"byte_end":27250,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"is_array","qualname":"<Value>::is_array","value":"pub fn is_array(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is an array.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is an array.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":27189,"byte_end":27230,"line_start":188,"line_end":188,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":27371,"byte_end":27379,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"as_table","qualname":"<Value>::as_table","value":"pub fn as_table(&Self) -> Option<&Table>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the table value if it is a table.\n","sig":null,"attributes":[{"value":"/ Extracts the table value if it is a table.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":27313,"byte_end":27359,"line_start":193,"line_end":193,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":27575,"byte_end":27587,"line_start":202,"line_end":202,"column_start":12,"column_end":24},"name":"as_table_mut","qualname":"<Value>::as_table_mut","value":"pub fn as_table_mut(&mut Self) -> Option<&mut Table>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the table value if it is a table.\n","sig":null,"attributes":[{"value":"/ Extracts the table value if it is a table.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":27517,"byte_end":27563,"line_start":201,"line_end":201,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":27789,"byte_end":27797,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"is_table","qualname":"<Value>::is_table","value":"pub fn is_table(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a table.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a table.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":27737,"byte_end":27777,"line_start":209,"line_end":209,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":27932,"byte_end":27941,"line_start":215,"line_end":215,"column_start":12,"column_end":21},"name":"same_type","qualname":"<Value>::same_type","value":"pub fn same_type(&Self, &Value) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this and another value have the same type.\n","sig":null,"attributes":[{"value":"/ Tests whether this and another value have the same type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":27860,"byte_end":27920,"line_start":214,"line_end":214,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":28117,"byte_end":28125,"line_start":220,"line_end":220,"column_start":12,"column_end":20},"name":"type_str","qualname":"<Value>::type_str","value":"pub fn type_str(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns a human-readable representation of the type of this value.\n","sig":null,"attributes":[{"value":"/ Returns a human-readable representation of the type of this value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":28035,"byte_end":28105,"line_start":219,"line_end":219,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":308},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":30473,"byte_end":30478,"line_start":312,"line_end":312,"column_start":11,"column_end":16},"name":"Index","qualname":"::value::Index","value":"Index: Sealed","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":311}],"decl_id":null,"docs":" Types that can be used to index a `toml::Value`","sig":null,"attributes":[{"value":"/ Types that can be used to index a `toml::Value`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":30216,"byte_end":30267,"line_start":305,"line_end":305,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":30268,"byte_end":30271,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ Currently this is implemented for `usize` to index arrays and `str` to index","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":30272,"byte_end":30352,"line_start":307,"line_end":307,"column_start":1,"column_end":81}},{"value":"/ tables.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":30353,"byte_end":30364,"line_start":308,"line_end":308,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":30365,"byte_end":30368,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and not intended for implementation outside of the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":30369,"byte_end":30444,"line_start":310,"line_end":310,"column_start":1,"column_end":76}},{"value":"/ `toml` crate.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":30445,"byte_end":30462,"line_start":311,"line_end":311,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":30515,"byte_end":30520,"line_start":314,"line_end":314,"column_start":8,"column_end":13},"name":"index","qualname":"::value::Index::index","value":"pub fn index<'a>(&Self, &'a Value) -> Option<&'a Value>","parent":{"krate":0,"index":308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":30596,"byte_end":30605,"line_start":316,"line_end":316,"column_start":8,"column_end":17},"name":"index_mut","qualname":"::value::Index::index_mut","value":"pub fn index_mut<'a>(&Self, &'a mut Value) -> Option<&'a mut Value>","parent":{"krate":0,"index":308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":313},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":30813,"byte_end":30819,"line_start":322,"line_end":322,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::value::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" An implementation detail that should not be implemented, this will change in\n the future and break code otherwise.\n","sig":null,"attributes":[{"value":"/ An implementation detail that should not be implemented, this will change in","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":30666,"byte_end":30746,"line_start":319,"line_end":319,"column_start":1,"column_end":81}},{"value":"/ the future and break code otherwise.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":30747,"byte_end":30787,"line_start":320,"line_end":320,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1778},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55601,"byte_end":55609,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"Datetime","qualname":"::datetime::Datetime","value":"Datetime { date, time, offset }","parent":null,"children":[{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781}],"decl_id":null,"docs":" A parsed TOML datetime value","sig":null,"attributes":[{"value":"/ A parsed TOML datetime value","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":52449,"byte_end":52481,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":52482,"byte_end":52485,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure is intended to represent the datetime primitive type that can","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":52486,"byte_end":52566,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ be encoded into TOML documents. This type is a parsed version that contains","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":52567,"byte_end":52646,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ all metadata internally.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":52647,"byte_end":52675,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":52676,"byte_end":52679,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Currently this type is intentionally conservative and only supports","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":52680,"byte_end":52751,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ `to_string` as an accessor. Over time though it's intended that it'll grow","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":52752,"byte_end":52830,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ more support!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":52831,"byte_end":52848,"line_start":15,"line_end":15,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":52849,"byte_end":52852,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Note that if you're using `Deserialize` to deserialize a TOML document, you","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":52853,"byte_end":52932,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ can use this as a placeholder for where you're expecting a datetime to be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":52933,"byte_end":53010,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ specified.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53011,"byte_end":53025,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53026,"byte_end":53029,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Also note though that while this type implements `Serialize` and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53030,"byte_end":53098,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ `Deserialize` it's only recommended to use this type with the TOML format,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53099,"byte_end":53177,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ otherwise encoded in other formats it may look a little odd.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53178,"byte_end":53242,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53243,"byte_end":53246,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Depending on how the option values are used, this struct will correspond","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53247,"byte_end":53323,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ with one of the following four datetimes from the [TOML v1.0.0 spec]:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53324,"byte_end":53397,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53398,"byte_end":53401,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ | `date`    | `time`    | `offset`  | TOML type          |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53402,"byte_end":53464,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/ | --------- | --------- | --------- | ------------------ |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53465,"byte_end":53527,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ | `Some(_)` | `Some(_)` | `Some(_)` | [Offset Date-Time] |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53528,"byte_end":53590,"line_start":30,"line_end":30,"column_start":1,"column_end":63}},{"value":"/ | `Some(_)` | `Some(_)` | `None`    | [Local Date-Time]  |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53591,"byte_end":53653,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/ | `Some(_)` | `None`    | `None`    | [Local Date]       |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53654,"byte_end":53716,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ | `None`    | `Some(_)` | `None`    | [Local Time]       |","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53717,"byte_end":53779,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53780,"byte_end":53783,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **1. Offset Date-Time**: If all the optional values are used, `Datetime`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53784,"byte_end":53860,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ corresponds to an [Offset Date-Time]. From the TOML v1.0.0 spec:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53861,"byte_end":53929,"line_start":36,"line_end":36,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53930,"byte_end":53933,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ > To unambiguously represent a specific instant in time, you may use an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":53934,"byte_end":54009,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ > RFC 3339 formatted date-time with offset.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54010,"byte_end":54057,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ >","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54058,"byte_end":54063,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ > ```toml","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54064,"byte_end":54077,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/ > odt1 = 1979-05-27T07:32:00Z","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54078,"byte_end":54111,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/ > odt2 = 1979-05-27T00:32:00-07:00","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54112,"byte_end":54150,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/ > odt3 = 1979-05-27T00:32:00.999999-07:00","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54151,"byte_end":54196,"line_start":44,"line_end":44,"column_start":1,"column_end":46}},{"value":"/ > ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54197,"byte_end":54206,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ >","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54207,"byte_end":54212,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ > For the sake of readability, you may replace the T delimiter between date","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54213,"byte_end":54292,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ > and time with a space character (as permitted by RFC 3339 section 5.6).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54293,"byte_end":54370,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ >","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54371,"byte_end":54376,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ > ```toml","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54377,"byte_end":54390,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/ > odt4 = 1979-05-27 07:32:00Z","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54391,"byte_end":54424,"line_start":51,"line_end":51,"column_start":1,"column_end":34}},{"value":"/ > ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54425,"byte_end":54434,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54435,"byte_end":54438,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ **2. Local Date-Time**: If `date` and `time` are given but `offset` is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54439,"byte_end":54513,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ `None`, `Datetime` corresponds to a [Local Date-Time]. From the spec:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54514,"byte_end":54587,"line_start":55,"line_end":55,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54588,"byte_end":54591,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ > If you omit the offset from an RFC 3339 formatted date-time, it will","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54592,"byte_end":54666,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ > represent the given date-time without any relation to an offset or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54667,"byte_end":54739,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ > timezone. It cannot be converted to an instant in time without additional","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54740,"byte_end":54819,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ > information. Conversion to an instant, if required, is implementation-","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54820,"byte_end":54896,"line_start":60,"line_end":60,"column_start":1,"column_end":77}},{"value":"/ > specific.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54897,"byte_end":54912,"line_start":61,"line_end":61,"column_start":1,"column_end":16}},{"value":"/ >","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54913,"byte_end":54918,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ > ```toml","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54919,"byte_end":54932,"line_start":63,"line_end":63,"column_start":1,"column_end":14}},{"value":"/ > ldt1 = 1979-05-27T07:32:00","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54933,"byte_end":54965,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ > ldt2 = 1979-05-27T00:32:00.999999","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":54966,"byte_end":55005,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ > ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55006,"byte_end":55015,"line_start":66,"line_end":66,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55016,"byte_end":55019,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **3. Local Date**: If only `date` is given, `Datetime` corresponds to a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55020,"byte_end":55095,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ [Local Date]; see the docs for [`Date`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55096,"byte_end":55140,"line_start":69,"line_end":69,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55141,"byte_end":55144,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ **4. Local Time**: If only `time` is given, `Datetime` corresponds to a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55145,"byte_end":55220,"line_start":71,"line_end":71,"column_start":1,"column_end":76}},{"value":"/ [Local Time]; see the docs for [`Time`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55221,"byte_end":55265,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55266,"byte_end":55269,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [TOML v1.0.0 spec]: https://toml.io/en/v1.0.0","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55270,"byte_end":55319,"line_start":74,"line_end":74,"column_start":1,"column_end":50}},{"value":"/ [Offset Date-Time]: https://toml.io/en/v1.0.0#offset-date-time","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55320,"byte_end":55386,"line_start":75,"line_end":75,"column_start":1,"column_end":67}},{"value":"/ [Local Date-Time]: https://toml.io/en/v1.0.0#local-date-time","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55387,"byte_end":55451,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"/ [Local Date]: https://toml.io/en/v1.0.0#local-date","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55452,"byte_end":55506,"line_start":77,"line_end":77,"column_start":1,"column_end":55}},{"value":"/ [Local Time]: https://toml.io/en/v1.0.0#local-time","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55507,"byte_end":55561,"line_start":78,"line_end":78,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1779},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55718,"byte_end":55722,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"name":"date","qualname":"::datetime::Datetime::date","value":"std::option::Option<datetime::Date>","parent":{"krate":0,"index":1778},"children":[],"decl_id":null,"docs":" Optional date.\n Required for: *Offset Date-Time*, *Local Date-Time*, *Local Date*.\n","sig":null,"attributes":[{"value":"/ Optional date.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55616,"byte_end":55634,"line_start":81,"line_end":81,"column_start":5,"column_end":23}},{"value":"/ Required for: *Offset Date-Time*, *Local Date-Time*, *Local Date*.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55639,"byte_end":55709,"line_start":82,"line_end":82,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1780},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55845,"byte_end":55849,"line_start":87,"line_end":87,"column_start":9,"column_end":13},"name":"time","qualname":"::datetime::Datetime::time","value":"std::option::Option<datetime::Time>","parent":{"krate":0,"index":1778},"children":[],"decl_id":null,"docs":" Optional time.\n Required for: *Offset Date-Time*, *Local Date-Time*, *Local Time*.\n","sig":null,"attributes":[{"value":"/ Optional time.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55743,"byte_end":55761,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ Required for: *Offset Date-Time*, *Local Date-Time*, *Local Time*.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55766,"byte_end":55836,"line_start":86,"line_end":86,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1781},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55941,"byte_end":55947,"line_start":91,"line_end":91,"column_start":9,"column_end":15},"name":"offset","qualname":"::datetime::Datetime::offset","value":"std::option::Option<datetime::Offset>","parent":{"krate":0,"index":1778},"children":[],"decl_id":null,"docs":" Optional offset.\n Required for: *Offset Date-Time*.\n","sig":null,"attributes":[{"value":"/ Optional offset.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55870,"byte_end":55890,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/ Required for: *Offset Date-Time*.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55895,"byte_end":55932,"line_start":90,"line_end":90,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1788},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":56081,"byte_end":56099,"line_start":96,"line_end":96,"column_start":12,"column_end":30},"name":"DatetimeParseError","qualname":"::datetime::DatetimeParseError","value":"DatetimeParseError {  }","parent":null,"children":[{"krate":0,"index":1789}],"decl_id":null,"docs":" Error returned from parsing a `Datetime` in the `FromStr` implementation.\n","sig":null,"attributes":[{"value":"/ Error returned from parsing a `Datetime` in the `FromStr` implementation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":55968,"byte_end":56045,"line_start":94,"line_end":94,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1794},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57025,"byte_end":57029,"line_start":124,"line_end":124,"column_start":12,"column_end":16},"name":"Date","qualname":"::datetime::Date","value":"Date { year, month, day }","parent":null,"children":[{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797}],"decl_id":null,"docs":" A parsed TOML date value","sig":null,"attributes":[{"value":"/ A parsed TOML date value","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":56554,"byte_end":56582,"line_start":109,"line_end":109,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":56583,"byte_end":56586,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ May be part of a [`Datetime`]. Alone, `Date` corresponds to a [Local Date].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":56587,"byte_end":56666,"line_start":111,"line_end":111,"column_start":1,"column_end":80}},{"value":"/ From the TOML v1.0.0 spec:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":56667,"byte_end":56697,"line_start":112,"line_end":112,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":56698,"byte_end":56701,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ > If you include only the date portion of an RFC 3339 formatted date-time,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":56702,"byte_end":56780,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/ > it will represent that entire day without any relation to an offset or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":56781,"byte_end":56857,"line_start":115,"line_end":115,"column_start":1,"column_end":77}},{"value":"/ > timezone.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":56858,"byte_end":56873,"line_start":116,"line_end":116,"column_start":1,"column_end":16}},{"value":"/ >","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":56874,"byte_end":56879,"line_start":117,"line_end":117,"column_start":1,"column_end":6}},{"value":"/ > ```toml","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":56880,"byte_end":56893,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/ > ld1 = 1979-05-27","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":56894,"byte_end":56916,"line_start":119,"line_end":119,"column_start":1,"column_end":23}},{"value":"/ > ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":56917,"byte_end":56926,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":56927,"byte_end":56930,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ [Local Date]: https://toml.io/en/v1.0.0#local-date","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":56931,"byte_end":56985,"line_start":122,"line_end":122,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1795},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57066,"byte_end":57070,"line_start":126,"line_end":126,"column_start":9,"column_end":13},"name":"year","qualname":"::datetime::Date::year","value":"u16","parent":{"krate":0,"index":1794},"children":[],"decl_id":null,"docs":" Year: four digits\n","sig":null,"attributes":[{"value":"/ Year: four digits","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57036,"byte_end":57057,"line_start":125,"line_end":125,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1796},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57108,"byte_end":57113,"line_start":128,"line_end":128,"column_start":9,"column_end":14},"name":"month","qualname":"::datetime::Date::month","value":"u8","parent":{"krate":0,"index":1794},"children":[],"decl_id":null,"docs":" Month: 1 to 12\n","sig":null,"attributes":[{"value":"/ Month: 1 to 12","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57081,"byte_end":57099,"line_start":127,"line_end":127,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1797},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57184,"byte_end":57187,"line_start":130,"line_end":130,"column_start":9,"column_end":12},"name":"day","qualname":"::datetime::Date::day","value":"u8","parent":{"krate":0,"index":1794},"children":[],"decl_id":null,"docs":" Day: 1 to {28, 29, 30, 31} (based on month/year)\n","sig":null,"attributes":[{"value":"/ Day: 1 to {28, 29, 30, 31} (based on month/year)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57123,"byte_end":57175,"line_start":129,"line_end":129,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1804},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57980,"byte_end":57984,"line_start":154,"line_end":154,"column_start":12,"column_end":16},"name":"Time","qualname":"::datetime::Time","value":"Time { hour, minute, second, nanosecond }","parent":null,"children":[{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808}],"decl_id":null,"docs":" A parsed TOML time value","sig":null,"attributes":[{"value":"/ A parsed TOML time value","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57196,"byte_end":57224,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57225,"byte_end":57228,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ May be part of a [`Datetime`]. Alone, `Time` corresponds to a [Local Time].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57229,"byte_end":57308,"line_start":135,"line_end":135,"column_start":1,"column_end":80}},{"value":"/ From the TOML v1.0.0 spec:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57309,"byte_end":57339,"line_start":136,"line_end":136,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57340,"byte_end":57343,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ > If you include only the time portion of an RFC 3339 formatted date-time,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57344,"byte_end":57422,"line_start":138,"line_end":138,"column_start":1,"column_end":79}},{"value":"/ > it will represent that time of day without any relation to a specific","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57423,"byte_end":57498,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/ > day or any offset or timezone.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57499,"byte_end":57535,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/ >","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57536,"byte_end":57541,"line_start":141,"line_end":141,"column_start":1,"column_end":6}},{"value":"/ > ```toml","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57542,"byte_end":57555,"line_start":142,"line_end":142,"column_start":1,"column_end":14}},{"value":"/ > lt1 = 07:32:00","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57556,"byte_end":57576,"line_start":143,"line_end":143,"column_start":1,"column_end":21}},{"value":"/ > lt2 = 00:32:00.999999","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57577,"byte_end":57604,"line_start":144,"line_end":144,"column_start":1,"column_end":28}},{"value":"/ > ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57605,"byte_end":57614,"line_start":145,"line_end":145,"column_start":1,"column_end":10}},{"value":"/ >","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57615,"byte_end":57620,"line_start":146,"line_end":146,"column_start":1,"column_end":6}},{"value":"/ > Millisecond precision is required. Further precision of fractional","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57621,"byte_end":57693,"line_start":147,"line_end":147,"column_start":1,"column_end":73}},{"value":"/ > seconds is implementation-specific. If the value contains greater","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57694,"byte_end":57765,"line_start":148,"line_end":148,"column_start":1,"column_end":72}},{"value":"/ > precision than the implementation can support, the additional precision","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57766,"byte_end":57843,"line_start":149,"line_end":149,"column_start":1,"column_end":78}},{"value":"/ > must be truncated, not rounded.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57844,"byte_end":57881,"line_start":150,"line_end":150,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57882,"byte_end":57885,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ [Local Time]: https://toml.io/en/v1.0.0#local-time","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57886,"byte_end":57940,"line_start":152,"line_end":152,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1805},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58017,"byte_end":58021,"line_start":156,"line_end":156,"column_start":9,"column_end":13},"name":"hour","qualname":"::datetime::Time::hour","value":"u8","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Hour: 0 to 23\n","sig":null,"attributes":[{"value":"/ Hour: 0 to 23","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":57991,"byte_end":58008,"line_start":155,"line_end":155,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1806},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58059,"byte_end":58065,"line_start":158,"line_end":158,"column_start":9,"column_end":15},"name":"minute","qualname":"::datetime::Time::minute","value":"u8","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Minute: 0 to 59\n","sig":null,"attributes":[{"value":"/ Minute: 0 to 59","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58031,"byte_end":58050,"line_start":157,"line_end":157,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1807},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58142,"byte_end":58148,"line_start":160,"line_end":160,"column_start":9,"column_end":15},"name":"second","qualname":"::datetime::Time::second","value":"u8","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Second: 0 to {58, 59, 60} (based on leap second rules)\n","sig":null,"attributes":[{"value":"/ Second: 0 to {58, 59, 60} (based on leap second rules)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58075,"byte_end":58133,"line_start":159,"line_end":159,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1808},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58199,"byte_end":58209,"line_start":162,"line_end":162,"column_start":9,"column_end":19},"name":"nanosecond","qualname":"::datetime::Time::nanosecond","value":"u32","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Nanosecond: 0 to 999_999_999\n","sig":null,"attributes":[{"value":"/ Nanosecond: 0 to 999_999_999","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58158,"byte_end":58190,"line_start":161,"line_end":161,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1816},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58609,"byte_end":58610,"line_start":174,"line_end":174,"column_start":5,"column_end":6},"name":"Z","qualname":"::datetime::Offset::Z","value":"Offset::Z","parent":{"krate":0,"index":1815},"children":[],"decl_id":null,"docs":" > A suffix which, when applied to a time, denotes a UTC offset of 00:00;\n > often spoken \"Zulu\" from the ICAO phonetic alphabet representation of\n > the letter \"Z\". --- [RFC 3339 section 2]","sig":null,"attributes":[{"value":"/ > A suffix which, when applied to a time, denotes a UTC offset of 00:00;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58303,"byte_end":58379,"line_start":169,"line_end":169,"column_start":5,"column_end":81}},{"value":"/ > often spoken \"Zulu\" from the ICAO phonetic alphabet representation of","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58384,"byte_end":58459,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ > the letter \"Z\". --- [RFC 3339 section 2]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58464,"byte_end":58510,"line_start":171,"line_end":171,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58515,"byte_end":58518,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ [RFC 3339 section 2]: https://datatracker.ietf.org/doc/html/rfc3339#section-2","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58523,"byte_end":58604,"line_start":173,"line_end":173,"column_start":5,"column_end":86}}]},{"kind":"StructVariant","id":{"krate":0,"index":1818},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58659,"byte_end":58665,"line_start":177,"line_end":177,"column_start":5,"column_end":11},"name":"Custom","qualname":"::datetime::Offset::Custom","value":"Offset::Custom { hours, minutes }","parent":{"krate":0,"index":1815},"children":[],"decl_id":null,"docs":" Offset between local time and UTC\n","sig":null,"attributes":[{"value":"/ Offset between local time and UTC","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58617,"byte_end":58654,"line_start":176,"line_end":176,"column_start":5,"column_end":42}}]},{"kind":"Enum","id":{"krate":0,"index":1815},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58290,"byte_end":58296,"line_start":168,"line_end":168,"column_start":10,"column_end":16},"name":"Offset","qualname":"::datetime::Offset","value":"pub enum Offset {\n    Z,\n    Custom {\n            hours: i8,\n            minutes: u8,\n        },\n}","parent":null,"children":[{"krate":0,"index":1816},{"krate":0,"index":1818}],"decl_id":null,"docs":" A parsed TOML time offset","sig":null,"attributes":[{"value":"/ A parsed TOML time offset","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58219,"byte_end":58248,"line_start":165,"line_end":165,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58249,"byte_end":58252,"line_start":166,"line_end":166,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":624},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":1827},{"krate":0,"index":1849},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":1863},{"krate":0,"index":1865},{"krate":0,"index":1867},{"krate":0,"index":657},{"krate":0,"index":1869},{"krate":0,"index":1871},{"krate":0,"index":1873},{"krate":0,"index":1875},{"krate":0,"index":659},{"krate":0,"index":1877},{"krate":0,"index":1880},{"krate":0,"index":1882},{"krate":0,"index":1884},{"krate":0,"index":661},{"krate":0,"index":1886},{"krate":0,"index":1891},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1896},{"krate":0,"index":1910},{"krate":0,"index":1913},{"krate":0,"index":666},{"krate":0,"index":673},{"krate":0,"index":684},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":761},{"krate":0,"index":769},{"krate":0,"index":777},{"krate":0,"index":785},{"krate":0,"index":793},{"krate":0,"index":803},{"krate":0,"index":811},{"krate":0,"index":816},{"krate":0,"index":859},{"krate":0,"index":861},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":915},{"krate":0,"index":924},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":973},{"krate":0,"index":980},{"krate":0,"index":987},{"krate":0,"index":994},{"krate":0,"index":1001},{"krate":0,"index":1010}],"decl_id":null,"docs":" Serializing Rust structures into TOML.","sig":null,"attributes":[{"value":"/ Serializing Rust structures into TOML.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":69627,"byte_end":69669,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":69670,"byte_end":69673,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains all the Serde support for serializing Rust structures","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":69674,"byte_end":69752,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ into TOML documents (as strings). Note that some top-level functions here","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":69753,"byte_end":69830,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ are also provided at the top of the crate.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":69831,"byte_end":69877,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":69878,"byte_end":69881,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Note that the TOML format has a restriction that if a table itself contains","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":69882,"byte_end":69961,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tables, all keys with non-table values must be emitted first. This is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":69962,"byte_end":70035,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ typically easy to ensure happens when you're defining a `struct` as you can","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70036,"byte_end":70115,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ reorder the fields manually, but when working with maps (such as `BTreeMap`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70116,"byte_end":70195,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ or `HashMap`) this can lead to serialization errors. In those situations you","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70196,"byte_end":70276,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ may use the `tables_last` function in this module like so:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70277,"byte_end":70339,"line_start":12,"line_end":12,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70340,"byte_end":70343,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70344,"byte_end":70355,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70356,"byte_end":70390,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70391,"byte_end":70427,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70428,"byte_end":70452,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/ struct Manifest {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70453,"byte_end":70474,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/     package: Package,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70475,"byte_end":70500,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/     #[serde(serialize_with = \"toml::ser::tables_last\")]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70501,"byte_end":70560,"line_start":20,"line_end":20,"column_start":1,"column_end":60}},{"value":"/     dependencies: HashMap<String, Dependency>,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70561,"byte_end":70611,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70612,"byte_end":70617,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # type Package = String;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70618,"byte_end":70646,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ # type Dependency = String;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70647,"byte_end":70678,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/ # fn main() {}","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70679,"byte_end":70697,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70698,"byte_end":70705,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":650},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71151,"byte_end":71157,"line_start":42,"line_end":42,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::ser::to_vec","value":"pub fn to_vec<T: ?Sized>(&T) -> Result<Vec<u8>, Error> where T: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a TOML byte vector.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a TOML byte vector.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70846,"byte_end":70907,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70908,"byte_end":70911,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70912,"byte_end":70988,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ fail, if `T` contains a map with non-string keys, or if `T` attempts to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":70989,"byte_end":71064,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ serialize an unsupported datatype such as an enum, tuple, or tuple struct.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71065,"byte_end":71143,"line_start":41,"line_end":41,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":653},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72261,"byte_end":72270,"line_start":87,"line_end":87,"column_start":8,"column_end":17},"name":"to_string","qualname":"::ser::to_string","value":"pub fn to_string<T: ?Sized>(&T) -> Result<String, Error> where\nT: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a String of TOML.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a String of TOML.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71285,"byte_end":71344,"line_start":49,"line_end":49,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71345,"byte_end":71348,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71349,"byte_end":71425,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ fail, if `T` contains a map with non-string keys, or if `T` attempts to","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71426,"byte_end":71501,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ serialize an unsupported datatype such as an enum, tuple, or tuple struct.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71502,"byte_end":71580,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71581,"byte_end":71584,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71585,"byte_end":71599,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71600,"byte_end":71603,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71604,"byte_end":71611,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use serde_derive::Serialize;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71612,"byte_end":71644,"line_start":58,"line_end":58,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71645,"byte_end":71648,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71649,"byte_end":71673,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/ struct Config {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71674,"byte_end":71693,"line_start":61,"line_end":61,"column_start":1,"column_end":20}},{"value":"/     database: Database,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71694,"byte_end":71721,"line_start":62,"line_end":62,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71722,"byte_end":71727,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71728,"byte_end":71731,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71732,"byte_end":71756,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/ struct Database {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71757,"byte_end":71778,"line_start":66,"line_end":66,"column_start":1,"column_end":22}},{"value":"/     ip: String,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71779,"byte_end":71798,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/     port: Vec<u16>,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71799,"byte_end":71822,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/     connection_max: u32,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71823,"byte_end":71851,"line_start":69,"line_end":69,"column_start":1,"column_end":29}},{"value":"/     enabled: bool,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71852,"byte_end":71874,"line_start":70,"line_end":70,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71875,"byte_end":71880,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71881,"byte_end":71884,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71885,"byte_end":71900,"line_start":73,"line_end":73,"column_start":1,"column_end":16}},{"value":"/     let config = Config {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71901,"byte_end":71930,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/         database: Database {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71931,"byte_end":71963,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/             ip: \"192.168.1.1\".to_string(),","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":71964,"byte_end":72010,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/             port: vec![8001, 8002, 8003],","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72011,"byte_end":72056,"line_start":77,"line_end":77,"column_start":1,"column_end":46}},{"value":"/             connection_max: 5000,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72057,"byte_end":72094,"line_start":78,"line_end":78,"column_start":1,"column_end":38}},{"value":"/             enabled: false,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72095,"byte_end":72126,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/         },","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72127,"byte_end":72141,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/     };","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72142,"byte_end":72152,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72153,"byte_end":72156,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     let toml = toml::to_string(&config).unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72157,"byte_end":72210,"line_start":83,"line_end":83,"column_start":1,"column_end":54}},{"value":"/     println!(\"{}\", toml)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72211,"byte_end":72239,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72240,"byte_end":72245,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72246,"byte_end":72253,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":655},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72681,"byte_end":72697,"line_start":100,"line_end":100,"column_start":8,"column_end":24},"name":"to_string_pretty","qualname":"::ser::to_string_pretty","value":"pub fn to_string_pretty<T: ?Sized>(&T) -> Result<String, Error> where\nT: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a \"pretty\" String of TOML.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a \"pretty\" String of TOML.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72464,"byte_end":72532,"line_start":96,"line_end":96,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72533,"byte_end":72536,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This is identical to `to_string` except the output string has a more","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72537,"byte_end":72609,"line_start":98,"line_end":98,"column_start":1,"column_end":73}},{"value":"/ \"pretty\" output. See `Serializer::pretty` for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72610,"byte_end":72673,"line_start":99,"line_end":99,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1828},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73231,"byte_end":73246,"line_start":117,"line_end":117,"column_start":5,"column_end":20},"name":"UnsupportedType","qualname":"::ser::Error::UnsupportedType","value":"Error::UnsupportedType","parent":{"krate":0,"index":1827},"children":[],"decl_id":null,"docs":" Indicates that a Rust type was requested to be serialized but it was not\n supported.","sig":null,"attributes":[{"value":"/ Indicates that a Rust type was requested to be serialized but it was not","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73005,"byte_end":73081,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ supported.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73086,"byte_end":73100,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73105,"byte_end":73108,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Currently the TOML format does not support serializing types such as","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73113,"byte_end":73185,"line_start":115,"line_end":115,"column_start":5,"column_end":77}},{"value":"/ enums, tuples and tuple structs.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73190,"byte_end":73226,"line_start":116,"line_end":116,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1830},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73384,"byte_end":73396,"line_start":121,"line_end":121,"column_start":5,"column_end":17},"name":"KeyNotString","qualname":"::ser::Error::KeyNotString","value":"Error::KeyNotString","parent":{"krate":0,"index":1827},"children":[],"decl_id":null,"docs":" The key of all TOML maps must be strings, but serialization was\n attempted where the key of a map was not a string.\n","sig":null,"attributes":[{"value":"/ The key of all TOML maps must be strings, but serialization was","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73253,"byte_end":73320,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/ attempted where the key of a map was not a string.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73325,"byte_end":73379,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1832},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73495,"byte_end":73505,"line_start":125,"line_end":125,"column_start":5,"column_end":15},"name":"KeyNewline","qualname":"::ser::Error::KeyNewline","value":"Error::KeyNewline","parent":{"krate":0,"index":1827},"children":[],"decl_id":null,"docs":" An error that we never omit but keep for backwards compatibility\n","sig":null,"attributes":[{"value":"/ An error that we never omit but keep for backwards compatibility","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73403,"byte_end":73471,"line_start":123,"line_end":123,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1834},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73612,"byte_end":73626,"line_start":129,"line_end":129,"column_start":5,"column_end":19},"name":"ArrayMixedType","qualname":"::ser::Error::ArrayMixedType","value":"Error::ArrayMixedType","parent":{"krate":0,"index":1827},"children":[],"decl_id":null,"docs":" An array had to be homogenous, but now it is allowed to be heterogenous.\n","sig":null,"attributes":[{"value":"/ An array had to be homogenous, but now it is allowed to be heterogenous.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73512,"byte_end":73588,"line_start":127,"line_end":127,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1836},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73803,"byte_end":73818,"line_start":134,"line_end":134,"column_start":5,"column_end":20},"name":"ValueAfterTable","qualname":"::ser::Error::ValueAfterTable","value":"Error::ValueAfterTable","parent":{"krate":0,"index":1827},"children":[],"decl_id":null,"docs":" All values in a TOML table must be emitted before further tables are\n emitted. If a value is emitted *after* a table then this error is\n generated.\n","sig":null,"attributes":[{"value":"/ All values in a TOML table must be emitted before further tables are","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73633,"byte_end":73705,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"/ emitted. If a value is emitted *after* a table then this error is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73710,"byte_end":73779,"line_start":132,"line_end":132,"column_start":5,"column_end":74}},{"value":"/ generated.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73784,"byte_end":73798,"line_start":133,"line_end":133,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1838},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73864,"byte_end":73875,"line_start":137,"line_end":137,"column_start":5,"column_end":16},"name":"DateInvalid","qualname":"::ser::Error::DateInvalid","value":"Error::DateInvalid","parent":{"krate":0,"index":1827},"children":[],"decl_id":null,"docs":" A serialized date was invalid.\n","sig":null,"attributes":[{"value":"/ A serialized date was invalid.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73825,"byte_end":73859,"line_start":136,"line_end":136,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1840},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73923,"byte_end":73936,"line_start":140,"line_end":140,"column_start":5,"column_end":18},"name":"NumberInvalid","qualname":"::ser::Error::NumberInvalid","value":"Error::NumberInvalid","parent":{"krate":0,"index":1827},"children":[],"decl_id":null,"docs":" A serialized number was invalid.\n","sig":null,"attributes":[{"value":"/ A serialized number was invalid.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73882,"byte_end":73918,"line_start":139,"line_end":139,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1842},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":74012,"byte_end":74027,"line_start":143,"line_end":143,"column_start":5,"column_end":20},"name":"UnsupportedNone","qualname":"::ser::Error::UnsupportedNone","value":"Error::UnsupportedNone","parent":{"krate":0,"index":1827},"children":[],"decl_id":null,"docs":" None was attempted to be serialized, but it's not supported.\n","sig":null,"attributes":[{"value":"/ None was attempted to be serialized, but it's not supported.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":73943,"byte_end":74007,"line_start":142,"line_end":142,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1844},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":74126,"byte_end":74132,"line_start":147,"line_end":147,"column_start":5,"column_end":11},"name":"Custom","qualname":"::ser::Error::Custom","value":"Error::Custom(String)","parent":{"krate":0,"index":1827},"children":[],"decl_id":null,"docs":" A custom error which could be generated when serializing a particular\n type.\n","sig":null,"attributes":[{"value":"/ A custom error which could be generated when serializing a particular","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":74034,"byte_end":74107,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":74112,"byte_end":74121,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1847},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":74166,"byte_end":74181,"line_start":150,"line_end":150,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::ser::Error::__Nonexhaustive","value":"Error::__Nonexhaustive","parent":{"krate":0,"index":1827},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1827},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72993,"byte_end":72998,"line_start":111,"line_end":111,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::Error","value":"pub enum Error {\n    UnsupportedType,\n    KeyNotString,\n    KeyNewline,\n    ArrayMixedType,\n    ValueAfterTable,\n    DateInvalid,\n    NumberInvalid,\n    UnsupportedNone,\n    Custom(String),\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":1828},{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1834},{"krate":0,"index":1836},{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":1844},{"krate":0,"index":1847}],"decl_id":null,"docs":" Errors that can occur when serializing a type.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when serializing a type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":72894,"byte_end":72944,"line_start":109,"line_end":109,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":661},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":75403,"byte_end":75413,"line_start":198,"line_end":198,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::ser::Serializer","value":"Serializer {  }","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665}],"decl_id":null,"docs":" Serialization implementation for TOML.","sig":null,"attributes":[{"value":"/ Serialization implementation for TOML.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":74930,"byte_end":74972,"line_start":189,"line_end":189,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":74973,"byte_end":74976,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ This structure implements serialization support for TOML to serialize an","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":74977,"byte_end":75053,"line_start":191,"line_end":191,"column_start":1,"column_end":77}},{"value":"/ arbitrary type to TOML. Note that the TOML format does not support all","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":75054,"byte_end":75128,"line_start":192,"line_end":192,"column_start":1,"column_end":75}},{"value":"/ datatypes in Rust, such as enums, tuples, and tuple structs. These types","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":75129,"byte_end":75205,"line_start":193,"line_end":193,"column_start":1,"column_end":77}},{"value":"/ will generate an error when serialized.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":75206,"byte_end":75249,"line_start":194,"line_end":194,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":75250,"byte_end":75253,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Currently a serializer always writes its output to an in-memory `String`,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":75254,"byte_end":75331,"line_start":196,"line_end":196,"column_start":1,"column_end":78}},{"value":"/ which is passed in when creating the serializer itself.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":75332,"byte_end":75391,"line_start":197,"line_end":197,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":666},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":75958,"byte_end":75970,"line_start":228,"line_end":228,"column_start":12,"column_end":24},"name":"SerializeSeq","qualname":"::ser::SerializeSeq","value":"SerializeSeq {  }","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":676},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":76154,"byte_end":76162,"line_start":237,"line_end":237,"column_start":5,"column_end":13},"name":"Datetime","qualname":"::ser::SerializeTable::Datetime","value":"SerializeTable::Datetime(&'b mut Serializer)","parent":{"krate":0,"index":673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":679},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":76192,"byte_end":76197,"line_start":238,"line_end":238,"column_start":5,"column_end":10},"name":"Table","qualname":"::ser::SerializeTable::Table","value":"SerializeTable::Table { ser, key, first, table_emitted }","parent":{"krate":0,"index":673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":673},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":76125,"byte_end":76139,"line_start":236,"line_end":236,"column_start":10,"column_end":24},"name":"SerializeTable","qualname":"::ser::SerializeTable","value":"pub enum SerializeTable<'a, 'b> {\n    Datetime(&'b mut Serializer),\n    Table {\n            ser: &'b mut Serializer,\n            key: String,\n            first: Cell<bool>,\n            table_emitted: Cell<bool>,\n        },\n}","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":679}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":76570,"byte_end":76573,"line_start":251,"line_end":251,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer>::new","value":"pub fn new(&'a mut String) -> Serializer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new serializer which will emit TOML into the buffer provided.","sig":null,"attributes":[{"value":"/ Creates a new serializer which will emit TOML into the buffer provided.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":76360,"byte_end":76435,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":76440,"byte_end":76443,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ The serializer can then be used to serialize a type after which the data","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":76448,"byte_end":76524,"line_start":249,"line_end":249,"column_start":5,"column_end":81}},{"value":"/ will be present in `dst`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":76529,"byte_end":76558,"line_start":250,"line_end":250,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77132,"byte_end":77138,"line_start":267,"line_end":267,"column_start":12,"column_end":18},"name":"pretty","qualname":"<Serializer>::pretty","value":"pub fn pretty(&'a mut String) -> Serializer","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a \"pretty\" formatter","sig":null,"attributes":[{"value":"/ Instantiate a \"pretty\" formatter","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":76757,"byte_end":76793,"line_start":259,"line_end":259,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":76798,"byte_end":76801,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ By default this will use:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":76806,"byte_end":76835,"line_start":261,"line_end":261,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":76840,"byte_end":76843,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ - pretty strings: strings with newlines will use the `'''` syntax. See","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":76848,"byte_end":76922,"line_start":263,"line_end":263,"column_start":5,"column_end":79}},{"value":"/   `Serializer::pretty_string`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":76927,"byte_end":76960,"line_start":264,"line_end":264,"column_start":5,"column_end":38}},{"value":"/ - pretty arrays: each item in arrays will be on a newline, have an indentation of 4 and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":76965,"byte_end":77056,"line_start":265,"line_end":265,"column_start":5,"column_end":96}},{"value":"/   have a trailing comma. See `Serializer::pretty_array`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77061,"byte_end":77120,"line_start":266,"line_end":266,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77967,"byte_end":77980,"line_start":301,"line_end":301,"column_start":12,"column_end":25},"name":"pretty_string","qualname":"<Serializer>::pretty_string","value":"pub fn pretty_string(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable pretty strings","sig":null,"attributes":[{"value":"/ Enable or Disable pretty strings","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77437,"byte_end":77473,"line_start":278,"line_end":278,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77478,"byte_end":77481,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ If enabled, literal strings will be used when possible and strings with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77486,"byte_end":77561,"line_start":280,"line_end":280,"column_start":5,"column_end":80}},{"value":"/ one or more newlines will use triple quotes (i.e.: `'''` or `\"\"\"`)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77566,"byte_end":77636,"line_start":281,"line_end":281,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77641,"byte_end":77644,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77649,"byte_end":77663,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77668,"byte_end":77671,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77676,"byte_end":77691,"line_start":285,"line_end":285,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77696,"byte_end":77699,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77704,"byte_end":77722,"line_start":287,"line_end":287,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77727,"byte_end":77753,"line_start":288,"line_end":288,"column_start":5,"column_end":31}},{"value":"/ text = \"\\nfoo\\nbar\\n\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77758,"byte_end":77783,"line_start":289,"line_end":289,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77788,"byte_end":77795,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77800,"byte_end":77803,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77808,"byte_end":77826,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77831,"byte_end":77834,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77839,"byte_end":77857,"line_start":294,"line_end":294,"column_start":5,"column_end":23}},{"value":"/ single = 'no newlines'","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77862,"byte_end":77888,"line_start":295,"line_end":295,"column_start":5,"column_end":31}},{"value":"/ text = '''","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77893,"byte_end":77907,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/ foo","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77912,"byte_end":77919,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ bar","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77924,"byte_end":77931,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ '''","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77936,"byte_end":77943,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":77948,"byte_end":77955,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78876,"byte_end":78897,"line_start":336,"line_end":336,"column_start":12,"column_end":33},"name":"pretty_string_literal","qualname":"<Serializer>::pretty_string_literal","value":"pub fn pretty_string_literal(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable Literal strings for pretty strings","sig":null,"attributes":[{"value":"/ Enable or Disable Literal strings for pretty strings","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78201,"byte_end":78257,"line_start":310,"line_end":310,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78262,"byte_end":78265,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ If enabled, literal strings will be used when possible and strings with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78270,"byte_end":78345,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ one or more newlines will use triple quotes (i.e.: `'''` or `\"\"\"`)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78350,"byte_end":78420,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78425,"byte_end":78428,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ If disabled, literal strings will NEVER be used and strings with one or","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78433,"byte_end":78508,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ more newlines will use `\"\"\"`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78513,"byte_end":78545,"line_start":316,"line_end":316,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78550,"byte_end":78553,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78558,"byte_end":78572,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78577,"byte_end":78580,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78585,"byte_end":78600,"line_start":320,"line_end":320,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78605,"byte_end":78608,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78613,"byte_end":78631,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78636,"byte_end":78662,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/ text = \"\\nfoo\\nbar\\n\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78667,"byte_end":78692,"line_start":324,"line_end":324,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78697,"byte_end":78704,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78709,"byte_end":78712,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78717,"byte_end":78735,"line_start":327,"line_end":327,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78740,"byte_end":78743,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78748,"byte_end":78766,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78771,"byte_end":78797,"line_start":330,"line_end":330,"column_start":5,"column_end":31}},{"value":"/ text = \"\"\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78802,"byte_end":78816,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/ foo","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78821,"byte_end":78828,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ bar","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78833,"byte_end":78840,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ \"\"\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78845,"byte_end":78852,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":78857,"byte_end":78864,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":80058,"byte_end":80070,"line_start":379,"line_end":379,"column_start":12,"column_end":24},"name":"pretty_array","qualname":"<Serializer>::pretty_array","value":"pub fn pretty_array(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable pretty arrays","sig":null,"attributes":[{"value":"/ Enable or Disable pretty arrays","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79359,"byte_end":79394,"line_start":352,"line_end":352,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79399,"byte_end":79402,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If enabled, arrays will always have each item on their own line.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79407,"byte_end":79475,"line_start":354,"line_end":354,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79480,"byte_end":79483,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Some specific features can be controlled via other builder methods:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79488,"byte_end":79559,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79564,"byte_end":79567,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ - `Serializer::pretty_array_indent`: set the indent to a value other","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79572,"byte_end":79644,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/   than 4.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79649,"byte_end":79662,"line_start":359,"line_end":359,"column_start":5,"column_end":18}},{"value":"/ - `Serializer::pretty_array_trailing_comma`: enable/disable the trailing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79667,"byte_end":79743,"line_start":360,"line_end":360,"column_start":5,"column_end":81}},{"value":"/   comma on the last item.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79748,"byte_end":79777,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79782,"byte_end":79785,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79790,"byte_end":79804,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79809,"byte_end":79812,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79817,"byte_end":79832,"line_start":365,"line_end":365,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79837,"byte_end":79840,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79845,"byte_end":79863,"line_start":367,"line_end":367,"column_start":5,"column_end":23}},{"value":"/ array = [\"foo\", \"bar\"]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79868,"byte_end":79894,"line_start":368,"line_end":368,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79899,"byte_end":79906,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79911,"byte_end":79914,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79919,"byte_end":79937,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79942,"byte_end":79945,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79950,"byte_end":79968,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/ array = [","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79973,"byte_end":79986,"line_start":374,"line_end":374,"column_start":5,"column_end":18}},{"value":"/     \"foo\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":79991,"byte_end":80005,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/     \"bar\",","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":80010,"byte_end":80024,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/ ]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":80029,"byte_end":80034,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":80039,"byte_end":80046,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":80402,"byte_end":80421,"line_start":391,"line_end":391,"column_start":12,"column_end":31},"name":"pretty_array_indent","qualname":"<Serializer>::pretty_array_indent","value":"pub fn pretty_array_indent(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the indent for pretty arrays","sig":null,"attributes":[{"value":"/ Set the indent for pretty arrays","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":80289,"byte_end":80325,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":80330,"byte_end":80333,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ See `Serializer::pretty_array` for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":80338,"byte_end":80390,"line_start":390,"line_end":390,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":81027,"byte_end":81054,"line_start":410,"line_end":410,"column_start":12,"column_end":39},"name":"pretty_array_trailing_comma","qualname":"<Serializer>::pretty_array_trailing_comma","value":"pub fn pretty_array_trailing_comma(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specify whether to use a trailing comma when serializing pretty arrays","sig":null,"attributes":[{"value":"/ Specify whether to use a trailing comma when serializing pretty arrays","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":80876,"byte_end":80950,"line_start":407,"line_end":407,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":80955,"byte_end":80958,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ See `Serializer::pretty_array` for more details.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":80963,"byte_end":81015,"line_start":409,"line_end":409,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":915},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":116470,"byte_end":116481,"line_start":1585,"line_end":1585,"column_start":8,"column_end":19},"name":"tables_last","qualname":"::ser::tables_last","value":"pub fn tables_last<'a, I, K, V, S>(&'a I, S) -> Result<S::Ok, S::Error> where\n&'a I: IntoIterator<Item = (K, V)>, K: ser::Serialize, V: ser::Serialize,\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to serialize items in a map in an order valid with\n TOML.","sig":null,"attributes":[{"value":"/ Convenience function to serialize items in a map in an order valid with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":115814,"byte_end":115889,"line_start":1565,"line_end":1565,"column_start":1,"column_end":76}},{"value":"/ TOML.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":115890,"byte_end":115899,"line_start":1566,"line_end":1566,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":115900,"byte_end":115903,"line_start":1567,"line_end":1567,"column_start":1,"column_end":4}},{"value":"/ TOML carries the restriction that keys in a table must be serialized last if","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":115904,"byte_end":115984,"line_start":1568,"line_end":1568,"column_start":1,"column_end":81}},{"value":"/ their value is a table itself. This isn't always easy to guarantee, so this","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":115985,"byte_end":116064,"line_start":1569,"line_end":1569,"column_start":1,"column_end":80}},{"value":"/ helper can be used like so:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":116065,"byte_end":116096,"line_start":1570,"line_end":1570,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":116097,"byte_end":116100,"line_start":1571,"line_end":1571,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":116101,"byte_end":116112,"line_start":1572,"line_end":1572,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":116113,"byte_end":116147,"line_start":1573,"line_end":1573,"column_start":1,"column_end":35}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":116148,"byte_end":116184,"line_start":1574,"line_end":1574,"column_start":1,"column_end":37}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":116185,"byte_end":116209,"line_start":1575,"line_end":1575,"column_start":1,"column_end":25}},{"value":"/ struct Manifest {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":116210,"byte_end":116231,"line_start":1576,"line_end":1576,"column_start":1,"column_end":22}},{"value":"/     package: Package,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":116232,"byte_end":116257,"line_start":1577,"line_end":1577,"column_start":1,"column_end":26}},{"value":"/     #[serde(serialize_with = \"toml::ser::tables_last\")]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":116258,"byte_end":116317,"line_start":1578,"line_end":1578,"column_start":1,"column_end":60}},{"value":"/     dependencies: HashMap<String, Dependency>,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":116318,"byte_end":116368,"line_start":1579,"line_end":1579,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":116369,"byte_end":116374,"line_start":1580,"line_end":1580,"column_start":1,"column_end":6}},{"value":"/ # type Package = String;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":116375,"byte_end":116403,"line_start":1581,"line_end":1581,"column_start":1,"column_end":29}},{"value":"/ # type Dependency = String;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":116404,"byte_end":116435,"line_start":1582,"line_end":1582,"column_start":1,"column_end":32}},{"value":"/ # fn main() {}","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":116436,"byte_end":116454,"line_start":1583,"line_end":1583,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":116455,"byte_end":116462,"line_start":1584,"line_end":1584,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1030},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","parent":null,"children":[{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1037},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1067},{"krate":0,"index":1070},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1083},{"krate":0,"index":1086},{"krate":0,"index":1088},{"krate":0,"index":1091},{"krate":0,"index":1928},{"krate":0,"index":1930},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1939},{"krate":0,"index":1941},{"krate":0,"index":1948},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1959},{"krate":0,"index":2018},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2027},{"krate":0,"index":1094},{"krate":0,"index":1100},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1124},{"krate":0,"index":1130},{"krate":0,"index":1144},{"krate":0,"index":1161},{"krate":0,"index":1174},{"krate":0,"index":1188},{"krate":0,"index":1192},{"krate":0,"index":1196},{"krate":0,"index":1201},{"krate":0,"index":1208},{"krate":0,"index":1212},{"krate":0,"index":1216},{"krate":0,"index":1233},{"krate":0,"index":1238},{"krate":0,"index":1243},{"krate":0,"index":1247},{"krate":0,"index":1254},{"krate":0,"index":1262},{"krate":0,"index":1266},{"krate":0,"index":1273},{"krate":0,"index":1275},{"krate":0,"index":1280},{"krate":0,"index":1284},{"krate":0,"index":1291},{"krate":0,"index":1295},{"krate":0,"index":1302},{"krate":0,"index":1309},{"krate":0,"index":1312},{"krate":0,"index":1325},{"krate":0,"index":1394},{"krate":0,"index":1404},{"krate":0,"index":1406},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1422},{"krate":0,"index":1428},{"krate":0,"index":2287},{"krate":0,"index":2292},{"krate":0,"index":2295},{"krate":0,"index":2321},{"krate":0,"index":1433}],"decl_id":null,"docs":" Deserializing TOML into Rust structures.","sig":null,"attributes":[{"value":"/ Deserializing TOML into Rust structures.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":123530,"byte_end":123574,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":123575,"byte_end":123578,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains all the Serde support for deserializing TOML documents","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":123579,"byte_end":123658,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ into Rust structures. Note that some top-level functions here are also","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":123659,"byte_end":123733,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ provided at the top of the crate.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":123734,"byte_end":123771,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1088},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124424,"byte_end":124434,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::de::from_slice","value":"pub fn from_slice<'de, T>(&'de [u8]) -> Result<T, Error> where\nT: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a byte slice into a type.","sig":null,"attributes":[{"value":"/ Deserializes a byte slice into a type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124242,"byte_end":124284,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124285,"byte_end":124288,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will attempt to interpret `bytes` as UTF-8 data and then","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124289,"byte_end":124363,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ deserialize `T` from the TOML document provided.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124364,"byte_end":124416,"line_start":31,"line_end":31,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":1091},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125346,"byte_end":125354,"line_start":75,"line_end":75,"column_start":8,"column_end":16},"name":"from_str","qualname":"::de::from_str","value":"pub fn from_str<'de, T>(&'de str) -> Result<T, Error> where T: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a string into a type.","sig":null,"attributes":[{"value":"/ Deserializes a string into a type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124650,"byte_end":124688,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124689,"byte_end":124692,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This function will attempt to interpret `s` as a TOML document and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124693,"byte_end":124763,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/ deserialize `T` from the document.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124764,"byte_end":124802,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124803,"byte_end":124806,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124807,"byte_end":124821,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124822,"byte_end":124825,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124826,"byte_end":124833,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ use serde_derive::Deserialize;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124834,"byte_end":124868,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124869,"byte_end":124872,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124873,"byte_end":124899,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/ struct Config {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124900,"byte_end":124919,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/     title: String,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124920,"byte_end":124942,"line_start":54,"line_end":54,"column_start":1,"column_end":23}},{"value":"/     owner: Owner,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124943,"byte_end":124964,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124965,"byte_end":124970,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124971,"byte_end":124974,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":124975,"byte_end":125001,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/ struct Owner {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125002,"byte_end":125020,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/     name: String,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125021,"byte_end":125042,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125043,"byte_end":125048,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125049,"byte_end":125052,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125053,"byte_end":125068,"line_start":63,"line_end":63,"column_start":1,"column_end":16}},{"value":"/     let config: Config = toml::from_str(r#\"","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125069,"byte_end":125116,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/         title = 'TOML Example'","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125117,"byte_end":125151,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125152,"byte_end":125155,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/         [owner]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125156,"byte_end":125175,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/         name = 'Lisa'","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125176,"byte_end":125201,"line_start":68,"line_end":68,"column_start":1,"column_end":26}},{"value":"/     \"#).unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125202,"byte_end":125223,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125224,"byte_end":125227,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(config.title, \"TOML Example\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125228,"byte_end":125277,"line_start":71,"line_end":71,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(config.owner.name, \"Lisa\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125278,"byte_end":125324,"line_start":72,"line_end":72,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125325,"byte_end":125330,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125331,"byte_end":125338,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1928},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125642,"byte_end":125647,"line_start":87,"line_end":87,"column_start":12,"column_end":17},"name":"Error","qualname":"::de::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1929}],"decl_id":null,"docs":" Errors that can occur when deserializing a type.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when deserializing a type.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":125539,"byte_end":125591,"line_start":85,"line_end":85,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1094},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":128633,"byte_end":128645,"line_start":202,"line_end":202,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::de::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099}],"decl_id":null,"docs":" Deserialization implementation for TOML.\n","sig":null,"attributes":[{"value":"/ Deserialization implementation for TOML.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":128577,"byte_end":128621,"line_start":201,"line_end":201,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1327},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":163571,"byte_end":163574,"line_start":1269,"line_end":1269,"column_start":12,"column_end":15},"name":"new","qualname":"<Deserializer>::new","value":"pub fn new(&'a str) -> Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new deserializer which will be deserializing the string\n provided.\n","sig":null,"attributes":[{"value":"/ Creates a new deserializer which will be deserializing the string","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":163472,"byte_end":163541,"line_start":1267,"line_end":1267,"column_start":5,"column_end":74}},{"value":"/ provided.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":163546,"byte_end":163559,"line_start":1268,"line_end":1268,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":164081,"byte_end":164084,"line_start":1282,"line_end":1282,"column_start":12,"column_end":15},"name":"end","qualname":"<Deserializer>::end","value":"pub fn end(&mut Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" The `Deserializer::end` method should be called after a value has been\n fully deserialized.  This allows the `Deserializer` to validate that the\n input stream is at the end or that it only has trailing\n whitespace/comments.\n","sig":null,"attributes":[{"value":"/ The `Deserializer::end` method should be called after a value has been","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":163821,"byte_end":163895,"line_start":1278,"line_end":1278,"column_start":5,"column_end":79}},{"value":"/ fully deserialized.  This allows the `Deserializer` to validate that the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":163900,"byte_end":163976,"line_start":1279,"line_end":1279,"column_start":5,"column_end":81}},{"value":"/ input stream is at the end or that it only has trailing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":163981,"byte_end":164040,"line_start":1280,"line_end":1280,"column_start":5,"column_end":64}},{"value":"/ whitespace/comments.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":164045,"byte_end":164069,"line_start":1281,"line_end":1281,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":164498,"byte_end":164529,"line_start":1292,"line_end":1292,"column_start":12,"column_end":43},"name":"set_require_newline_after_table","qualname":"<Deserializer>::set_require_newline_after_table","value":"pub fn set_require_newline_after_table(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Historical versions of toml-rs accidentally allowed a newline after a\n table definition, but the TOML spec requires a newline after a table\n definition header.","sig":null,"attributes":[{"value":"/ Historical versions of toml-rs accidentally allowed a newline after a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":164145,"byte_end":164218,"line_start":1286,"line_end":1286,"column_start":5,"column_end":78}},{"value":"/ table definition, but the TOML spec requires a newline after a table","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":164223,"byte_end":164295,"line_start":1287,"line_end":1287,"column_start":5,"column_end":77}},{"value":"/ definition header.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":164300,"byte_end":164322,"line_start":1288,"line_end":1288,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":164327,"byte_end":164330,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ This option can be set to `false` (the default is `true`) to emulate","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":164335,"byte_end":164407,"line_start":1290,"line_end":1290,"column_start":5,"column_end":77}},{"value":"/ this behavior for backwards compatibility with older toml-rs versions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":164412,"byte_end":164486,"line_start":1291,"line_end":1291,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":164998,"byte_end":165036,"line_start":1302,"line_end":1302,"column_start":12,"column_end":50},"name":"set_allow_duplicate_after_longer_table","qualname":"<Deserializer>::set_allow_duplicate_after_longer_table","value":"pub fn set_allow_duplicate_after_longer_table(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Historical versions of toml-rs accidentally allowed a duplicate table\n header after a longer table header was previously defined. This is\n invalid according to the TOML spec, however.","sig":null,"attributes":[{"value":"/ Historical versions of toml-rs accidentally allowed a duplicate table","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":164621,"byte_end":164694,"line_start":1296,"line_end":1296,"column_start":5,"column_end":78}},{"value":"/ header after a longer table header was previously defined. This is","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":164699,"byte_end":164769,"line_start":1297,"line_end":1297,"column_start":5,"column_end":75}},{"value":"/ invalid according to the TOML spec, however.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":164774,"byte_end":164822,"line_start":1298,"line_end":1298,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":164827,"byte_end":164830,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ This option can be set to `true` (the default is `false`) to emulate","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":164835,"byte_end":164907,"line_start":1300,"line_end":1300,"column_start":5,"column_end":77}},{"value":"/ this behavior for backwards compatibility with older toml-rs versions.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":164912,"byte_end":164986,"line_start":1301,"line_end":1301,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":190194,"byte_end":190202,"line_start":2028,"line_end":2028,"column_start":12,"column_end":20},"name":"line_col","qualname":"<Error>::line_col","value":"pub fn line_col(&Self) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Produces a (line, column) pair of the position of the error if available","sig":null,"attributes":[{"value":"/ Produces a (line, column) pair of the position of the error if available","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":190065,"byte_end":190141,"line_start":2025,"line_end":2025,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":190146,"byte_end":190149,"line_start":2026,"line_end":2026,"column_start":5,"column_end":8}},{"value":"/ All indexes are 0-based.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":190154,"byte_end":190182,"line_start":2027,"line_end":2027,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2324},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/tokens.rs","byte_start":197693,"byte_end":197697,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Span","qualname":"::tokens::Span","value":"Span { start, end }","parent":null,"children":[{"krate":0,"index":2325},{"krate":0,"index":2326}],"decl_id":null,"docs":" A span, designating a range of bytes where a token is located.\n","sig":null,"attributes":[{"value":"/ A span, designating a range of bytes where a token is located.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/tokens.rs","byte_start":197570,"byte_end":197636,"line_start":9,"line_end":9,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":2325},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/tokens.rs","byte_start":197740,"byte_end":197745,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"start","qualname":"::tokens::Span::start","value":"usize","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":" The start of the range.\n","sig":null,"attributes":[{"value":"/ The start of the range.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/tokens.rs","byte_start":197704,"byte_end":197731,"line_start":12,"line_end":12,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2326},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/tokens.rs","byte_start":197804,"byte_end":197807,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"name":"end","qualname":"::tokens::Span::end","value":"usize","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":" The end of the range (exclusive).\n","sig":null,"attributes":[{"value":"/ The end of the range (exclusive).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/tokens.rs","byte_start":197758,"byte_end":197795,"line_start":14,"line_end":14,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":1516},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/macros.rs","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1521},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1528},{"krate":0,"index":1531},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1536},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/macros.rs","byte_start":240395,"byte_end":240406,"line_start":413,"line_end":413,"column_start":8,"column_end":19},"name":"insert_toml","qualname":"::macros::insert_toml","value":"pub fn insert_toml(&mut Value, &[&str], Value)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1537},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/macros.rs","byte_start":240606,"byte_end":240615,"line_start":419,"line_end":419,"column_start":8,"column_end":17},"name":"push_toml","qualname":"::macros::push_toml","value":"pub fn push_toml(&mut Value, &[&str])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2456},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242848,"byte_end":242855,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Spanned","qualname":"::spanned::Spanned","value":"Spanned {  }","parent":null,"children":[{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460}],"decl_id":null,"docs":" A spanned value, indicating the range at which it is defined in the source.","sig":null,"attributes":[{"value":"/ A spanned value, indicating the range at which it is defined in the source.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242275,"byte_end":242354,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242355,"byte_end":242358,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242359,"byte_end":242366,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use serde_derive::Deserialize;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242367,"byte_end":242401,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/ use toml::Spanned;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242402,"byte_end":242424,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242425,"byte_end":242428,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242429,"byte_end":242455,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/ struct Value {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242456,"byte_end":242474,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/     s: Spanned<String>,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242475,"byte_end":242502,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242503,"byte_end":242508,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242509,"byte_end":242512,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242513,"byte_end":242528,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     let t = \"s = \\\"value\\\"\\n\";","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242529,"byte_end":242563,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242564,"byte_end":242567,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     let u: Value = toml::from_str(t).unwrap();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242568,"byte_end":242618,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242619,"byte_end":242622,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(u.s.start(), 4);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242623,"byte_end":242658,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/     assert_eq!(u.s.end(), 11);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242659,"byte_end":242693,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/     assert_eq!(u.s.get_ref(), \"value\");","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242694,"byte_end":242737,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/     assert_eq!(u.s.into_inner(), String::from(\"value\"));","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242738,"byte_end":242798,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242799,"byte_end":242804,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":242805,"byte_end":242812,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243092,"byte_end":243097,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"start","qualname":"<Spanned<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Access the start of the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Access the start of the span of the contained value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243024,"byte_end":243080,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243212,"byte_end":243215,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"end","qualname":"<Spanned<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Access the end of the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Access the end of the span of the contained value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243146,"byte_end":243200,"line_start":50,"line_end":50,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243314,"byte_end":243318,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"span","qualname":"<Spanned<T>>::span","value":"pub fn span(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Get the span of the contained value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243262,"byte_end":243302,"line_start":55,"line_end":55,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243463,"byte_end":243473,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Spanned<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the spanned value and returns the contained value.\n","sig":null,"attributes":[{"value":"/ Consumes the spanned value and returns the contained value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243388,"byte_end":243451,"line_start":60,"line_end":60,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243576,"byte_end":243583,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Spanned<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243517,"byte_end":243564,"line_start":65,"line_end":65,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243697,"byte_end":243704,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Spanned<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243630,"byte_end":243685,"line_start":70,"line_end":70,"column_start":5,"column_end":60}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":6058,"byte_end":6061,"line_start":41,"line_end":41,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":10696,"byte_end":10699,"line_start":203,"line_end":203,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":10839,"byte_end":10842,"line_start":212,"line_end":212,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":10991,"byte_end":10994,"line_start":221,"line_end":221,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":11240,"byte_end":11243,"line_start":230,"line_end":230,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":11565,"byte_end":11568,"line_start":244,"line_end":244,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":11783,"byte_end":11786,"line_start":254,"line_end":254,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":11965,"byte_end":11968,"line_start":261,"line_end":261,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":12391,"byte_end":12394,"line_start":277,"line_end":277,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":12605,"byte_end":12612,"line_start":285,"line_end":285,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":13502,"byte_end":13505,"line_start":319,"line_end":319,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":13739,"byte_end":13742,"line_start":330,"line_end":330,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":15980,"byte_end":15985,"line_start":407,"line_end":407,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17013,"byte_end":17024,"line_start":439,"line_end":439,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17458,"byte_end":17471,"line_start":455,"line_end":455,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":19949,"byte_end":19952,"line_start":546,"line_end":546,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22555,"byte_end":22560,"line_start":47,"line_end":47,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":28521,"byte_end":28526,"line_start":233,"line_end":233,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":28705,"byte_end":28710,"line_start":244,"line_end":244,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":28877,"byte_end":28882,"line_start":253,"line_end":253,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":29022,"byte_end":29027,"line_start":260,"line_end":260,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":29204,"byte_end":29209,"line_start":266,"line_end":266,"column_start":64,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":29450,"byte_end":29455,"line_start":274,"line_end":274,"column_start":75,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":30887,"byte_end":30893,"line_start":325,"line_end":325,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":31740,"byte_end":31746,"line_start":360,"line_end":360,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":32257,"byte_end":32262,"line_start":383,"line_end":383,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":32469,"byte_end":32474,"line_start":391,"line_end":391,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":32625,"byte_end":32630,"line_start":398,"line_end":398,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":34365,"byte_end":34370,"line_start":445,"line_end":445,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":34558,"byte_end":34570,"line_start":452,"line_end":452,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":37865,"byte_end":37870,"line_start":545,"line_end":545,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":1728},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1742},{"krate":0,"index":1744},{"krate":0,"index":1746},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1760},{"krate":0,"index":1762},{"krate":0,"index":1764},{"krate":0,"index":1766},{"krate":0,"index":1768},{"krate":0,"index":1770},{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1776}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":40579,"byte_end":40594,"line_start":633,"line_end":633,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":40748,"byte_end":40763,"line_start":641,"line_end":641,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":41408,"byte_end":41423,"line_start":667,"line_end":667,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":41610,"byte_end":41625,"line_start":676,"line_end":676,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":42752,"byte_end":42757,"line_start":714,"line_end":714,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":42899,"byte_end":42909,"line_start":724,"line_end":724,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":48243,"byte_end":48255,"line_start":914,"line_end":914,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":48648,"byte_end":48660,"line_start":931,"line_end":931,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":49056,"byte_end":49068,"line_start":947,"line_end":947,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":49463,"byte_end":49475,"line_start":963,"line_end":963,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":49861,"byte_end":49873,"line_start":979,"line_end":979,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":50882,"byte_end":50894,"line_start":1015,"line_end":1015,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":51455,"byte_end":51470,"line_start":1040,"line_end":1040,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":51716,"byte_end":51731,"line_start":1051,"line_end":1051,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58798,"byte_end":58806,"line_start":186,"line_end":186,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58938,"byte_end":58946,"line_start":192,"line_end":192,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":59418,"byte_end":59422,"line_start":210,"line_end":210,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":59591,"byte_end":59595,"line_start":216,"line_end":216,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":59940,"byte_end":59946,"line_start":227,"line_end":227,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":60203,"byte_end":60211,"line_start":236,"line_end":236,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":66263,"byte_end":66271,"line_start":427,"line_end":427,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":66602,"byte_end":66610,"line_start":440,"line_end":440,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":66804,"byte_end":66819,"line_start":447,"line_end":447,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":67661,"byte_end":67672,"line_start":474,"line_end":474,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":67866,"byte_end":67878,"line_start":481,"line_end":481,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":68588,"byte_end":68606,"line_start":509,"line_end":509,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":68802,"byte_end":68809,"line_start":516,"line_end":516,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":69447,"byte_end":69465,"line_start":538,"line_end":538,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":69604,"byte_end":69622,"line_start":544,"line_end":544,"column_start":23,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":74340,"byte_end":74353,"line_start":160,"line_end":160,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":74648,"byte_end":74662,"line_start":176,"line_end":176,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":76339,"byte_end":76349,"line_start":246,"line_end":246,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":711},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":99460,"byte_end":99472,"line_start":975,"line_end":975,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":100969,"byte_end":100981,"line_start":1024,"line_end":1024,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":101352,"byte_end":101364,"line_start":1040,"line_end":1040,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":101732,"byte_end":101744,"line_start":1056,"line_end":1056,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":102104,"byte_end":102118,"line_start":1072,"line_end":1072,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":104052,"byte_end":104066,"line_start":1137,"line_end":1137,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":105794,"byte_end":105808,"line_start":1195,"line_end":1195,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":110286,"byte_end":110301,"line_start":1366,"line_end":1366,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":114844,"byte_end":114849,"line_start":1534,"line_end":1534,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":115622,"byte_end":115627,"line_start":1551,"line_end":1551,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":115652,"byte_end":115657,"line_start":1553,"line_end":1553,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":117283,"byte_end":117293,"line_start":1615,"line_end":1615,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":117411,"byte_end":117421,"line_start":1621,"line_end":1621,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":121515,"byte_end":121525,"line_start":1776,"line_end":1776,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":121831,"byte_end":121841,"line_start":1789,"line_end":1789,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":122154,"byte_end":122164,"line_start":1802,"line_end":1802,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":122474,"byte_end":122484,"line_start":1815,"line_end":1815,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":122786,"byte_end":122796,"line_start":1828,"line_end":1828,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":123219,"byte_end":123229,"line_start":1845,"line_end":1845,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":135835,"byte_end":135845,"line_start":400,"line_end":400,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":141126,"byte_end":141136,"line_start":542,"line_end":542,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":143070,"byte_end":143080,"line_start":602,"line_end":602,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":2081},{"krate":0,"index":2083},{"krate":0,"index":2085},{"krate":0,"index":2087},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2093},{"krate":0,"index":2095},{"krate":0,"index":2097},{"krate":0,"index":2099},{"krate":0,"index":2101},{"krate":0,"index":2103},{"krate":0,"index":2105},{"krate":0,"index":2107},{"krate":0,"index":2109},{"krate":0,"index":2111},{"krate":0,"index":2113},{"krate":0,"index":2115},{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2121},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2127}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":146200,"byte_end":146215,"line_start":712,"line_end":712,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":146549,"byte_end":146564,"line_start":724,"line_end":724,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":146715,"byte_end":146730,"line_start":732,"line_end":732,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":2129},{"krate":0,"index":2131},{"krate":0,"index":2133},{"krate":0,"index":2135},{"krate":0,"index":2137},{"krate":0,"index":2139},{"krate":0,"index":2141},{"krate":0,"index":2143},{"krate":0,"index":2145},{"krate":0,"index":2147},{"krate":0,"index":2149},{"krate":0,"index":2151},{"krate":0,"index":2153},{"krate":0,"index":2155},{"krate":0,"index":2157},{"krate":0,"index":2159},{"krate":0,"index":2161},{"krate":0,"index":2163},{"krate":0,"index":2165},{"krate":0,"index":2167},{"krate":0,"index":2169},{"krate":0,"index":2171},{"krate":0,"index":2173},{"krate":0,"index":2175},{"krate":0,"index":2177},{"krate":0,"index":2179},{"krate":0,"index":2181}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":148077,"byte_end":148094,"line_start":779,"line_end":779,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":148416,"byte_end":148433,"line_start":793,"line_end":793,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1223},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":1231},{"krate":0,"index":2183},{"krate":0,"index":2185},{"krate":0,"index":2187},{"krate":0,"index":2189},{"krate":0,"index":2191},{"krate":0,"index":2193},{"krate":0,"index":2195},{"krate":0,"index":2197},{"krate":0,"index":2199},{"krate":0,"index":2201},{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2207},{"krate":0,"index":2209},{"krate":0,"index":2211},{"krate":0,"index":2213},{"krate":0,"index":2215},{"krate":0,"index":2217},{"krate":0,"index":2219},{"krate":0,"index":2221},{"krate":0,"index":2223},{"krate":0,"index":2225},{"krate":0,"index":2227},{"krate":0,"index":2229}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":154116,"byte_end":154126,"line_start":964,"line_end":964,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":154495,"byte_end":154500,"line_start":980,"line_end":980,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":154880,"byte_end":154899,"line_start":995,"line_end":995,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":156246,"byte_end":156266,"line_start":1040,"line_end":1040,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":156865,"byte_end":156890,"line_start":1064,"line_end":1064,"column_start":37,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2235},{"krate":0,"index":2237},{"krate":0,"index":2239},{"krate":0,"index":2241},{"krate":0,"index":2243},{"krate":0,"index":2245},{"krate":0,"index":2247},{"krate":0,"index":2249},{"krate":0,"index":2251},{"krate":0,"index":2253},{"krate":0,"index":2255},{"krate":0,"index":2257},{"krate":0,"index":2259},{"krate":0,"index":2261},{"krate":0,"index":2263},{"krate":0,"index":2265},{"krate":0,"index":2267},{"krate":0,"index":2269},{"krate":0,"index":2271},{"krate":0,"index":2273},{"krate":0,"index":2275},{"krate":0,"index":2277},{"krate":0,"index":2279},{"krate":0,"index":2281},{"krate":0,"index":2283},{"krate":0,"index":2285}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":157462,"byte_end":157485,"line_start":1086,"line_end":1086,"column_start":35,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":158034,"byte_end":158057,"line_start":1105,"line_end":1105,"column_start":34,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":158775,"byte_end":158798,"line_start":1129,"line_end":1129,"column_start":35,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":159734,"byte_end":159755,"line_start":1160,"line_end":1160,"column_start":38,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":163449,"byte_end":163461,"line_start":1266,"line_end":1266,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1343},{"krate":0,"index":1348},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1371},{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1385},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1393}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":190053,"byte_end":190058,"line_start":2024,"line_end":2024,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":191667,"byte_end":191672,"line_start":2085,"line_end":2085,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":191814,"byte_end":191819,"line_start":2091,"line_end":2091,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":195291,"byte_end":195296,"line_start":2174,"line_end":2174,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":195320,"byte_end":195325,"line_start":2176,"line_end":2176,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":195722,"byte_end":195728,"line_start":2198,"line_end":2198,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":197013,"byte_end":197014,"line_start":2249,"line_end":2249,"column_start":10,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/tokens.rs","byte_start":199008,"byte_end":199017,"line_start":83,"line_end":83,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1501},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/tokens.rs","byte_start":212675,"byte_end":212683,"line_start":484,"line_end":484,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1505},{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/tokens.rs","byte_start":213108,"byte_end":213119,"line_start":501,"line_end":501,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/tokens.rs","byte_start":213966,"byte_end":213971,"line_start":534,"line_end":534,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243007,"byte_end":243014,"line_start":44,"line_end":44,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243782,"byte_end":243789,"line_start":76,"line_end":76,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243897,"byte_end":243904,"line_start":82,"line_end":82,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":244015,"byte_end":244022,"line_start":88,"line_end":88,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":244053,"byte_end":244060,"line_start":90,"line_end":90,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":244189,"byte_end":244196,"line_start":96,"line_end":96,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":244339,"byte_end":244346,"line_start":102,"line_end":102,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":244482,"byte_end":244489,"line_start":108,"line_end":108,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":244759,"byte_end":244773,"line_start":118,"line_end":118,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":246135,"byte_end":246142,"line_start":161,"line_end":161,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":4305,"byte_end":4308,"line_start":156,"line_end":156,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":4318,"byte_end":4323,"line_start":157,"line_end":157,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":188}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":4395,"byte_end":4398,"line_start":162,"line_end":162,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":624}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":4497,"byte_end":4499,"line_start":165,"line_end":165,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1030}},{"kind":"Mod","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/lib.rs","byte_start":4612,"byte_end":4618,"line_start":171,"line_end":171,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1516}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":6058,"byte_end":6061,"line_start":41,"line_end":41,"column_start":6,"column_end":9},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":10696,"byte_end":10699,"line_start":203,"line_end":203,"column_start":18,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":10839,"byte_end":10842,"line_start":212,"line_end":212,"column_start":16,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":10991,"byte_end":10994,"line_start":221,"line_end":221,"column_start":20,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":11240,"byte_end":11243,"line_start":230,"line_end":230,"column_start":43,"column_end":46},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":3361}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":11565,"byte_end":11568,"line_start":244,"line_end":244,"column_start":46,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":3365}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":11783,"byte_end":11786,"line_start":254,"line_end":254,"column_start":16,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":11965,"byte_end":11968,"line_start":261,"line_end":261,"column_start":25,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":40},"to":{"krate":20,"index":2101}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":12391,"byte_end":12394,"line_start":277,"line_end":277,"column_start":36,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":40},"to":{"krate":20,"index":1560}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":12605,"byte_end":12612,"line_start":285,"line_end":285,"column_start":40,"column_end":47},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":98},"to":{"krate":20,"index":1646}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":13502,"byte_end":13505,"line_start":319,"line_end":319,"column_start":40,"column_end":43},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":7779}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":13739,"byte_end":13742,"line_start":330,"line_end":330,"column_start":34,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":7792}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":15980,"byte_end":15985,"line_start":407,"line_end":407,"column_start":10,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17013,"byte_end":17024,"line_start":439,"line_end":439,"column_start":10,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":17458,"byte_end":17471,"line_start":455,"line_end":455,"column_start":10,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/map.rs","byte_start":19949,"byte_end":19952,"line_start":546,"line_end":546,"column_start":23,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":7783}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":22555,"byte_end":22560,"line_start":47,"line_end":47,"column_start":6,"column_end":11},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":28521,"byte_end":28526,"line_start":233,"line_end":233,"column_start":27,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1676},"to":{"krate":2,"index":3361}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":28705,"byte_end":28710,"line_start":244,"line_end":244,"column_start":30,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1676},"to":{"krate":2,"index":3365}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":28877,"byte_end":28882,"line_start":253,"line_end":253,"column_start":28,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1676},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":29022,"byte_end":29027,"line_start":260,"line_end":260,"column_start":39,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1676},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":29204,"byte_end":29209,"line_start":266,"line_end":266,"column_start":64,"column_end":69},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1676},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":29450,"byte_end":29455,"line_start":274,"line_end":274,"column_start":75,"column_end":80},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1676},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":30480,"byte_end":30486,"line_start":312,"line_end":312,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":313},"to":{"krate":0,"index":308}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":30887,"byte_end":30893,"line_start":325,"line_end":325,"column_start":17,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":313}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":31740,"byte_end":31746,"line_start":360,"line_end":360,"column_start":16,"column_end":22},"kind":{"Impl":{"id":28}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":308}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":32257,"byte_end":32262,"line_start":383,"line_end":383,"column_start":23,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1676},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":32469,"byte_end":32474,"line_start":391,"line_end":391,"column_start":18,"column_end":23},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1676},"to":{"krate":2,"index":12317}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":32625,"byte_end":32630,"line_start":398,"line_end":398,"column_start":25,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1676},"to":{"krate":20,"index":2101}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":34365,"byte_end":34370,"line_start":445,"line_end":445,"column_start":36,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1676},"to":{"krate":20,"index":1560}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":34558,"byte_end":34570,"line_start":452,"line_end":452,"column_start":40,"column_end":52},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":361},"to":{"krate":20,"index":1646}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":37865,"byte_end":37870,"line_start":545,"line_end":545,"column_start":37,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1676},"to":{"krate":20,"index":1582}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":40579,"byte_end":40594,"line_start":633,"line_end":633,"column_start":6,"column_end":21},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":40748,"byte_end":40763,"line_start":641,"line_end":641,"column_start":34,"column_end":49},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":400},"to":{"krate":20,"index":1702}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":41408,"byte_end":41423,"line_start":667,"line_end":667,"column_start":6,"column_end":21},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":41610,"byte_end":41625,"line_start":676,"line_end":676,"column_start":34,"column_end":49},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":410},"to":{"krate":20,"index":1720}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":42752,"byte_end":42757,"line_start":714,"line_end":714,"column_start":59,"column_end":64},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1676},"to":{"krate":20,"index":1778}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":42899,"byte_end":42909,"line_start":724,"line_end":724,"column_start":26,"column_end":36},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":428},"to":{"krate":20,"index":2104}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":48243,"byte_end":48255,"line_start":914,"line_end":914,"column_start":28,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":472},"to":{"krate":20,"index":2154}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":48648,"byte_end":48660,"line_start":931,"line_end":931,"column_start":30,"column_end":42},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":472},"to":{"krate":20,"index":2160}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":49056,"byte_end":49068,"line_start":947,"line_end":947,"column_start":36,"column_end":48},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":472},"to":{"krate":20,"index":2166}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":49463,"byte_end":49475,"line_start":963,"line_end":963,"column_start":37,"column_end":49},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":472},"to":{"krate":20,"index":2172}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":49861,"byte_end":49873,"line_start":979,"line_end":979,"column_start":28,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":474},"to":{"krate":20,"index":2178}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":50882,"byte_end":50894,"line_start":1015,"line_end":1015,"column_start":31,"column_end":43},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":474},"to":{"krate":20,"index":2189}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":51455,"byte_end":51470,"line_start":1040,"line_end":1040,"column_start":44,"column_end":59},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":515},"to":{"krate":20,"index":1571}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/value.rs","byte_start":51716,"byte_end":51731,"line_start":1051,"line_end":1051,"column_start":36,"column_end":51},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":515},"to":{"krate":20,"index":1646}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58798,"byte_end":58806,"line_start":186,"line_end":186,"column_start":21,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1778},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":58938,"byte_end":58946,"line_start":192,"line_end":192,"column_start":23,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1778},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":59418,"byte_end":59422,"line_start":210,"line_end":210,"column_start":23,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1794},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":59591,"byte_end":59595,"line_start":216,"line_end":216,"column_start":23,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1804},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":59940,"byte_end":59946,"line_start":227,"line_end":227,"column_start":23,"column_end":29},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1815},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":60203,"byte_end":60211,"line_start":236,"line_end":236,"column_start":18,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1778},"to":{"krate":2,"index":12317}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":66263,"byte_end":66271,"line_start":427,"line_end":427,"column_start":25,"column_end":33},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1778},"to":{"krate":20,"index":2101}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":66602,"byte_end":66610,"line_start":440,"line_end":440,"column_start":36,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1778},"to":{"krate":20,"index":1560}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":66804,"byte_end":66819,"line_start":447,"line_end":447,"column_start":40,"column_end":55},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":583},"to":{"krate":20,"index":1646}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":67661,"byte_end":67672,"line_start":474,"line_end":474,"column_start":36,"column_end":47},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":593},"to":{"krate":20,"index":1560}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":67866,"byte_end":67878,"line_start":481,"line_end":481,"column_start":40,"column_end":52},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":599},"to":{"krate":20,"index":1646}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":68588,"byte_end":68606,"line_start":509,"line_end":509,"column_start":36,"column_end":54},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":607},"to":{"krate":20,"index":1560}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":68802,"byte_end":68809,"line_start":516,"line_end":516,"column_start":40,"column_end":47},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":613},"to":{"krate":20,"index":1646}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":69447,"byte_end":69465,"line_start":538,"line_end":538,"column_start":23,"column_end":41},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1788},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/datetime.rs","byte_start":69604,"byte_end":69622,"line_start":544,"line_end":544,"column_start":23,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1788},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":74340,"byte_end":74353,"line_start":160,"line_end":160,"column_start":6,"column_end":19},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":74648,"byte_end":74662,"line_start":176,"line_end":176,"column_start":6,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":76339,"byte_end":76349,"line_start":246,"line_end":246,"column_start":10,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":99460,"byte_end":99472,"line_start":975,"line_end":975,"column_start":36,"column_end":48},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":666},"to":{"krate":20,"index":2154}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":100969,"byte_end":100981,"line_start":1024,"line_end":1024,"column_start":38,"column_end":50},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":666},"to":{"krate":20,"index":2160}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":101352,"byte_end":101364,"line_start":1040,"line_end":1040,"column_start":45,"column_end":57},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":666},"to":{"krate":20,"index":2172}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":101732,"byte_end":101744,"line_start":1056,"line_end":1056,"column_start":44,"column_end":56},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":666},"to":{"krate":20,"index":2166}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":102104,"byte_end":102118,"line_start":1072,"line_end":1072,"column_start":36,"column_end":50},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":673},"to":{"krate":20,"index":2178}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":104052,"byte_end":104066,"line_start":1137,"line_end":1137,"column_start":39,"column_end":53},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":673},"to":{"krate":20,"index":2189}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":105794,"byte_end":105808,"line_start":1195,"line_end":1195,"column_start":34,"column_end":48},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":811},"to":{"krate":20,"index":2104}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":110286,"byte_end":110301,"line_start":1366,"line_end":1366,"column_start":26,"column_end":41},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":859},"to":{"krate":20,"index":2104}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":114844,"byte_end":114849,"line_start":1534,"line_end":1534,"column_start":23,"column_end":28},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1827},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":115622,"byte_end":115627,"line_start":1551,"line_end":1551,"column_start":23,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1827},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":115652,"byte_end":115657,"line_start":1553,"line_end":1553,"column_start":21,"column_end":26},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1827},"to":{"krate":20,"index":9532}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":117283,"byte_end":117293,"line_start":1615,"line_end":1615,"column_start":9,"column_end":19},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":117411,"byte_end":117421,"line_start":1621,"line_end":1621,"column_start":41,"column_end":51},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":924},"to":{"krate":20,"index":2104}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":121515,"byte_end":121525,"line_start":1776,"line_end":1776,"column_start":43,"column_end":53},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":924},"to":{"krate":20,"index":2154}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":121831,"byte_end":121841,"line_start":1789,"line_end":1789,"column_start":45,"column_end":55},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":924},"to":{"krate":20,"index":2160}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":122154,"byte_end":122164,"line_start":1802,"line_end":1802,"column_start":52,"column_end":62},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":924},"to":{"krate":20,"index":2172}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":122474,"byte_end":122484,"line_start":1815,"line_end":1815,"column_start":51,"column_end":61},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":924},"to":{"krate":20,"index":2166}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":122786,"byte_end":122796,"line_start":1828,"line_end":1828,"column_start":43,"column_end":53},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":924},"to":{"krate":20,"index":2178}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/ser.rs","byte_start":123219,"byte_end":123229,"line_start":1845,"line_end":1845,"column_start":46,"column_end":56},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":924},"to":{"krate":20,"index":2189}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":135835,"byte_end":135845,"line_start":400,"line_end":400,"column_start":38,"column_end":48},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1130},"to":{"krate":20,"index":1720}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":141126,"byte_end":141136,"line_start":542,"line_end":542,"column_start":38,"column_end":48},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1130},"to":{"krate":20,"index":1702}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":143070,"byte_end":143080,"line_start":602,"line_end":602,"column_start":41,"column_end":51},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1130},"to":{"krate":20,"index":1582}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":146200,"byte_end":146215,"line_start":712,"line_end":712,"column_start":10,"column_end":25},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":146549,"byte_end":146564,"line_start":724,"line_end":724,"column_start":50,"column_end":65},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1188},"to":{"krate":20,"index":1778}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":146715,"byte_end":146730,"line_start":732,"line_end":732,"column_start":37,"column_end":52},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1188},"to":{"krate":20,"index":1582}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":148077,"byte_end":148094,"line_start":779,"line_end":779,"column_start":10,"column_end":27},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":148416,"byte_end":148433,"line_start":793,"line_end":793,"column_start":37,"column_end":54},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1208},"to":{"krate":20,"index":1582}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":154116,"byte_end":154126,"line_start":964,"line_end":964,"column_start":52,"column_end":62},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1130},"to":{"krate":20,"index":1778}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":154495,"byte_end":154500,"line_start":980,"line_end":980,"column_start":48,"column_end":53},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2287},"to":{"krate":20,"index":1778}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":154880,"byte_end":154899,"line_start":995,"line_end":995,"column_start":37,"column_end":56},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1247},"to":{"krate":20,"index":1720}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":156246,"byte_end":156266,"line_start":1040,"line_end":1040,"column_start":34,"column_end":54},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1262},"to":{"krate":20,"index":1720}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":156865,"byte_end":156890,"line_start":1064,"line_end":1064,"column_start":37,"column_end":62},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1273},"to":{"krate":20,"index":1582}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":157462,"byte_end":157485,"line_start":1086,"line_end":1086,"column_start":35,"column_end":58},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1280},"to":{"krate":20,"index":1758}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":158034,"byte_end":158057,"line_start":1105,"line_end":1105,"column_start":34,"column_end":57},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1291},"to":{"krate":20,"index":1720}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":158775,"byte_end":158798,"line_start":1129,"line_end":1129,"column_start":35,"column_end":58},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1291},"to":{"krate":20,"index":1758}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":159734,"byte_end":159755,"line_start":1160,"line_end":1160,"column_start":38,"column_end":59},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1309},"to":{"krate":20,"index":1766}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":163449,"byte_end":163461,"line_start":1266,"line_end":1266,"column_start":10,"column_end":22},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":190053,"byte_end":190058,"line_start":2024,"line_end":2024,"column_start":6,"column_end":11},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":191667,"byte_end":191672,"line_start":2085,"line_end":2085,"column_start":45,"column_end":50},"kind":{"Impl":{"id":105}},"from":{"krate":1,"index":4154},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":191814,"byte_end":191819,"line_start":2091,"line_end":2091,"column_start":23,"column_end":28},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1928},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":195291,"byte_end":195296,"line_start":2174,"line_end":2174,"column_start":23,"column_end":28},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1928},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":195320,"byte_end":195325,"line_start":2176,"line_end":2176,"column_start":20,"column_end":25},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1928},"to":{"krate":20,"index":8917}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":195722,"byte_end":195728,"line_start":2198,"line_end":2198,"column_start":10,"column_end":16},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/de.rs","byte_start":197013,"byte_end":197014,"line_start":2249,"line_end":2249,"column_start":10,"column_end":11},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/tokens.rs","byte_start":199008,"byte_end":199017,"line_start":83,"line_end":83,"column_start":10,"column_end":19},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/tokens.rs","byte_start":212675,"byte_end":212683,"line_start":484,"line_end":484,"column_start":23,"column_end":31},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2441},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/tokens.rs","byte_start":213108,"byte_end":213119,"line_start":501,"line_end":501,"column_start":6,"column_end":17},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/tokens.rs","byte_start":213966,"byte_end":213971,"line_start":534,"line_end":534,"column_start":10,"column_end":15},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243007,"byte_end":243014,"line_start":44,"line_end":44,"column_start":9,"column_end":16},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243782,"byte_end":243789,"line_start":76,"line_end":76,"column_start":22,"column_end":29},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2456},"to":{"krate":2,"index":2654}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":243897,"byte_end":243904,"line_start":82,"line_end":82,"column_start":34,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2456},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":244015,"byte_end":244022,"line_start":88,"line_end":88,"column_start":20,"column_end":27},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2456},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":244053,"byte_end":244060,"line_start":90,"line_end":90,"column_start":24,"column_end":31},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2456},"to":{"krate":2,"index":9885}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":244189,"byte_end":244196,"line_start":96,"line_end":96,"column_start":36,"column_end":43},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2456},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":244339,"byte_end":244346,"line_start":102,"line_end":102,"column_start":22,"column_end":29},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2456},"to":{"krate":2,"index":2745}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":244482,"byte_end":244489,"line_start":108,"line_end":108,"column_start":39,"column_end":46},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2456},"to":{"krate":20,"index":1560}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":244759,"byte_end":244773,"line_start":118,"line_end":118,"column_start":43,"column_end":57},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1598},"to":{"krate":20,"index":1646}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.9/src/spanned.rs","byte_start":246135,"byte_end":246142,"line_start":161,"line_end":161,"column_start":44,"column_end":51},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2456},"to":{"krate":20,"index":2101}}]}