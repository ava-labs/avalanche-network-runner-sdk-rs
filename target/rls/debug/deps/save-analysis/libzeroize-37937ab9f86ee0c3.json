{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5","program":"/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","zeroize","--edition=2018","/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","-C","metadata=37937ab9f86ee0c3","-C","extra-filename=-37937ab9f86ee0c3","--out-dir","/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","-L","dependency=/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/johnmorrisett/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/johnmorrisett/Documents/avalanche-network-runner-sdk-rs/target/rls/debug/deps/libzeroize-37937ab9f86ee0c3.rmeta"},"prelude":{"crate_id":{"name":"zeroize","disambiguator":[7943284036021793154,0]},"crate_root":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src","external_crates":[{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}}],"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":0,"byte_end":30833,"line_start":1,"line_end":960,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":0,"byte_end":30833,"line_start":1,"line_end":960,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":112},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":113},{"krate":0,"index":118},{"krate":0,"index":122},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":255},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":276},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":288},{"krate":0,"index":292},{"krate":0,"index":298},{"krate":0,"index":303},{"krate":0,"index":310},{"krate":0,"index":316},{"krate":0,"index":324},{"krate":0,"index":331},{"krate":0,"index":340},{"krate":0,"index":348},{"krate":0,"index":358},{"krate":0,"index":367},{"krate":0,"index":378},{"krate":0,"index":388},{"krate":0,"index":400}],"decl_id":null,"docs":" Securely zero memory with a simple trait ([`Zeroize`]) built on stable Rust\n primitives which guarantee the operation will not be \"optimized away\".","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"warn(missing_docs, rust_2018_idioms, unused_qualifications)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":247,"byte_end":310,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ Securely zero memory with a simple trait ([`Zeroize`]) built on stable Rust","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":312,"byte_end":391,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ primitives which guarantee the operation will not be \"optimized away\".","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":392,"byte_end":466,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":467,"byte_end":470,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## About","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":471,"byte_end":483,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":484,"byte_end":487,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [Zeroing memory securely is hard] - compilers optimize for performance, and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":488,"byte_end":567,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ in doing so they love to \"optimize away\" unnecessary zeroing calls. There are","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":568,"byte_end":649,"line_start":15,"line_end":15,"column_start":1,"column_end":82}},{"value":"/ many documented \"tricks\" to attempt to avoid these optimizations and ensure","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":650,"byte_end":729,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ that a zeroing routine is performed reliably.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":730,"byte_end":779,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":780,"byte_end":783,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This crate isn't about tricks: it uses [`core::ptr::write_volatile`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":784,"byte_end":856,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ and [`core::sync::atomic`] memory fences to provide easy-to-use, portable","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":857,"byte_end":934,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ zeroing behavior which works on all of Rust's core number types and slices","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":935,"byte_end":1013,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ thereof, implemented in pure Rust with no usage of FFI or assembly.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1014,"byte_end":1085,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1086,"byte_end":1089,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ - No insecure fallbacks!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1090,"byte_end":1118,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ - No dependencies!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1119,"byte_end":1141,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ - No FFI or inline assembly! **WASM friendly** (and tested)!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1142,"byte_end":1206,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ - `#![no_std]` i.e. **embedded-friendly**!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1207,"byte_end":1253,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ - No functionality besides securely zeroing memory!","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1254,"byte_end":1309,"line_start":28,"line_end":28,"column_start":1,"column_end":56}},{"value":"/ - (Optional) Custom derive support for zeroing complex structures","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1310,"byte_end":1379,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1380,"byte_end":1383,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Minimum Supported Rust Version","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1384,"byte_end":1421,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1422,"byte_end":1425,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Requires Rust **1.51** or newer.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1426,"byte_end":1462,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1463,"byte_end":1466,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ In the future, we reserve the right to change MSRV (i.e. MSRV is out-of-scope","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1467,"byte_end":1548,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/ for this crate's SemVer guarantees), however when we do it will be accompanied","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1549,"byte_end":1631,"line_start":36,"line_end":36,"column_start":1,"column_end":83}},{"value":"/ by a minor version bump.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1632,"byte_end":1660,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1661,"byte_end":1664,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1665,"byte_end":1677,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1678,"byte_end":1681,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1682,"byte_end":1689,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use zeroize::Zeroize;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1690,"byte_end":1715,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1716,"byte_end":1719,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1720,"byte_end":1735,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/     // Protip: don't embed secrets in your source code.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1736,"byte_end":1795,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/     // This is just an example.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1796,"byte_end":1831,"line_start":46,"line_end":46,"column_start":1,"column_end":36}},{"value":"/     let mut secret = b\"Air shield password: 1,2,3,4,5\".to_vec();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1832,"byte_end":1900,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"/     // [ ... ] open the air shield here","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1901,"byte_end":1944,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1945,"byte_end":1948,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     // Now that we're done using the secret, zero it out.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":1949,"byte_end":2010,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"/     secret.zeroize();","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2011,"byte_end":2036,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2037,"byte_end":2042,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2043,"byte_end":2050,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2051,"byte_end":2054,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The [`Zeroize`] trait is impl'd on all of Rust's core scalar types including","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2055,"byte_end":2135,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ integers, floats, `bool`, and `char`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2136,"byte_end":2177,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2178,"byte_end":2181,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Additionally, it's implemented on slices and `IterMut`s of the above types.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2182,"byte_end":2261,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2262,"byte_end":2265,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ When the `alloc` feature is enabled (which it is by default), it's also","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2266,"byte_end":2341,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ impl'd for `Vec<T>` for the above types as well as `String`, where it provides","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2342,"byte_end":2424,"line_start":61,"line_end":61,"column_start":1,"column_end":83}},{"value":"/ [`Vec::clear`] / [`String::clear`]-like behavior (truncating to zero-length)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2425,"byte_end":2505,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/ but ensures the backing memory is securely zeroed with some caveats.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2506,"byte_end":2578,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2579,"byte_end":2582,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ With the `std` feature enabled (which it is **not** by default), [`Zeroize`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2583,"byte_end":2663,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/ is also implemented for [`CString`]. After calling `zeroize()` on a `CString`,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2664,"byte_end":2746,"line_start":66,"line_end":66,"column_start":1,"column_end":83}},{"value":"/ it will its internal buffer will contain exactly one nul byte. The backing","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2747,"byte_end":2825,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ memory is zeroed by converting it to a `Vec<u8>` and back into a `CString`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2826,"byte_end":2905,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/ (NOTE: see \"Stack/Heap Zeroing Notes\" for important `Vec`/`String`/`CString` details)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2906,"byte_end":2995,"line_start":69,"line_end":69,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":2996,"byte_end":2999,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3000,"byte_end":3003,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The [`DefaultIsZeroes`] marker trait can be impl'd on types which also","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3004,"byte_end":3078,"line_start":72,"line_end":72,"column_start":1,"column_end":75}},{"value":"/ impl [`Default`], which implements [`Zeroize`] by overwriting a value with","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3079,"byte_end":3157,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/ the default value.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3158,"byte_end":3180,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3181,"byte_end":3184,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Custom Derive Support","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3185,"byte_end":3213,"line_start":76,"line_end":76,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3214,"byte_end":3217,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ This crate has custom derive support for the `Zeroize` trait,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3218,"byte_end":3283,"line_start":78,"line_end":78,"column_start":1,"column_end":66}},{"value":"/ gated under the `zeroize` crate's `zeroize_derive` Cargo feature,","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3284,"byte_end":3353,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ which automatically calls `zeroize()` on all members of a struct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3354,"byte_end":3422,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/ or tuple struct.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3423,"byte_end":3443,"line_start":81,"line_end":81,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3444,"byte_end":3447,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Attributes supported for `Zeroize`:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3448,"byte_end":3487,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3488,"byte_end":3491,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ On the item level:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3492,"byte_end":3514,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/ - `#[zeroize(drop)]`: *deprecated* use `ZeroizeOnDrop` instead","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3515,"byte_end":3581,"line_start":86,"line_end":86,"column_start":1,"column_end":67}},{"value":"/ - `#[zeroize(bound = \"T: MyTrait\")]`: this replaces any trait bounds","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3582,"byte_end":3654,"line_start":87,"line_end":87,"column_start":1,"column_end":73}},{"value":"/   inferred by zeroize","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3655,"byte_end":3680,"line_start":88,"line_end":88,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3681,"byte_end":3684,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ On the field level:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3685,"byte_end":3708,"line_start":90,"line_end":90,"column_start":1,"column_end":24}},{"value":"/ - `#[zeroize(skip)]`: skips this field or variant when calling `zeroize()`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3709,"byte_end":3787,"line_start":91,"line_end":91,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3788,"byte_end":3791,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Attributes supported for `ZeroizeOnDrop`:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3792,"byte_end":3837,"line_start":93,"line_end":93,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3838,"byte_end":3841,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ On the field level:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3842,"byte_end":3865,"line_start":95,"line_end":95,"column_start":1,"column_end":24}},{"value":"/ - `#[zeroize(skip)]`: skips this field or variant when calling `zeroize()`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3866,"byte_end":3944,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3945,"byte_end":3948,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Example which derives `Drop`:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3949,"byte_end":3982,"line_start":98,"line_end":98,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3983,"byte_end":3986,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3987,"byte_end":3994,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"zeroize_derive\")]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":3995,"byte_end":4035,"line_start":101,"line_end":101,"column_start":1,"column_end":41}},{"value":"/ # {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4036,"byte_end":4043,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ use zeroize::{Zeroize, ZeroizeOnDrop};","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4044,"byte_end":4086,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4087,"byte_end":4090,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // This struct will be zeroized on drop","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4091,"byte_end":4134,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"/ #[derive(Zeroize, ZeroizeOnDrop)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4135,"byte_end":4172,"line_start":106,"line_end":106,"column_start":1,"column_end":38}},{"value":"/ struct MyStruct([u8; 32]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4173,"byte_end":4203,"line_start":107,"line_end":107,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4204,"byte_end":4211,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4212,"byte_end":4219,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4220,"byte_end":4223,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Example which does not derive `Drop` (useful for e.g. `Copy` types)","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4224,"byte_end":4295,"line_start":111,"line_end":111,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4296,"byte_end":4299,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4300,"byte_end":4307,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ #[cfg(feature = \"zeroize_derive\")]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4308,"byte_end":4346,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/ # {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4347,"byte_end":4354,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ use zeroize::Zeroize;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4355,"byte_end":4380,"line_start":116,"line_end":116,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4381,"byte_end":4384,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // This struct will *NOT* be zeroized on drop","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4385,"byte_end":4434,"line_start":118,"line_end":118,"column_start":1,"column_end":50}},{"value":"/ #[derive(Copy, Clone, Zeroize)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4435,"byte_end":4470,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/ struct MyStruct([u8; 32]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4471,"byte_end":4501,"line_start":120,"line_end":120,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4502,"byte_end":4509,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4510,"byte_end":4517,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4518,"byte_end":4521,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Example which only derives `Drop`:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4522,"byte_end":4560,"line_start":124,"line_end":124,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4561,"byte_end":4564,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4565,"byte_end":4572,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"zeroize_derive\")]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4573,"byte_end":4613,"line_start":127,"line_end":127,"column_start":1,"column_end":41}},{"value":"/ # {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4614,"byte_end":4621,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/ use zeroize::ZeroizeOnDrop;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4622,"byte_end":4653,"line_start":129,"line_end":129,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4654,"byte_end":4657,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ // This struct will be zeroized on drop","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4658,"byte_end":4701,"line_start":131,"line_end":131,"column_start":1,"column_end":44}},{"value":"/ #[derive(ZeroizeOnDrop)]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4702,"byte_end":4730,"line_start":132,"line_end":132,"column_start":1,"column_end":29}},{"value":"/ struct MyStruct([u8; 32]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4731,"byte_end":4761,"line_start":133,"line_end":133,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4762,"byte_end":4769,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4770,"byte_end":4777,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4778,"byte_end":4781,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ## `Zeroizing<Z>`: wrapper for zeroizing arbitrary values on drop","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4782,"byte_end":4851,"line_start":137,"line_end":137,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4852,"byte_end":4855,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ `Zeroizing<Z: Zeroize>` is a generic wrapper type that impls `Deref`","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4856,"byte_end":4928,"line_start":139,"line_end":139,"column_start":1,"column_end":73}},{"value":"/ and `DerefMut`, allowing access to an inner value of type `Z`, and also","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":4929,"byte_end":5004,"line_start":140,"line_end":140,"column_start":1,"column_end":76}},{"value":"/ impls a `Drop` handler which calls `zeroize()` on its contents:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5005,"byte_end":5072,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5073,"byte_end":5076,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5077,"byte_end":5084,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/ use zeroize::Zeroizing;","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5085,"byte_end":5112,"line_start":144,"line_end":144,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5113,"byte_end":5116,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5117,"byte_end":5132,"line_start":146,"line_end":146,"column_start":1,"column_end":16}},{"value":"/     let mut secret = Zeroizing::new([0u8; 5]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5133,"byte_end":5183,"line_start":147,"line_end":147,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5184,"byte_end":5187,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/     // Set the air shield password","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5188,"byte_end":5226,"line_start":149,"line_end":149,"column_start":1,"column_end":39}},{"value":"/     // Protip (again): don't embed secrets in your source code.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5227,"byte_end":5294,"line_start":150,"line_end":150,"column_start":1,"column_end":68}},{"value":"/     secret.copy_from_slice(&[1, 2, 3, 4, 5]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5295,"byte_end":5344,"line_start":151,"line_end":151,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(secret.as_ref(), &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5345,"byte_end":5399,"line_start":152,"line_end":152,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5400,"byte_end":5403,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/     // The contents of `secret` will be automatically zeroized on drop","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5404,"byte_end":5478,"line_start":154,"line_end":154,"column_start":1,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5479,"byte_end":5484,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5485,"byte_end":5492,"line_start":156,"line_end":156,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5493,"byte_end":5496,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ## What guarantees does this crate provide?","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5497,"byte_end":5544,"line_start":158,"line_end":158,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5545,"byte_end":5548,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ This crate guarantees the following:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5549,"byte_end":5589,"line_start":160,"line_end":160,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5590,"byte_end":5593,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ 1. The zeroing operation can't be \"optimized away\" by the compiler.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5594,"byte_end":5665,"line_start":162,"line_end":162,"column_start":1,"column_end":72}},{"value":"/ 2. All subsequent reads to memory will see \"zeroized\" values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5666,"byte_end":5731,"line_start":163,"line_end":163,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5732,"byte_end":5735,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ LLVM's volatile semantics ensure #1 is true.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5736,"byte_end":5784,"line_start":165,"line_end":165,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5785,"byte_end":5788,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ Additionally, thanks to work by the [Unsafe Code Guidelines Working Group],","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5789,"byte_end":5868,"line_start":167,"line_end":167,"column_start":1,"column_end":80}},{"value":"/ we can now fairly confidently say #2 is true as well. Previously there were","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5869,"byte_end":5948,"line_start":168,"line_end":168,"column_start":1,"column_end":80}},{"value":"/ worries that the approach used by this crate (mixing volatile and","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":5949,"byte_end":6018,"line_start":169,"line_end":169,"column_start":1,"column_end":70}},{"value":"/ non-volatile accesses) was undefined behavior due to language contained","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6019,"byte_end":6094,"line_start":170,"line_end":170,"column_start":1,"column_end":76}},{"value":"/ in the documentation for `write_volatile`, however after some discussion","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6095,"byte_end":6171,"line_start":171,"line_end":171,"column_start":1,"column_end":77}},{"value":"/ [these remarks have been removed] and the specific usage pattern in this","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6172,"byte_end":6248,"line_start":172,"line_end":172,"column_start":1,"column_end":77}},{"value":"/ crate is considered to be well-defined.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6249,"byte_end":6292,"line_start":173,"line_end":173,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6293,"byte_end":6296,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ Additionally this crate leverages [`core::sync::atomic::compiler_fence`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6297,"byte_end":6373,"line_start":175,"line_end":175,"column_start":1,"column_end":77}},{"value":"/ with the strictest ordering","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6374,"byte_end":6405,"line_start":176,"line_end":176,"column_start":1,"column_end":32}},{"value":"/ ([`Ordering::SeqCst`]) as a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6406,"byte_end":6437,"line_start":177,"line_end":177,"column_start":1,"column_end":32}},{"value":"/ precaution to help ensure reads are not reordered before memory has been","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6438,"byte_end":6514,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"/ zeroed.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6515,"byte_end":6526,"line_start":179,"line_end":179,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6527,"byte_end":6530,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ All of that said, there is still potential for microarchitectural attacks","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6531,"byte_end":6608,"line_start":181,"line_end":181,"column_start":1,"column_end":78}},{"value":"/ (ala Spectre/Meltdown) to leak \"zeroized\" secrets through covert channels.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6609,"byte_end":6687,"line_start":182,"line_end":182,"column_start":1,"column_end":79}},{"value":"/ This crate makes no guarantees that zeroized values cannot be leaked","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6688,"byte_end":6760,"line_start":183,"line_end":183,"column_start":1,"column_end":73}},{"value":"/ through such channels, as they represent flaws in the underlying hardware.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6761,"byte_end":6839,"line_start":184,"line_end":184,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6840,"byte_end":6843,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ ## Stack/Heap Zeroing Notes","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6844,"byte_end":6875,"line_start":186,"line_end":186,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6876,"byte_end":6879,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ This crate can be used to zero values from either the stack or the heap.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6880,"byte_end":6956,"line_start":188,"line_end":188,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6957,"byte_end":6960,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ However, be aware several operations in Rust can unintentionally leave","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":6961,"byte_end":7035,"line_start":190,"line_end":190,"column_start":1,"column_end":75}},{"value":"/ copies of data in memory. This includes but is not limited to:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7036,"byte_end":7102,"line_start":191,"line_end":191,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7103,"byte_end":7106,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ - Moves and [`Copy`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7107,"byte_end":7131,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ - Heap reallocation when using [`Vec`] and [`String`]","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7132,"byte_end":7189,"line_start":194,"line_end":194,"column_start":1,"column_end":58}},{"value":"/ - Borrowers of a reference making copies of the data","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7190,"byte_end":7246,"line_start":195,"line_end":195,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7247,"byte_end":7250,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ [`Pin`][`core::pin::Pin`] can be leveraged in conjunction with this crate","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7251,"byte_end":7328,"line_start":197,"line_end":197,"column_start":1,"column_end":78}},{"value":"/ to ensure data kept on the stack isn't moved.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7329,"byte_end":7378,"line_start":198,"line_end":198,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7379,"byte_end":7382,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ The `Zeroize` impls for `Vec`, `String` and `CString` zeroize the entire","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7383,"byte_end":7459,"line_start":200,"line_end":200,"column_start":1,"column_end":77}},{"value":"/ capacity of their backing buffer, but cannot guarantee copies of the data","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7460,"byte_end":7537,"line_start":201,"line_end":201,"column_start":1,"column_end":78}},{"value":"/ were not previously made by buffer reallocation. It's therefore important","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7538,"byte_end":7615,"line_start":202,"line_end":202,"column_start":1,"column_end":78}},{"value":"/ when attempting to zeroize such buffers to initialize them to the correct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7616,"byte_end":7693,"line_start":203,"line_end":203,"column_start":1,"column_end":78}},{"value":"/ capacity, and take care to prevent subsequent reallocation.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7694,"byte_end":7757,"line_start":204,"line_end":204,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7758,"byte_end":7761,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ The `secrecy` crate provides higher-level abstractions for eliminating","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7762,"byte_end":7836,"line_start":206,"line_end":206,"column_start":1,"column_end":75}},{"value":"/ usage patterns which can cause reallocations:","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7837,"byte_end":7886,"line_start":207,"line_end":207,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7887,"byte_end":7890,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ <https://crates.io/crates/secrecy>","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7891,"byte_end":7929,"line_start":209,"line_end":209,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7930,"byte_end":7933,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ ## What about: clearing registers, mlock, mprotect, etc?","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7934,"byte_end":7994,"line_start":211,"line_end":211,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7995,"byte_end":7998,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ This crate is focused on providing simple, unobtrusive support for reliably","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":7999,"byte_end":8078,"line_start":213,"line_end":213,"column_start":1,"column_end":80}},{"value":"/ zeroing memory using the best approach possible on stable Rust.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":8079,"byte_end":8146,"line_start":214,"line_end":214,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":8147,"byte_end":8150,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Clearing registers is a difficult problem that can't easily be solved by","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":8151,"byte_end":8227,"line_start":216,"line_end":216,"column_start":1,"column_end":77}},{"value":"/ something like a crate, and requires either inline ASM or rustc support.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":8228,"byte_end":8304,"line_start":217,"line_end":217,"column_start":1,"column_end":77}},{"value":"/ See <https://github.com/rust-lang/rust/issues/17046> for background on","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":8305,"byte_end":8379,"line_start":218,"line_end":218,"column_start":1,"column_end":75}},{"value":"/ this particular problem.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":8380,"byte_end":8408,"line_start":219,"line_end":219,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":8409,"byte_end":8412,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ Other memory protection mechanisms are interesting and useful, but often","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":8413,"byte_end":8489,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ overkill (e.g. defending against RAM scraping or attackers with swap access).","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":8490,"byte_end":8571,"line_start":222,"line_end":222,"column_start":1,"column_end":82}},{"value":"/ In as much as there may be merit to these approaches, there are also many","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":8572,"byte_end":8649,"line_start":223,"line_end":223,"column_start":1,"column_end":78}},{"value":"/ other crates that already implement more sophisticated memory protections.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":8650,"byte_end":8728,"line_start":224,"line_end":224,"column_start":1,"column_end":79}},{"value":"/ Such protections are explicitly out-of-scope for this crate.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":8729,"byte_end":8793,"line_start":225,"line_end":225,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":8794,"byte_end":8797,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ Zeroing memory is [good cryptographic hygiene] and this crate seeks to promote","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":8798,"byte_end":8880,"line_start":227,"line_end":227,"column_start":1,"column_end":83}},{"value":"/ it in the most unobtrusive manner possible. This includes omitting complex","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":8881,"byte_end":8959,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"/ `unsafe` memory protection systems and just trying to make the best memory","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":8960,"byte_end":9038,"line_start":229,"line_end":229,"column_start":1,"column_end":79}},{"value":"/ zeroing crate available.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":9039,"byte_end":9067,"line_start":230,"line_end":230,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":9068,"byte_end":9071,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ [Zeroing memory securely is hard]: http://www.daemonology.net/blog/2014-09-04-how-to-zero-a-buffer.html","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":9072,"byte_end":9179,"line_start":232,"line_end":232,"column_start":1,"column_end":108}},{"value":"/ [Unsafe Code Guidelines Working Group]: https://github.com/rust-lang/unsafe-code-guidelines","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":9180,"byte_end":9275,"line_start":233,"line_end":233,"column_start":1,"column_end":96}},{"value":"/ [these remarks have been removed]: https://github.com/rust-lang/rust/pull/60972","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":9276,"byte_end":9359,"line_start":234,"line_end":234,"column_start":1,"column_end":84}},{"value":"/ [good cryptographic hygiene]: https://github.com/veorq/cryptocoding#clean-memory-of-secret-data","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":9360,"byte_end":9459,"line_start":235,"line_end":235,"column_start":1,"column_end":100}},{"value":"/ [`Ordering::SeqCst`]: core::sync::atomic::Ordering::SeqCst","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":9460,"byte_end":9522,"line_start":236,"line_end":236,"column_start":1,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":92},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":10423,"byte_end":10430,"line_start":269,"line_end":269,"column_start":11,"column_end":18},"name":"Zeroize","qualname":"::Zeroize","value":"Zeroize","parent":null,"children":[{"krate":0,"index":93}],"decl_id":null,"docs":" Trait for securely erasing types from memory\n","sig":null,"attributes":[{"value":"/ Trait for securely erasing types from memory","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":10364,"byte_end":10412,"line_start":268,"line_end":268,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":10591,"byte_end":10598,"line_start":272,"line_end":272,"column_start":8,"column_end":15},"name":"zeroize","qualname":"::Zeroize::zeroize","value":"pub fn zeroize(&mut Self)","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" Zero out this object from memory using Rust intrinsics which ensure the\n zeroization operation is not \"optimized away\" by the compiler.\n","sig":null,"attributes":[{"value":"/ Zero out this object from memory using Rust intrinsics which ensure the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":10437,"byte_end":10512,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ zeroization operation is not \"optimized away\" by the compiler.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":10517,"byte_end":10583,"line_start":271,"line_end":271,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":94},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":10722,"byte_end":10735,"line_start":276,"line_end":276,"column_start":11,"column_end":24},"name":"ZeroizeOnDrop","qualname":"::ZeroizeOnDrop","value":"ZeroizeOnDrop","parent":null,"children":[],"decl_id":null,"docs":" Marker trait signifying that this type will [`zeroize`](Zeroize::zeroize) itself on [`Drop`].\n","sig":null,"attributes":[{"value":"/ Marker trait signifying that this type will [`zeroize`](Zeroize::zeroize) itself on [`Drop`].","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":10614,"byte_end":10711,"line_start":275,"line_end":275,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":10763,"byte_end":10773,"line_start":279,"line_end":279,"column_start":9,"column_end":19},"name":"__internal","qualname":"::__internal","value":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":104}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":97},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":10869,"byte_end":10888,"line_start":283,"line_end":283,"column_start":15,"column_end":34},"name":"AssertZeroizeOnDrop","qualname":"::__internal::AssertZeroizeOnDrop","value":"AssertZeroizeOnDrop","parent":null,"children":[{"krate":0,"index":98}],"decl_id":null,"docs":" Auto-deref workaround for deriving `ZeroizeOnDrop`.\n","sig":null,"attributes":[{"value":"/ Auto-deref workaround for deriving `ZeroizeOnDrop`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":10799,"byte_end":10854,"line_start":282,"line_end":282,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":10902,"byte_end":10920,"line_start":284,"line_end":284,"column_start":12,"column_end":30},"name":"zeroize_or_on_drop","qualname":"::__internal::AssertZeroizeOnDrop::zeroize_or_on_drop","value":"pub fn zeroize_or_on_drop(Self)","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":102},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":11125,"byte_end":11138,"line_start":292,"line_end":292,"column_start":15,"column_end":28},"name":"AssertZeroize","qualname":"::__internal::AssertZeroize","value":"AssertZeroize","parent":null,"children":[{"krate":0,"index":103}],"decl_id":null,"docs":" Auto-deref workaround for deriving `ZeroizeOnDrop`.\n","sig":null,"attributes":[{"value":"/ Auto-deref workaround for deriving `ZeroizeOnDrop`.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":11055,"byte_end":11110,"line_start":291,"line_end":291,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":11152,"byte_end":11170,"line_start":293,"line_end":293,"column_start":12,"column_end":30},"name":"zeroize_or_on_drop","qualname":"::__internal::AssertZeroize::zeroize_or_on_drop","value":"pub fn zeroize_or_on_drop(&mut Self)","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":107},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":11418,"byte_end":11433,"line_start":304,"line_end":304,"column_start":11,"column_end":26},"name":"DefaultIsZeroes","qualname":"::DefaultIsZeroes","value":"DefaultIsZeroes: Copy + Default + Sized","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for types whose `Default` is the desired zeroization result\n","sig":null,"attributes":[{"value":"/ Marker trait for types whose `Default` is the desired zeroization result","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":11331,"byte_end":11407,"line_start":303,"line_end":303,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":152},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":19744,"byte_end":19754,"line_start":552,"line_end":552,"column_start":11,"column_end":21},"name":"TryZeroize","qualname":"::TryZeroize","value":"TryZeroize","parent":null,"children":[{"krate":0,"index":153}],"decl_id":null,"docs":" Fallible trait for representing cases where zeroization may or may not be\n possible.","sig":null,"attributes":[{"value":"/ Fallible trait for representing cases where zeroization may or may not be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":19491,"byte_end":19568,"line_start":547,"line_end":547,"column_start":1,"column_end":78}},{"value":"/ possible.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":19569,"byte_end":19582,"line_start":548,"line_end":548,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":19583,"byte_end":19586,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ This is primarily useful for scenarios like reference counted data, where","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":19587,"byte_end":19664,"line_start":550,"line_end":550,"column_start":1,"column_end":78}},{"value":"/ zeroization is only possible when the last reference is dropped.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":19665,"byte_end":19733,"line_start":551,"line_end":551,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":19946,"byte_end":19957,"line_start":557,"line_end":557,"column_start":8,"column_end":19},"name":"try_zeroize","qualname":"::TryZeroize::try_zeroize","value":"pub fn try_zeroize(&mut Self) -> bool","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Try to zero out this object from memory using Rust intrinsics which\n ensure the zeroization operation is not \"optimized away\" by the\n compiler.\n","sig":null,"attributes":[{"value":"/ Try to zero out this object from memory using Rust intrinsics which","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":19761,"byte_end":19832,"line_start":553,"line_end":553,"column_start":5,"column_end":76}},{"value":"/ ensure the zeroization operation is not \"optimized away\" by the","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":19837,"byte_end":19904,"line_start":554,"line_end":554,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":19909,"byte_end":19922,"line_start":555,"line_end":555,"column_start":5,"column_end":18}},{"value":"must_use","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":19927,"byte_end":19938,"line_start":556,"line_end":556,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":255},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":20159,"byte_end":20168,"line_start":563,"line_end":563,"column_start":12,"column_end":21},"name":"Zeroizing","qualname":"::Zeroizing","value":"","parent":null,"children":[],"decl_id":null,"docs":" `Zeroizing` is a a wrapper for any `Z: Zeroize` type which implements a\n `Drop` handler which zeroizes dropped values.\n","sig":null,"attributes":[{"value":"/ `Zeroizing` is a a wrapper for any `Z: Zeroize` type which implements a","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":19981,"byte_end":20056,"line_start":560,"line_end":560,"column_start":1,"column_end":76}},{"value":"/ `Drop` handler which zeroizes dropped values.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":20057,"byte_end":20106,"line_start":561,"line_end":561,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":20351,"byte_end":20354,"line_start":571,"line_end":571,"column_start":12,"column_end":15},"name":"new","qualname":"<Zeroizing<Z>>::new","value":"pub fn new(Z) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Move value inside a `Zeroizing` wrapper which ensures it will be\n zeroized when it's dropped.\n","sig":null,"attributes":[{"value":"/ Move value inside a `Zeroizing` wrapper which ensures it will be","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":20235,"byte_end":20303,"line_start":569,"line_end":569,"column_start":5,"column_end":73}},{"value":"/ zeroized when it's dropped.","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":20308,"byte_end":20339,"line_start":570,"line_end":570,"column_start":5,"column_end":36}}]}],"impls":[{"id":3,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":11238,"byte_end":11239,"line_start":296,"line_end":296,"column_start":49,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":11482,"byte_end":11483,"line_start":306,"line_end":306,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":12836,"byte_end":12843,"line_start":367,"line_end":367,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":12997,"byte_end":13003,"line_start":378,"line_end":378,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":14524,"byte_end":14530,"line_start":418,"line_end":418,"column_start":27,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":16672,"byte_end":16675,"line_start":468,"line_end":468,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":17815,"byte_end":17818,"line_start":499,"line_end":499,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":17944,"byte_end":17947,"line_start":503,"line_end":503,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":18272,"byte_end":18275,"line_start":516,"line_end":516,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":18400,"byte_end":18406,"line_start":520,"line_end":520,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":20194,"byte_end":20203,"line_start":565,"line_end":565,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":20440,"byte_end":20449,"line_start":576,"line_end":576,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":20660,"byte_end":20669,"line_start":587,"line_end":587,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":20794,"byte_end":20803,"line_start":596,"line_end":596,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":20932,"byte_end":20941,"line_start":607,"line_end":607,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":21062,"byte_end":21071,"line_start":616,"line_end":616,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":21211,"byte_end":21220,"line_start":626,"line_end":626,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":21364,"byte_end":21373,"line_start":636,"line_end":636,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":21490,"byte_end":21499,"line_start":645,"line_end":645,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":21541,"byte_end":21550,"line_start":647,"line_end":647,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":23303,"byte_end":23314,"line_start":697,"line_end":697,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":23459,"byte_end":23470,"line_start":701,"line_end":701,"column_start":27,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":23565,"byte_end":23578,"line_start":703,"line_end":703,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":23712,"byte_end":23725,"line_start":707,"line_end":707,"column_start":24,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":11238,"byte_end":11239,"line_start":296,"line_end":296,"column_start":49,"column_end":50},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":105},"to":{"krate":0,"index":102}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":11435,"byte_end":11439,"line_start":304,"line_end":304,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":3067},"to":{"krate":0,"index":107}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":11442,"byte_end":11449,"line_start":304,"line_end":304,"column_start":35,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":3035},"to":{"krate":0,"index":107}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":11452,"byte_end":11457,"line_start":304,"line_end":304,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":107}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":11482,"byte_end":11483,"line_start":306,"line_end":306,"column_start":21,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":109},"to":{"krate":0,"index":92}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":12836,"byte_end":12843,"line_start":367,"line_end":367,"column_start":25,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":1,"index":10490},"to":{"krate":0,"index":92}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":12997,"byte_end":13003,"line_start":378,"line_end":378,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":1,"index":46286},"to":{"krate":0,"index":92}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":14524,"byte_end":14530,"line_start":418,"line_end":418,"column_start":27,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":1,"index":46286},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":16672,"byte_end":16675,"line_start":468,"line_end":468,"column_start":21,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":4,"index":7089},"to":{"krate":0,"index":92}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":17815,"byte_end":17818,"line_start":499,"line_end":499,"column_start":27,"column_end":30},"kind":{"Impl":{"id":37}},"from":{"krate":4,"index":7089},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":17944,"byte_end":17947,"line_start":503,"line_end":503,"column_start":21,"column_end":24},"kind":{"Impl":{"id":38}},"from":{"krate":4,"index":321},"to":{"krate":0,"index":92}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":18272,"byte_end":18275,"line_start":516,"line_end":516,"column_start":27,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":4,"index":321},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":18400,"byte_end":18406,"line_start":520,"line_end":520,"column_start":18,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":4,"index":7626},"to":{"krate":0,"index":92}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":20194,"byte_end":20203,"line_start":565,"line_end":565,"column_start":9,"column_end":18},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":20440,"byte_end":20449,"line_start":576,"line_end":576,"column_start":36,"column_end":45},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":255},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":20660,"byte_end":20669,"line_start":587,"line_end":587,"column_start":21,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":255},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":20794,"byte_end":20803,"line_start":596,"line_end":596,"column_start":24,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":255},"to":{"krate":1,"index":3276}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":20932,"byte_end":20941,"line_start":607,"line_end":607,"column_start":27,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":255},"to":{"krate":1,"index":3289}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":21062,"byte_end":21071,"line_start":616,"line_end":616,"column_start":25,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":255},"to":{"krate":1,"index":2954}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":21211,"byte_end":21220,"line_start":626,"line_end":626,"column_start":25,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":255},"to":{"krate":1,"index":2957}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":21364,"byte_end":21373,"line_start":636,"line_end":636,"column_start":21,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":255},"to":{"krate":0,"index":92}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":21490,"byte_end":21499,"line_start":645,"line_end":645,"column_start":27,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":255},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":21541,"byte_end":21550,"line_start":647,"line_end":647,"column_start":18,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":255},"to":{"krate":1,"index":3300}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":23303,"byte_end":23314,"line_start":697,"line_end":697,"column_start":21,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":1,"index":3075},"to":{"krate":0,"index":92}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":23459,"byte_end":23470,"line_start":701,"line_end":701,"column_start":27,"column_end":38},"kind":{"Impl":{"id":52}},"from":{"krate":1,"index":3075},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":23565,"byte_end":23578,"line_start":703,"line_end":703,"column_start":18,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":1,"index":37756},"to":{"krate":0,"index":92}},{"span":{"file_name":"/home/johnmorrisett/.cargo/registry/src/github.com-1ecc6299db9ec823/zeroize-1.5.5/src/lib.rs","byte_start":23712,"byte_end":23725,"line_start":707,"line_end":707,"column_start":24,"column_end":37},"kind":{"Impl":{"id":54}},"from":{"krate":1,"index":37756},"to":{"krate":0,"index":94}}]}